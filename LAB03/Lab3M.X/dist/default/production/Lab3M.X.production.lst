

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 13:08:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	functab,global,class=ENTRY,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  000C                     __pstrings:
   387  000C                     stringtab:
   388  000C                     __stringtab:
   389  000C                     stringcode:	
   390                           ;	String table - string pointers are 1 byte each
   391                           
   392  000C                     stringdir:
   393  000C  3000               	movlw	high stringdir
   394  000D  008A               	movwf	10
   395  000E  0804               	movf	4,w
   396  000F  0A84               	incf	4,f
   397  0010  0782               	addwf	2,f
   398  0011                     __stringbase:
   399  0011  3400               	retlw	0
   400  0012                     __end_of__stringtab:
   401  0012                     _dpowers:
   402  0012  3401               	retlw	1
   403  0013  3400               	retlw	0
   404  0014  340A               	retlw	10
   405  0015  3400               	retlw	0
   406  0016  3464               	retlw	100
   407  0017  3400               	retlw	0
   408  0018  34E8               	retlw	232
   409  0019  3403               	retlw	3
   410  001A  3410               	retlw	16
   411  001B  3427               	retlw	39
   412  001C                     __end_of_dpowers:
   413  000C                     _PIR1bits	set	12
   414  000B                     _INTCONbits	set	11
   415  0018                     _RCSTAbits	set	24
   416  0013                     _SSPBUF	set	19
   417  0014                     _SSPCON	set	20
   418  001A                     _RCREG	set	26
   419  0019                     _TXREG	set	25
   420  0008                     _PORTD	set	8
   421  0007                     _PORTC	set	7
   422  0006                     _PORTB	set	6
   423  0007                     _PORTCbits	set	7
   424  0065                     _RCIF	set	101
   425  0064                     _TXIF	set	100
   426  009A                     _SPBRGH	set	154
   427  0099                     _SPBRG	set	153
   428  0098                     _TXSTAbits	set	152
   429  0094                     _SSPSTATbits	set	148
   430  0094                     _SSPSTAT	set	148
   431  008F                     _OSCCONbits	set	143
   432  0086                     _TRISB	set	134
   433  043B                     _TRISC3	set	1083
   434  043D                     _TRISC5	set	1085
   435  043A                     _TRISC2	set	1082
   436  0187                     _BAUDCTLbits	set	391
   437  0189                     _ANSELH	set	393
   438  0188                     _ANSEL	set	392
   439  001C                     STR_9:
   440  001C  340D               	retlw	13
   441  001D  3449               	retlw	73	;'I'
   442  001E  346E               	retlw	110	;'n'
   443  001F  3467               	retlw	103	;'g'
   444  0020  3472               	retlw	114	;'r'
   445  0021  3465               	retlw	101	;'e'
   446  0022  3473               	retlw	115	;'s'
   447  0023  3465               	retlw	101	;'e'
   448  0024  3420               	retlw	32	;' '
   449  0025  3465               	retlw	101	;'e'
   450  0026  346C               	retlw	108	;'l'
   451  0027  3420               	retlw	32	;' '
   452  0028  3476               	retlw	118	;'v'
   453  0029  3461               	retlw	97	;'a'
   454  002A  346C               	retlw	108	;'l'
   455  002B  346F               	retlw	111	;'o'
   456  002C  3472               	retlw	114	;'r'
   457  002D  3420               	retlw	32	;' '
   458  002E  3464               	retlw	100	;'d'
   459  002F  3465               	retlw	101	;'e'
   460  0030  3420               	retlw	32	;' '
   461  0031  3463               	retlw	99	;'c'
   462  0032  3465               	retlw	101	;'e'
   463  0033  346E               	retlw	110	;'n'
   464  0034  3474               	retlw	116	;'t'
   465  0035  3465               	retlw	101	;'e'
   466  0036  346E               	retlw	110	;'n'
   467  0037  3461               	retlw	97	;'a'
   468  0038  343A               	retlw	58	;':'
   469  0039  3420               	retlw	32	;' '
   470  003A  3428               	retlw	40	;'('
   471  003B  3430               	retlw	48	;'0'
   472  003C  342D               	retlw	45	;'-'
   473  003D  3432               	retlw	50	;'2'
   474  003E  3429               	retlw	41	;')'
   475  003F  340D               	retlw	13
   476  0040  3400               	retlw	0
   477  0041                     STR_10:
   478  0041  3449               	retlw	73	;'I'
   479  0042  346E               	retlw	110	;'n'
   480  0043  3467               	retlw	103	;'g'
   481  0044  3472               	retlw	114	;'r'
   482  0045  3465               	retlw	101	;'e'
   483  0046  3473               	retlw	115	;'s'
   484  0047  3465               	retlw	101	;'e'
   485  0048  3420               	retlw	32	;' '
   486  0049  3465               	retlw	101	;'e'
   487  004A  346C               	retlw	108	;'l'
   488  004B  3420               	retlw	32	;' '
   489  004C  3476               	retlw	118	;'v'
   490  004D  3461               	retlw	97	;'a'
   491  004E  346C               	retlw	108	;'l'
   492  004F  346F               	retlw	111	;'o'
   493  0050  3472               	retlw	114	;'r'
   494  0051  3420               	retlw	32	;' '
   495  0052  3464               	retlw	100	;'d'
   496  0053  3465               	retlw	101	;'e'
   497  0054  3420               	retlw	32	;' '
   498  0055  3464               	retlw	100	;'d'
   499  0056  3465               	retlw	101	;'e'
   500  0057  3463               	retlw	99	;'c'
   501  0058  3465               	retlw	101	;'e'
   502  0059  346E               	retlw	110	;'n'
   503  005A  3461               	retlw	97	;'a'
   504  005B  343A               	retlw	58	;':'
   505  005C  3420               	retlw	32	;' '
   506  005D  3428               	retlw	40	;'('
   507  005E  3430               	retlw	48	;'0'
   508  005F  342D               	retlw	45	;'-'
   509  0060  3435               	retlw	53	;'5'
   510  0061  3429               	retlw	41	;')'
   511  0062  340D               	retlw	13
   512  0063  3400               	retlw	0
   513  0064                     STR_11:
   514  0064  3449               	retlw	73	;'I'
   515  0065  346E               	retlw	110	;'n'
   516  0066  3467               	retlw	103	;'g'
   517  0067  3472               	retlw	114	;'r'
   518  0068  3465               	retlw	101	;'e'
   519  0069  3473               	retlw	115	;'s'
   520  006A  3465               	retlw	101	;'e'
   521  006B  3420               	retlw	32	;' '
   522  006C  3465               	retlw	101	;'e'
   523  006D  346C               	retlw	108	;'l'
   524  006E  3420               	retlw	32	;' '
   525  006F  3476               	retlw	118	;'v'
   526  0070  3461               	retlw	97	;'a'
   527  0071  346C               	retlw	108	;'l'
   528  0072  346F               	retlw	111	;'o'
   529  0073  3472               	retlw	114	;'r'
   530  0074  3420               	retlw	32	;' '
   531  0075  3464               	retlw	100	;'d'
   532  0076  3465               	retlw	101	;'e'
   533  0077  3420               	retlw	32	;' '
   534  0078  3475               	retlw	117	;'u'
   535  0079  346E               	retlw	110	;'n'
   536  007A  3469               	retlw	105	;'i'
   537  007B  3464               	retlw	100	;'d'
   538  007C  3461               	retlw	97	;'a'
   539  007D  3464               	retlw	100	;'d'
   540  007E  343A               	retlw	58	;':'
   541  007F  3420               	retlw	32	;' '
   542  0080  3428               	retlw	40	;'('
   543  0081  3430               	retlw	48	;'0'
   544  0082  342D               	retlw	45	;'-'
   545  0083  3435               	retlw	53	;'5'
   546  0084  3429               	retlw	41	;')'
   547  0085  340D               	retlw	13
   548  0086  3400               	retlw	0
   549  0087                     STR_12:
   550  0087  340D               	retlw	13
   551  0088  3445               	retlw	69	;'E'
   552  0089  346C               	retlw	108	;'l'
   553  008A  3420               	retlw	32	;' '
   554  008B  3476               	retlw	118	;'v'
   555  008C  3461               	retlw	97	;'a'
   556  008D  346C               	retlw	108	;'l'
   557  008E  346F               	retlw	111	;'o'
   558  008F  3472               	retlw	114	;'r'
   559  0090  3420               	retlw	32	;' '
   560  0091  3473               	retlw	115	;'s'
   561  0092  3465               	retlw	101	;'e'
   562  0093  346C               	retlw	108	;'l'
   563  0094  3465               	retlw	101	;'e'
   564  0095  3463               	retlw	99	;'c'
   565  0096  3463               	retlw	99	;'c'
   566  0097  3469               	retlw	105	;'i'
   567  0098  346F               	retlw	111	;'o'
   568  0099  346E               	retlw	110	;'n'
   569  009A  3461               	retlw	97	;'a'
   570  009B  3464               	retlw	100	;'d'
   571  009C  346F               	retlw	111	;'o'
   572  009D  3420               	retlw	32	;' '
   573  009E  3465               	retlw	101	;'e'
   574  009F  3473               	retlw	115	;'s'
   575  00A0  343A               	retlw	58	;':'
   576  00A1  3420               	retlw	32	;' '
   577  00A2  3425               	retlw	37	;'%'
   578  00A3  3464               	retlw	100	;'d'
   579  00A4  340D               	retlw	13
   580  00A5  3400               	retlw	0
   581  00A6                     STR_1:
   582  00A6  340D               	retlw	13
   583  00A7  3456               	retlw	86	;'V'
   584  00A8  3461               	retlw	97	;'a'
   585  00A9  346C               	retlw	108	;'l'
   586  00AA  346F               	retlw	111	;'o'
   587  00AB  3472               	retlw	114	;'r'
   588  00AC  3420               	retlw	32	;' '
   589  00AD  3465               	retlw	101	;'e'
   590  00AE  346E               	retlw	110	;'n'
   591  00AF  3420               	retlw	32	;' '
   592  00B0  3465               	retlw	101	;'e'
   593  00B1  346C               	retlw	108	;'l'
   594  00B2  3420               	retlw	32	;' '
   595  00B3  3450               	retlw	80	;'P'
   596  00B4  346F               	retlw	111	;'o'
   597  00B5  3474               	retlw	116	;'t'
   598  00B6  3420               	retlw	32	;' '
   599  00B7  3431               	retlw	49	;'1'
   600  00B8  343A               	retlw	58	;':'
   601  00B9  340D               	retlw	13
   602  00BA  3400               	retlw	0
   603  00BB                     STR_5:
   604  00BB  340D               	retlw	13
   605  00BC  3456               	retlw	86	;'V'
   606  00BD  3461               	retlw	97	;'a'
   607  00BE  346C               	retlw	108	;'l'
   608  00BF  346F               	retlw	111	;'o'
   609  00C0  3472               	retlw	114	;'r'
   610  00C1  3420               	retlw	32	;' '
   611  00C2  3465               	retlw	101	;'e'
   612  00C3  346E               	retlw	110	;'n'
   613  00C4  3420               	retlw	32	;' '
   614  00C5  3465               	retlw	101	;'e'
   615  00C6  346C               	retlw	108	;'l'
   616  00C7  3420               	retlw	32	;' '
   617  00C8  3450               	retlw	80	;'P'
   618  00C9  346F               	retlw	111	;'o'
   619  00CA  3474               	retlw	116	;'t'
   620  00CB  3420               	retlw	32	;' '
   621  00CC  3432               	retlw	50	;'2'
   622  00CD  343A               	retlw	58	;':'
   623  00CE  340D               	retlw	13
   624  00CF  3400               	retlw	0
   625  00D0                     STR_2:
   626  00D0  3420               	retlw	32	;' '
   627  00D1  3420               	retlw	32	;' '
   628  00D2  3400               	retlw	0
   629  00D3                     STR_3:
   630  00D3  3420               	retlw	32	;' '
   631  00D4  3456               	retlw	86	;'V'
   632  00D5  3400               	retlw	0
   633  00D6                     STR_13:
   634  00D6  3425               	retlw	37	;'%'
   635  00D7  3464               	retlw	100	;'d'
   636  00D8  3400               	retlw	0
   637  003F                     
   638                           	psect	cinit
   639  07EC                     start_initialization:	
   640                           ; #config settings
   641                           
   642  07EC                     __initialization:
   643                           
   644                           ; Clear objects allocated to BANK0
   645  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   646  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   647  07EE  01E9               	clrf	__pbssBANK0& (0+127)
   648  07EF  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   649  07F0  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   650  07F1  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   651  07F2  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   652  07F3  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   653  07F4  01EF               	clrf	(__pbssBANK0+6)& (0+127)
   654                           
   655                           ; Clear objects allocated to BANK1
   656  07F5  1683               	bsf	3,5	;RP0=1, select bank1
   657  07F6  1303               	bcf	3,6	;RP1=0, select bank1
   658  07F7  01A0               	clrf	__pbssBANK1& (0+127)
   659  07F8  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   660  07F9  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   661  07FA  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   662  07FB  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   663  07FC                     end_of_initialization:	
   664                           ;End of C runtime variable initialization code
   665                           
   666  07FC                     __end_of__initialization:
   667  07FC  0183               	clrf	3
   668  07FD  120A  118A  2BB2   	ljmp	_main	;jump to C main() function
   669                           
   670                           	psect	bssBANK0
   671  0069                     __pbssBANK0:
   672  0069                     _dd:
   673  0069                     	ds	1
   674  006A                     _cc:
   675  006A                     	ds	1
   676  006B                     _residuo:
   677  006B                     	ds	1
   678  006C                     _unidad:
   679  006C                     	ds	1
   680  006D                     _decena:
   681  006D                     	ds	1
   682  006E                     _centena:
   683  006E                     	ds	1
   684  006F                     _V1:
   685  006F                     	ds	1
   686                           
   687                           	psect	bssBANK1
   688  00A0                     __pbssBANK1:
   689  00A0                     _completo:
   690  00A0                     	ds	2
   691  00A2                     _temp:
   692  00A2                     	ds	1
   693  00A3                     _uu:
   694  00A3                     	ds	1
   695  00A4                     _V2:
   696  00A4                     	ds	1
   697                           
   698                           	psect	cstackCOMMON
   699  0070                     __pcstackCOMMON:
   700  0070                     ?_isdigit:
   701  0070                     ?_setup:	
   702                           ; 1 bit 
   703                           
   704  0070                     ?_spiWrite:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ??_spiWrite:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_spiRead:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ??_spiRead:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_msj1:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_msj2:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_ingreso:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_spiInit:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_configUSART:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_configUSART:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_strcat:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ??_isdigit:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_putch:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_division:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_spiReceiveWait:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_spiReceiveWait:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?___wmul:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?___awdiv:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0070                     ?___awmod:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0070                     ?___lwdiv:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     putch@dato:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0070                     spiInit@sDataSample:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     spiWrite@dat:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     _isdigit$981:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     strcat@from:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ___wmul@multiplier:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ___awdiv@divisor:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ___awmod@divisor:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ___lwdiv@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 2 bytes @ 0x0
   796  0070                     	ds	1
   797  0071                     ??_strcat:
   798  0071                     ??_putch:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0071                     spiInit@sClockIdle:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  0071                     isdigit@c:	
   805                           ; 1 bytes @ 0x1
   806                           
   807                           
   808                           ; 1 bytes @ 0x1
   809  0071                     	ds	1
   810  0072                     spiInit@sTransmitEdge:
   811  0072                     strcat@to:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     ___wmul@multiplicand:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     ___awdiv@dividend:	
   818                           ; 2 bytes @ 0x2
   819                           
   820  0072                     ___awmod@dividend:	
   821                           ; 2 bytes @ 0x2
   822                           
   823  0072                     ___lwdiv@dividend:	
   824                           ; 2 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0072                     	ds	1
   829  0073                     ??_spiInit:
   830  0073                     spiInit@sType:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     strcat@cp:	
   834                           ; 1 bytes @ 0x3
   835                           
   836                           
   837                           ; 1 bytes @ 0x3
   838  0073                     	ds	1
   839  0074                     ??_setup:
   840  0074                     ??___wmul:	
   841                           ; 1 bytes @ 0x4
   842                           
   843  0074                     ??___awdiv:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0074                     ??___awmod:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  0074                     ??___lwdiv:	
   850                           ; 1 bytes @ 0x4
   851                           
   852  0074                     ___wmul@product:	
   853                           ; 1 bytes @ 0x4
   854                           
   855                           
   856                           ; 2 bytes @ 0x4
   857  0074                     	ds	1
   858  0075                     ___awdiv@counter:
   859  0075                     ___awmod@counter:	
   860                           ; 1 bytes @ 0x5
   861                           
   862  0075                     ___lwdiv@quotient:	
   863                           ; 1 bytes @ 0x5
   864                           
   865                           
   866                           ; 2 bytes @ 0x5
   867  0075                     	ds	1
   868  0076                     ?_atoi:
   869  0076                     ___awdiv@sign:	
   870                           ; 2 bytes @ 0x6
   871                           
   872  0076                     ___awmod@sign:	
   873                           ; 1 bytes @ 0x6
   874                           
   875                           
   876                           ; 1 bytes @ 0x6
   877  0076                     	ds	1
   878  0077                     ___lwdiv@counter:
   879  0077                     ___awdiv@quotient:	
   880                           ; 1 bytes @ 0x7
   881                           
   882                           
   883                           ; 2 bytes @ 0x7
   884  0077                     	ds	1
   885  0078                     ??_atoi:
   886  0078                     ?___lwmod:	
   887                           ; 1 bytes @ 0x8
   888                           
   889  0078                     ___lwmod@divisor:	
   890                           ; 2 bytes @ 0x8
   891                           
   892                           
   893                           ; 2 bytes @ 0x8
   894  0078                     	ds	1
   895  0079                     ??_division:
   896                           
   897                           ; 1 bytes @ 0x9
   898  0079                     	ds	1
   899  007A                     atoi@sign:
   900  007A                     ___lwmod@dividend:	
   901                           ; 1 bytes @ 0xA
   902                           
   903                           
   904                           ; 2 bytes @ 0xA
   905  007A                     	ds	1
   906  007B                     atoi@a:
   907                           
   908                           ; 2 bytes @ 0xB
   909  007B                     	ds	1
   910  007C                     ??___lwmod:
   911  007C                     division@valor:	
   912                           ; 1 bytes @ 0xC
   913                           
   914                           
   915                           ; 1 bytes @ 0xC
   916  007C                     	ds	1
   917  007D                     ___lwmod@counter:
   918  007D                     atoi@s:	
   919                           ; 1 bytes @ 0xD
   920                           
   921                           
   922                           ; 1 bytes @ 0xD
   923  007D                     	ds	1
   924                           
   925                           	psect	cstackBANK0
   926  0020                     __pcstackBANK0:
   927  0020                     ?__doprnt:
   928  0020                     __doprnt@f:	
   929                           ; 2 bytes @ 0x0
   930                           
   931                           
   932                           ; 1 bytes @ 0x0
   933  0020                     	ds	1
   934  0021                     __doprnt@ap:
   935                           
   936                           ; 1 bytes @ 0x1
   937  0021                     	ds	1
   938  0022                     ??__doprnt:
   939                           
   940                           ; 1 bytes @ 0x2
   941  0022                     	ds	3
   942  0025                     __doprnt@flag:
   943                           
   944                           ; 1 bytes @ 0x5
   945  0025                     	ds	1
   946  0026                     __doprnt@prec:
   947                           
   948                           ; 1 bytes @ 0x6
   949  0026                     	ds	1
   950  0027                     __doprnt@val:
   951                           
   952                           ; 2 bytes @ 0x7
   953  0027                     	ds	2
   954  0029                     __doprnt@c:
   955                           
   956                           ; 1 bytes @ 0x9
   957  0029                     	ds	1
   958  002A                     __doprnt@pb:
   959                           
   960                           ; 1 bytes @ 0xA
   961  002A                     	ds	1
   962  002B                     ?_printf:
   963  002B                     ?_sprintf:	
   964                           ; 2 bytes @ 0xB
   965                           
   966  002B                     sprintf@f:	
   967                           ; 2 bytes @ 0xB
   968                           
   969                           
   970                           ; 1 bytes @ 0xB
   971  002B                     	ds	2
   972  002D                     ??_printf:
   973                           
   974                           ; 1 bytes @ 0xD
   975  002D                     	ds	1
   976  002E                     ??_sprintf:
   977                           
   978                           ; 1 bytes @ 0xE
   979  002E                     	ds	1
   980  002F                     printf@ap:
   981                           
   982                           ; 1 bytes @ 0xF
   983  002F                     	ds	1
   984  0030                     printf@f:
   985  0030                     sprintf@ap:	
   986                           ; 1 bytes @ 0x10
   987                           
   988                           
   989                           ; 1 bytes @ 0x10
   990  0030                     	ds	1
   991  0031                     sprintf@wh:
   992  0031                     printf@pb:	
   993                           ; 1 bytes @ 0x11
   994                           
   995                           
   996                           ; 2 bytes @ 0x11
   997  0031                     	ds	1
   998  0032                     sprintf@pb:
   999                           
  1000                           ; 2 bytes @ 0x12
  1001  0032                     	ds	1
  1002  0033                     ??_msj1:
  1003  0033                     ??_msj2:	
  1004                           ; 1 bytes @ 0x13
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x13
  1008  0033                     	ds	1
  1009  0034                     ?_concatenado:
  1010  0034                     concatenado@a:	
  1011                           ; 2 bytes @ 0x14
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x14
  1015  0034                     	ds	2
  1016  0036                     concatenado@b:
  1017                           
  1018                           ; 2 bytes @ 0x16
  1019  0036                     	ds	2
  1020  0038                     ??_concatenado:
  1021                           
  1022                           ; 1 bytes @ 0x18
  1023  0038                     	ds	1
  1024  0039                     concatenado@BFFR2:
  1025                           
  1026                           ; 20 bytes @ 0x19
  1027  0039                     	ds	20
  1028  004D                     concatenado@BFFR1:
  1029                           
  1030                           ; 20 bytes @ 0x2D
  1031  004D                     	ds	20
  1032  0061                     concatenado@c:
  1033                           
  1034                           ; 2 bytes @ 0x41
  1035  0061                     	ds	2
  1036  0063                     ??_ingreso:
  1037                           
  1038                           ; 1 bytes @ 0x43
  1039  0063                     	ds	5
  1040  0068                     ??_main:
  1041                           
  1042                           ; 1 bytes @ 0x48
  1043  0068                     	ds	1
  1044                           
  1045                           	psect	maintext
  1046  03B2                     __pmaintext:	
  1047 ;;
  1048 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1049 ;;
  1050 ;; *************** function _main *****************
  1051 ;; Defined at:
  1052 ;;		line 58 in file "mainM.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : B00/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       1       0       0       0
  1069 ;;      Totals:         0       1       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels required when called:    5
  1072 ;; This function calls:
  1073 ;;		_ingreso
  1074 ;;		_msj1
  1075 ;;		_msj2
  1076 ;;		_setup
  1077 ;;		_spiRead
  1078 ;;		_spiWrite
  1079 ;; This function is called by:
  1080 ;;		Startup code after reset
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _main
  1086  03B2                     _main:
  1087  03B2                     l1865:	
  1088                           ;incstack = 0
  1089                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1090                           
  1091                           
  1092                           ;mainM.c: 60:     setup();
  1093  03B2  120A  118A  21C7  120A  118A  	fcall	_setup
  1094  03B7                     l1867:
  1095                           
  1096                           ;mainM.c: 63:     {;mainM.c: 64:        PORTCbits.RC2 = 0;
  1097  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1098  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1099  03B9  1107               	bcf	7,2	;volatile
  1100  03BA                     l1869:
  1101                           
  1102                           ;mainM.c: 65:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1103  03BA  30C7               	movlw	199
  1104  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1105  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1106  03BD  00E8               	movwf	??_main
  1107  03BE                     u1377:
  1108  03BE  2BBF               	nop2
  1109  03BF  0BE8               	decfsz	??_main,f
  1110  03C0  2BBE               	goto	u1377
  1111  03C1  2BC2               	nop2
  1112  03C2                     l1871:
  1113                           
  1114                           ;mainM.c: 67:        spiWrite(0x0A);
  1115  03C2  300A               	movlw	10
  1116  03C3  120A  118A  2127  120A  118A  	fcall	_spiWrite
  1117  03C8                     l1873:
  1118                           
  1119                           ;mainM.c: 68:        V1 = spiRead();
  1120  03C8  120A  118A  213D  120A  118A  	fcall	_spiRead
  1121  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1122  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1123  03CF  00E8               	movwf	??_main
  1124  03D0  0868               	movf	??_main,w
  1125  03D1  00EF               	movwf	_V1
  1126  03D2                     l1875:
  1127                           
  1128                           ;mainM.c: 69:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1129  03D2  30C7               	movlw	199
  1130  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1131  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1132  03D5  00E8               	movwf	??_main
  1133  03D6                     u1387:
  1134  03D6  2BD7               	nop2
  1135  03D7  0BE8               	decfsz	??_main,f
  1136  03D8  2BD6               	goto	u1387
  1137  03D9  2BDA               	nop2
  1138                           
  1139                           ;mainM.c: 70:        spiWrite(0x0A);
  1140  03DA  300A               	movlw	10
  1141  03DB  120A  118A  2127  120A  118A  	fcall	_spiWrite
  1142                           
  1143                           ;mainM.c: 71:        V2 = spiRead();
  1144  03E0  120A  118A  213D  120A  118A  	fcall	_spiRead
  1145  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1146  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1147  03E7  00E8               	movwf	??_main
  1148  03E8  0868               	movf	??_main,w
  1149  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1150  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1151  03EB  00A4               	movwf	_V2^(0+128)
  1152  03EC                     l1877:
  1153                           
  1154                           ;mainM.c: 72:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1155  03EC  30C7               	movlw	199
  1156  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1157  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1158  03EF  00E8               	movwf	??_main
  1159  03F0                     u1397:
  1160  03F0  2BF1               	nop2
  1161  03F1  0BE8               	decfsz	??_main,f
  1162  03F2  2BF0               	goto	u1397
  1163  03F3  2BF4               	nop2
  1164  03F4                     l1879:
  1165                           
  1166                           ;mainM.c: 75:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1167  03F4  30C7               	movlw	199
  1168  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1169  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1170  03F7  00E8               	movwf	??_main
  1171  03F8                     u1407:
  1172  03F8  2BF9               	nop2
  1173  03F9  0BE8               	decfsz	??_main,f
  1174  03FA  2BF8               	goto	u1407
  1175  03FB  2BFC               	nop2
  1176  03FC                     l1881:
  1177                           
  1178                           ;mainM.c: 76:        PORTCbits.RC2 = 1;
  1179  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1180  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1181  03FE  1507               	bsf	7,2	;volatile
  1182  03FF                     l1883:
  1183                           
  1184                           ;mainM.c: 77:        msj1();
  1185  03FF  120A  118A  24FA  120A  118A  	fcall	_msj1
  1186  0404                     l1885:
  1187                           
  1188                           ;mainM.c: 78:        msj2();
  1189  0404  120A  118A  257B  120A  118A  	fcall	_msj2
  1190  0409                     l1887:
  1191                           
  1192                           ;mainM.c: 79:        ingreso();
  1193  0409  120A  118A  25FC  120A  118A  	fcall	_ingreso
  1194  040E                     l1889:
  1195                           
  1196                           ;mainM.c: 81:        PORTB = completo;
  1197  040E  1683               	bsf	3,5	;RP0=1, select bank1
  1198  040F  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0410  0820               	movf	_completo^(0+128),w
  1200  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0413  0086               	movwf	6	;volatile
  1203  0414  2BB7               	goto	l1867
  1204  0415  120A  118A  2800   	ljmp	start
  1205  0418                     __end_of_main:
  1206                           
  1207                           	psect	text1
  1208  0127                     __ptext1:	
  1209 ;; *************** function _spiWrite *****************
  1210 ;; Defined at:
  1211 ;;		line 33 in file "SPI.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  dat             1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  dat             1    0[COMMON] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         1       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0
  1228 ;;      Totals:         1       0       0       0       0
  1229 ;;Total ram usage:        1 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _spiWrite
  1240  0127                     _spiWrite:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _spiWrite: [wreg]
  1244                           ;spiWrite@dat stored from wreg
  1245  0127  00F0               	movwf	spiWrite@dat
  1246  0128                     l1759:
  1247                           
  1248                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
  1249  0128  0870               	movf	spiWrite@dat,w
  1250  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1251  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1252  012B  0093               	movwf	19	;volatile
  1253  012C                     l157:
  1254  012C  0008               	return
  1255  012D                     __end_of_spiWrite:
  1256                           
  1257                           	psect	text2
  1258  013D                     __ptext2:	
  1259 ;; *************** function _spiRead *****************
  1260 ;; Defined at:
  1261 ;;		line 46 in file "SPI.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    1
  1282 ;; This function calls:
  1283 ;;		_spiReceiveWait
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _spiRead
  1291  013D                     _spiRead:
  1292  013D                     l1761:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1295                           
  1296                           
  1297                           ;SPI.c: 48:     spiReceiveWait();
  1298  013D  120A  118A  212D  120A  118A  	fcall	_spiReceiveWait
  1299  0142                     l1763:
  1300                           
  1301                           ;SPI.c: 49:     return(SSPBUF);
  1302  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0144  0813               	movf	19,w	;volatile
  1305  0145                     l165:
  1306  0145  0008               	return
  1307  0146                     __end_of_spiRead:
  1308                           
  1309                           	psect	text3
  1310  012D                     __ptext3:	
  1311 ;; *************** function _spiReceiveWait *****************
  1312 ;; Defined at:
  1313 ;;		line 28 in file "SPI.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_spiRead
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _spiReceiveWait
  1342  012D                     _spiReceiveWait:
  1343  012D                     l1739:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _spiReceiveWait: []
  1346                           
  1347  012D                     l151:	
  1348                           ;SPI.c: 30:     while ( !SSPSTATbits.BF );
  1349                           
  1350  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1351  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1352  012F  1C14               	btfss	20,0	;volatile
  1353  0130  2932               	goto	u1271
  1354  0131  2933               	goto	u1270
  1355  0132                     u1271:
  1356  0132  292D               	goto	l151
  1357  0133                     u1270:
  1358  0133                     l154:
  1359  0133  0008               	return
  1360  0134                     __end_of_spiReceiveWait:
  1361                           
  1362                           	psect	text4
  1363  01C7                     __ptext4:	
  1364 ;; *************** function _setup *****************
  1365 ;; Defined at:
  1366 ;;		line 101 in file "mainM.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		_configUSART
  1389 ;;		_spiInit
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _setup
  1397  01C7                     _setup:
  1398  01C7                     l1741:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;mainM.c: 103:     ANSEL = 0;
  1404  01C7  1683               	bsf	3,5	;RP0=1, select bank3
  1405  01C8  1703               	bsf	3,6	;RP1=1, select bank3
  1406  01C9  0188               	clrf	8	;volatile
  1407                           
  1408                           ;mainM.c: 104:     ANSELH = 0;
  1409  01CA  0189               	clrf	9	;volatile
  1410  01CB                     l1743:
  1411                           
  1412                           ;mainM.c: 106:     TRISC2 = 0;
  1413  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  1414  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  1415  01CD  1107               	bcf	7,2	;volatile
  1416                           
  1417                           ;mainM.c: 107:     TRISB = 0;
  1418  01CE  0186               	clrf	6	;volatile
  1419                           
  1420                           ;mainM.c: 109:     PORTB = 0;
  1421  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1422  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1423  01D1  0186               	clrf	6	;volatile
  1424                           
  1425                           ;mainM.c: 110:     PORTC = 0;
  1426  01D2  0187               	clrf	7	;volatile
  1427                           
  1428                           ;mainM.c: 111:     PORTD = 0;
  1429  01D3  0188               	clrf	8	;volatile
  1430  01D4                     l1745:
  1431                           
  1432                           ;mainM.c: 112:     PORTCbits.RC2 = 1;
  1433  01D4  1507               	bsf	7,2	;volatile
  1434  01D5                     l1747:
  1435                           
  1436                           ;mainM.c: 114:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1437  01D5  01F0               	clrf	spiInit@sDataSample
  1438  01D6  01F1               	clrf	spiInit@sClockIdle
  1439  01D7  01F2               	clrf	spiInit@sTransmitEdge
  1440  01D8  3020               	movlw	32
  1441  01D9  120A  118A  2158  120A  118A  	fcall	_spiInit
  1442  01DE                     l1749:
  1443                           
  1444                           ;mainM.c: 117:     OSCCONbits.IRCF0 = 0;
  1445  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1446  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1447  01E0  120F               	bcf	15,4	;volatile
  1448  01E1                     l1751:
  1449                           
  1450                           ;mainM.c: 118:     OSCCONbits.IRCF1 = 1;
  1451  01E1  168F               	bsf	15,5	;volatile
  1452  01E2                     l1753:
  1453                           
  1454                           ;mainM.c: 119:     OSCCONbits.IRCF2 = 1;
  1455  01E2  170F               	bsf	15,6	;volatile
  1456  01E3                     l1755:
  1457                           
  1458                           ;mainM.c: 120:     OSCCONbits.SCS = 1;
  1459  01E3  140F               	bsf	15,0	;volatile
  1460  01E4                     l1757:
  1461                           
  1462                           ;mainM.c: 122:     configUSART();
  1463  01E4  120A  118A  2189  120A  118A  	fcall	_configUSART
  1464  01E9                     l87:
  1465  01E9  0008               	return
  1466  01EA                     __end_of_setup:
  1467                           
  1468                           	psect	text5
  1469  0158                     __ptext5:	
  1470 ;; *************** function _spiInit *****************
  1471 ;; Defined at:
  1472 ;;		line 11 in file "SPI.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  sType           1    wreg     enum E1264
  1475 ;;  sDataSample     1    0[COMMON] enum E1272
  1476 ;;  sClockIdle      1    1[COMMON] enum E1276
  1477 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  sType           1    3[COMMON] enum E1264
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         3       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         4       0       0       0       0
  1493 ;;Total ram usage:        4 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_setup
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _spiInit
  1504  0158                     _spiInit:
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1508                           ;spiInit@sType stored from wreg
  1509  0158  00F3               	movwf	spiInit@sType
  1510  0159                     l1677:
  1511                           
  1512                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
  1513  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1514  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1515  015B  1287               	bcf	7,5	;volatile
  1516                           
  1517                           ;SPI.c: 14:     if(sType & 0b00000100)
  1518  015C  1D73               	btfss	spiInit@sType,2
  1519  015D  295F               	goto	u1261
  1520  015E  2960               	goto	u1260
  1521  015F                     u1261:
  1522  015F  2964               	goto	l1683
  1523  0160                     u1260:
  1524  0160                     l1679:
  1525                           
  1526                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
  1527  0160  0872               	movf	spiInit@sTransmitEdge,w
  1528  0161  0094               	movwf	20	;volatile
  1529  0162                     l1681:
  1530                           
  1531                           ;SPI.c: 17:         TRISC3 = 1;
  1532  0162  1587               	bsf	7,3	;volatile
  1533                           
  1534                           ;SPI.c: 18:     }
  1535  0163  2968               	goto	l147
  1536  0164                     l1683:
  1537                           
  1538                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
  1539  0164  0870               	movf	spiInit@sDataSample,w
  1540  0165  0472               	iorwf	spiInit@sTransmitEdge,w
  1541  0166  0094               	movwf	20	;volatile
  1542  0167                     l1685:
  1543                           
  1544                           ;SPI.c: 22:         TRISC3 = 0;
  1545  0167  1187               	bcf	7,3	;volatile
  1546  0168                     l147:	
  1547                           ;SPI.c: 23:     }
  1548                           
  1549                           
  1550                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
  1551  0168  0873               	movf	spiInit@sType,w
  1552  0169  0471               	iorwf	spiInit@sClockIdle,w
  1553  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1554  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1555  016C  0094               	movwf	20	;volatile
  1556  016D                     l148:
  1557  016D  0008               	return
  1558  016E                     __end_of_spiInit:
  1559                           
  1560                           	psect	text6
  1561  0189                     __ptext6:	
  1562 ;; *************** function _configUSART *****************
  1563 ;; Defined at:
  1564 ;;		line 11 in file "USART.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_setup
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _configUSART
  1593  0189                     _configUSART:
  1594  0189                     l1687:	
  1595                           ;incstack = 0
  1596                           ; Regs used in _configUSART: [wreg]
  1597                           
  1598                           
  1599                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1600  0189  1683               	bsf	3,5	;RP0=1, select bank1
  1601  018A  1303               	bcf	3,6	;RP1=0, select bank1
  1602  018B  1218               	bcf	24,4	;volatile
  1603                           
  1604                           ;USART.c: 14:     TXSTAbits.BRGH = 1;
  1605  018C  1518               	bsf	24,2	;volatile
  1606                           
  1607                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 0;
  1608  018D  1683               	bsf	3,5	;RP0=1, select bank3
  1609  018E  1703               	bsf	3,6	;RP1=1, select bank3
  1610  018F  1187               	bcf	7,3	;volatile
  1611  0190                     l1689:
  1612                           
  1613                           ;USART.c: 17:     SPBRG = 25;
  1614  0190  3019               	movlw	25
  1615  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1617  0193  0099               	movwf	25	;volatile
  1618                           
  1619                           ;USART.c: 18:     SPBRGH = 1;
  1620  0194  3001               	movlw	1
  1621  0195  009A               	movwf	26	;volatile
  1622  0196                     l1691:
  1623                           
  1624                           ;USART.c: 21:     RCSTAbits.SPEN = 1;
  1625  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0198  1798               	bsf	24,7	;volatile
  1628  0199                     l1693:
  1629                           
  1630                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  1631  0199  1318               	bcf	24,6	;volatile
  1632  019A                     l1695:
  1633                           
  1634                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  1635  019A  1618               	bsf	24,4	;volatile
  1636  019B                     l1697:
  1637                           
  1638                           ;USART.c: 25:     TXSTAbits.TX9 = 0;
  1639  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1640  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1641  019D  1318               	bcf	24,6	;volatile
  1642  019E                     l1699:
  1643                           
  1644                           ;USART.c: 26:     TXSTAbits.TXEN = 1;
  1645  019E  1698               	bsf	24,5	;volatile
  1646  019F                     l1701:
  1647                           
  1648                           ;USART.c: 29:     INTCONbits.GIE = 1;
  1649  019F  178B               	bsf	11,7	;volatile
  1650  01A0                     l1703:
  1651                           
  1652                           ;USART.c: 30:     INTCONbits.PEIE = 1;
  1653  01A0  170B               	bsf	11,6	;volatile
  1654  01A1                     l1705:
  1655                           
  1656                           ;USART.c: 31:     PIR1bits.TXIF = 0;
  1657  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1658  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1659  01A3  120C               	bcf	12,4	;volatile
  1660  01A4                     l1707:
  1661                           
  1662                           ;USART.c: 32:     PIR1bits.RCIF = 0;
  1663  01A4  128C               	bcf	12,5	;volatile
  1664  01A5                     l182:
  1665  01A5  0008               	return
  1666  01A6                     __end_of_configUSART:
  1667                           
  1668                           	psect	text7
  1669  057B                     __ptext7:	
  1670 ;; *************** function _msj2 *****************
  1671 ;; Defined at:
  1672 ;;		line 162 in file "mainM.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0
  1688 ;;      Temps:          0       2       0       0       0
  1689 ;;      Totals:         0       2       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    3
  1693 ;; This function calls:
  1694 ;;		_division
  1695 ;;		_printf
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _msj2
  1703  057B                     _msj2:
  1704  057B                     l1801:	
  1705                           ;incstack = 0
  1706                           ; Regs used in _msj2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1707                           
  1708                           
  1709                           ;mainM.c: 163:     division(V2);
  1710  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1711  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1712  057D  0824               	movf	_V2^(0+128),w
  1713  057E  120A  118A  234C  120A  118A  	fcall	_division
  1714  0583                     l1803:
  1715                           
  1716                           ;mainM.c: 164:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1717  0583  3082               	movlw	130
  1718  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0586  00B4               	movwf	??_msj2+1
  1721  0587  30DD               	movlw	221
  1722  0588  00B3               	movwf	??_msj2
  1723  0589                     u1417:
  1724  0589  0BB3               	decfsz	??_msj2,f
  1725  058A  2D89               	goto	u1417
  1726  058B  0BB4               	decfsz	??_msj2+1,f
  1727  058C  2D89               	goto	u1417
  1728  058D                     l1805:
  1729                           
  1730                           ;mainM.c: 165:     printf("\rValor en el Pot 2:\r");
  1731  058D  30AA               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1732  058E  120A  118A  216E  120A  118A  	fcall	_printf
  1733  0593                     l1807:
  1734                           
  1735                           ;mainM.c: 166:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1736  0593  3082               	movlw	130
  1737  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0596  00B4               	movwf	??_msj2+1
  1740  0597  30DD               	movlw	221
  1741  0598  00B3               	movwf	??_msj2
  1742  0599                     u1427:
  1743  0599  0BB3               	decfsz	??_msj2,f
  1744  059A  2D99               	goto	u1427
  1745  059B  0BB4               	decfsz	??_msj2+1,f
  1746  059C  2D99               	goto	u1427
  1747  059D                     l1809:
  1748                           
  1749                           ;mainM.c: 167:     printf("  ");
  1750  059D  30BF               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1751  059E  120A  118A  216E  120A  118A  	fcall	_printf
  1752  05A3                     l1811:
  1753                           
  1754                           ;mainM.c: 168:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1755  05A3  3082               	movlw	130
  1756  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1757  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1758  05A6  00B4               	movwf	??_msj2+1
  1759  05A7  30DD               	movlw	221
  1760  05A8  00B3               	movwf	??_msj2
  1761  05A9                     u1437:
  1762  05A9  0BB3               	decfsz	??_msj2,f
  1763  05AA  2DA9               	goto	u1437
  1764  05AB  0BB4               	decfsz	??_msj2+1,f
  1765  05AC  2DA9               	goto	u1437
  1766  05AD                     l1813:
  1767                           
  1768                           ;mainM.c: 169:     TXREG = centena;
  1769  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1770  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1771  05AF  086E               	movf	_centena,w
  1772  05B0  0099               	movwf	25	;volatile
  1773  05B1                     l1815:
  1774                           
  1775                           ;mainM.c: 170:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1776  05B1  3082               	movlw	130
  1777  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1778  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1779  05B4  00B4               	movwf	??_msj2+1
  1780  05B5  30DD               	movlw	221
  1781  05B6  00B3               	movwf	??_msj2
  1782  05B7                     u1447:
  1783  05B7  0BB3               	decfsz	??_msj2,f
  1784  05B8  2DB7               	goto	u1447
  1785  05B9  0BB4               	decfsz	??_msj2+1,f
  1786  05BA  2DB7               	goto	u1447
  1787  05BB                     l1817:
  1788                           
  1789                           ;mainM.c: 171:     TXREG = 46;
  1790  05BB  302E               	movlw	46
  1791  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1792  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1793  05BE  0099               	movwf	25	;volatile
  1794  05BF                     l1819:
  1795                           
  1796                           ;mainM.c: 172:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1797  05BF  3082               	movlw	130
  1798  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1799  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1800  05C2  00B4               	movwf	??_msj2+1
  1801  05C3  30DD               	movlw	221
  1802  05C4  00B3               	movwf	??_msj2
  1803  05C5                     u1457:
  1804  05C5  0BB3               	decfsz	??_msj2,f
  1805  05C6  2DC5               	goto	u1457
  1806  05C7  0BB4               	decfsz	??_msj2+1,f
  1807  05C8  2DC5               	goto	u1457
  1808  05C9                     l1821:
  1809                           
  1810                           ;mainM.c: 173:     TXREG = decena;
  1811  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1812  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1813  05CB  086D               	movf	_decena,w
  1814  05CC  0099               	movwf	25	;volatile
  1815  05CD                     l1823:
  1816                           
  1817                           ;mainM.c: 174:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1818  05CD  3082               	movlw	130
  1819  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1820  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1821  05D0  00B4               	movwf	??_msj2+1
  1822  05D1  30DD               	movlw	221
  1823  05D2  00B3               	movwf	??_msj2
  1824  05D3                     u1467:
  1825  05D3  0BB3               	decfsz	??_msj2,f
  1826  05D4  2DD3               	goto	u1467
  1827  05D5  0BB4               	decfsz	??_msj2+1,f
  1828  05D6  2DD3               	goto	u1467
  1829  05D7                     l1825:
  1830                           
  1831                           ;mainM.c: 175:     TXREG = unidad;
  1832  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1833  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1834  05D9  086C               	movf	_unidad,w
  1835  05DA  0099               	movwf	25	;volatile
  1836  05DB                     l1827:
  1837                           
  1838                           ;mainM.c: 176:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1839  05DB  3082               	movlw	130
  1840  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1841  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1842  05DE  00B4               	movwf	??_msj2+1
  1843  05DF  30DD               	movlw	221
  1844  05E0  00B3               	movwf	??_msj2
  1845  05E1                     u1477:
  1846  05E1  0BB3               	decfsz	??_msj2,f
  1847  05E2  2DE1               	goto	u1477
  1848  05E3  0BB4               	decfsz	??_msj2+1,f
  1849  05E4  2DE1               	goto	u1477
  1850  05E5                     l1829:
  1851                           
  1852                           ;mainM.c: 177:     printf(" V");
  1853  05E5  30C2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1854  05E6  120A  118A  216E  120A  118A  	fcall	_printf
  1855  05EB                     l1831:
  1856                           
  1857                           ;mainM.c: 178:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1858  05EB  3082               	movlw	130
  1859  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1860  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1861  05EE  00B4               	movwf	??_msj2+1
  1862  05EF  30DD               	movlw	221
  1863  05F0  00B3               	movwf	??_msj2
  1864  05F1                     u1487:
  1865  05F1  0BB3               	decfsz	??_msj2,f
  1866  05F2  2DF1               	goto	u1487
  1867  05F3  0BB4               	decfsz	??_msj2+1,f
  1868  05F4  2DF1               	goto	u1487
  1869  05F5                     l1833:
  1870                           
  1871                           ;mainM.c: 179:     printf("\r");
  1872  05F5  302E               	movlw	(low (((STR_9+35)-__stringbase)| (0+32768)))& (0+255)
  1873  05F6  120A  118A  216E  120A  118A  	fcall	_printf
  1874  05FB                     l102:
  1875  05FB  0008               	return
  1876  05FC                     __end_of_msj2:
  1877                           
  1878                           	psect	text8
  1879  04FA                     __ptext8:	
  1880 ;; *************** function _msj1 *****************
  1881 ;; Defined at:
  1882 ;;		line 142 in file "mainM.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       2       0       0       0
  1899 ;;      Totals:         0       2       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    3
  1903 ;; This function calls:
  1904 ;;		_division
  1905 ;;		_printf
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _msj1
  1913  04FA                     _msj1:
  1914  04FA                     l1767:	
  1915                           ;incstack = 0
  1916                           ; Regs used in _msj1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1917                           
  1918                           
  1919                           ;mainM.c: 143:     division(V1);
  1920  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1921  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1922  04FC  086F               	movf	_V1,w
  1923  04FD  120A  118A  234C  120A  118A  	fcall	_division
  1924  0502                     l1769:
  1925                           
  1926                           ;mainM.c: 144:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1927  0502  3082               	movlw	130
  1928  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0505  00B4               	movwf	??_msj1+1
  1931  0506  30DD               	movlw	221
  1932  0507  00B3               	movwf	??_msj1
  1933  0508                     u1497:
  1934  0508  0BB3               	decfsz	??_msj1,f
  1935  0509  2D08               	goto	u1497
  1936  050A  0BB4               	decfsz	??_msj1+1,f
  1937  050B  2D08               	goto	u1497
  1938  050C                     l1771:
  1939                           
  1940                           ;mainM.c: 145:     printf("\rValor en el Pot 1:\r");
  1941  050C  3095               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1942  050D  120A  118A  216E  120A  118A  	fcall	_printf
  1943  0512                     l1773:
  1944                           
  1945                           ;mainM.c: 146:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1946  0512  3082               	movlw	130
  1947  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0515  00B4               	movwf	??_msj1+1
  1950  0516  30DD               	movlw	221
  1951  0517  00B3               	movwf	??_msj1
  1952  0518                     u1507:
  1953  0518  0BB3               	decfsz	??_msj1,f
  1954  0519  2D18               	goto	u1507
  1955  051A  0BB4               	decfsz	??_msj1+1,f
  1956  051B  2D18               	goto	u1507
  1957  051C                     l1775:
  1958                           
  1959                           ;mainM.c: 147:     printf("  ");
  1960  051C  30BF               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1961  051D  120A  118A  216E  120A  118A  	fcall	_printf
  1962  0522                     l1777:
  1963                           
  1964                           ;mainM.c: 148:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1965  0522  3082               	movlw	130
  1966  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0525  00B4               	movwf	??_msj1+1
  1969  0526  30DD               	movlw	221
  1970  0527  00B3               	movwf	??_msj1
  1971  0528                     u1517:
  1972  0528  0BB3               	decfsz	??_msj1,f
  1973  0529  2D28               	goto	u1517
  1974  052A  0BB4               	decfsz	??_msj1+1,f
  1975  052B  2D28               	goto	u1517
  1976  052C                     l1779:
  1977                           
  1978                           ;mainM.c: 149:     TXREG = centena;
  1979  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1980  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1981  052E  086E               	movf	_centena,w
  1982  052F  0099               	movwf	25	;volatile
  1983  0530                     l1781:
  1984                           
  1985                           ;mainM.c: 150:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1986  0530  3082               	movlw	130
  1987  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0533  00B4               	movwf	??_msj1+1
  1990  0534  30DD               	movlw	221
  1991  0535  00B3               	movwf	??_msj1
  1992  0536                     u1527:
  1993  0536  0BB3               	decfsz	??_msj1,f
  1994  0537  2D36               	goto	u1527
  1995  0538  0BB4               	decfsz	??_msj1+1,f
  1996  0539  2D36               	goto	u1527
  1997  053A                     l1783:
  1998                           
  1999                           ;mainM.c: 151:     TXREG = 46;
  2000  053A  302E               	movlw	46
  2001  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2002  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2003  053D  0099               	movwf	25	;volatile
  2004  053E                     l1785:
  2005                           
  2006                           ;mainM.c: 152:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2007  053E  3082               	movlw	130
  2008  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0541  00B4               	movwf	??_msj1+1
  2011  0542  30DD               	movlw	221
  2012  0543  00B3               	movwf	??_msj1
  2013  0544                     u1537:
  2014  0544  0BB3               	decfsz	??_msj1,f
  2015  0545  2D44               	goto	u1537
  2016  0546  0BB4               	decfsz	??_msj1+1,f
  2017  0547  2D44               	goto	u1537
  2018  0548                     l1787:
  2019                           
  2020                           ;mainM.c: 153:     TXREG = decena;
  2021  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2023  054A  086D               	movf	_decena,w
  2024  054B  0099               	movwf	25	;volatile
  2025  054C                     l1789:
  2026                           
  2027                           ;mainM.c: 154:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2028  054C  3082               	movlw	130
  2029  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2030  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2031  054F  00B4               	movwf	??_msj1+1
  2032  0550  30DD               	movlw	221
  2033  0551  00B3               	movwf	??_msj1
  2034  0552                     u1547:
  2035  0552  0BB3               	decfsz	??_msj1,f
  2036  0553  2D52               	goto	u1547
  2037  0554  0BB4               	decfsz	??_msj1+1,f
  2038  0555  2D52               	goto	u1547
  2039  0556                     l1791:
  2040                           
  2041                           ;mainM.c: 155:     TXREG = unidad;
  2042  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0558  086C               	movf	_unidad,w
  2045  0559  0099               	movwf	25	;volatile
  2046  055A                     l1793:
  2047                           
  2048                           ;mainM.c: 156:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2049  055A  3082               	movlw	130
  2050  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2051  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2052  055D  00B4               	movwf	??_msj1+1
  2053  055E  30DD               	movlw	221
  2054  055F  00B3               	movwf	??_msj1
  2055  0560                     u1557:
  2056  0560  0BB3               	decfsz	??_msj1,f
  2057  0561  2D60               	goto	u1557
  2058  0562  0BB4               	decfsz	??_msj1+1,f
  2059  0563  2D60               	goto	u1557
  2060  0564                     l1795:
  2061                           
  2062                           ;mainM.c: 157:     printf(" V");
  2063  0564  30C2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2064  0565  120A  118A  216E  120A  118A  	fcall	_printf
  2065  056A                     l1797:
  2066                           
  2067                           ;mainM.c: 158:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2068  056A  3082               	movlw	130
  2069  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2070  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2071  056D  00B4               	movwf	??_msj1+1
  2072  056E  30DD               	movlw	221
  2073  056F  00B3               	movwf	??_msj1
  2074  0570                     u1567:
  2075  0570  0BB3               	decfsz	??_msj1,f
  2076  0571  2D70               	goto	u1567
  2077  0572  0BB4               	decfsz	??_msj1+1,f
  2078  0573  2D70               	goto	u1567
  2079  0574                     l1799:
  2080                           
  2081                           ;mainM.c: 159:     printf("\r");
  2082  0574  302E               	movlw	(low (((STR_9+35)-__stringbase)| (0+32768)))& (0+255)
  2083  0575  120A  118A  216E  120A  118A  	fcall	_printf
  2084  057A                     l99:
  2085  057A  0008               	return
  2086  057B                     __end_of_msj1:
  2087                           
  2088                           	psect	text9
  2089  034C                     __ptext9:	
  2090 ;; *************** function _division *****************
  2091 ;; Defined at:
  2092 ;;		line 131 in file "mainM.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  valor           1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  valor           1   12[COMMON] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      unsigned char 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       0       0       0       0
  2107 ;;      Locals:         1       0       0       0       0
  2108 ;;      Temps:          3       0       0       0       0
  2109 ;;      Totals:         4       0       0       0       0
  2110 ;;Total ram usage:        4 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    1
  2113 ;; This function calls:
  2114 ;;		___awdiv
  2115 ;;		___awmod
  2116 ;; This function is called by:
  2117 ;;		_msj1
  2118 ;;		_msj2
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _division
  2124  034C                     _division:
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2128                           ;division@valor stored from wreg
  2129  034C  00FC               	movwf	division@valor
  2130  034D                     l1711:
  2131                           
  2132                           ;mainM.c: 132:     centena = valor/50;
  2133  034D  3032               	movlw	50
  2134  034E  00F0               	movwf	___awdiv@divisor
  2135  034F  3000               	movlw	0
  2136  0350  00F1               	movwf	___awdiv@divisor+1
  2137  0351  087C               	movf	division@valor,w
  2138  0352  00F9               	movwf	??_division
  2139  0353  01FA               	clrf	??_division+1
  2140  0354  0879               	movf	??_division,w
  2141  0355  00F2               	movwf	___awdiv@dividend
  2142  0356  087A               	movf	??_division+1,w
  2143  0357  00F3               	movwf	___awdiv@dividend+1
  2144  0358  120A  118A  2418  120A  118A  	fcall	___awdiv
  2145  035D  0870               	movf	?___awdiv,w
  2146  035E  00FB               	movwf	??_division+2
  2147  035F  087B               	movf	??_division+2,w
  2148  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0362  00EE               	movwf	_centena
  2151                           
  2152                           ;mainM.c: 133:     residuo = valor%100;
  2153  0363  3064               	movlw	100
  2154  0364  00F0               	movwf	___awmod@divisor
  2155  0365  3000               	movlw	0
  2156  0366  00F1               	movwf	___awmod@divisor+1
  2157  0367  087C               	movf	division@valor,w
  2158  0368  00F9               	movwf	??_division
  2159  0369  01FA               	clrf	??_division+1
  2160  036A  0879               	movf	??_division,w
  2161  036B  00F2               	movwf	___awmod@dividend
  2162  036C  087A               	movf	??_division+1,w
  2163  036D  00F3               	movwf	___awmod@dividend+1
  2164  036E  120A  118A  22F3  120A  118A  	fcall	___awmod
  2165  0373  0870               	movf	?___awmod,w
  2166  0374  00FB               	movwf	??_division+2
  2167  0375  087B               	movf	??_division+2,w
  2168  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0378  00EB               	movwf	_residuo
  2171                           
  2172                           ;mainM.c: 134:     decena = residuo/10;
  2173  0379  300A               	movlw	10
  2174  037A  00F0               	movwf	___awdiv@divisor
  2175  037B  3000               	movlw	0
  2176  037C  00F1               	movwf	___awdiv@divisor+1
  2177  037D  086B               	movf	_residuo,w
  2178  037E  00F9               	movwf	??_division
  2179  037F  01FA               	clrf	??_division+1
  2180  0380  0879               	movf	??_division,w
  2181  0381  00F2               	movwf	___awdiv@dividend
  2182  0382  087A               	movf	??_division+1,w
  2183  0383  00F3               	movwf	___awdiv@dividend+1
  2184  0384  120A  118A  2418  120A  118A  	fcall	___awdiv
  2185  0389  0870               	movf	?___awdiv,w
  2186  038A  00FB               	movwf	??_division+2
  2187  038B  087B               	movf	??_division+2,w
  2188  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2189  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2190  038E  00ED               	movwf	_decena
  2191                           
  2192                           ;mainM.c: 135:     unidad = residuo%10;
  2193  038F  300A               	movlw	10
  2194  0390  00F0               	movwf	___awmod@divisor
  2195  0391  3000               	movlw	0
  2196  0392  00F1               	movwf	___awmod@divisor+1
  2197  0393  086B               	movf	_residuo,w
  2198  0394  00F9               	movwf	??_division
  2199  0395  01FA               	clrf	??_division+1
  2200  0396  0879               	movf	??_division,w
  2201  0397  00F2               	movwf	___awmod@dividend
  2202  0398  087A               	movf	??_division+1,w
  2203  0399  00F3               	movwf	___awmod@dividend+1
  2204  039A  120A  118A  22F3  120A  118A  	fcall	___awmod
  2205  039F  0870               	movf	?___awmod,w
  2206  03A0  00FB               	movwf	??_division+2
  2207  03A1  087B               	movf	??_division+2,w
  2208  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2209  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2210  03A4  00EC               	movwf	_unidad
  2211  03A5                     l1713:
  2212                           
  2213                           ;mainM.c: 136:     centena += 48;
  2214  03A5  3030               	movlw	48
  2215  03A6  00F9               	movwf	??_division
  2216  03A7  0879               	movf	??_division,w
  2217  03A8  07EE               	addwf	_centena,f
  2218  03A9                     l1715:
  2219                           
  2220                           ;mainM.c: 137:     decena += 48;
  2221  03A9  3030               	movlw	48
  2222  03AA  00F9               	movwf	??_division
  2223  03AB  0879               	movf	??_division,w
  2224  03AC  07ED               	addwf	_decena,f
  2225  03AD                     l1717:
  2226                           
  2227                           ;mainM.c: 138:     unidad += 48;
  2228  03AD  3030               	movlw	48
  2229  03AE  00F9               	movwf	??_division
  2230  03AF  0879               	movf	??_division,w
  2231  03B0  07EC               	addwf	_unidad,f
  2232  03B1                     l96:
  2233  03B1  0008               	return
  2234  03B2                     __end_of_division:
  2235                           
  2236                           	psect	text10
  2237  02F3                     __ptext10:	
  2238 ;; *************** function ___awmod *****************
  2239 ;; Defined at:
  2240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  divisor         2    0[COMMON] int 
  2243 ;;  dividend        2    2[COMMON] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  sign            1    6[COMMON] unsigned char 
  2246 ;;  counter         1    5[COMMON] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    0[COMMON] int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         4       0       0       0       0
  2257 ;;      Locals:         2       0       0       0       0
  2258 ;;      Temps:          1       0       0       0       0
  2259 ;;      Totals:         7       0       0       0       0
  2260 ;;Total ram usage:        7 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_division
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function ___awmod
  2271  02F3                     ___awmod:
  2272  02F3                     l1639:	
  2273                           ;incstack = 0
  2274                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2275                           
  2276  02F3  01F6               	clrf	___awmod@sign
  2277  02F4                     l1641:
  2278  02F4  1FF3               	btfss	___awmod@dividend+1,7
  2279  02F5  2AF7               	goto	u1171
  2280  02F6  2AF8               	goto	u1170
  2281  02F7                     u1171:
  2282  02F7  2AFF               	goto	l1647
  2283  02F8                     u1170:
  2284  02F8                     l1643:
  2285  02F8  09F2               	comf	___awmod@dividend,f
  2286  02F9  09F3               	comf	___awmod@dividend+1,f
  2287  02FA  0AF2               	incf	___awmod@dividend,f
  2288  02FB  1903               	skipnz
  2289  02FC  0AF3               	incf	___awmod@dividend+1,f
  2290  02FD                     l1645:
  2291  02FD  01F6               	clrf	___awmod@sign
  2292  02FE  0AF6               	incf	___awmod@sign,f
  2293  02FF                     l1647:
  2294  02FF  1FF1               	btfss	___awmod@divisor+1,7
  2295  0300  2B02               	goto	u1181
  2296  0301  2B03               	goto	u1180
  2297  0302                     u1181:
  2298  0302  2B08               	goto	l1651
  2299  0303                     u1180:
  2300  0303                     l1649:
  2301  0303  09F0               	comf	___awmod@divisor,f
  2302  0304  09F1               	comf	___awmod@divisor+1,f
  2303  0305  0AF0               	incf	___awmod@divisor,f
  2304  0306  1903               	skipnz
  2305  0307  0AF1               	incf	___awmod@divisor+1,f
  2306  0308                     l1651:
  2307  0308  0870               	movf	___awmod@divisor,w
  2308  0309  0471               	iorwf	___awmod@divisor+1,w
  2309  030A  1903               	btfsc	3,2
  2310  030B  2B0D               	goto	u1191
  2311  030C  2B0E               	goto	u1190
  2312  030D                     u1191:
  2313  030D  2B3D               	goto	l1669
  2314  030E                     u1190:
  2315  030E                     l1653:
  2316  030E  01F5               	clrf	___awmod@counter
  2317  030F  0AF5               	incf	___awmod@counter,f
  2318  0310  2B1C               	goto	l1659
  2319  0311                     l1655:
  2320  0311  3001               	movlw	1
  2321  0312                     u1205:
  2322  0312  1003               	clrc
  2323  0313  0DF0               	rlf	___awmod@divisor,f
  2324  0314  0DF1               	rlf	___awmod@divisor+1,f
  2325  0315  3EFF               	addlw	-1
  2326  0316  1D03               	skipz
  2327  0317  2B12               	goto	u1205
  2328  0318                     l1657:
  2329  0318  3001               	movlw	1
  2330  0319  00F4               	movwf	??___awmod
  2331  031A  0874               	movf	??___awmod,w
  2332  031B  07F5               	addwf	___awmod@counter,f
  2333  031C                     l1659:
  2334  031C  1FF1               	btfss	___awmod@divisor+1,7
  2335  031D  2B1F               	goto	u1211
  2336  031E  2B20               	goto	u1210
  2337  031F                     u1211:
  2338  031F  2B11               	goto	l1655
  2339  0320                     u1210:
  2340  0320                     l1661:
  2341  0320  0871               	movf	___awmod@divisor+1,w
  2342  0321  0273               	subwf	___awmod@dividend+1,w
  2343  0322  1D03               	skipz
  2344  0323  2B26               	goto	u1225
  2345  0324  0870               	movf	___awmod@divisor,w
  2346  0325  0272               	subwf	___awmod@dividend,w
  2347  0326                     u1225:
  2348  0326  1C03               	skipc
  2349  0327  2B29               	goto	u1221
  2350  0328  2B2A               	goto	u1220
  2351  0329                     u1221:
  2352  0329  2B30               	goto	l1665
  2353  032A                     u1220:
  2354  032A                     l1663:
  2355  032A  0870               	movf	___awmod@divisor,w
  2356  032B  02F2               	subwf	___awmod@dividend,f
  2357  032C  0871               	movf	___awmod@divisor+1,w
  2358  032D  1C03               	skipc
  2359  032E  03F3               	decf	___awmod@dividend+1,f
  2360  032F  02F3               	subwf	___awmod@dividend+1,f
  2361  0330                     l1665:
  2362  0330  3001               	movlw	1
  2363  0331                     u1235:
  2364  0331  1003               	clrc
  2365  0332  0CF1               	rrf	___awmod@divisor+1,f
  2366  0333  0CF0               	rrf	___awmod@divisor,f
  2367  0334  3EFF               	addlw	-1
  2368  0335  1D03               	skipz
  2369  0336  2B31               	goto	u1235
  2370  0337                     l1667:
  2371  0337  3001               	movlw	1
  2372  0338  02F5               	subwf	___awmod@counter,f
  2373  0339  1D03               	btfss	3,2
  2374  033A  2B3C               	goto	u1241
  2375  033B  2B3D               	goto	u1240
  2376  033C                     u1241:
  2377  033C  2B20               	goto	l1661
  2378  033D                     u1240:
  2379  033D                     l1669:
  2380  033D  0876               	movf	___awmod@sign,w
  2381  033E  1903               	btfsc	3,2
  2382  033F  2B41               	goto	u1251
  2383  0340  2B42               	goto	u1250
  2384  0341                     u1251:
  2385  0341  2B47               	goto	l1673
  2386  0342                     u1250:
  2387  0342                     l1671:
  2388  0342  09F2               	comf	___awmod@dividend,f
  2389  0343  09F3               	comf	___awmod@dividend+1,f
  2390  0344  0AF2               	incf	___awmod@dividend,f
  2391  0345  1903               	skipnz
  2392  0346  0AF3               	incf	___awmod@dividend+1,f
  2393  0347                     l1673:
  2394  0347  0873               	movf	___awmod@dividend+1,w
  2395  0348  00F1               	movwf	?___awmod+1
  2396  0349  0872               	movf	___awmod@dividend,w
  2397  034A  00F0               	movwf	?___awmod
  2398  034B                     l434:
  2399  034B  0008               	return
  2400  034C                     __end_of___awmod:
  2401                           
  2402                           	psect	text11
  2403  0418                     __ptext11:	
  2404 ;; *************** function ___awdiv *****************
  2405 ;; Defined at:
  2406 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  divisor         2    0[COMMON] int 
  2409 ;;  dividend        2    2[COMMON] int 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  quotient        2    7[COMMON] int 
  2412 ;;  sign            1    6[COMMON] unsigned char 
  2413 ;;  counter         1    5[COMMON] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2    0[COMMON] int 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2423 ;;      Params:         4       0       0       0       0
  2424 ;;      Locals:         4       0       0       0       0
  2425 ;;      Temps:          1       0       0       0       0
  2426 ;;      Totals:         9       0       0       0       0
  2427 ;;Total ram usage:        9 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_division
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function ___awdiv
  2438  0418                     ___awdiv:
  2439  0418                     l1595:	
  2440                           ;incstack = 0
  2441                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2442                           
  2443  0418  01F6               	clrf	___awdiv@sign
  2444  0419                     l1597:
  2445  0419  1FF1               	btfss	___awdiv@divisor+1,7
  2446  041A  2C1C               	goto	u1071
  2447  041B  2C1D               	goto	u1070
  2448  041C                     u1071:
  2449  041C  2C24               	goto	l1603
  2450  041D                     u1070:
  2451  041D                     l1599:
  2452  041D  09F0               	comf	___awdiv@divisor,f
  2453  041E  09F1               	comf	___awdiv@divisor+1,f
  2454  041F  0AF0               	incf	___awdiv@divisor,f
  2455  0420  1903               	skipnz
  2456  0421  0AF1               	incf	___awdiv@divisor+1,f
  2457  0422                     l1601:
  2458  0422  01F6               	clrf	___awdiv@sign
  2459  0423  0AF6               	incf	___awdiv@sign,f
  2460  0424                     l1603:
  2461  0424  1FF3               	btfss	___awdiv@dividend+1,7
  2462  0425  2C27               	goto	u1081
  2463  0426  2C28               	goto	u1080
  2464  0427                     u1081:
  2465  0427  2C31               	goto	l1609
  2466  0428                     u1080:
  2467  0428                     l1605:
  2468  0428  09F2               	comf	___awdiv@dividend,f
  2469  0429  09F3               	comf	___awdiv@dividend+1,f
  2470  042A  0AF2               	incf	___awdiv@dividend,f
  2471  042B  1903               	skipnz
  2472  042C  0AF3               	incf	___awdiv@dividend+1,f
  2473  042D                     l1607:
  2474  042D  3001               	movlw	1
  2475  042E  00F4               	movwf	??___awdiv
  2476  042F  0874               	movf	??___awdiv,w
  2477  0430  06F6               	xorwf	___awdiv@sign,f
  2478  0431                     l1609:
  2479  0431  01F7               	clrf	___awdiv@quotient
  2480  0432  01F8               	clrf	___awdiv@quotient+1
  2481  0433                     l1611:
  2482  0433  0870               	movf	___awdiv@divisor,w
  2483  0434  0471               	iorwf	___awdiv@divisor+1,w
  2484  0435  1903               	btfsc	3,2
  2485  0436  2C38               	goto	u1091
  2486  0437  2C39               	goto	u1090
  2487  0438                     u1091:
  2488  0438  2C70               	goto	l1631
  2489  0439                     u1090:
  2490  0439                     l1613:
  2491  0439  01F5               	clrf	___awdiv@counter
  2492  043A  0AF5               	incf	___awdiv@counter,f
  2493  043B  2C47               	goto	l1619
  2494  043C                     l1615:
  2495  043C  3001               	movlw	1
  2496  043D                     u1105:
  2497  043D  1003               	clrc
  2498  043E  0DF0               	rlf	___awdiv@divisor,f
  2499  043F  0DF1               	rlf	___awdiv@divisor+1,f
  2500  0440  3EFF               	addlw	-1
  2501  0441  1D03               	skipz
  2502  0442  2C3D               	goto	u1105
  2503  0443                     l1617:
  2504  0443  3001               	movlw	1
  2505  0444  00F4               	movwf	??___awdiv
  2506  0445  0874               	movf	??___awdiv,w
  2507  0446  07F5               	addwf	___awdiv@counter,f
  2508  0447                     l1619:
  2509  0447  1FF1               	btfss	___awdiv@divisor+1,7
  2510  0448  2C4A               	goto	u1111
  2511  0449  2C4B               	goto	u1110
  2512  044A                     u1111:
  2513  044A  2C3C               	goto	l1615
  2514  044B                     u1110:
  2515  044B                     l1621:
  2516  044B  3001               	movlw	1
  2517  044C                     u1125:
  2518  044C  1003               	clrc
  2519  044D  0DF7               	rlf	___awdiv@quotient,f
  2520  044E  0DF8               	rlf	___awdiv@quotient+1,f
  2521  044F  3EFF               	addlw	-1
  2522  0450  1D03               	skipz
  2523  0451  2C4C               	goto	u1125
  2524  0452  0871               	movf	___awdiv@divisor+1,w
  2525  0453  0273               	subwf	___awdiv@dividend+1,w
  2526  0454  1D03               	skipz
  2527  0455  2C58               	goto	u1135
  2528  0456  0870               	movf	___awdiv@divisor,w
  2529  0457  0272               	subwf	___awdiv@dividend,w
  2530  0458                     u1135:
  2531  0458  1C03               	skipc
  2532  0459  2C5B               	goto	u1131
  2533  045A  2C5C               	goto	u1130
  2534  045B                     u1131:
  2535  045B  2C63               	goto	l1627
  2536  045C                     u1130:
  2537  045C                     l1623:
  2538  045C  0870               	movf	___awdiv@divisor,w
  2539  045D  02F2               	subwf	___awdiv@dividend,f
  2540  045E  0871               	movf	___awdiv@divisor+1,w
  2541  045F  1C03               	skipc
  2542  0460  03F3               	decf	___awdiv@dividend+1,f
  2543  0461  02F3               	subwf	___awdiv@dividend+1,f
  2544  0462                     l1625:
  2545  0462  1477               	bsf	___awdiv@quotient,0
  2546  0463                     l1627:
  2547  0463  3001               	movlw	1
  2548  0464                     u1145:
  2549  0464  1003               	clrc
  2550  0465  0CF1               	rrf	___awdiv@divisor+1,f
  2551  0466  0CF0               	rrf	___awdiv@divisor,f
  2552  0467  3EFF               	addlw	-1
  2553  0468  1D03               	skipz
  2554  0469  2C64               	goto	u1145
  2555  046A                     l1629:
  2556  046A  3001               	movlw	1
  2557  046B  02F5               	subwf	___awdiv@counter,f
  2558  046C  1D03               	btfss	3,2
  2559  046D  2C6F               	goto	u1151
  2560  046E  2C70               	goto	u1150
  2561  046F                     u1151:
  2562  046F  2C4B               	goto	l1621
  2563  0470                     u1150:
  2564  0470                     l1631:
  2565  0470  0876               	movf	___awdiv@sign,w
  2566  0471  1903               	btfsc	3,2
  2567  0472  2C74               	goto	u1161
  2568  0473  2C75               	goto	u1160
  2569  0474                     u1161:
  2570  0474  2C7A               	goto	l1635
  2571  0475                     u1160:
  2572  0475                     l1633:
  2573  0475  09F7               	comf	___awdiv@quotient,f
  2574  0476  09F8               	comf	___awdiv@quotient+1,f
  2575  0477  0AF7               	incf	___awdiv@quotient,f
  2576  0478  1903               	skipnz
  2577  0479  0AF8               	incf	___awdiv@quotient+1,f
  2578  047A                     l1635:
  2579  047A  0878               	movf	___awdiv@quotient+1,w
  2580  047B  00F1               	movwf	?___awdiv+1
  2581  047C  0877               	movf	___awdiv@quotient,w
  2582  047D  00F0               	movwf	?___awdiv
  2583  047E                     l421:
  2584  047E  0008               	return
  2585  047F                     __end_of___awdiv:
  2586                           
  2587                           	psect	text12
  2588  05FC                     __ptext12:	
  2589 ;; *************** function _ingreso *****************
  2590 ;; Defined at:
  2591 ;;		line 182 in file "mainM.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          0       5       0       0       0
  2608 ;;      Totals:         0       5       0       0       0
  2609 ;;Total ram usage:        5 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    4
  2612 ;; This function calls:
  2613 ;;		_concatenado
  2614 ;;		_printf
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _ingreso
  2622  05FC                     _ingreso:
  2623  05FC                     l1835:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _ingreso: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2626                           
  2627                           
  2628                           ;mainM.c: 183:     printf("\rIngrese el valor de centena: (0-2)\r");
  2629  05FC  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2630  05FD  120A  118A  216E  120A  118A  	fcall	_printf
  2631  0602                     l106:
  2632  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0604  1E8C               	btfss	12,5	;volatile
  2635  0605  2E07               	goto	u1281
  2636  0606  2E08               	goto	u1280
  2637  0607                     u1281:
  2638  0607  2E02               	goto	l106
  2639  0608                     u1280:
  2640  0608                     l1837:
  2641                           
  2642                           ;mainM.c: 186:         cc = RCREG -48;
  2643  0608  081A               	movf	26,w	;volatile
  2644  0609  3ED0               	addlw	208
  2645  060A  00E3               	movwf	??_ingreso
  2646  060B  0863               	movf	??_ingreso,w
  2647  060C  00EA               	movwf	_cc
  2648  060D                     l1839:	
  2649                           ;mainM.c: 188:        while(RCREG > '2'){
  2650                           
  2651                           
  2652                           ;mainM.c: 188:        while(RCREG > '2'){
  2653  060D  3033               	movlw	51
  2654  060E  021A               	subwf	26,w	;volatile
  2655  060F  1803               	skipnc
  2656  0610  2E12               	goto	u1291
  2657  0611  2E13               	goto	u1290
  2658  0612                     u1291:
  2659  0612  2E02               	goto	l106
  2660  0613                     u1290:
  2661  0613                     l1841:
  2662                           
  2663                           ;mainM.c: 192:     printf("Ingrese el valor de decena: (0-5)\r");
  2664  0613  3030               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2665  0614  120A  118A  216E  120A  118A  	fcall	_printf
  2666  0619                     l113:
  2667  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2668  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2669  061B  1E8C               	btfss	12,5	;volatile
  2670  061C  2E1E               	goto	u1301
  2671  061D  2E1F               	goto	u1300
  2672  061E                     u1301:
  2673  061E  2E19               	goto	l113
  2674  061F                     u1300:
  2675  061F                     l1843:
  2676                           
  2677                           ;mainM.c: 195:          dd = RCREG -48;
  2678  061F  081A               	movf	26,w	;volatile
  2679  0620  3ED0               	addlw	208
  2680  0621  00E3               	movwf	??_ingreso
  2681  0622  0863               	movf	??_ingreso,w
  2682  0623  00E9               	movwf	_dd
  2683                           
  2684                           ;mainM.c: 197:         if(cc == 2){
  2685  0624  3002               	movlw	2
  2686  0625  066A               	xorwf	_cc,w
  2687  0626  1D03               	btfss	3,2
  2688  0627  2E29               	goto	u1311
  2689  0628  2E2A               	goto	u1310
  2690  0629                     u1311:
  2691  0629  2E30               	goto	l1849
  2692  062A                     u1310:
  2693  062A                     l1847:
  2694                           
  2695                           ;mainM.c: 198:            while(RCREG > '5'){
  2696  062A  3036               	movlw	54
  2697  062B  021A               	subwf	26,w	;volatile
  2698  062C  1803               	skipnc
  2699  062D  2E2F               	goto	u1321
  2700  062E  2E30               	goto	u1320
  2701  062F                     u1321:
  2702  062F  2E19               	goto	l113
  2703  0630                     u1320:
  2704  0630                     l1849:
  2705                           
  2706                           ;mainM.c: 203:     printf("Ingrese el valor de unidad: (0-5)\r");
  2707  0630  3053               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2708  0631  120A  118A  216E  120A  118A  	fcall	_printf
  2709  0636                     l121:
  2710  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0638  1E8C               	btfss	12,5	;volatile
  2713  0639  2E3B               	goto	u1331
  2714  063A  2E3C               	goto	u1330
  2715  063B                     u1331:
  2716  063B  2E36               	goto	l121
  2717  063C                     u1330:
  2718  063C                     l1851:
  2719                           
  2720                           ;mainM.c: 206:         uu = RCREG - 48;
  2721  063C  081A               	movf	26,w	;volatile
  2722  063D  3ED0               	addlw	208
  2723  063E  00E3               	movwf	??_ingreso
  2724  063F  0863               	movf	??_ingreso,w
  2725  0640  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0641  1303               	bcf	3,6	;RP1=0, select bank1
  2727  0642  00A3               	movwf	_uu^(0+128)
  2728                           
  2729                           ;mainM.c: 208:        if(cc == 2 && dd == 5){
  2730  0643  3002               	movlw	2
  2731  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0646  066A               	xorwf	_cc,w
  2734  0647  1D03               	btfss	3,2
  2735  0648  2E4A               	goto	u1341
  2736  0649  2E4B               	goto	u1340
  2737  064A                     u1341:
  2738  064A  2E57               	goto	l1859
  2739  064B                     u1340:
  2740  064B                     l1853:
  2741  064B  3005               	movlw	5
  2742  064C  0669               	xorwf	_dd,w
  2743  064D  1D03               	btfss	3,2
  2744  064E  2E50               	goto	u1351
  2745  064F  2E51               	goto	u1350
  2746  0650                     u1351:
  2747  0650  2E57               	goto	l1859
  2748  0651                     u1350:
  2749  0651                     l1857:
  2750                           
  2751                           ;mainM.c: 209:            while(RCREG > '5'){
  2752  0651  3036               	movlw	54
  2753  0652  021A               	subwf	26,w	;volatile
  2754  0653  1803               	skipnc
  2755  0654  2E56               	goto	u1361
  2756  0655  2E57               	goto	u1360
  2757  0656                     u1361:
  2758  0656  2E36               	goto	l121
  2759  0657                     u1360:
  2760  0657                     l1859:
  2761                           
  2762                           ;mainM.c: 213:       temp = concatenado(cc, dd);
  2763  0657  086A               	movf	_cc,w
  2764  0658  00E3               	movwf	??_ingreso
  2765  0659  01E4               	clrf	??_ingreso+1
  2766  065A  0863               	movf	??_ingreso,w
  2767  065B  00B4               	movwf	concatenado@a
  2768  065C  0864               	movf	??_ingreso+1,w
  2769  065D  00B5               	movwf	concatenado@a+1
  2770  065E  0869               	movf	_dd,w
  2771  065F  00E5               	movwf	??_ingreso+2
  2772  0660  01E6               	clrf	??_ingreso+3
  2773  0661  0865               	movf	??_ingreso+2,w
  2774  0662  00B6               	movwf	concatenado@b
  2775  0663  0866               	movf	??_ingreso+3,w
  2776  0664  00B7               	movwf	concatenado@b+1
  2777  0665  120A  118A  2272  120A  118A  	fcall	_concatenado
  2778  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2779  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2780  066C  0834               	movf	?_concatenado,w
  2781  066D  00E7               	movwf	??_ingreso+4
  2782  066E  0867               	movf	??_ingreso+4,w
  2783  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0671  00A2               	movwf	_temp^(0+128)
  2786                           
  2787                           ;mainM.c: 214:       completo = concatenado(temp, uu);
  2788  0672  0822               	movf	_temp^(0+128),w
  2789  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0675  00E3               	movwf	??_ingreso
  2792  0676  01E4               	clrf	??_ingreso+1
  2793  0677  0863               	movf	??_ingreso,w
  2794  0678  00B4               	movwf	concatenado@a
  2795  0679  0864               	movf	??_ingreso+1,w
  2796  067A  00B5               	movwf	concatenado@a+1
  2797  067B  1683               	bsf	3,5	;RP0=1, select bank1
  2798  067C  1303               	bcf	3,6	;RP1=0, select bank1
  2799  067D  0823               	movf	_uu^(0+128),w
  2800  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2801  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0680  00E5               	movwf	??_ingreso+2
  2803  0681  01E6               	clrf	??_ingreso+3
  2804  0682  0865               	movf	??_ingreso+2,w
  2805  0683  00B6               	movwf	concatenado@b
  2806  0684  0866               	movf	??_ingreso+3,w
  2807  0685  00B7               	movwf	concatenado@b+1
  2808  0686  120A  118A  2272  120A  118A  	fcall	_concatenado
  2809  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2810  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2811  068D  0835               	movf	?_concatenado+1,w
  2812  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2813  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0690  00A1               	movwf	(_completo+1)^(0+128)
  2815  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0693  0834               	movf	?_concatenado,w
  2818  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2819  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2820  0696  00A0               	movwf	_completo^(0+128)
  2821  0697                     l1861:
  2822                           
  2823                           ;mainM.c: 215:       _delay((unsigned long)((250)*(4000000/4000.0)));
  2824  0697  3002               	movlw	2
  2825  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2827  069A  00E5               	movwf	??_ingreso+2
  2828  069B  3045               	movlw	69
  2829  069C  00E4               	movwf	??_ingreso+1
  2830  069D  30A9               	movlw	169
  2831  069E  00E3               	movwf	??_ingreso
  2832  069F                     u1577:
  2833  069F  0BE3               	decfsz	??_ingreso,f
  2834  06A0  2E9F               	goto	u1577
  2835  06A1  0BE4               	decfsz	??_ingreso+1,f
  2836  06A2  2E9F               	goto	u1577
  2837  06A3  0BE5               	decfsz	??_ingreso+2,f
  2838  06A4  2E9F               	goto	u1577
  2839  06A5                     l1863:
  2840                           
  2841                           ;mainM.c: 216:     printf("\rEl valor seleccionado es: %d\r", completo);
  2842  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2843  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2844  06A7  0821               	movf	(_completo+1)^(0+128),w
  2845  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2846  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2847  06AA  00AC               	movwf	?_printf+1
  2848  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2849  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  2850  06AD  0820               	movf	_completo^(0+128),w
  2851  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2852  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2853  06B0  00AB               	movwf	?_printf
  2854  06B1  3076               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2855  06B2  120A  118A  216E  120A  118A  	fcall	_printf
  2856  06B7                     l128:
  2857  06B7  0008               	return
  2858  06B8                     __end_of_ingreso:
  2859                           
  2860                           	psect	text13
  2861  016E                     __ptext13:	
  2862 ;; *************** function _printf *****************
  2863 ;; Defined at:
  2864 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  f               1    wreg     PTR const unsigned char 
  2867 ;;		 -> STR_12(31), STR_11(35), STR_10(35), STR_9(37), 
  2868 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(21), 
  2869 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(21), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  2872 ;;		 -> STR_12(31), STR_11(35), STR_10(35), STR_9(37), 
  2873 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(21), 
  2874 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(21), 
  2875 ;;  pb              2   17[BANK0 ] struct __prbuf
  2876 ;;  ap              1   15[BANK0 ] PTR void [1]
  2877 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2   11[BANK0 ] int 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       2       0       0       0
  2888 ;;      Locals:         0       4       0       0       0
  2889 ;;      Temps:          0       2       0       0       0
  2890 ;;      Totals:         0       8       0       0       0
  2891 ;;Total ram usage:        8 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		__doprnt
  2896 ;; This function is called by:
  2897 ;;		_msj1
  2898 ;;		_msj2
  2899 ;;		_ingreso
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _printf
  2905  016E                     _printf:
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2909                           ;printf@f stored from wreg
  2910  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2911  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0170  00B0               	movwf	printf@f
  2913  0171                     l1719:
  2914  0171  01B1               	clrf	printf@pb
  2915  0172                     l1721:
  2916  0172  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2917  0173  00AD               	movwf	??_printf
  2918  0174  082D               	movf	??_printf,w
  2919  0175  00B2               	movwf	low ((printf@pb| 0+1))
  2920  0176                     l1723:
  2921  0176  302B               	movlw	(low (?_printf| 0))& (0+255)
  2922  0177  00AD               	movwf	??_printf
  2923  0178  082D               	movf	??_printf,w
  2924  0179  00AF               	movwf	printf@ap
  2925  017A                     l1725:
  2926                           
  2927                           ;	Return value of _printf is never used
  2928  017A  0830               	movf	printf@f,w
  2929  017B  00AD               	movwf	??_printf
  2930  017C  082D               	movf	??_printf,w
  2931  017D  00A0               	movwf	__doprnt@f
  2932  017E  302F               	movlw	(low (printf@ap| 0))& (0+255)
  2933  017F  00AE               	movwf	??_printf+1
  2934  0180  082E               	movf	??_printf+1,w
  2935  0181  00A1               	movwf	__doprnt@ap
  2936  0182  3031               	movlw	(low (printf@pb| 0))& (0+255)
  2937  0183  120A  118A  26B8  120A  118A  	fcall	__doprnt
  2938  0188                     l745:
  2939  0188  0008               	return
  2940  0189                     __end_of_printf:
  2941                           
  2942                           	psect	text14
  2943  0272                     __ptext14:	
  2944 ;; *************** function _concatenado *****************
  2945 ;; Defined at:
  2946 ;;		line 219 in file "mainM.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  a               2   20[BANK0 ] int 
  2949 ;;  b               2   22[BANK0 ] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  BFFR1          20   45[BANK0 ] unsigned char [20]
  2952 ;;  BFFR2          20   25[BANK0 ] unsigned char [20]
  2953 ;;  c               2   65[BANK0 ] int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2   20[BANK0 ] int 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       4       0       0       0
  2964 ;;      Locals:         0      42       0       0       0
  2965 ;;      Temps:          0       1       0       0       0
  2966 ;;      Totals:         0      47       0       0       0
  2967 ;;Total ram usage:       47 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    3
  2970 ;; This function calls:
  2971 ;;		_atoi
  2972 ;;		_sprintf
  2973 ;;		_strcat
  2974 ;; This function is called by:
  2975 ;;		_ingreso
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _concatenado
  2981  0272                     _concatenado:
  2982  0272                     l1729:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _concatenado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2985                           
  2986                           
  2987                           ;mainM.c: 219: int concatenado(int a, int b);mainM.c: 220: {;mainM.c: 221:     char BFFR
      +                          1[20];;mainM.c: 222:     char BFFR2[20];;mainM.c: 224:     sprintf(BFFR1, "%d", a);
  2988  0272  30C5               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2989  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0275  00B8               	movwf	??_concatenado
  2992  0276  0838               	movf	??_concatenado,w
  2993  0277  00AB               	movwf	sprintf@f
  2994  0278  0835               	movf	concatenado@a+1,w
  2995  0279  00AD               	movwf	?_sprintf+2
  2996  027A  0834               	movf	concatenado@a,w
  2997  027B  00AC               	movwf	?_sprintf+1
  2998  027C  304D               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2999  027D  120A  118A  21A6  120A  118A  	fcall	_sprintf
  3000                           
  3001                           ;mainM.c: 225:     sprintf(BFFR2, "%d", b);
  3002  0282  30C5               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3003  0283  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0284  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0285  00B8               	movwf	??_concatenado
  3006  0286  0838               	movf	??_concatenado,w
  3007  0287  00AB               	movwf	sprintf@f
  3008  0288  0837               	movf	concatenado@b+1,w
  3009  0289  00AD               	movwf	?_sprintf+2
  3010  028A  0836               	movf	concatenado@b,w
  3011  028B  00AC               	movwf	?_sprintf+1
  3012  028C  3039               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  3013  028D  120A  118A  21A6  120A  118A  	fcall	_sprintf
  3014  0292                     l1731:
  3015                           
  3016                           ;mainM.c: 227:     strcat(BFFR1, BFFR2);
  3017  0292  3039               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  3018  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0295  00B8               	movwf	??_concatenado
  3021  0296  0838               	movf	??_concatenado,w
  3022  0297  00F0               	movwf	strcat@from
  3023  0298  304D               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  3024  0299  120A  118A  220F  120A  118A  	fcall	_strcat
  3025  029E                     l1733:
  3026                           
  3027                           ;mainM.c: 229:     int c = atoi(BFFR1);
  3028  029E  304D               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  3029  029F  120A  118A  247F  120A  118A  	fcall	_atoi
  3030  02A4  0877               	movf	?_atoi+1,w
  3031  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  3032  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  3033  02A7  00E2               	movwf	concatenado@c+1
  3034  02A8  0876               	movf	?_atoi,w
  3035  02A9  00E1               	movwf	concatenado@c
  3036  02AA                     l1735:
  3037                           
  3038                           ;mainM.c: 230:     return c;
  3039  02AA  0862               	movf	concatenado@c+1,w
  3040  02AB  00B5               	movwf	?_concatenado+1
  3041  02AC  0861               	movf	concatenado@c,w
  3042  02AD  00B4               	movwf	?_concatenado
  3043  02AE                     l131:
  3044  02AE  0008               	return
  3045  02AF                     __end_of_concatenado:
  3046                           
  3047                           	psect	text15
  3048  020F                     __ptext15:	
  3049 ;; *************** function _strcat *****************
  3050 ;; Defined at:
  3051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  to              1    wreg     PTR unsigned char 
  3054 ;;		 -> concatenado@BFFR1(20), 
  3055 ;;  from            1    0[COMMON] PTR const unsigned char 
  3056 ;;		 -> concatenado@BFFR2(20), 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  to              1    2[COMMON] PTR unsigned char 
  3059 ;;		 -> concatenado@BFFR1(20), 
  3060 ;;  cp              1    3[COMMON] PTR unsigned char 
  3061 ;;		 -> concatenado@BFFR1(20), 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      PTR unsigned char 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         1       0       0       0       0
  3072 ;;      Locals:         2       0       0       0       0
  3073 ;;      Temps:          1       0       0       0       0
  3074 ;;      Totals:         4       0       0       0       0
  3075 ;;Total ram usage:        4 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_concatenado
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _strcat
  3086  020F                     _strcat:
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3090                           ;strcat@to stored from wreg
  3091  020F  00F2               	movwf	strcat@to
  3092  0210                     l1551:
  3093  0210  0872               	movf	strcat@to,w
  3094  0211  00F1               	movwf	??_strcat
  3095  0212  0871               	movf	??_strcat,w
  3096  0213  00F3               	movwf	strcat@cp
  3097  0214  2A19               	goto	l1555
  3098  0215                     l1553:
  3099  0215  3001               	movlw	1
  3100  0216  00F1               	movwf	??_strcat
  3101  0217  0871               	movf	??_strcat,w
  3102  0218  07F3               	addwf	strcat@cp,f
  3103  0219                     l1555:
  3104  0219  0873               	movf	strcat@cp,w
  3105  021A  0084               	movwf	4
  3106  021B  1383               	bcf	3,7	;select IRP bank0
  3107  021C  0800               	movf	0,w
  3108  021D  1D03               	btfss	3,2
  3109  021E  2A20               	goto	u991
  3110  021F  2A21               	goto	u990
  3111  0220                     u991:
  3112  0220  2A15               	goto	l1553
  3113  0221                     u990:
  3114  0221  2A2A               	goto	l1559
  3115  0222                     l1557:
  3116  0222  3001               	movlw	1
  3117  0223  00F1               	movwf	??_strcat
  3118  0224  0871               	movf	??_strcat,w
  3119  0225  07F3               	addwf	strcat@cp,f
  3120  0226  3001               	movlw	1
  3121  0227  00F1               	movwf	??_strcat
  3122  0228  0871               	movf	??_strcat,w
  3123  0229  07F0               	addwf	strcat@from,f
  3124  022A                     l1559:
  3125  022A  0870               	movf	strcat@from,w
  3126  022B  0084               	movwf	4
  3127  022C  0800               	movf	0,w
  3128  022D  00F1               	movwf	??_strcat
  3129  022E  0873               	movf	strcat@cp,w
  3130  022F  0084               	movwf	4
  3131  0230  0871               	movf	??_strcat,w
  3132  0231  0080               	movwf	0
  3133  0232  0800               	movf	0,w
  3134  0233  1D03               	btfss	3,2
  3135  0234  2A36               	goto	u1001
  3136  0235  2A37               	goto	u1000
  3137  0236                     u1001:
  3138  0236  2A22               	goto	l1557
  3139  0237                     u1000:
  3140  0237                     l799:
  3141  0237  0008               	return
  3142  0238                     __end_of_strcat:
  3143                           
  3144                           	psect	text16
  3145  01A6                     __ptext16:	
  3146 ;; *************** function _sprintf *****************
  3147 ;; Defined at:
  3148 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  wh              1    wreg     PTR unsigned char 
  3151 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  3152 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  3153 ;;		 -> STR_14(3), STR_13(3), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  wh              1   17[BANK0 ] PTR unsigned char 
  3156 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  3157 ;;  pb              2   18[BANK0 ] struct __prbuf
  3158 ;;  ap              1   16[BANK0 ] PTR void [1]
  3159 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   11[BANK0 ] int 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       3       0       0       0
  3170 ;;      Locals:         0       4       0       0       0
  3171 ;;      Temps:          0       2       0       0       0
  3172 ;;      Totals:         0       9       0       0       0
  3173 ;;Total ram usage:        9 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    2
  3176 ;; This function calls:
  3177 ;;		__doprnt
  3178 ;; This function is called by:
  3179 ;;		_concatenado
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _sprintf
  3185  01A6                     _sprintf:
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3189                           ;sprintf@wh stored from wreg
  3190  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3191  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  3192  01A8  00B1               	movwf	sprintf@wh
  3193  01A9                     l1539:
  3194  01A9  0831               	movf	sprintf@wh,w
  3195  01AA  00AE               	movwf	??_sprintf
  3196  01AB  082E               	movf	??_sprintf,w
  3197  01AC  00B2               	movwf	sprintf@pb
  3198  01AD                     l1541:
  3199  01AD  01B3               	clrf	low ((sprintf@pb| 0+1))
  3200  01AE                     l1543:
  3201  01AE  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3202  01AF  00AE               	movwf	??_sprintf
  3203  01B0  082E               	movf	??_sprintf,w
  3204  01B1  00B0               	movwf	sprintf@ap
  3205  01B2                     l1545:
  3206  01B2  082B               	movf	sprintf@f,w
  3207  01B3  00AE               	movwf	??_sprintf
  3208  01B4  082E               	movf	??_sprintf,w
  3209  01B5  00A0               	movwf	__doprnt@f
  3210  01B6  3030               	movlw	(low (sprintf@ap| 0))& (0+255)
  3211  01B7  00AF               	movwf	??_sprintf+1
  3212  01B8  082F               	movf	??_sprintf+1,w
  3213  01B9  00A1               	movwf	__doprnt@ap
  3214  01BA  3032               	movlw	(low (sprintf@pb| 0))& (0+255)
  3215  01BB  120A  118A  26B8  120A  118A  	fcall	__doprnt
  3216  01C0                     l1547:
  3217  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3218  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3219  01C2  0832               	movf	sprintf@pb,w
  3220  01C3  0084               	movwf	4
  3221  01C4  1383               	bcf	3,7	;select IRP bank0
  3222  01C5  0180               	clrf	0
  3223  01C6                     l790:
  3224  01C6  0008               	return
  3225  01C7                     __end_of_sprintf:
  3226                           
  3227                           	psect	text17
  3228  06B8                     __ptext17:	
  3229 ;; *************** function __doprnt *****************
  3230 ;; Defined at:
  3231 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  pb              1    wreg     PTR struct __prbuf
  3234 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3235 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3236 ;;		 -> STR_14(3), STR_13(3), STR_12(31), STR_11(35), 
  3237 ;;		 -> STR_10(35), STR_9(37), STR_8(2), STR_7(3), 
  3238 ;;		 -> STR_6(3), STR_5(21), STR_4(2), STR_3(3), 
  3239 ;;		 -> STR_2(3), STR_1(21), 
  3240 ;;  ap              1    1[BANK0 ] PTR PTR void 
  3241 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  pb              1   10[BANK0 ] PTR struct __prbuf
  3244 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3245 ;;  tmpval          4    0        struct .
  3246 ;;  val             2    7[BANK0 ] unsigned int 
  3247 ;;  cp              2    0        PTR const unsigned char 
  3248 ;;  len             2    0        unsigned int 
  3249 ;;  c               1    9[BANK0 ] unsigned char 
  3250 ;;  prec            1    6[BANK0 ] char 
  3251 ;;  flag            1    5[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    0[BANK0 ] int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       2       0       0       0
  3262 ;;      Locals:         0       6       0       0       0
  3263 ;;      Temps:          0       3       0       0       0
  3264 ;;      Totals:         0      11       0       0       0
  3265 ;;Total ram usage:       11 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    1
  3268 ;; This function calls:
  3269 ;;		Absolute function
  3270 ;;		___lwdiv
  3271 ;;		___lwmod
  3272 ;;		_putch
  3273 ;; This function is called by:
  3274 ;;		_printf
  3275 ;;		_sprintf
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function __doprnt
  3281  06B8                     __doprnt:
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3285                           ;__doprnt@pb stored from wreg
  3286  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3287  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3288  06BA  00AA               	movwf	__doprnt@pb
  3289  06BB                     l1467:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3292  06BB  2FD5               	goto	l1529
  3293  06BC                     l1469:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3296  06BC  3025               	movlw	37
  3297  06BD  0629               	xorwf	__doprnt@c,w
  3298  06BE  1903               	btfsc	3,2
  3299  06BF  2EC1               	goto	u891
  3300  06C0  2EC2               	goto	u890
  3301  06C1                     u891:
  3302  06C1  2EE8               	goto	l1479
  3303  06C2                     u890:
  3304  06C2                     l1471:
  3305  06C2  0A2A               	incf	__doprnt@pb,w
  3306  06C3  0084               	movwf	4
  3307  06C4  1383               	bcf	3,7	;select IRP bank0
  3308  06C5  0800               	movf	0,w
  3309  06C6  1903               	btfsc	3,2
  3310  06C7  2EC9               	goto	u901
  3311  06C8  2ECA               	goto	u900
  3312  06C9                     u901:
  3313  06C9  2ED9               	goto	l1475
  3314  06CA                     u900:
  3315  06CA                     l1473:
  3316  06CA  0829               	movf	__doprnt@c,w
  3317  06CB  00A2               	movwf	??__doprnt
  3318  06CC  0822               	movf	??__doprnt,w
  3319  06CD  00F0               	movwf	putch@dato
  3320  06CE  0A2A               	incf	__doprnt@pb,w
  3321  06CF  0084               	movwf	4
  3322  06D0  0800               	movf	0,w
  3323  06D1  120A  118A  2003  120A  118A  	fcall	fptable
  3324  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3325  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3326  06D8  2EBB               	goto	l1467
  3327  06D9                     l1475:
  3328  06D9  0829               	movf	__doprnt@c,w
  3329  06DA  00A2               	movwf	??__doprnt
  3330  06DB  082A               	movf	__doprnt@pb,w
  3331  06DC  0084               	movwf	4
  3332  06DD  0800               	movf	0,w
  3333  06DE  0084               	movwf	4
  3334  06DF  0822               	movf	??__doprnt,w
  3335  06E0  0080               	movwf	0
  3336  06E1                     l1477:
  3337  06E1  3001               	movlw	1
  3338  06E2  00A2               	movwf	??__doprnt
  3339  06E3  082A               	movf	__doprnt@pb,w
  3340  06E4  0084               	movwf	4
  3341  06E5  0822               	movf	??__doprnt,w
  3342  06E6  0780               	addwf	0,f
  3343  06E7  2EBB               	goto	l1467
  3344  06E8                     l1479:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3347  06E8  01A5               	clrf	__doprnt@flag
  3348  06E9                     l1483:	
  3349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3350                           
  3351  06E9  3001               	movlw	1
  3352  06EA  07A0               	addwf	__doprnt@f,f
  3353  06EB  30FF               	movlw	-1
  3354  06EC  0720               	addwf	__doprnt@f,w
  3355  06ED  0084               	movwf	4
  3356  06EE  120A  118A  200C  120A  118A  	fcall	stringdir
  3357  06F3  00A9               	movwf	__doprnt@c
  3358  06F4  00A2               	movwf	??__doprnt
  3359  06F5  01A3               	clrf	??__doprnt+1
  3360                           
  3361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 1, Range of values is 0 to 0
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte            4     3 (average)
  3367                           ; direct_byte           11     8 (fixed)
  3368                           ; jumptable            260     6 (fixed)
  3369                           ;	Chosen strategy is simple_byte
  3370  06F6  0823               	movf	??__doprnt+1,w
  3371  06F7  3A00               	xorlw	0	; case 0
  3372  06F8  1903               	skipnz
  3373  06F9  2EFB               	goto	l1911
  3374  06FA  2FD5               	goto	l1529
  3375  06FB                     l1911:
  3376                           
  3377                           ; Switch size 1, requested type "simple"
  3378                           ; Number of cases is 3, Range of values is 0 to 105
  3379                           ; switch strategies available:
  3380                           ; Name         Instructions Cycles
  3381                           ; simple_byte           10     6 (average)
  3382                           ; jumptable            260     6 (fixed)
  3383                           ;	Chosen strategy is simple_byte
  3384  06FB  0822               	movf	??__doprnt,w
  3385  06FC  3A00               	xorlw	0	; case 0
  3386  06FD  1903               	skipnz
  3387  06FE  2FE9               	goto	l1531
  3388  06FF  3A64               	xorlw	100	; case 100
  3389  0700  1903               	skipnz
  3390  0701  2F06               	goto	l1485
  3391  0702  3A0D               	xorlw	13	; case 105
  3392  0703  1903               	skipnz
  3393  0704  2F06               	goto	l1485
  3394  0705  2FD5               	goto	l1529
  3395  0706                     l1485:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3398  0706  0821               	movf	__doprnt@ap,w
  3399  0707  0084               	movwf	4
  3400  0708  1383               	bcf	3,7	;select IRP bank0
  3401  0709  0800               	movf	0,w
  3402  070A  00A2               	movwf	??__doprnt
  3403  070B  3002               	movlw	2
  3404  070C  0780               	addwf	0,f
  3405  070D  0822               	movf	??__doprnt,w
  3406  070E  0084               	movwf	4
  3407  070F  0800               	movf	0,w
  3408  0710  00A7               	movwf	__doprnt@val
  3409  0711  0A84               	incf	4,f
  3410  0712  0800               	movf	0,w
  3411  0713  00A8               	movwf	__doprnt@val+1
  3412  0714                     l1487:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3415  0714  1FA8               	btfss	__doprnt@val+1,7
  3416  0715  2F17               	goto	u911
  3417  0716  2F18               	goto	u910
  3418  0717                     u911:
  3419  0717  2F21               	goto	l1493
  3420  0718                     u910:
  3421  0718                     l1489:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3424  0718  3003               	movlw	3
  3425  0719  00A2               	movwf	??__doprnt
  3426  071A  0822               	movf	??__doprnt,w
  3427  071B  04A5               	iorwf	__doprnt@flag,f
  3428  071C                     l1491:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3431  071C  09A7               	comf	__doprnt@val,f
  3432  071D  09A8               	comf	__doprnt@val+1,f
  3433  071E  0AA7               	incf	__doprnt@val,f
  3434  071F  1903               	skipnz
  3435  0720  0AA8               	incf	__doprnt@val+1,f
  3436  0721                     l1493:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3439  0721  01A9               	clrf	__doprnt@c
  3440  0722  0AA9               	incf	__doprnt@c,f
  3441  0723                     l1499:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3444  0723  0829               	movf	__doprnt@c,w
  3445  0724  00A2               	movwf	??__doprnt
  3446  0725  0722               	addwf	??__doprnt,w
  3447  0726  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3448  0727  0084               	movwf	4
  3449  0728  120A  118A  200C  120A  118A  	fcall	stringdir
  3450  072D  00A3               	movwf	??__doprnt+1
  3451  072E  120A  118A  200C  120A  118A  	fcall	stringdir
  3452  0733  00A4               	movwf	??__doprnt+2
  3453  0734  0824               	movf	??__doprnt+2,w
  3454  0735  0228               	subwf	__doprnt@val+1,w
  3455  0736  1D03               	skipz
  3456  0737  2F3A               	goto	u925
  3457  0738  0823               	movf	??__doprnt+1,w
  3458  0739  0227               	subwf	__doprnt@val,w
  3459  073A                     u925:
  3460  073A  1803               	skipnc
  3461  073B  2F3D               	goto	u921
  3462  073C  2F3E               	goto	u920
  3463  073D                     u921:
  3464  073D  2F3F               	goto	l1503
  3465  073E                     u920:
  3466  073E  2F49               	goto	l1505
  3467  073F                     l1503:
  3468  073F  3001               	movlw	1
  3469  0740  00A2               	movwf	??__doprnt
  3470  0741  0822               	movf	??__doprnt,w
  3471  0742  07A9               	addwf	__doprnt@c,f
  3472  0743  3005               	movlw	5
  3473  0744  0629               	xorwf	__doprnt@c,w
  3474  0745  1D03               	btfss	3,2
  3475  0746  2F48               	goto	u931
  3476  0747  2F49               	goto	u930
  3477  0748                     u931:
  3478  0748  2F23               	goto	l1499
  3479  0749                     u930:
  3480  0749                     l1505:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3483  0749  0825               	movf	__doprnt@flag,w
  3484  074A  3903               	andlw	3
  3485  074B  1903               	btfsc	3,2
  3486  074C  2F4E               	goto	u941
  3487  074D  2F4F               	goto	u940
  3488  074E                     u941:
  3489  074E  2F72               	goto	l1515
  3490  074F                     u940:
  3491  074F                     l1507:
  3492  074F  0A2A               	incf	__doprnt@pb,w
  3493  0750  0084               	movwf	4
  3494  0751  1383               	bcf	3,7	;select IRP bank0
  3495  0752  0800               	movf	0,w
  3496  0753  1903               	btfsc	3,2
  3497  0754  2F56               	goto	u951
  3498  0755  2F57               	goto	u950
  3499  0756                     u951:
  3500  0756  2F64               	goto	l1511
  3501  0757                     u950:
  3502  0757                     l1509:
  3503  0757  302D               	movlw	45
  3504  0758  00A2               	movwf	??__doprnt
  3505  0759  0822               	movf	??__doprnt,w
  3506  075A  00F0               	movwf	putch@dato
  3507  075B  0A2A               	incf	__doprnt@pb,w
  3508  075C  0084               	movwf	4
  3509  075D  0800               	movf	0,w
  3510  075E  120A  118A  2003  120A  118A  	fcall	fptable
  3511  0763  2F72               	goto	l1515
  3512  0764                     l1511:
  3513  0764  302D               	movlw	45
  3514  0765  00A2               	movwf	??__doprnt
  3515  0766  082A               	movf	__doprnt@pb,w
  3516  0767  0084               	movwf	4
  3517  0768  0800               	movf	0,w
  3518  0769  0084               	movwf	4
  3519  076A  0822               	movf	??__doprnt,w
  3520  076B  0080               	movwf	0
  3521  076C                     l1513:
  3522  076C  3001               	movlw	1
  3523  076D  00A2               	movwf	??__doprnt
  3524  076E  082A               	movf	__doprnt@pb,w
  3525  076F  0084               	movwf	4
  3526  0770  0822               	movf	??__doprnt,w
  3527  0771  0780               	addwf	0,f
  3528  0772                     l1515:
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3531  0772  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0773  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0774  0829               	movf	__doprnt@c,w
  3534  0775  00A2               	movwf	??__doprnt
  3535  0776  0822               	movf	??__doprnt,w
  3536  0777  00A6               	movwf	__doprnt@prec
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3539  0778  2FCA               	goto	l1527
  3540  0779                     l1517:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3543  0779  300A               	movlw	10
  3544  077A  00F8               	movwf	___lwmod@divisor
  3545  077B  3000               	movlw	0
  3546  077C  00F9               	movwf	___lwmod@divisor+1
  3547  077D  0826               	movf	__doprnt@prec,w
  3548  077E  00A2               	movwf	??__doprnt
  3549  077F  0722               	addwf	??__doprnt,w
  3550  0780  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3551  0781  0084               	movwf	4
  3552  0782  120A  118A  200C  120A  118A  	fcall	stringdir
  3553  0787  00F0               	movwf	___lwdiv@divisor
  3554  0788  120A  118A  200C  120A  118A  	fcall	stringdir
  3555  078D  00F1               	movwf	___lwdiv@divisor+1
  3556  078E  0828               	movf	__doprnt@val+1,w
  3557  078F  00F3               	movwf	___lwdiv@dividend+1
  3558  0790  0827               	movf	__doprnt@val,w
  3559  0791  00F2               	movwf	___lwdiv@dividend
  3560  0792  120A  118A  22AF  120A  118A  	fcall	___lwdiv
  3561  0797  0871               	movf	?___lwdiv+1,w
  3562  0798  00FB               	movwf	___lwmod@dividend+1
  3563  0799  0870               	movf	?___lwdiv,w
  3564  079A  00FA               	movwf	___lwmod@dividend
  3565  079B  120A  118A  2238  120A  118A  	fcall	___lwmod
  3566  07A0  0878               	movf	?___lwmod,w
  3567  07A1  3E30               	addlw	48
  3568  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3569  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3570  07A4  00A3               	movwf	??__doprnt+1
  3571  07A5  0823               	movf	??__doprnt+1,w
  3572  07A6  00A9               	movwf	__doprnt@c
  3573  07A7                     l1519:
  3574  07A7  0A2A               	incf	__doprnt@pb,w
  3575  07A8  0084               	movwf	4
  3576  07A9  1383               	bcf	3,7	;select IRP bank0
  3577  07AA  0800               	movf	0,w
  3578  07AB  1903               	btfsc	3,2
  3579  07AC  2FAE               	goto	u961
  3580  07AD  2FAF               	goto	u960
  3581  07AE                     u961:
  3582  07AE  2FBC               	goto	l1523
  3583  07AF                     u960:
  3584  07AF                     l1521:
  3585  07AF  0829               	movf	__doprnt@c,w
  3586  07B0  00A2               	movwf	??__doprnt
  3587  07B1  0822               	movf	??__doprnt,w
  3588  07B2  00F0               	movwf	putch@dato
  3589  07B3  0A2A               	incf	__doprnt@pb,w
  3590  07B4  0084               	movwf	4
  3591  07B5  0800               	movf	0,w
  3592  07B6  120A  118A  2003  120A  118A  	fcall	fptable
  3593  07BB  2FCA               	goto	l1527
  3594  07BC                     l1523:
  3595  07BC  0829               	movf	__doprnt@c,w
  3596  07BD  00A2               	movwf	??__doprnt
  3597  07BE  082A               	movf	__doprnt@pb,w
  3598  07BF  0084               	movwf	4
  3599  07C0  0800               	movf	0,w
  3600  07C1  0084               	movwf	4
  3601  07C2  0822               	movf	??__doprnt,w
  3602  07C3  0080               	movwf	0
  3603  07C4                     l1525:
  3604  07C4  3001               	movlw	1
  3605  07C5  00A2               	movwf	??__doprnt
  3606  07C6  082A               	movf	__doprnt@pb,w
  3607  07C7  0084               	movwf	4
  3608  07C8  0822               	movf	??__doprnt,w
  3609  07C9  0780               	addwf	0,f
  3610  07CA                     l1527:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3613  07CA  30FF               	movlw	255
  3614  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3615  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3616  07CD  00A2               	movwf	??__doprnt
  3617  07CE  0822               	movf	??__doprnt,w
  3618  07CF  07A6               	addwf	__doprnt@prec,f
  3619  07D0  0A26               	incf	__doprnt@prec,w
  3620  07D1  1D03               	btfss	3,2
  3621  07D2  2FD4               	goto	u971
  3622  07D3  2FD5               	goto	u970
  3623  07D4                     u971:
  3624  07D4  2F79               	goto	l1517
  3625  07D5                     u970:
  3626  07D5                     l1529:
  3627                           
  3628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3629  07D5  3001               	movlw	1
  3630  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3631  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3632  07D8  07A0               	addwf	__doprnt@f,f
  3633  07D9  30FF               	movlw	-1
  3634  07DA  0720               	addwf	__doprnt@f,w
  3635  07DB  0084               	movwf	4
  3636  07DC  120A  118A  200C  120A  118A  	fcall	stringdir
  3637  07E1  00A2               	movwf	??__doprnt
  3638  07E2  0822               	movf	??__doprnt,w
  3639  07E3  00A9               	movwf	__doprnt@c
  3640  07E4  0829               	movf	__doprnt@c,w
  3641  07E5  1D03               	btfss	3,2
  3642  07E6  2FE8               	goto	u981
  3643  07E7  2FE9               	goto	u980
  3644  07E8                     u981:
  3645  07E8  2EBC               	goto	l1469
  3646  07E9                     u980:
  3647  07E9                     l1531:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3650  07E9  01A0               	clrf	?__doprnt
  3651  07EA  01A1               	clrf	?__doprnt+1
  3652  07EB                     l783:
  3653  07EB  0008               	return
  3654  07EC                     __end_of__doprnt:
  3655                           
  3656                           	psect	text18
  3657  0134                     __ptext18:	
  3658 ;; *************** function _putch *****************
  3659 ;; Defined at:
  3660 ;;		line 125 in file "mainM.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  dato            1    0[COMMON] unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3674 ;;      Params:         1       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0
  3677 ;;      Totals:         1       0       0       0       0
  3678 ;;Total ram usage:        1 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_printf
  3684 ;;		__doprnt
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           
  3689                           ;psect for function _putch
  3690  0134                     _putch:
  3691  0134                     l1387:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _putch: [wreg]
  3694                           
  3695  0134                     l90:	
  3696                           ;mainM.c: 126:     while(TXIF == 0);
  3697                           
  3698  0134  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0135  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0136  1E0C               	btfss	12,4	;volatile
  3701  0137  2939               	goto	u691
  3702  0138  293A               	goto	u690
  3703  0139                     u691:
  3704  0139  2934               	goto	l90
  3705  013A                     u690:
  3706  013A                     l1389:
  3707                           
  3708                           ;mainM.c: 127:     TXREG = dato;
  3709  013A  0870               	movf	putch@dato,w
  3710  013B  0099               	movwf	25	;volatile
  3711  013C                     l93:
  3712  013C  0008               	return
  3713  013D                     __end_of_putch:
  3714                           
  3715                           	psect	text19
  3716  0238                     __ptext19:	
  3717 ;; *************** function ___lwmod *****************
  3718 ;; Defined at:
  3719 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  divisor         2    8[COMMON] unsigned int 
  3722 ;;  dividend        2   10[COMMON] unsigned int 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  counter         1   13[COMMON] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  2    8[COMMON] unsigned int 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         4       0       0       0       0
  3735 ;;      Locals:         1       0       0       0       0
  3736 ;;      Temps:          1       0       0       0       0
  3737 ;;      Totals:         6       0       0       0       0
  3738 ;;Total ram usage:        6 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		__doprnt
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function ___lwmod
  3749  0238                     ___lwmod:
  3750  0238                     l1419:	
  3751                           ;incstack = 0
  3752                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3753                           
  3754  0238  0878               	movf	___lwmod@divisor,w
  3755  0239  0479               	iorwf	___lwmod@divisor+1,w
  3756  023A  1903               	btfsc	3,2
  3757  023B  2A3D               	goto	u771
  3758  023C  2A3E               	goto	u770
  3759  023D                     u771:
  3760  023D  2A6D               	goto	l1437
  3761  023E                     u770:
  3762  023E                     l1421:
  3763  023E  01FD               	clrf	___lwmod@counter
  3764  023F  0AFD               	incf	___lwmod@counter,f
  3765  0240  2A4C               	goto	l1427
  3766  0241                     l1423:
  3767  0241  3001               	movlw	1
  3768  0242                     u785:
  3769  0242  1003               	clrc
  3770  0243  0DF8               	rlf	___lwmod@divisor,f
  3771  0244  0DF9               	rlf	___lwmod@divisor+1,f
  3772  0245  3EFF               	addlw	-1
  3773  0246  1D03               	skipz
  3774  0247  2A42               	goto	u785
  3775  0248                     l1425:
  3776  0248  3001               	movlw	1
  3777  0249  00FC               	movwf	??___lwmod
  3778  024A  087C               	movf	??___lwmod,w
  3779  024B  07FD               	addwf	___lwmod@counter,f
  3780  024C                     l1427:
  3781  024C  1FF9               	btfss	___lwmod@divisor+1,7
  3782  024D  2A4F               	goto	u791
  3783  024E  2A50               	goto	u790
  3784  024F                     u791:
  3785  024F  2A41               	goto	l1423
  3786  0250                     u790:
  3787  0250                     l1429:
  3788  0250  0879               	movf	___lwmod@divisor+1,w
  3789  0251  027B               	subwf	___lwmod@dividend+1,w
  3790  0252  1D03               	skipz
  3791  0253  2A56               	goto	u805
  3792  0254  0878               	movf	___lwmod@divisor,w
  3793  0255  027A               	subwf	___lwmod@dividend,w
  3794  0256                     u805:
  3795  0256  1C03               	skipc
  3796  0257  2A59               	goto	u801
  3797  0258  2A5A               	goto	u800
  3798  0259                     u801:
  3799  0259  2A60               	goto	l1433
  3800  025A                     u800:
  3801  025A                     l1431:
  3802  025A  0878               	movf	___lwmod@divisor,w
  3803  025B  02FA               	subwf	___lwmod@dividend,f
  3804  025C  0879               	movf	___lwmod@divisor+1,w
  3805  025D  1C03               	skipc
  3806  025E  03FB               	decf	___lwmod@dividend+1,f
  3807  025F  02FB               	subwf	___lwmod@dividend+1,f
  3808  0260                     l1433:
  3809  0260  3001               	movlw	1
  3810  0261                     u815:
  3811  0261  1003               	clrc
  3812  0262  0CF9               	rrf	___lwmod@divisor+1,f
  3813  0263  0CF8               	rrf	___lwmod@divisor,f
  3814  0264  3EFF               	addlw	-1
  3815  0265  1D03               	skipz
  3816  0266  2A61               	goto	u815
  3817  0267                     l1435:
  3818  0267  3001               	movlw	1
  3819  0268  02FD               	subwf	___lwmod@counter,f
  3820  0269  1D03               	btfss	3,2
  3821  026A  2A6C               	goto	u821
  3822  026B  2A6D               	goto	u820
  3823  026C                     u821:
  3824  026C  2A50               	goto	l1429
  3825  026D                     u820:
  3826  026D                     l1437:
  3827  026D  087B               	movf	___lwmod@dividend+1,w
  3828  026E  00F9               	movwf	?___lwmod+1
  3829  026F  087A               	movf	___lwmod@dividend,w
  3830  0270  00F8               	movwf	?___lwmod
  3831  0271                     l550:
  3832  0271  0008               	return
  3833  0272                     __end_of___lwmod:
  3834                           
  3835                           	psect	text20
  3836  02AF                     __ptext20:	
  3837 ;; *************** function ___lwdiv *****************
  3838 ;; Defined at:
  3839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  divisor         2    0[COMMON] unsigned int 
  3842 ;;  dividend        2    2[COMMON] unsigned int 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  quotient        2    5[COMMON] unsigned int 
  3845 ;;  counter         1    7[COMMON] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  2    0[COMMON] unsigned int 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         4       0       0       0       0
  3856 ;;      Locals:         3       0       0       0       0
  3857 ;;      Temps:          1       0       0       0       0
  3858 ;;      Totals:         8       0       0       0       0
  3859 ;;Total ram usage:        8 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		__doprnt
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function ___lwdiv
  3870  02AF                     ___lwdiv:
  3871  02AF                     l1393:	
  3872                           ;incstack = 0
  3873                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3874                           
  3875  02AF  01F5               	clrf	___lwdiv@quotient
  3876  02B0  01F6               	clrf	___lwdiv@quotient+1
  3877  02B1                     l1395:
  3878  02B1  0870               	movf	___lwdiv@divisor,w
  3879  02B2  0471               	iorwf	___lwdiv@divisor+1,w
  3880  02B3  1903               	btfsc	3,2
  3881  02B4  2AB6               	goto	u701
  3882  02B5  2AB7               	goto	u700
  3883  02B6                     u701:
  3884  02B6  2AEE               	goto	l1415
  3885  02B7                     u700:
  3886  02B7                     l1397:
  3887  02B7  01F7               	clrf	___lwdiv@counter
  3888  02B8  0AF7               	incf	___lwdiv@counter,f
  3889  02B9  2AC5               	goto	l1403
  3890  02BA                     l1399:
  3891  02BA  3001               	movlw	1
  3892  02BB                     u715:
  3893  02BB  1003               	clrc
  3894  02BC  0DF0               	rlf	___lwdiv@divisor,f
  3895  02BD  0DF1               	rlf	___lwdiv@divisor+1,f
  3896  02BE  3EFF               	addlw	-1
  3897  02BF  1D03               	skipz
  3898  02C0  2ABB               	goto	u715
  3899  02C1                     l1401:
  3900  02C1  3001               	movlw	1
  3901  02C2  00F4               	movwf	??___lwdiv
  3902  02C3  0874               	movf	??___lwdiv,w
  3903  02C4  07F7               	addwf	___lwdiv@counter,f
  3904  02C5                     l1403:
  3905  02C5  1FF1               	btfss	___lwdiv@divisor+1,7
  3906  02C6  2AC8               	goto	u721
  3907  02C7  2AC9               	goto	u720
  3908  02C8                     u721:
  3909  02C8  2ABA               	goto	l1399
  3910  02C9                     u720:
  3911  02C9                     l1405:
  3912  02C9  3001               	movlw	1
  3913  02CA                     u735:
  3914  02CA  1003               	clrc
  3915  02CB  0DF5               	rlf	___lwdiv@quotient,f
  3916  02CC  0DF6               	rlf	___lwdiv@quotient+1,f
  3917  02CD  3EFF               	addlw	-1
  3918  02CE  1D03               	skipz
  3919  02CF  2ACA               	goto	u735
  3920  02D0  0871               	movf	___lwdiv@divisor+1,w
  3921  02D1  0273               	subwf	___lwdiv@dividend+1,w
  3922  02D2  1D03               	skipz
  3923  02D3  2AD6               	goto	u745
  3924  02D4  0870               	movf	___lwdiv@divisor,w
  3925  02D5  0272               	subwf	___lwdiv@dividend,w
  3926  02D6                     u745:
  3927  02D6  1C03               	skipc
  3928  02D7  2AD9               	goto	u741
  3929  02D8  2ADA               	goto	u740
  3930  02D9                     u741:
  3931  02D9  2AE1               	goto	l1411
  3932  02DA                     u740:
  3933  02DA                     l1407:
  3934  02DA  0870               	movf	___lwdiv@divisor,w
  3935  02DB  02F2               	subwf	___lwdiv@dividend,f
  3936  02DC  0871               	movf	___lwdiv@divisor+1,w
  3937  02DD  1C03               	skipc
  3938  02DE  03F3               	decf	___lwdiv@dividend+1,f
  3939  02DF  02F3               	subwf	___lwdiv@dividend+1,f
  3940  02E0                     l1409:
  3941  02E0  1475               	bsf	___lwdiv@quotient,0
  3942  02E1                     l1411:
  3943  02E1  3001               	movlw	1
  3944  02E2                     u755:
  3945  02E2  1003               	clrc
  3946  02E3  0CF1               	rrf	___lwdiv@divisor+1,f
  3947  02E4  0CF0               	rrf	___lwdiv@divisor,f
  3948  02E5  3EFF               	addlw	-1
  3949  02E6  1D03               	skipz
  3950  02E7  2AE2               	goto	u755
  3951  02E8                     l1413:
  3952  02E8  3001               	movlw	1
  3953  02E9  02F7               	subwf	___lwdiv@counter,f
  3954  02EA  1D03               	btfss	3,2
  3955  02EB  2AED               	goto	u761
  3956  02EC  2AEE               	goto	u760
  3957  02ED                     u761:
  3958  02ED  2AC9               	goto	l1405
  3959  02EE                     u760:
  3960  02EE                     l1415:
  3961  02EE  0876               	movf	___lwdiv@quotient+1,w
  3962  02EF  00F1               	movwf	?___lwdiv+1
  3963  02F0  0875               	movf	___lwdiv@quotient,w
  3964  02F1  00F0               	movwf	?___lwdiv
  3965  02F2                     l540:
  3966  02F2  0008               	return
  3967  02F3                     __end_of___lwdiv:
  3968                           
  3969                           	psect	text21
  3970  047F                     __ptext21:	
  3971 ;; *************** function _atoi *****************
  3972 ;; Defined at:
  3973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  s               1    wreg     PTR const unsigned char 
  3976 ;;		 -> concatenado@BFFR1(20), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  s               1   13[COMMON] PTR const unsigned char 
  3979 ;;		 -> concatenado@BFFR1(20), 
  3980 ;;  a               2   11[COMMON] int 
  3981 ;;  sign            1   10[COMMON] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2    6[COMMON] int 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         2       0       0       0       0
  3992 ;;      Locals:         4       0       0       0       0
  3993 ;;      Temps:          2       0       0       0       0
  3994 ;;      Totals:         8       0       0       0       0
  3995 ;;Total ram usage:        8 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    1
  3998 ;; This function calls:
  3999 ;;		___wmul
  4000 ;;		_isdigit
  4001 ;; This function is called by:
  4002 ;;		_concatenado
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _atoi
  4008  047F                     _atoi:
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4012                           ;atoi@s stored from wreg
  4013  047F  00FD               	movwf	atoi@s
  4014  0480                     l1561:
  4015  0480  2C85               	goto	l1565
  4016  0481                     l1563:
  4017  0481  3001               	movlw	1
  4018  0482  00F8               	movwf	??_atoi
  4019  0483  0878               	movf	??_atoi,w
  4020  0484  07FD               	addwf	atoi@s,f
  4021  0485                     l1565:
  4022  0485  087D               	movf	atoi@s,w
  4023  0486  0084               	movwf	4
  4024  0487  3020               	movlw	32
  4025  0488  1383               	bcf	3,7	;select IRP bank0
  4026  0489  0600               	xorwf	0,w
  4027  048A  1903               	btfsc	3,2
  4028  048B  2C8D               	goto	u1011
  4029  048C  2C8E               	goto	u1010
  4030  048D                     u1011:
  4031  048D  2C81               	goto	l1563
  4032  048E                     u1010:
  4033  048E                     l1567:
  4034  048E  087D               	movf	atoi@s,w
  4035  048F  0084               	movwf	4
  4036  0490  3009               	movlw	9
  4037  0491  0600               	xorwf	0,w
  4038  0492  1903               	btfsc	3,2
  4039  0493  2C95               	goto	u1021
  4040  0494  2C96               	goto	u1020
  4041  0495                     u1021:
  4042  0495  2C81               	goto	l1563
  4043  0496                     u1020:
  4044  0496                     l1569:
  4045  0496  01FB               	clrf	atoi@a
  4046  0497  01FC               	clrf	atoi@a+1
  4047  0498  01FA               	clrf	atoi@sign
  4048  0499                     l1571:
  4049  0499  087D               	movf	atoi@s,w
  4050  049A  0084               	movwf	4
  4051  049B  302D               	movlw	45
  4052  049C  0600               	xorwf	0,w
  4053  049D  1D03               	btfss	3,2
  4054  049E  2CA0               	goto	u1031
  4055  049F  2CA1               	goto	u1030
  4056  04A0                     u1031:
  4057  04A0  2CAA               	goto	l1575
  4058  04A1                     u1030:
  4059  04A1                     l1573:
  4060  04A1  3001               	movlw	1
  4061  04A2  00F8               	movwf	??_atoi
  4062  04A3  0878               	movf	??_atoi,w
  4063  04A4  07FA               	addwf	atoi@sign,f
  4064  04A5  3001               	movlw	1
  4065  04A6  00F8               	movwf	??_atoi
  4066  04A7  0878               	movf	??_atoi,w
  4067  04A8  07FD               	addwf	atoi@s,f
  4068  04A9  2CD8               	goto	l1583
  4069  04AA                     l1575:
  4070  04AA  087D               	movf	atoi@s,w
  4071  04AB  0084               	movwf	4
  4072  04AC  302B               	movlw	43
  4073  04AD  0600               	xorwf	0,w
  4074  04AE  1D03               	btfss	3,2
  4075  04AF  2CB1               	goto	u1041
  4076  04B0  2CB2               	goto	u1040
  4077  04B1                     u1041:
  4078  04B1  2CD8               	goto	l1583
  4079  04B2                     u1040:
  4080  04B2                     l1577:
  4081  04B2  3001               	movlw	1
  4082  04B3  00F8               	movwf	??_atoi
  4083  04B4  0878               	movf	??_atoi,w
  4084  04B5  07FD               	addwf	atoi@s,f
  4085  04B6  2CD8               	goto	l1583
  4086  04B7                     l1579:
  4087  04B7  087D               	movf	atoi@s,w
  4088  04B8  0084               	movwf	4
  4089  04B9  087C               	movf	atoi@a+1,w
  4090  04BA  00F1               	movwf	___wmul@multiplier+1
  4091  04BB  087B               	movf	atoi@a,w
  4092  04BC  00F0               	movwf	___wmul@multiplier
  4093  04BD  300A               	movlw	10
  4094  04BE  00F2               	movwf	___wmul@multiplicand
  4095  04BF  3000               	movlw	0
  4096  04C0  00F3               	movwf	___wmul@multiplicand+1
  4097  04C1  120A  118A  21EA  120A  118A  	fcall	___wmul
  4098  04C6  1383               	bcf	3,7	;select IRP bank0
  4099  04C7  0800               	movf	0,w
  4100  04C8  0770               	addwf	?___wmul,w
  4101  04C9  00F8               	movwf	??_atoi
  4102  04CA  3000               	movlw	0
  4103  04CB  1803               	skipnc
  4104  04CC  3001               	movlw	1
  4105  04CD  0771               	addwf	?___wmul+1,w
  4106  04CE  00F9               	movwf	??_atoi+1
  4107  04CF  0878               	movf	??_atoi,w
  4108  04D0  3ED0               	addlw	208
  4109  04D1  00FB               	movwf	atoi@a
  4110  04D2  0879               	movf	??_atoi+1,w
  4111  04D3  1803               	skipnc
  4112  04D4  3E01               	addlw	1
  4113  04D5  3EFF               	addlw	255
  4114  04D6  00FC               	movwf	atoi@a+1
  4115  04D7  2CB2               	goto	l1577
  4116  04D8                     l1583:
  4117  04D8  087D               	movf	atoi@s,w
  4118  04D9  0084               	movwf	4
  4119  04DA  0800               	movf	0,w
  4120  04DB  120A  118A  2146  120A  118A  	fcall	_isdigit
  4121  04E0  1803               	btfsc	3,0
  4122  04E1  2CE3               	goto	u1051
  4123  04E2  2CE4               	goto	u1050
  4124  04E3                     u1051:
  4125  04E3  2CB7               	goto	l1579
  4126  04E4                     u1050:
  4127  04E4                     l1585:
  4128  04E4  087A               	movf	atoi@sign,w
  4129  04E5  1903               	btfsc	3,2
  4130  04E6  2CE8               	goto	u1061
  4131  04E7  2CE9               	goto	u1060
  4132  04E8                     u1061:
  4133  04E8  2CF5               	goto	l1591
  4134  04E9                     u1060:
  4135  04E9                     l1587:
  4136  04E9  097B               	comf	atoi@a,w
  4137  04EA  00F8               	movwf	??_atoi
  4138  04EB  097C               	comf	atoi@a+1,w
  4139  04EC  00F9               	movwf	??_atoi+1
  4140  04ED  0AF8               	incf	??_atoi,f
  4141  04EE  1903               	skipnz
  4142  04EF  0AF9               	incf	??_atoi+1,f
  4143  04F0  0878               	movf	??_atoi,w
  4144  04F1  00F6               	movwf	?_atoi
  4145  04F2  0879               	movf	??_atoi+1,w
  4146  04F3  00F7               	movwf	?_atoi+1
  4147  04F4  2CF9               	goto	l731
  4148  04F5                     l1591:
  4149  04F5  087C               	movf	atoi@a+1,w
  4150  04F6  00F7               	movwf	?_atoi+1
  4151  04F7  087B               	movf	atoi@a,w
  4152  04F8  00F6               	movwf	?_atoi
  4153  04F9                     l731:
  4154  04F9  0008               	return
  4155  04FA                     __end_of_atoi:
  4156                           
  4157                           	psect	text22
  4158  0146                     __ptext22:	
  4159 ;; *************** function _isdigit *****************
  4160 ;; Defined at:
  4161 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  c               1    wreg     unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  c               1    1[COMMON] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;		None               void
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       0       0       0       0
  4176 ;;      Locals:         2       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0
  4178 ;;      Totals:         2       0       0       0       0
  4179 ;;Total ram usage:        2 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_atoi
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _isdigit
  4190  0146                     _isdigit:
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4194                           ;isdigit@c stored from wreg
  4195  0146  00F1               	movwf	isdigit@c
  4196  0147                     l1455:
  4197  0147  01F0               	clrf	_isdigit$981
  4198  0148                     l1457:
  4199  0148  303A               	movlw	58
  4200  0149  0271               	subwf	isdigit@c,w
  4201  014A  1803               	skipnc
  4202  014B  294D               	goto	u871
  4203  014C  294E               	goto	u870
  4204  014D                     u871:
  4205  014D  2956               	goto	l1463
  4206  014E                     u870:
  4207  014E                     l1459:
  4208  014E  3030               	movlw	48
  4209  014F  0271               	subwf	isdigit@c,w
  4210  0150  1C03               	skipc
  4211  0151  2953               	goto	u881
  4212  0152  2954               	goto	u880
  4213  0153                     u881:
  4214  0153  2956               	goto	l1463
  4215  0154                     u880:
  4216  0154                     l1461:
  4217  0154  01F0               	clrf	_isdigit$981
  4218  0155  0AF0               	incf	_isdigit$981,f
  4219  0156                     l1463:
  4220  0156  0C70               	rrf	_isdigit$981,w
  4221  0157                     l736:
  4222  0157  0008               	return
  4223  0158                     __end_of_isdigit:
  4224                           
  4225                           	psect	text23
  4226  01EA                     __ptext23:	
  4227 ;; *************** function ___wmul *****************
  4228 ;; Defined at:
  4229 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  multiplier      2    0[COMMON] unsigned int 
  4232 ;;  multiplicand    2    2[COMMON] unsigned int 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  product         2    4[COMMON] unsigned int 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  2    0[COMMON] unsigned int 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         4       0       0       0       0
  4245 ;;      Locals:         2       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0
  4247 ;;      Totals:         6       0       0       0       0
  4248 ;;Total ram usage:        6 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_atoi
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function ___wmul
  4259  01EA                     ___wmul:
  4260  01EA                     l1441:	
  4261                           ;incstack = 0
  4262                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4263                           
  4264  01EA  01F4               	clrf	___wmul@product
  4265  01EB  01F5               	clrf	___wmul@product+1
  4266  01EC                     l1443:
  4267  01EC  1C70               	btfss	___wmul@multiplier,0
  4268  01ED  29EF               	goto	u831
  4269  01EE  29F0               	goto	u830
  4270  01EF                     u831:
  4271  01EF  29F6               	goto	l268
  4272  01F0                     u830:
  4273  01F0                     l1445:
  4274  01F0  0872               	movf	___wmul@multiplicand,w
  4275  01F1  07F4               	addwf	___wmul@product,f
  4276  01F2  1803               	skipnc
  4277  01F3  0AF5               	incf	___wmul@product+1,f
  4278  01F4  0873               	movf	___wmul@multiplicand+1,w
  4279  01F5  07F5               	addwf	___wmul@product+1,f
  4280  01F6                     l268:
  4281  01F6  3001               	movlw	1
  4282  01F7                     u845:
  4283  01F7  1003               	clrc
  4284  01F8  0DF2               	rlf	___wmul@multiplicand,f
  4285  01F9  0DF3               	rlf	___wmul@multiplicand+1,f
  4286  01FA  3EFF               	addlw	-1
  4287  01FB  1D03               	skipz
  4288  01FC  29F7               	goto	u845
  4289  01FD                     l1447:
  4290  01FD  3001               	movlw	1
  4291  01FE                     u855:
  4292  01FE  1003               	clrc
  4293  01FF  0CF1               	rrf	___wmul@multiplier+1,f
  4294  0200  0CF0               	rrf	___wmul@multiplier,f
  4295  0201  3EFF               	addlw	-1
  4296  0202  1D03               	skipz
  4297  0203  29FE               	goto	u855
  4298  0204                     l1449:
  4299  0204  0870               	movf	___wmul@multiplier,w
  4300  0205  0471               	iorwf	___wmul@multiplier+1,w
  4301  0206  1D03               	btfss	3,2
  4302  0207  2A09               	goto	u861
  4303  0208  2A0A               	goto	u860
  4304  0209                     u861:
  4305  0209  29EC               	goto	l1443
  4306  020A                     u860:
  4307  020A                     l1451:
  4308  020A  0875               	movf	___wmul@product+1,w
  4309  020B  00F1               	movwf	?___wmul+1
  4310  020C  0874               	movf	___wmul@product,w
  4311  020D  00F0               	movwf	?___wmul
  4312  020E                     l270:
  4313  020E  0008               	return
  4314  020F                     __end_of___wmul:
  4315  0002                     
  4316                           	psect	functab
  4317  0003                     __pfunctab:
  4318  0003                     __fptable:
  4319  0003                     fptable:
  4320  0003  00FF               	movwf	(btemp+1)& (0+127)
  4321  0004  3000               	movlw	high fptable
  4322  0005  008A               	movwf	10
  4323  0006  087F               	movf	(btemp+1)& (0+127),w
  4324  0007  0782               	addwf	2,f
  4325  0008                     fpbase:
  4326  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4327  0009                     fp__putch:
  4328  0009  120A  118A  2934   	ljmp	_putch
  4329  000C                     __end_of__fptable:
  4330  007E                     btemp	set	126	;btemp
  4331  007E                     wtemp0	set	126
  4332                           
  4333                           	psect	config
  4334                           
  4335                           ;Config register CONFIG1 @ 0x2007
  4336                           ;	Oscillator Selection bits
  4337                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4338                           ;	Watchdog Timer Enable bit
  4339                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4340                           ;	Power-up Timer Enable bit
  4341                           ;	PWRTE = OFF, PWRT disabled
  4342                           ;	RE3/MCLR pin function select bit
  4343                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4344                           ;	Code Protection bit
  4345                           ;	CP = OFF, Program memory code protection is disabled
  4346                           ;	Data Code Protection bit
  4347                           ;	CPD = OFF, Data memory code protection is disabled
  4348                           ;	Brown Out Reset Selection bits
  4349                           ;	BOREN = OFF, BOR disabled
  4350                           ;	Internal External Switchover bit
  4351                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4352                           ;	Fail-Safe Clock Monitor Enabled bit
  4353                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4354                           ;	Low Voltage Programming Enable bit
  4355                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4356                           ;	In-Circuit Debugger Mode bit
  4357                           ;	DEBUG = 0x1, unprogrammed default
  4358  2007                     	org	8199
  4359  2007  20D4               	dw	8404
  4360                           
  4361                           ;Config register CONFIG2 @ 0x2008
  4362                           ;	Brown-out Reset Selection bit
  4363                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4364                           ;	Flash Program Memory Self Write Enable bits
  4365                           ;	WRT = OFF, Write protection off
  4366  2008                     	org	8200
  4367  2008  3FFF               	dw	16383

Data Sizes:
    Strings     189
    Constant    10
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      80
    BANK1            80      0       5
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[31]), STR_11(CODE[35]), 
		 -> STR_10(CODE[35]), STR_9(CODE[37]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[21]), STR_4(CODE[2]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[21]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_12(CODE[31]), STR_11(CODE[35]), STR_10(CODE[35]), STR_9(CODE[37]), 
		 -> STR_8(CODE[2]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[21]), 
		 -> STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S983__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S983__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 


Critical Paths under _main in COMMON

    _setup->_spiInit
    _division->___awdiv
    _concatenado->_atoi
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_ingreso
    _msj2->_printf
    _msj1->_printf
    _ingreso->_concatenado
    _printf->__doprnt
    _concatenado->_sprintf
    _sprintf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13535
                                             72 BANK0      1     1      0
                            _ingreso
                               _msj1
                               _msj2
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                        _configUSART
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _msj2                                                 2     2      0    3621
                                             19 BANK0      2     2      0
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (1) _msj1                                                 2     2      0    3621
                                             19 BANK0      2     2      0
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1248
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ingreso                                              5     5      0    5911
                                             67 BANK0      5     5      0
                        _concatenado
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2373
                                             11 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _concatenado                                         47    43      4    3538
                                             20 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2251
                                             11 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    1868
                                              0 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ingreso
     _concatenado
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _msj1
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _msj2
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _configUSART
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      63       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       5       7        6.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      63      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 13:08:27 2021

                      pc 0002              _SSPSTATbits 0094                       l90 0134  
                     l93 013C                       l87 01E9                       l96 03B1  
                     _V1 006F                       _V2 00A4                       l99 057A  
           ___awdiv@sign 0076                       _cc 006A                       _dd 0069  
                     _uu 00A3                       fsr 0004      ___wmul@multiplicand 0072  
                    l102 05FB                      l121 0636                      l113 0619  
                    l106 0602                      l131 02AE                      l151 012D  
                    l128 06B7                      l154 0133                      l147 0168  
                    l148 016D                      l421 047E                      l165 0145  
                    l157 012C                      l270 020E                      l182 01A5  
                    l434 034B                      l268 01F6                      l540 02F2  
                    l550 0271                      l731 04F9                      l736 0157  
                    l745 0188                      l790 01C6                      l783 07EB  
                    l799 0237                      u700 02B7                      u701 02B6  
                    u720 02C9                      u800 025A                      u721 02C8  
                    u801 0259                      u715 02BB                      u740 02DA  
                    u820 026D                      u900 06CA                      u741 02D9  
                    u821 026C                      u805 0256                      u901 06C9  
                    u830 01F0                      u910 0718                      u831 01EF  
                    u735 02CA                      u815 0261                      u911 0717  
                    u760 02EE                      u920 073E                      u761 02ED  
                    u745 02D6                      u921 073D                      u770 023E  
                    u690 013A                      u930 0749                      u755 02E2  
                    u771 023D                      u691 0139                      u931 0748  
                    u860 020A                      u940 074F                      u861 0209  
                    u845 01F7                      u941 074E                      u925 073A  
                    u870 014E                      u790 0250                      u950 0757  
                    u855 01FE                      u871 014D                      u791 024F  
                    u951 0756                      u880 0154                      u960 07AF  
                    u881 0153                      u785 0242                      u961 07AE  
                    u970 07D5                      u890 06C2                      u971 07D4  
                    u891 06C1                      u980 07E9                      u981 07E8  
                    u990 0221                      u991 0220                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             concatenado@a 0034  
           concatenado@b 0036             concatenado@c 0061                     l1401 02C1  
                   l1411 02E1                     l1403 02C5                     l1413 02E8  
                   l1405 02C9                     l1421 023E                     l1407 02DA  
                   l1415 02EE                     l1431 025A                     l1423 0241  
                   l1511 0764                     l1503 073F                     l1441 01EA  
                   l1409 02E0                     l1433 0260                     l1425 0248  
                   l1521 07AF                     l1513 076C                     l1505 0749  
                   l1601 0422                     l1451 020A                     l1443 01EC  
                   l1435 0267                     l1427 024C                     l1419 0238  
                   l1523 07BC                     l1507 074F                     l1515 0772  
                   l1531 07E9                     l1611 0433                     l1603 0424  
                   l1445 01F0                     l1461 0154                     l1429 0250  
                   l1437 026D                     l1525 07C4                     l1517 0779  
                   l1509 0757                     l1541 01AD                     l1621 044B  
                   l1613 0439                     l1605 0428                     l1701 019F  
                   l1447 01FD                     l1463 0156                     l1455 0147  
                   l1519 07A7                     l1527 07CA                     l1471 06C2  
                   l1543 01AE                     l1551 0210                     l1623 045C  
                   l1615 043C                     l1631 0470                     l1607 042D  
                   l1711 034D                     l1703 01A0                     l1449 0204  
                   l1457 0148                     l1561 0480                     l1393 02AF  
                   l1473 06CA                     l1529 07D5                     l1545 01B2  
                   l1553 0215                     l1721 0172                     l1633 0475  
                   l1625 0462                     l1617 0443                     l1609 0431  
                   l1641 02F4                     l1713 03A5                     l1801 057B  
                   l1705 01A1                     l1459 014E                     l1571 0499  
                   l1563 0481                     l1395 02B1                     l1387 0134  
                   l1491 071C                     l1483 06E9                     l1475 06D9  
                   l1467 06BB                     l1547 01C0                     l1539 01A9  
                   l1555 0219                     l1731 0292                     l1723 0176  
                   l1635 047A                     l1627 0463                     l1619 0447  
                   l1651 0308                     l1643 02F8                     l1715 03A9  
                   l1811 05A3                     l1803 0583                     l1707 01A4  
                   l1573 04A1                     l1565 0485                     l1397 02B7  
                   l1389 013A                     l1493 0721                     l1485 0706  
                   l1477 06E1                     l1469 06BC                     l1557 0222  
                   l1733 029E                     l1725 017A                     l1629 046A  
                   l1661 0320                     l1653 030E                     l1645 02FD  
                   l1717 03AD                     l1821 05C9                     l1813 05AD  
                   l1805 058D                     l1741 01C7                     l1591 04F5  
                   l1583 04D8                     l1575 04AA                     l1567 048E  
                   l1399 02BA                     l1487 0714                     l1911 06FB  
                   l1479 06E8                     l1559 022A                     l1735 02AA  
                   l1719 0171                     l1671 0342                     l1663 032A  
                   l1655 0311                     l1647 02FF                     l1639 02F3  
                   l1831 05EB                     l1823 05CD                     l1815 05B1  
                   l1807 0593                     l1751 01E1                     l1743 01CB  
                   l1585 04E4                     l1577 04B2                     l1569 0496  
                   l1489 0718                     l1729 0272                     l1841 0613  
                   l1673 0347                     l1665 0330                     l1657 0318  
                   l1649 0303                     l1833 05F5                     l1825 05D7  
                   l1817 05BB                     l1809 059D                     l1681 0162  
                   l1753 01E2                     l1745 01D4                     l1761 013D  
                   l1587 04E9                     l1579 04B7                     l1499 0723  
                   l1851 063C                     l1843 061F                     l1835 05FC  
                   l1595 0418                     l1667 0337                     l1659 031C  
                   l1771 050C                     l1827 05DB                     l1819 05BF  
                   l1691 0196                     l1683 0164                     l1755 01E3  
                   l1747 01D5                     l1739 012D                     l1763 0142  
                   l1861 0697                     l1853 064B                     l1837 0608  
                   l1597 0419                     l1669 033D                     l1781 0530  
                   l1773 0512                     l1829 05E5                     l1693 0199  
                   l1685 0167                     l1677 0159                     l1757 01E4  
                   l1749 01DE                     l1863 06A5                     l1847 062A  
                   l1839 060D                     l1599 041D                     l1791 0556  
                   l1783 053A                     l1775 051C                     l1767 04FA  
                   l1695 019A                     l1687 0189                     l1679 0160  
                   l1759 0128                     l1871 03C2                     l1857 0651  
                   l1849 0630                     l1793 055A                     l1785 053E  
                   l1777 0522                     l1769 0502                     l1697 019B  
                   l1689 0190                     l1881 03FC                     l1873 03C8  
                   l1865 03B2                     l1859 0657                     l1795 0564  
                   l1787 0548                     l1779 052C                     l1699 019E  
                   l1883 03FF                     l1875 03D2                     l1867 03B7  
                   l1797 056A                     l1789 054C                     l1885 0404  
                   l1877 03EC                     l1869 03BA                     l1799 0574  
                   l1887 0409                     l1879 03F4                     l1889 040E  
                   STR_1 00A6                     STR_2 00D0                     STR_3 00D3  
                   STR_4 003F                     STR_5 00BB                     STR_6 00D0  
                   STR_7 00D3                     STR_8 003F                     STR_9 001C  
                   u1000 0237                     u1001 0236                     u1010 048E  
                   u1011 048D                     u1020 0496                     u1021 0495  
                   u1030 04A1                     u1110 044B                     u1031 04A0  
                   u1111 044A                     u1040 04B2                     u1041 04B1  
                   u1105 043D                     u1050 04E4                     u1130 045C  
                   u1210 0320                     u1051 04E3                     u1131 045B  
                   u1211 031F                     u1060 04E9                     u1300 061F  
                   u1220 032A                     u1061 04E8                     u1301 061E  
                   u1125 044C                     u1221 0329                     u1205 0312  
                   u1310 062A                     u1150 0470                     u1070 041D  
                   u1311 0629                     u1151 046F                     u1135 0458  
                   u1071 041C                     u1320 0630                     u1160 0475  
                   u1080 0428                     u1240 033D                     u1321 062F  
                   u1161 0474                     u1145 0464                     u1081 0427  
                   u1241 033C                     u1225 0326                     u1330 063C  
                   u1090 0439                     u1250 0342                     u1170 02F8  
                   u1331 063B                     u1091 0438                     u1251 0341  
                   u1235 0331                     u1171 02F7                     u1340 064B  
                   u1180 0303                     u1260 0160                     u1341 064A  
                   u1181 0302                     u1261 015F                     u1350 0651  
                   u1190 030E                     u1270 0133                     u1351 0650  
                   u1191 030D                     u1271 0132                     u1407 03F8  
                   u1360 0657                     u1280 0608                     u1361 0656  
                   u1281 0607                     u1417 0589                     u1290 0613  
                   u1291 0612                     u1507 0518                     u1427 0599  
                   u1517 0528                     u1437 05A9                     u1527 0536  
                   u1447 05B7                     u1537 0544                     u1457 05C5  
                   u1377 03BE                     u1547 0552                     u1467 05D3  
                   u1387 03D6                     u1557 0560                     u1477 05E1  
                   u1397 03F0                     u1567 0570                     u1487 05F1  
                   u1577 069F                     u1497 0508                     _RCIF 0065  
                   _TXIF 0064                     _atoi 047F                     _main 03B2  
                   _msj1 04FA                     _msj2 057B                     _temp 00A2  
                   btemp 007E                     start 0000                    ?_atoi 0076  
                  ?_main 0070                    ?_msj1 0070                    ?_msj2 0070  
        __end_of___awdiv 047F                    STR_10 0041                    STR_11 0064  
                  STR_12 0087                    STR_13 00D6                    STR_14 00D6  
        __end_of___awmod 034C                    _ANSEL 0188          ___awdiv@divisor 0070  
        __end_of___lwdiv 02F3          __end_of___lwmod 0272          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008          __end_of__doprnt 07EC  
                  _TRISB 0086                    _TXREG 0019          __end_of_dpowers 001C  
        __end_of_ingreso 06B8          __end_of_isdigit 0158                    atoi@a 007B  
                  _setup 01C7                    atoi@s 007D                    _putch 0134  
                  fpbase 0008                    pclath 000A          __end_of_spiInit 016E  
        __end_of_spiRead 0146                    status 0003                    wtemp0 007E  
        __end_of_sprintf 01C7          __initialization 07EC             __end_of_atoi 04FA  
           __end_of_main 0418             __end_of_msj1 057B             __end_of_msj2 05FC  
                 ??_atoi 0078                   ??_main 0068                   ??_msj1 0033  
                 ??_msj2 0033         ___awdiv@dividend 0072                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of__fptable 000C  
   __size_of_configUSART 001D     __size_of_concatenado 003D         __end_of_division 03B2  
                 ___wmul 01EA                ??___awdiv 0074                   _decena 006D  
              ??___awmod 0074                ??___lwdiv 0074                ??___lwmod 007C  
              ??__doprnt 0022         ___awdiv@quotient 0077          ___awmod@divisor 0070  
           __doprnt@flag 0025          ___awmod@counter 0075                   _printf 016E  
                 _unidad 006C             __doprnt@prec 0026                   _strcat 020F  
                 fptable 0003                ??_ingreso 0063                   fptotal 0002  
              ??_isdigit 0070         __end_of_spiWrite 012D                ??_spiInit 0073  
              ??_spiRead 0070                ??_sprintf 002E  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 01EA            __end_of_putch 013D  
          division@valor 007C               __doprnt@ap 0021               __doprnt@pb 002A  
                ??_setup 0074                  ??_putch 0071               __pbssBANK0 0069  
             __pbssBANK1 00A0               __pmaintext 03B2                  ?___wmul 0070  
__size_of_spiReceiveWait 0007                  ?_printf 002B                  ?_strcat 0070  
                _SSPSTAT 0094               __stringtab 000C                ?_division 0070  
              ?_spiWrite 0070                  ___awdiv 0418                  ___awmod 02F3  
        __size_of___wmul 0025                  ___lwdiv 02AF                  ___lwmod 0238  
                __doprnt 06B8                  _centena 006E                  __ptext1 0127  
                __ptext2 013D                  __ptext3 012D                  __ptext4 01C7  
                __ptext5 0158                  __ptext6 0189                  __ptext7 057B  
                __ptext8 04FA                  __ptext9 034C          __size_of_printf 001B  
        __size_of_strcat 0029                  _dpowers 0012                  _ingreso 05FC  
                _isdigit 0146         ___awmod@dividend 0072                  _residuo 006B  
                _spiInit 0158                  _spiRead 013D                  _sprintf 01A6  
   end_of_initialization 07FC               ??_division 0079                _RCSTAbits 0018  
                printf@f 0030               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070            ??_configUSART 0070            ??_concatenado 0038  
              _TXSTAbits 0098         concatenado@BFFR1 004D         concatenado@BFFR2 0039  
         _spiReceiveWait 012D           __end_of___wmul 020F              _BAUDCTLbits 0187  
         __end_of_printf 0189           __end_of_strcat 0238      start_initialization 07EC  
 __end_of_spiReceiveWait 0134      __end_of_configUSART 01A6                 ??___wmul 0074  
    __end_of_concatenado 02AF              __doprnt@val 0027                 ??_printf 002D  
               ??_strcat 0071                ___latbits 0002            __pcstackBANK0 0020  
      __size_of__fptable 0009                __doprnt@c 0029                __doprnt@f 0020  
      __size_of_division 0066         ___lwdiv@dividend 0072          ?_spiReceiveWait 0070  
              __pfunctab 0003                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lwdiv 0070                 ?___lwmod 0078                 ?__doprnt 0020  
      __size_of_spiWrite 0006                __pstrings 000C                 ?_ingreso 0070  
               ?_isdigit 0070                 ?_spiInit 0070                 ?_spiRead 0070  
       ___lwdiv@quotient 0075                 ?_sprintf 002B           __size_of_setup 0023  
         __size_of_putch 0009     spiInit@sTransmitEdge 0072           ___wmul@product 0074  
            _configUSART 0189              _concatenado 0272       spiInit@sDataSample 0070  
               _PIR1bits 000C              __stringbase 0011        ___wmul@multiplier 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of___lwdiv 0044  
       __size_of___lwmod 003A         __size_of__doprnt 0134       __end_of__stringtab 0012  
            _isdigit$981 0070                 __fptable 0003               strcat@from 0070  
       __size_of_ingreso 00BC         __size_of_isdigit 0012          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 02F3                 __ptext11 0418  
               __ptext20 02AF                 __ptext12 05FC                 __ptext21 047F  
               __ptext13 016E                 __ptext22 0146                 __ptext14 0272  
               __ptext23 01EA                 __ptext15 020F                 __ptext16 01A6  
               __ptext17 06B8                 __ptext18 0134                 __ptext19 0238  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _division 034C  
               _completo 00A0         __size_of_sprintf 0021            __size_of_atoi 007B  
          __size_of_main 0066            __size_of_msj1 0081            __size_of_msj2 0081  
               _spiWrite 0127             spiInit@sType 0073                 atoi@sign 007A  
               fp__putch 0009        spiInit@sClockIdle 0071                putch@dato 0070  
             _INTCONbits 000B                 isdigit@c 0071                sprintf@ap 0030  
              sprintf@pb 0032                sprintf@wh 0031         ___lwmod@dividend 007A  
       ??_spiReceiveWait 0070                stringcode 000C               _OSCCONbits 008F  
               printf@ap 002F                 printf@pb 0031                 sprintf@f 002B  
               strcat@cp 0073                 strcat@to 0072          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 000C                 stringtab 000C  
           ?_configUSART 0070             ?_concatenado 0034  
