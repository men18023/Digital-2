

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 01 15:50:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	functab,global,class=ENTRY,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  000C                     __pstrings:
   387  000C                     stringtab:
   388  000C                     __stringtab:
   389  000C                     stringcode:	
   390                           ;	String table - string pointers are 1 byte each
   391                           
   392  000C                     stringdir:
   393  000C  3000               	movlw	high stringdir
   394  000D  008A               	movwf	10
   395  000E  0804               	movf	4,w
   396  000F  0A84               	incf	4,f
   397  0010  0782               	addwf	2,f
   398  0011                     __stringbase:
   399  0011  3400               	retlw	0
   400  0012                     __end_of__stringtab:
   401  0012                     _dpowers:
   402  0012  3401               	retlw	1
   403  0013  3400               	retlw	0
   404  0014  340A               	retlw	10
   405  0015  3400               	retlw	0
   406  0016  3464               	retlw	100
   407  0017  3400               	retlw	0
   408  0018  34E8               	retlw	232
   409  0019  3403               	retlw	3
   410  001A  3410               	retlw	16
   411  001B  3427               	retlw	39
   412  001C                     __end_of_dpowers:
   413  000C                     _PIR1bits	set	12
   414  000B                     _INTCONbits	set	11
   415  0018                     _RCSTAbits	set	24
   416  0013                     _SSPBUF	set	19
   417  0014                     _SSPCON	set	20
   418  0009                     _PORTE	set	9
   419  0007                     _PORTC	set	7
   420  0006                     _PORTB	set	6
   421  0005                     _PORTA	set	5
   422  0008                     _PORTD	set	8
   423  0019                     _TXREG	set	25
   424  001A                     _RCREG	set	26
   425  0007                     _PORTCbits	set	7
   426  0064                     _TXIF	set	100
   427  0065                     _RCIF	set	101
   428  009A                     _SPBRGH	set	154
   429  0099                     _SPBRG	set	153
   430  0098                     _TXSTAbits	set	152
   431  0094                     _SSPSTATbits	set	148
   432  0094                     _SSPSTAT	set	148
   433  008F                     _OSCCONbits	set	143
   434  0087                     _TRISCbits	set	135
   435  0088                     _TRISD	set	136
   436  0086                     _TRISB	set	134
   437  043B                     _TRISC3	set	1083
   438  043D                     _TRISC5	set	1085
   439  0187                     _BAUDCTLbits	set	391
   440  0189                     _ANSELH	set	393
   441  0188                     _ANSEL	set	392
   442  001C                     STR_14:
   443  001C  3445               	retlw	69	;'E'
   444  001D  346C               	retlw	108	;'l'
   445  001E  3469               	retlw	105	;'i'
   446  001F  346A               	retlw	106	;'j'
   447  0020  3461               	retlw	97	;'a'
   448  0021  3420               	retlw	32	;' '
   449  0022  3475               	retlw	117	;'u'
   450  0023  346E               	retlw	110	;'n'
   451  0024  3420               	retlw	32	;' '
   452  0025  3476               	retlw	118	;'v'
   453  0026  3461               	retlw	97	;'a'
   454  0027  346C               	retlw	108	;'l'
   455  0028  346F               	retlw	111	;'o'
   456  0029  3472               	retlw	114	;'r'
   457  002A  3420               	retlw	32	;' '
   458  002B  346D               	retlw	109	;'m'
   459  002C  3465               	retlw	101	;'e'
   460  002D  346E               	retlw	110	;'n'
   461  002E  346F               	retlw	111	;'o'
   462  002F  3472               	retlw	114	;'r'
   463  0030  3420               	retlw	32	;' '
   464  0031  346F               	retlw	111	;'o'
   465  0032  3420               	retlw	32	;' '
   466  0033  3469               	retlw	105	;'i'
   467  0034  3467               	retlw	103	;'g'
   468  0035  3475               	retlw	117	;'u'
   469  0036  3461               	retlw	97	;'a'
   470  0037  346C               	retlw	108	;'l'
   471  0038  3420               	retlw	32	;' '
   472  0039  3461               	retlw	97	;'a'
   473  003A  3420               	retlw	32	;' '
   474  003B  3435               	retlw	53	;'5'
   475  003C  340D               	retlw	13
   476  003D  3400               	retlw	0
   477  003E                     STR_1:
   478  003E  3449               	retlw	73	;'I'
   479  003F  346E               	retlw	110	;'n'
   480  0040  3467               	retlw	103	;'g'
   481  0041  3472               	retlw	114	;'r'
   482  0042  3465               	retlw	101	;'e'
   483  0043  3473               	retlw	115	;'s'
   484  0044  3465               	retlw	101	;'e'
   485  0045  3420               	retlw	32	;' '
   486  0046  3465               	retlw	101	;'e'
   487  0047  346C               	retlw	108	;'l'
   488  0048  3420               	retlw	32	;' '
   489  0049  3476               	retlw	118	;'v'
   490  004A  3461               	retlw	97	;'a'
   491  004B  346C               	retlw	108	;'l'
   492  004C  346F               	retlw	111	;'o'
   493  004D  3472               	retlw	114	;'r'
   494  004E  3420               	retlw	32	;' '
   495  004F  3464               	retlw	100	;'d'
   496  0050  3465               	retlw	101	;'e'
   497  0051  3420               	retlw	32	;' '
   498  0052  3463               	retlw	99	;'c'
   499  0053  3465               	retlw	101	;'e'
   500  0054  346E               	retlw	110	;'n'
   501  0055  3474               	retlw	116	;'t'
   502  0056  3465               	retlw	101	;'e'
   503  0057  346E               	retlw	110	;'n'
   504  0058  3461               	retlw	97	;'a'
   505  0059  340D               	retlw	13
   506  005A  3400               	retlw	0
   507  005B                     STR_13:
   508  005B  3445               	retlw	69	;'E'
   509  005C  346C               	retlw	108	;'l'
   510  005D  3469               	retlw	105	;'i'
   511  005E  346A               	retlw	106	;'j'
   512  005F  3461               	retlw	97	;'a'
   513  0060  3420               	retlw	32	;' '
   514  0061  3475               	retlw	117	;'u'
   515  0062  346E               	retlw	110	;'n'
   516  0063  3420               	retlw	32	;' '
   517  0064  3476               	retlw	118	;'v'
   518  0065  3461               	retlw	97	;'a'
   519  0066  346C               	retlw	108	;'l'
   520  0067  346F               	retlw	111	;'o'
   521  0068  3472               	retlw	114	;'r'
   522  0069  3420               	retlw	32	;' '
   523  006A  3465               	retlw	101	;'e'
   524  006B  346E               	retlw	110	;'n'
   525  006C  3474               	retlw	116	;'t'
   526  006D  3472               	retlw	114	;'r'
   527  006E  3465               	retlw	101	;'e'
   528  006F  3420               	retlw	32	;' '
   529  0070  3430               	retlw	48	;'0'
   530  0071  3420               	retlw	32	;' '
   531  0072  3479               	retlw	121	;'y'
   532  0073  3420               	retlw	32	;' '
   533  0074  3432               	retlw	50	;'2'
   534  0075  340D               	retlw	13
   535  0076  3400               	retlw	0
   536  0077                     STR_2:
   537  0077  3449               	retlw	73	;'I'
   538  0078  346E               	retlw	110	;'n'
   539  0079  3467               	retlw	103	;'g'
   540  007A  3472               	retlw	114	;'r'
   541  007B  3465               	retlw	101	;'e'
   542  007C  3473               	retlw	115	;'s'
   543  007D  3465               	retlw	101	;'e'
   544  007E  3420               	retlw	32	;' '
   545  007F  3465               	retlw	101	;'e'
   546  0080  346C               	retlw	108	;'l'
   547  0081  3420               	retlw	32	;' '
   548  0082  3476               	retlw	118	;'v'
   549  0083  3461               	retlw	97	;'a'
   550  0084  346C               	retlw	108	;'l'
   551  0085  346F               	retlw	111	;'o'
   552  0086  3472               	retlw	114	;'r'
   553  0087  3420               	retlw	32	;' '
   554  0088  3464               	retlw	100	;'d'
   555  0089  3465               	retlw	101	;'e'
   556  008A  3420               	retlw	32	;' '
   557  008B  3464               	retlw	100	;'d'
   558  008C  3465               	retlw	101	;'e'
   559  008D  3463               	retlw	99	;'c'
   560  008E  3465               	retlw	101	;'e'
   561  008F  346E               	retlw	110	;'n'
   562  0090  3461               	retlw	97	;'a'
   563  0091  340D               	retlw	13
   564  0092  3400               	retlw	0
   565  0093                     STR_3:
   566  0093  3449               	retlw	73	;'I'
   567  0094  346E               	retlw	110	;'n'
   568  0095  3467               	retlw	103	;'g'
   569  0096  3472               	retlw	114	;'r'
   570  0097  3465               	retlw	101	;'e'
   571  0098  3473               	retlw	115	;'s'
   572  0099  3465               	retlw	101	;'e'
   573  009A  3420               	retlw	32	;' '
   574  009B  3465               	retlw	101	;'e'
   575  009C  346C               	retlw	108	;'l'
   576  009D  3420               	retlw	32	;' '
   577  009E  3476               	retlw	118	;'v'
   578  009F  3461               	retlw	97	;'a'
   579  00A0  346C               	retlw	108	;'l'
   580  00A1  346F               	retlw	111	;'o'
   581  00A2  3472               	retlw	114	;'r'
   582  00A3  3420               	retlw	32	;' '
   583  00A4  3464               	retlw	100	;'d'
   584  00A5  3465               	retlw	101	;'e'
   585  00A6  3420               	retlw	32	;' '
   586  00A7  3475               	retlw	117	;'u'
   587  00A8  346E               	retlw	110	;'n'
   588  00A9  3469               	retlw	105	;'i'
   589  00AA  3464               	retlw	100	;'d'
   590  00AB  3461               	retlw	97	;'a'
   591  00AC  3464               	retlw	100	;'d'
   592  00AD  340D               	retlw	13
   593  00AE  3400               	retlw	0
   594  00AF                     STR_7:
   595  00AF  340D               	retlw	13
   596  00B0  3420               	retlw	32	;' '
   597  00B1  3456               	retlw	86	;'V'
   598  00B2  3431               	retlw	49	;'1'
   599  00B3  3420               	retlw	32	;' '
   600  00B4  343D               	retlw	61	;'='
   601  00B5  3420               	retlw	32	;' '
   602  00B6  3400               	retlw	0
   603  00B7                     STR_10:
   604  00B7  340D               	retlw	13
   605  00B8  3456               	retlw	86	;'V'
   606  00B9  3432               	retlw	50	;'2'
   607  00BA  3420               	retlw	32	;' '
   608  00BB  343D               	retlw	61	;'='
   609  00BC  3420               	retlw	32	;' '
   610  00BD  3400               	retlw	0
   611  00BE                     STR_9:
   612  00BE  340D               	retlw	13
   613  00BF  340D               	retlw	13
   614  00C0  3400               	retlw	0
   615  00C1                     STR_4:
   616  00C1  3425               	retlw	37	;'%'
   617  00C2  3464               	retlw	100	;'d'
   618  00C3  3400               	retlw	0
   619  00C4                     STR_8:
   620  00C4  342E               	retlw	46	;'.'
   621  00C5  3400               	retlw	0
   622  00BE                     
   623                           	psect	cinit
   624  07F3                     start_initialization:	
   625                           ; #config settings
   626                           
   627  07F3                     __initialization:
   628                           
   629                           ; Clear objects allocated to BANK0
   630  07F3  1383               	bcf	3,7	;select IRP bank0
   631  07F4  3020               	movlw	low __pbssBANK0
   632  07F5  0084               	movwf	4
   633  07F6  3048               	movlw	low (__pbssBANK0+40)
   634  07F7  120A  118A  2130  120A  118A  	fcall	clear_ram0
   635  07FC                     end_of_initialization:	
   636                           ;End of C runtime variable initialization code
   637                           
   638  07FC                     __end_of__initialization:
   639  07FC  0183               	clrf	3
   640  07FD  120A  118A  2E69   	ljmp	_main	;jump to C main() function
   641                           
   642                           	psect	bssBANK0
   643  0020                     __pbssBANK0:
   644  0020                     _variable:
   645  0020                     	ds	2
   646  0022                     _uu:
   647  0022                     	ds	1
   648  0023                     _dd:
   649  0023                     	ds	1
   650  0024                     _cc:
   651  0024                     	ds	1
   652  0025                     _unidad:
   653  0025                     	ds	1
   654  0026                     _decena:
   655  0026                     	ds	1
   656  0027                     _centena:
   657  0027                     	ds	1
   658  0028                     _V2:
   659  0028                     	ds	1
   660  0029                     _V1:
   661  0029                     	ds	1
   662  002A                     _BFFR3:
   663  002A                     	ds	10
   664  0034                     _BFFR2:
   665  0034                     	ds	10
   666  003E                     _BFFR1:
   667  003E                     	ds	10
   668                           
   669                           	psect	clrtext
   670  0130                     clear_ram0:	
   671                           ;	Called with FSR containing the base address, and
   672                           ;	W with the last address+1
   673                           
   674  0130  0064               	clrwdt	;clear the watchdog before getting into this loop
   675  0131                     clrloop0:
   676  0131  0180               	clrf	0	;clear RAM location pointed to by FSR
   677  0132  0A84               	incf	4,f	;increment pointer
   678  0133  0604               	xorwf	4,w	;XOR with final address
   679  0134  1903               	btfsc	3,2	;have we reached the end yet?
   680  0135  3400               	retlw	0	;all done for this memory range, return
   681  0136  0604               	xorwf	4,w	;XOR again to restore value
   682  0137  2931               	goto	clrloop0	;do the next byte
   683                           
   684                           	psect	cstackCOMMON
   685  0070                     __pcstackCOMMON:
   686  0070                     ?_isdigit:
   687  0070                     ?_setup:	
   688                           ; 1 bit 
   689                           
   690  0070                     ?_spiWrite:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_spiWrite:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_spiRead:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_spiRead:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_division:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_msj1:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_msj2:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_checkC:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_checkD:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_checkU:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_strcat:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_spiInit:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ??_isdigit:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_main:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_putch:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_spiReceiveWait:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??_spiReceiveWait:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_printf:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?___wmul:	
   745                           ; 2 bytes @ 0x0
   746                           
   747  0070                     ?___awdiv:	
   748                           ; 2 bytes @ 0x0
   749                           
   750  0070                     ?___awmod:	
   751                           ; 2 bytes @ 0x0
   752                           
   753  0070                     ?___lwdiv:	
   754                           ; 2 bytes @ 0x0
   755                           
   756  0070                     putch@dato:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0070                     spiInit@sDataSample:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     spiWrite@dat:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     _isdigit$1014:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     strcat@from:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ___wmul@multiplier:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ___awdiv@divisor:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0070                     ___awmod@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0070                     ___lwdiv@divisor:	
   781                           ; 2 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0070                     	ds	1
   786  0071                     ??_strcat:
   787  0071                     ??_putch:	
   788                           ; 1 bytes @ 0x1
   789                           
   790  0071                     spiInit@sClockIdle:	
   791                           ; 1 bytes @ 0x1
   792                           
   793  0071                     isdigit@c:	
   794                           ; 1 bytes @ 0x1
   795                           
   796                           
   797                           ; 1 bytes @ 0x1
   798  0071                     	ds	1
   799  0072                     spiInit@sTransmitEdge:
   800  0072                     strcat@to:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     ___wmul@multiplicand:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0072                     ___awdiv@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0072                     ___awmod@dividend:	
   810                           ; 2 bytes @ 0x2
   811                           
   812  0072                     ___lwdiv@dividend:	
   813                           ; 2 bytes @ 0x2
   814                           
   815                           
   816                           ; 2 bytes @ 0x2
   817  0072                     	ds	1
   818  0073                     ??_spiInit:
   819  0073                     spiInit@sType:	
   820                           ; 1 bytes @ 0x3
   821                           
   822  0073                     strcat@cp:	
   823                           ; 1 bytes @ 0x3
   824                           
   825                           
   826                           ; 1 bytes @ 0x3
   827  0073                     	ds	1
   828  0074                     ??_setup:
   829  0074                     ??___wmul:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0074                     ??___awdiv:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0074                     ??___awmod:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0074                     ??___lwdiv:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0074                     ___wmul@product:	
   842                           ; 1 bytes @ 0x4
   843                           
   844                           
   845                           ; 2 bytes @ 0x4
   846  0074                     	ds	1
   847  0075                     ___awdiv@counter:
   848  0075                     ___awmod@counter:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0075                     ___lwdiv@quotient:	
   852                           ; 1 bytes @ 0x5
   853                           
   854                           
   855                           ; 2 bytes @ 0x5
   856  0075                     	ds	1
   857  0076                     ?_atoi:
   858  0076                     ___awdiv@sign:	
   859                           ; 2 bytes @ 0x6
   860                           
   861  0076                     ___awmod@sign:	
   862                           ; 1 bytes @ 0x6
   863                           
   864                           
   865                           ; 1 bytes @ 0x6
   866  0076                     	ds	1
   867  0077                     ___lwdiv@counter:
   868  0077                     ___awdiv@quotient:	
   869                           ; 1 bytes @ 0x7
   870                           
   871                           
   872                           ; 2 bytes @ 0x7
   873  0077                     	ds	1
   874  0078                     ??_atoi:
   875  0078                     ?___lwmod:	
   876                           ; 1 bytes @ 0x8
   877                           
   878  0078                     ___lwmod@divisor:	
   879                           ; 2 bytes @ 0x8
   880                           
   881                           
   882                           ; 2 bytes @ 0x8
   883  0078                     	ds	1
   884  0079                     ??_division:
   885                           
   886                           ; 1 bytes @ 0x9
   887  0079                     	ds	1
   888  007A                     atoi@sign:
   889  007A                     ___lwmod@dividend:	
   890                           ; 1 bytes @ 0xA
   891                           
   892                           
   893                           ; 2 bytes @ 0xA
   894  007A                     	ds	1
   895  007B                     atoi@a:
   896                           
   897                           ; 2 bytes @ 0xB
   898  007B                     	ds	1
   899  007C                     ??___lwmod:
   900  007C                     division@valor:	
   901                           ; 1 bytes @ 0xC
   902                           
   903                           
   904                           ; 1 bytes @ 0xC
   905  007C                     	ds	1
   906  007D                     ___lwmod@counter:
   907  007D                     atoi@s:	
   908                           ; 1 bytes @ 0xD
   909                           
   910                           
   911                           ; 1 bytes @ 0xD
   912  007D                     	ds	1
   913                           
   914                           	psect	cstackBANK0
   915  0048                     __pcstackBANK0:
   916  0048                     ?__doprnt:
   917  0048                     __doprnt@f:	
   918                           ; 2 bytes @ 0x0
   919                           
   920                           
   921                           ; 1 bytes @ 0x0
   922  0048                     	ds	1
   923  0049                     __doprnt@ap:
   924                           
   925                           ; 1 bytes @ 0x1
   926  0049                     	ds	1
   927  004A                     ??__doprnt:
   928                           
   929                           ; 1 bytes @ 0x2
   930  004A                     	ds	3
   931  004D                     __doprnt@flag:
   932                           
   933                           ; 1 bytes @ 0x5
   934  004D                     	ds	1
   935  004E                     __doprnt@prec:
   936                           
   937                           ; 1 bytes @ 0x6
   938  004E                     	ds	1
   939  004F                     __doprnt@val:
   940                           
   941                           ; 2 bytes @ 0x7
   942  004F                     	ds	2
   943  0051                     __doprnt@c:
   944                           
   945                           ; 1 bytes @ 0x9
   946  0051                     	ds	1
   947  0052                     __doprnt@pb:
   948                           
   949                           ; 1 bytes @ 0xA
   950  0052                     	ds	1
   951  0053                     ??_printf:
   952  0053                     ?_sprintf:	
   953                           ; 1 bytes @ 0xB
   954                           
   955  0053                     sprintf@f:	
   956                           ; 2 bytes @ 0xB
   957                           
   958                           
   959                           ; 1 bytes @ 0xB
   960  0053                     	ds	2
   961  0055                     printf@ap:
   962                           
   963                           ; 1 bytes @ 0xD
   964  0055                     	ds	1
   965  0056                     ??_sprintf:
   966  0056                     printf@f:	
   967                           ; 1 bytes @ 0xE
   968                           
   969                           
   970                           ; 1 bytes @ 0xE
   971  0056                     	ds	1
   972  0057                     printf@pb:
   973                           
   974                           ; 2 bytes @ 0xF
   975  0057                     	ds	1
   976  0058                     sprintf@ap:
   977                           
   978                           ; 1 bytes @ 0x10
   979  0058                     	ds	1
   980  0059                     ??_msj1:
   981  0059                     ??_msj2:	
   982                           ; 1 bytes @ 0x11
   983                           
   984  0059                     ??_checkC:	
   985                           ; 1 bytes @ 0x11
   986                           
   987  0059                     ??_checkD:	
   988                           ; 1 bytes @ 0x11
   989                           
   990  0059                     ??_checkU:	
   991                           ; 1 bytes @ 0x11
   992                           
   993  0059                     sprintf@wh:	
   994                           ; 1 bytes @ 0x11
   995                           
   996                           
   997                           ; 1 bytes @ 0x11
   998  0059                     	ds	1
   999  005A                     sprintf@pb:
  1000                           
  1001                           ; 2 bytes @ 0x12
  1002  005A                     	ds	2
  1003  005C                     ??_main:
  1004                           
  1005                           ; 1 bytes @ 0x14
  1006  005C                     	ds	3
  1007                           
  1008                           	psect	maintext
  1009  0669                     __pmaintext:	
  1010 ;;
  1011 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1012 ;;
  1013 ;; *************** function _main *****************
  1014 ;; Defined at:
  1015 ;;		line 64 in file "mainM.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : B00/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0
  1031 ;;      Temps:          0       3       0       0       0
  1032 ;;      Totals:         0       3       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels required when called:    4
  1035 ;; This function calls:
  1036 ;;		_atoi
  1037 ;;		_checkC
  1038 ;;		_checkD
  1039 ;;		_checkU
  1040 ;;		_division
  1041 ;;		_msj1
  1042 ;;		_msj2
  1043 ;;		_printf
  1044 ;;		_setup
  1045 ;;		_spiRead
  1046 ;;		_spiWrite
  1047 ;;		_sprintf
  1048 ;;		_strcat
  1049 ;; This function is called by:
  1050 ;;		Startup code after reset
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _main
  1056  0669                     _main:
  1057  0669                     l1797:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1060                           
  1061                           
  1062                           ;mainM.c: 66:     setup();
  1063  0669  120A  118A  21DB  120A  118A  	fcall	_setup
  1064  066E                     l1799:
  1065                           
  1066                           ;mainM.c: 68:     {;mainM.c: 69:         PORTCbits.RC2 = 0;
  1067  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1068  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0670  1107               	bcf	7,2	;volatile
  1070  0671                     l1801:
  1071                           
  1072                           ;mainM.c: 70:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1073  0671  30C7               	movlw	199
  1074  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0674  00DC               	movwf	??_main
  1077  0675                     u1497:
  1078  0675  2E76               	nop2
  1079  0676  0BDC               	decfsz	??_main,f
  1080  0677  2E75               	goto	u1497
  1081  0678  2E79               	nop2
  1082  0679                     l1803:
  1083                           
  1084                           ;mainM.c: 72:         spiWrite(0x0A);
  1085  0679  300A               	movlw	10
  1086  067A  120A  118A  2123  120A  118A  	fcall	_spiWrite
  1087  067F                     l1805:
  1088                           
  1089                           ;mainM.c: 73:         V1 = spiRead();
  1090  067F  120A  118A  2141  120A  118A  	fcall	_spiRead
  1091  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0686  00DC               	movwf	??_main
  1094  0687  085C               	movf	??_main,w
  1095  0688  00A9               	movwf	_V1
  1096  0689                     l1807:
  1097                           
  1098                           ;mainM.c: 74:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1099  0689  30C7               	movlw	199
  1100  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1101  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1102  068C  00DC               	movwf	??_main
  1103  068D                     u1507:
  1104  068D  2E8E               	nop2
  1105  068E  0BDC               	decfsz	??_main,f
  1106  068F  2E8D               	goto	u1507
  1107  0690  2E91               	nop2
  1108                           
  1109                           ;mainM.c: 76:         spiWrite(0x0A);
  1110  0691  300A               	movlw	10
  1111  0692  120A  118A  2123  120A  118A  	fcall	_spiWrite
  1112                           
  1113                           ;mainM.c: 77:         V2 = spiRead();
  1114  0697  120A  118A  2141  120A  118A  	fcall	_spiRead
  1115  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1116  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1117  069E  00DC               	movwf	??_main
  1118  069F  085C               	movf	??_main,w
  1119  06A0  00A8               	movwf	_V2
  1120  06A1                     l1809:
  1121                           
  1122                           ;mainM.c: 78:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1123  06A1  30C7               	movlw	199
  1124  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1125  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1126  06A4  00DC               	movwf	??_main
  1127  06A5                     u1517:
  1128  06A5  2EA6               	nop2
  1129  06A6  0BDC               	decfsz	??_main,f
  1130  06A7  2EA5               	goto	u1517
  1131  06A8  2EA9               	nop2
  1132  06A9                     l1811:
  1133                           
  1134                           ;mainM.c: 80:         PORTCbits.RC2 = 1;
  1135  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1136  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1137  06AB  1507               	bsf	7,2	;volatile
  1138  06AC                     l1813:
  1139                           
  1140                           ;mainM.c: 81:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1141  06AC  3041               	movlw	65
  1142  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1143  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1144  06AF  00DD               	movwf	??_main+1
  1145  06B0  30ED               	movlw	237
  1146  06B1  00DC               	movwf	??_main
  1147  06B2                     u1527:
  1148  06B2  0BDC               	decfsz	??_main,f
  1149  06B3  2EB2               	goto	u1527
  1150  06B4  0BDD               	decfsz	??_main+1,f
  1151  06B5  2EB2               	goto	u1527
  1152  06B6  2EB7               	nop2
  1153                           
  1154                           ;mainM.c: 83:         division(V1);
  1155  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1156  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1157  06B9  0829               	movf	_V1,w
  1158  06BA  120A  118A  23ED  120A  118A  	fcall	_division
  1159  06BF                     l1815:
  1160                           
  1161                           ;mainM.c: 84:         msj1();
  1162  06BF  120A  118A  22E8  120A  118A  	fcall	_msj1
  1163  06C4                     l1817:
  1164                           
  1165                           ;mainM.c: 85:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1166  06C4  3041               	movlw	65
  1167  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1168  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1169  06C7  00DD               	movwf	??_main+1
  1170  06C8  30ED               	movlw	237
  1171  06C9  00DC               	movwf	??_main
  1172  06CA                     u1537:
  1173  06CA  0BDC               	decfsz	??_main,f
  1174  06CB  2ECA               	goto	u1537
  1175  06CC  0BDD               	decfsz	??_main+1,f
  1176  06CD  2ECA               	goto	u1537
  1177  06CE  2ECF               	nop2
  1178  06CF                     l1819:
  1179                           
  1180                           ;mainM.c: 86:         division(V2);
  1181  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1182  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1183  06D1  0828               	movf	_V2,w
  1184  06D2  120A  118A  23ED  120A  118A  	fcall	_division
  1185  06D7                     l1821:
  1186                           
  1187                           ;mainM.c: 87:         msj2();
  1188  06D7  120A  118A  233E  120A  118A  	fcall	_msj2
  1189                           
  1190                           ;mainM.c: 88:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1191  06DC  3041               	movlw	65
  1192  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1193  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1194  06DF  00DD               	movwf	??_main+1
  1195  06E0  30ED               	movlw	237
  1196  06E1  00DC               	movwf	??_main
  1197  06E2                     u1547:
  1198  06E2  0BDC               	decfsz	??_main,f
  1199  06E3  2EE2               	goto	u1547
  1200  06E4  0BDD               	decfsz	??_main+1,f
  1201  06E5  2EE2               	goto	u1547
  1202  06E6  2EE7               	nop2
  1203  06E7                     l1823:
  1204                           
  1205                           ;mainM.c: 90:         printf("Ingrese el valor de centena\r");
  1206  06E7  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1207  06E8  120A  118A  21C0  120A  118A  	fcall	_printf
  1208  06ED                     l92:	
  1209                           ;mainM.c: 91:         while(RCIF == 0);
  1210                           
  1211  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1212  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1213  06EF  1E8C               	btfss	12,5	;volatile
  1214  06F0  2EF2               	goto	u1401
  1215  06F1  2EF3               	goto	u1400
  1216  06F2                     u1401:
  1217  06F2  2EED               	goto	l92
  1218  06F3                     u1400:
  1219  06F3                     l1825:
  1220                           
  1221                           ;mainM.c: 92:         cc = RCREG -48;
  1222  06F3  081A               	movf	26,w	;volatile
  1223  06F4  3ED0               	addlw	208
  1224  06F5  00DC               	movwf	??_main
  1225  06F6  085C               	movf	??_main,w
  1226  06F7  00A4               	movwf	_cc
  1227                           
  1228                           ;mainM.c: 93:         while(RCREG > '2'){
  1229  06F8  2EFE               	goto	l1829
  1230  06F9                     l1827:
  1231                           
  1232                           ;mainM.c: 94:             checkC();
  1233  06F9  120A  118A  2172  120A  118A  	fcall	_checkC
  1234  06FE                     l1829:
  1235                           
  1236                           ;mainM.c: 93:         while(RCREG > '2'){
  1237  06FE  3033               	movlw	51
  1238  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0701  021A               	subwf	26,w	;volatile
  1241  0702  1803               	skipnc
  1242  0703  2F05               	goto	u1411
  1243  0704  2F06               	goto	u1410
  1244  0705                     u1411:
  1245  0705  2EF9               	goto	l1827
  1246  0706                     u1410:
  1247  0706                     l1831:
  1248                           
  1249                           ;mainM.c: 97:         printf("Ingrese el valor de decena\r");
  1250  0706  3066               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1251  0707  120A  118A  21C0  120A  118A  	fcall	_printf
  1252  070C                     l98:	
  1253                           ;mainM.c: 98:         while(RCIF == 0);
  1254                           
  1255  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  070E  1E8C               	btfss	12,5	;volatile
  1258  070F  2F11               	goto	u1421
  1259  0710  2F12               	goto	u1420
  1260  0711                     u1421:
  1261  0711  2F0C               	goto	l98
  1262  0712                     u1420:
  1263  0712                     l1833:
  1264                           
  1265                           ;mainM.c: 99:         dd = RCREG -48;
  1266  0712  081A               	movf	26,w	;volatile
  1267  0713  3ED0               	addlw	208
  1268  0714  00DC               	movwf	??_main
  1269  0715  085C               	movf	??_main,w
  1270  0716  00A3               	movwf	_dd
  1271                           
  1272                           ;mainM.c: 100:         if (cc == 2){
  1273  0717  3002               	movlw	2
  1274  0718  0624               	xorwf	_cc,w
  1275  0719  1D03               	btfss	3,2
  1276  071A  2F1C               	goto	u1431
  1277  071B  2F1D               	goto	u1430
  1278  071C                     u1431:
  1279  071C  2F2B               	goto	l1841
  1280  071D                     u1430:
  1281  071D  2F23               	goto	l1839
  1282  071E                     l1837:
  1283                           
  1284                           ;mainM.c: 102:                 checkD();
  1285  071E  120A  118A  218C  120A  118A  	fcall	_checkD
  1286  0723                     l1839:
  1287                           
  1288                           ;mainM.c: 101:             while(RCREG > '5'){
  1289  0723  3036               	movlw	54
  1290  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0726  021A               	subwf	26,w	;volatile
  1293  0727  1803               	skipnc
  1294  0728  2F2A               	goto	u1441
  1295  0729  2F2B               	goto	u1440
  1296  072A                     u1441:
  1297  072A  2F1E               	goto	l1837
  1298  072B                     u1440:
  1299  072B                     l1841:
  1300                           
  1301                           ;mainM.c: 106:         printf("Ingrese el valor de unidad\r");
  1302  072B  3082               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1303  072C  120A  118A  21C0  120A  118A  	fcall	_printf
  1304  0731                     l105:	
  1305                           ;mainM.c: 107:         while(RCIF == 0);
  1306                           
  1307  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0733  1E8C               	btfss	12,5	;volatile
  1310  0734  2F36               	goto	u1451
  1311  0735  2F37               	goto	u1450
  1312  0736                     u1451:
  1313  0736  2F31               	goto	l105
  1314  0737                     u1450:
  1315  0737                     l1843:
  1316                           
  1317                           ;mainM.c: 108:         uu = RCREG -48;
  1318  0737  081A               	movf	26,w	;volatile
  1319  0738  3ED0               	addlw	208
  1320  0739  00DC               	movwf	??_main
  1321  073A  085C               	movf	??_main,w
  1322  073B  00A2               	movwf	_uu
  1323                           
  1324                           ;mainM.c: 109:         if (cc == 2 && dd == 5){
  1325  073C  3002               	movlw	2
  1326  073D  0624               	xorwf	_cc,w
  1327  073E  1D03               	btfss	3,2
  1328  073F  2F41               	goto	u1461
  1329  0740  2F42               	goto	u1460
  1330  0741                     u1461:
  1331  0741  2F56               	goto	l1853
  1332  0742                     u1460:
  1333  0742                     l1845:
  1334  0742  3005               	movlw	5
  1335  0743  0623               	xorwf	_dd,w
  1336  0744  1D03               	btfss	3,2
  1337  0745  2F47               	goto	u1471
  1338  0746  2F48               	goto	u1470
  1339  0747                     u1471:
  1340  0747  2F56               	goto	l1853
  1341  0748                     u1470:
  1342  0748  2F4E               	goto	l1851
  1343  0749                     l1849:
  1344                           
  1345                           ;mainM.c: 111:                 checkU();
  1346  0749  120A  118A  21A6  120A  118A  	fcall	_checkU
  1347  074E                     l1851:
  1348                           
  1349                           ;mainM.c: 110:             while(RCREG > '5'){
  1350  074E  3036               	movlw	54
  1351  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0751  021A               	subwf	26,w	;volatile
  1354  0752  1803               	skipnc
  1355  0753  2F55               	goto	u1481
  1356  0754  2F56               	goto	u1480
  1357  0755                     u1481:
  1358  0755  2F49               	goto	l1849
  1359  0756                     u1480:
  1360  0756                     l1853:
  1361                           
  1362                           ;mainM.c: 115:         sprintf(BFFR1, "%d", cc);
  1363  0756  30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1364  0757  00DC               	movwf	??_main
  1365  0758  085C               	movf	??_main,w
  1366  0759  00D3               	movwf	sprintf@f
  1367  075A  0824               	movf	_cc,w
  1368  075B  00DD               	movwf	??_main+1
  1369  075C  01DE               	clrf	??_main+2
  1370  075D  085D               	movf	??_main+1,w
  1371  075E  00D4               	movwf	?_sprintf+1
  1372  075F  085E               	movf	??_main+2,w
  1373  0760  00D5               	movwf	?_sprintf+2
  1374  0761  303E               	movlw	(low (_BFFR1| 0))& (0+255)
  1375  0762  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1376                           
  1377                           ;mainM.c: 116:         sprintf(BFFR2, "%d", dd);
  1378  0767  30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1379  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1381  076A  00DC               	movwf	??_main
  1382  076B  085C               	movf	??_main,w
  1383  076C  00D3               	movwf	sprintf@f
  1384  076D  0823               	movf	_dd,w
  1385  076E  00DD               	movwf	??_main+1
  1386  076F  01DE               	clrf	??_main+2
  1387  0770  085D               	movf	??_main+1,w
  1388  0771  00D4               	movwf	?_sprintf+1
  1389  0772  085E               	movf	??_main+2,w
  1390  0773  00D5               	movwf	?_sprintf+2
  1391  0774  3034               	movlw	(low (_BFFR2| 0))& (0+255)
  1392  0775  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1393                           
  1394                           ;mainM.c: 117:         sprintf(BFFR3, "%d", uu);
  1395  077A  30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1396  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1397  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  077D  00DC               	movwf	??_main
  1399  077E  085C               	movf	??_main,w
  1400  077F  00D3               	movwf	sprintf@f
  1401  0780  0822               	movf	_uu,w
  1402  0781  00DD               	movwf	??_main+1
  1403  0782  01DE               	clrf	??_main+2
  1404  0783  085D               	movf	??_main+1,w
  1405  0784  00D4               	movwf	?_sprintf+1
  1406  0785  085E               	movf	??_main+2,w
  1407  0786  00D5               	movwf	?_sprintf+2
  1408  0787  302A               	movlw	(low (_BFFR3| 0))& (0+255)
  1409  0788  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1410  078D                     l1855:
  1411                           
  1412                           ;mainM.c: 118:         strcat(BFFR1, BFFR2);
  1413  078D  3034               	movlw	(low (_BFFR2| 0))& (0+255)
  1414  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1415  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0790  00DC               	movwf	??_main
  1417  0791  085C               	movf	??_main,w
  1418  0792  00F0               	movwf	strcat@from
  1419  0793  303E               	movlw	(low (_BFFR1| 0))& (0+255)
  1420  0794  120A  118A  2241  120A  118A  	fcall	_strcat
  1421  0799                     l1857:
  1422                           
  1423                           ;mainM.c: 119:         strcat(BFFR1, BFFR3);
  1424  0799  302A               	movlw	(low (_BFFR3| 0))& (0+255)
  1425  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1426  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1427  079C  00DC               	movwf	??_main
  1428  079D  085C               	movf	??_main,w
  1429  079E  00F0               	movwf	strcat@from
  1430  079F  303E               	movlw	(low (_BFFR1| 0))& (0+255)
  1431  07A0  120A  118A  2241  120A  118A  	fcall	_strcat
  1432  07A5                     l1859:
  1433                           
  1434                           ;mainM.c: 120:         variable = atoi(BFFR1);
  1435  07A5  303E               	movlw	(low (_BFFR1| 0))& (0+255)
  1436  07A6  120A  118A  24BA  120A  118A  	fcall	_atoi
  1437  07AB  0877               	movf	?_atoi+1,w
  1438  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1439  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1440  07AE  00A1               	movwf	_variable+1
  1441  07AF  0876               	movf	?_atoi,w
  1442  07B0  00A0               	movwf	_variable
  1443  07B1                     l1861:
  1444                           
  1445                           ;mainM.c: 121:         division(variable);
  1446  07B1  0820               	movf	_variable,w
  1447  07B2  120A  118A  23ED  120A  118A  	fcall	_division
  1448  07B7                     l1863:
  1449                           
  1450                           ;mainM.c: 122:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1451  07B7  3082               	movlw	130
  1452  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1453  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1454  07BA  00DD               	movwf	??_main+1
  1455  07BB  30DD               	movlw	221
  1456  07BC  00DC               	movwf	??_main
  1457  07BD                     u1557:
  1458  07BD  0BDC               	decfsz	??_main,f
  1459  07BE  2FBD               	goto	u1557
  1460  07BF  0BDD               	decfsz	??_main+1,f
  1461  07C0  2FBD               	goto	u1557
  1462  07C1                     l1865:
  1463                           
  1464                           ;mainM.c: 123:         TXREG = centena;
  1465  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1466  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1467  07C3  0827               	movf	_centena,w
  1468  07C4  0099               	movwf	25	;volatile
  1469  07C5                     l1867:
  1470                           
  1471                           ;mainM.c: 124:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1472  07C5  3082               	movlw	130
  1473  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1474  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1475  07C8  00DD               	movwf	??_main+1
  1476  07C9  30DD               	movlw	221
  1477  07CA  00DC               	movwf	??_main
  1478  07CB                     u1567:
  1479  07CB  0BDC               	decfsz	??_main,f
  1480  07CC  2FCB               	goto	u1567
  1481  07CD  0BDD               	decfsz	??_main+1,f
  1482  07CE  2FCB               	goto	u1567
  1483  07CF                     l1869:
  1484                           
  1485                           ;mainM.c: 125:         TXREG = decena;
  1486  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1487  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1488  07D1  0826               	movf	_decena,w
  1489  07D2  0099               	movwf	25	;volatile
  1490  07D3                     l1871:
  1491                           
  1492                           ;mainM.c: 126:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1493  07D3  3082               	movlw	130
  1494  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1495  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1496  07D6  00DD               	movwf	??_main+1
  1497  07D7  30DD               	movlw	221
  1498  07D8  00DC               	movwf	??_main
  1499  07D9                     u1577:
  1500  07D9  0BDC               	decfsz	??_main,f
  1501  07DA  2FD9               	goto	u1577
  1502  07DB  0BDD               	decfsz	??_main+1,f
  1503  07DC  2FD9               	goto	u1577
  1504  07DD                     l1873:
  1505                           
  1506                           ;mainM.c: 127:         TXREG = unidad;
  1507  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1508  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1509  07DF  0825               	movf	_unidad,w
  1510  07E0  0099               	movwf	25	;volatile
  1511  07E1                     l1875:
  1512                           
  1513                           ;mainM.c: 128:          _delay((unsigned long)((100)*(4000000/4000.0)));
  1514  07E1  3082               	movlw	130
  1515  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1516  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1517  07E4  00DD               	movwf	??_main+1
  1518  07E5  30DD               	movlw	221
  1519  07E6  00DC               	movwf	??_main
  1520  07E7                     u1587:
  1521  07E7  0BDC               	decfsz	??_main,f
  1522  07E8  2FE7               	goto	u1587
  1523  07E9  0BDD               	decfsz	??_main+1,f
  1524  07EA  2FE7               	goto	u1587
  1525  07EB                     l1877:
  1526                           
  1527                           ;mainM.c: 129:         PORTD = variable;
  1528  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1529  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1530  07ED  0820               	movf	_variable,w
  1531  07EE  0088               	movwf	8	;volatile
  1532  07EF  2E6E               	goto	l1799
  1533  07F0  120A  118A  2800   	ljmp	start
  1534  07F3                     __end_of_main:
  1535                           
  1536                           	psect	text1
  1537  0241                     __ptext1:	
  1538 ;; *************** function _strcat *****************
  1539 ;; Defined at:
  1540 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  to              1    wreg     PTR unsigned char 
  1543 ;;		 -> BFFR1(10), 
  1544 ;;  from            1    0[COMMON] PTR const unsigned char 
  1545 ;;		 -> BFFR3(10), BFFR2(10), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  to              1    2[COMMON] PTR unsigned char 
  1548 ;;		 -> BFFR1(10), 
  1549 ;;  cp              1    3[COMMON] PTR unsigned char 
  1550 ;;		 -> BFFR1(10), 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      PTR unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         1       0       0       0       0
  1561 ;;      Locals:         2       0       0       0       0
  1562 ;;      Temps:          1       0       0       0       0
  1563 ;;      Totals:         4       0       0       0       0
  1564 ;;Total ram usage:        4 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _strcat
  1575  0241                     _strcat:
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1579                           ;strcat@to stored from wreg
  1580  0241  00F2               	movwf	strcat@to
  1581  0242                     l1753:
  1582  0242  0872               	movf	strcat@to,w
  1583  0243  00F1               	movwf	??_strcat
  1584  0244  0871               	movf	??_strcat,w
  1585  0245  00F3               	movwf	strcat@cp
  1586  0246  2A4B               	goto	l1757
  1587  0247                     l1755:
  1588  0247  3001               	movlw	1
  1589  0248  00F1               	movwf	??_strcat
  1590  0249  0871               	movf	??_strcat,w
  1591  024A  07F3               	addwf	strcat@cp,f
  1592  024B                     l1757:
  1593  024B  0873               	movf	strcat@cp,w
  1594  024C  0084               	movwf	4
  1595  024D  1383               	bcf	3,7	;select IRP bank0
  1596  024E  0800               	movf	0,w
  1597  024F  1D03               	btfss	3,2
  1598  0250  2A52               	goto	u1321
  1599  0251  2A53               	goto	u1320
  1600  0252                     u1321:
  1601  0252  2A47               	goto	l1755
  1602  0253                     u1320:
  1603  0253  2A5C               	goto	l1761
  1604  0254                     l1759:
  1605  0254  3001               	movlw	1
  1606  0255  00F1               	movwf	??_strcat
  1607  0256  0871               	movf	??_strcat,w
  1608  0257  07F3               	addwf	strcat@cp,f
  1609  0258  3001               	movlw	1
  1610  0259  00F1               	movwf	??_strcat
  1611  025A  0871               	movf	??_strcat,w
  1612  025B  07F0               	addwf	strcat@from,f
  1613  025C                     l1761:
  1614  025C  0870               	movf	strcat@from,w
  1615  025D  0084               	movwf	4
  1616  025E  0800               	movf	0,w
  1617  025F  00F1               	movwf	??_strcat
  1618  0260  0873               	movf	strcat@cp,w
  1619  0261  0084               	movwf	4
  1620  0262  0871               	movf	??_strcat,w
  1621  0263  0080               	movwf	0
  1622  0264  0800               	movf	0,w
  1623  0265  1D03               	btfss	3,2
  1624  0266  2A68               	goto	u1331
  1625  0267  2A69               	goto	u1330
  1626  0268                     u1331:
  1627  0268  2A54               	goto	l1759
  1628  0269                     u1330:
  1629  0269                     l821:
  1630  0269  0008               	return
  1631  026A                     __end_of_strcat:
  1632                           
  1633                           	psect	text2
  1634  01FB                     __ptext2:	
  1635 ;; *************** function _sprintf *****************
  1636 ;; Defined at:
  1637 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  wh              1    wreg     PTR unsigned char 
  1640 ;;		 -> BFFR3(10), BFFR2(10), BFFR1(10), 
  1641 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1642 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  wh              1   17[BANK0 ] PTR unsigned char 
  1645 ;;		 -> BFFR3(10), BFFR2(10), BFFR1(10), 
  1646 ;;  pb              2   18[BANK0 ] struct __prbuf
  1647 ;;  ap              1   16[BANK0 ] PTR void [1]
  1648 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  2   11[BANK0 ] int 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       3       0       0       0
  1659 ;;      Locals:         0       4       0       0       0
  1660 ;;      Temps:          0       2       0       0       0
  1661 ;;      Totals:         0       9       0       0       0
  1662 ;;Total ram usage:        9 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    2
  1665 ;; This function calls:
  1666 ;;		__doprnt
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _sprintf
  1674  01FB                     _sprintf:
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1678                           ;sprintf@wh stored from wreg
  1679  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1680  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1681  01FD  00D9               	movwf	sprintf@wh
  1682  01FE                     l1741:
  1683  01FE  0859               	movf	sprintf@wh,w
  1684  01FF  00D6               	movwf	??_sprintf
  1685  0200  0856               	movf	??_sprintf,w
  1686  0201  00DA               	movwf	sprintf@pb
  1687  0202                     l1743:
  1688  0202  01DB               	clrf	low ((sprintf@pb| 0+1))
  1689  0203                     l1745:
  1690  0203  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1691  0204  00D6               	movwf	??_sprintf
  1692  0205  0856               	movf	??_sprintf,w
  1693  0206  00D8               	movwf	sprintf@ap
  1694  0207                     l1747:
  1695  0207  0853               	movf	sprintf@f,w
  1696  0208  00D6               	movwf	??_sprintf
  1697  0209  0856               	movf	??_sprintf,w
  1698  020A  00C8               	movwf	__doprnt@f
  1699  020B  3058               	movlw	(low (sprintf@ap| 0))& (0+255)
  1700  020C  00D7               	movwf	??_sprintf+1
  1701  020D  0857               	movf	??_sprintf+1,w
  1702  020E  00C9               	movwf	__doprnt@ap
  1703  020F  305A               	movlw	(low (sprintf@pb| 0))& (0+255)
  1704  0210  120A  118A  2535  120A  118A  	fcall	__doprnt
  1705  0215                     l1749:
  1706  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0217  085A               	movf	sprintf@pb,w
  1709  0218  0084               	movwf	4
  1710  0219  1383               	bcf	3,7	;select IRP bank0
  1711  021A  0180               	clrf	0
  1712  021B                     l812:
  1713  021B  0008               	return
  1714  021C                     __end_of_sprintf:
  1715                           
  1716                           	psect	text3
  1717  0123                     __ptext3:	
  1718 ;; *************** function _spiWrite *****************
  1719 ;; Defined at:
  1720 ;;		line 33 in file "SPI.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dat             1    wreg     unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  dat             1    0[COMMON] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         1       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         1       0       0       0       0
  1738 ;;Total ram usage:        1 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _spiWrite
  1749  0123                     _spiWrite:
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _spiWrite: [wreg]
  1753                           ;spiWrite@dat stored from wreg
  1754  0123  00F0               	movwf	spiWrite@dat
  1755  0124                     l1677:
  1756                           
  1757                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
  1758  0124  0870               	movf	spiWrite@dat,w
  1759  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0127  0093               	movwf	19	;volatile
  1762  0128                     l179:
  1763  0128  0008               	return
  1764  0129                     __end_of_spiWrite:
  1765                           
  1766                           	psect	text4
  1767  0141                     __ptext4:	
  1768 ;; *************** function _spiRead *****************
  1769 ;; Defined at:
  1770 ;;		line 46 in file "SPI.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    1
  1791 ;; This function calls:
  1792 ;;		_spiReceiveWait
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _spiRead
  1800  0141                     _spiRead:
  1801  0141                     l1679:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1804                           
  1805                           
  1806                           ;SPI.c: 48:     spiReceiveWait();
  1807  0141  120A  118A  2129  120A  118A  	fcall	_spiReceiveWait
  1808  0146                     l1681:
  1809                           
  1810                           ;SPI.c: 49:     return(SSPBUF);
  1811  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0148  0813               	movf	19,w	;volatile
  1814  0149                     l187:
  1815  0149  0008               	return
  1816  014A                     __end_of_spiRead:
  1817                           
  1818                           	psect	text5
  1819  0129                     __ptext5:	
  1820 ;; *************** function _spiReceiveWait *****************
  1821 ;; Defined at:
  1822 ;;		line 28 in file "SPI.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		None
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_spiRead
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _spiReceiveWait
  1851  0129                     _spiReceiveWait:
  1852  0129                     l1551:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _spiReceiveWait: []
  1855                           
  1856  0129                     l173:	
  1857                           ;SPI.c: 30:     while ( !SSPSTATbits.BF );
  1858                           
  1859  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1860  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1861  012B  1C14               	btfss	20,0	;volatile
  1862  012C  292E               	goto	u1001
  1863  012D  292F               	goto	u1000
  1864  012E                     u1001:
  1865  012E  2929               	goto	l173
  1866  012F                     u1000:
  1867  012F                     l176:
  1868  012F  0008               	return
  1869  0130                     __end_of_spiReceiveWait:
  1870                           
  1871                           	psect	text6
  1872  01DB                     __ptext6:	
  1873 ;; *************** function _setup *****************
  1874 ;; Defined at:
  1875 ;;		line 135 in file "mainM.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		_spiInit
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _setup
  1905  01DB                     _setup:
  1906  01DB                     l1661:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1909                           
  1910                           
  1911                           ;mainM.c: 137:     ANSEL = 0;
  1912  01DB  1683               	bsf	3,5	;RP0=1, select bank3
  1913  01DC  1703               	bsf	3,6	;RP1=1, select bank3
  1914  01DD  0188               	clrf	8	;volatile
  1915                           
  1916                           ;mainM.c: 138:     ANSELH = 0;
  1917  01DE  0189               	clrf	9	;volatile
  1918                           
  1919                           ;mainM.c: 140:     TRISB = 0;
  1920  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1921  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1922  01E1  0186               	clrf	6	;volatile
  1923                           
  1924                           ;mainM.c: 141:     TRISD = 0;
  1925  01E2  0188               	clrf	8	;volatile
  1926  01E3                     l1663:
  1927                           
  1928                           ;mainM.c: 144:     TRISCbits.TRISC2 = 0;
  1929  01E3  1107               	bcf	7,2	;volatile
  1930                           
  1931                           ;mainM.c: 146:     PORTA = 0;
  1932  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1933  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1934  01E6  0185               	clrf	5	;volatile
  1935                           
  1936                           ;mainM.c: 147:     PORTB = 0;
  1937  01E7  0186               	clrf	6	;volatile
  1938                           
  1939                           ;mainM.c: 148:     PORTC = 0;
  1940  01E8  0187               	clrf	7	;volatile
  1941                           
  1942                           ;mainM.c: 149:     PORTD = 0;
  1943  01E9  0188               	clrf	8	;volatile
  1944                           
  1945                           ;mainM.c: 150:     PORTE = 0;
  1946  01EA  0189               	clrf	9	;volatile
  1947  01EB                     l1665:
  1948                           
  1949                           ;mainM.c: 152:     OSCCONbits.IRCF0 = 0;
  1950  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1951  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1952  01ED  120F               	bcf	15,4	;volatile
  1953  01EE                     l1667:
  1954                           
  1955                           ;mainM.c: 153:     OSCCONbits.IRCF1 = 1;
  1956  01EE  168F               	bsf	15,5	;volatile
  1957  01EF                     l1669:
  1958                           
  1959                           ;mainM.c: 154:     OSCCONbits.IRCF2 = 1;
  1960  01EF  170F               	bsf	15,6	;volatile
  1961  01F0                     l1671:
  1962                           
  1963                           ;mainM.c: 155:     OSCCONbits.SCS = 1;
  1964  01F0  140F               	bsf	15,0	;volatile
  1965  01F1                     l1673:
  1966                           
  1967                           ;mainM.c: 157:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  1968  01F1  01F0               	clrf	spiInit@sDataSample
  1969  01F2  01F1               	clrf	spiInit@sClockIdle
  1970  01F3  01F2               	clrf	spiInit@sTransmitEdge
  1971  01F4  3020               	movlw	32
  1972  01F5  120A  118A  215C  120A  118A  	fcall	_spiInit
  1973  01FA                     l117:
  1974  01FA  0008               	return
  1975  01FB                     __end_of_setup:
  1976                           
  1977                           	psect	text7
  1978  015C                     __ptext7:	
  1979 ;; *************** function _spiInit *****************
  1980 ;; Defined at:
  1981 ;;		line 11 in file "SPI.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  sType           1    wreg     enum E1264
  1984 ;;  sDataSample     1    0[COMMON] enum E1272
  1985 ;;  sClockIdle      1    1[COMMON] enum E1276
  1986 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  sType           1    3[COMMON] enum E1264
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         3       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0
  2001 ;;      Totals:         4       0       0       0       0
  2002 ;;Total ram usage:        4 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_setup
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _spiInit
  2013  015C                     _spiInit:
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2017                           ;spiInit@sType stored from wreg
  2018  015C  00F3               	movwf	spiInit@sType
  2019  015D                     l1541:
  2020                           
  2021                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
  2022  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2023  015E  1303               	bcf	3,6	;RP1=0, select bank1
  2024  015F  1287               	bcf	7,5	;volatile
  2025                           
  2026                           ;SPI.c: 14:     if(sType & 0b00000100)
  2027  0160  1D73               	btfss	spiInit@sType,2
  2028  0161  2963               	goto	u991
  2029  0162  2964               	goto	u990
  2030  0163                     u991:
  2031  0163  2968               	goto	l1547
  2032  0164                     u990:
  2033  0164                     l1543:
  2034                           
  2035                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
  2036  0164  0872               	movf	spiInit@sTransmitEdge,w
  2037  0165  0094               	movwf	20	;volatile
  2038  0166                     l1545:
  2039                           
  2040                           ;SPI.c: 17:         TRISC3 = 1;
  2041  0166  1587               	bsf	7,3	;volatile
  2042                           
  2043                           ;SPI.c: 18:     }
  2044  0167  296C               	goto	l169
  2045  0168                     l1547:
  2046                           
  2047                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
  2048  0168  0870               	movf	spiInit@sDataSample,w
  2049  0169  0472               	iorwf	spiInit@sTransmitEdge,w
  2050  016A  0094               	movwf	20	;volatile
  2051  016B                     l1549:
  2052                           
  2053                           ;SPI.c: 22:         TRISC3 = 0;
  2054  016B  1187               	bcf	7,3	;volatile
  2055  016C                     l169:	
  2056                           ;SPI.c: 23:     }
  2057                           
  2058                           
  2059                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
  2060  016C  0873               	movf	spiInit@sType,w
  2061  016D  0471               	iorwf	spiInit@sClockIdle,w
  2062  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2063  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0170  0094               	movwf	20	;volatile
  2065  0171                     l170:
  2066  0171  0008               	return
  2067  0172                     __end_of_spiInit:
  2068                           
  2069                           	psect	text8
  2070  033E                     __ptext8:	
  2071 ;; *************** function _msj2 *****************
  2072 ;; Defined at:
  2073 ;;		line 194 in file "mainM.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          0       2       0       0       0
  2090 ;;      Totals:         0       2       0       0       0
  2091 ;;Total ram usage:        2 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    3
  2094 ;; This function calls:
  2095 ;;		_printf
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _msj2
  2103  033E                     _msj2:
  2104  033E                     l1709:	
  2105                           ;incstack = 0
  2106                           ; Regs used in _msj2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2107                           
  2108                           
  2109                           ;mainM.c: 195:     printf("\rV2 = ");
  2110  033E  30A6               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2111  033F  120A  118A  21C0  120A  118A  	fcall	_printf
  2112  0344                     l1711:
  2113                           
  2114                           ;mainM.c: 196:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2115  0344  3041               	movlw	65
  2116  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0347  00DA               	movwf	??_msj2+1
  2119  0348  30ED               	movlw	237
  2120  0349  00D9               	movwf	??_msj2
  2121  034A                     u1597:
  2122  034A  0BD9               	decfsz	??_msj2,f
  2123  034B  2B4A               	goto	u1597
  2124  034C  0BDA               	decfsz	??_msj2+1,f
  2125  034D  2B4A               	goto	u1597
  2126  034E  2B4F               	nop2
  2127  034F                     l1713:
  2128                           
  2129                           ;mainM.c: 197:     TXREG = centena;
  2130  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0351  0827               	movf	_centena,w
  2133  0352  0099               	movwf	25	;volatile
  2134  0353                     l1715:
  2135                           
  2136                           ;mainM.c: 198:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2137  0353  3041               	movlw	65
  2138  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0356  00DA               	movwf	??_msj2+1
  2141  0357  30ED               	movlw	237
  2142  0358  00D9               	movwf	??_msj2
  2143  0359                     u1607:
  2144  0359  0BD9               	decfsz	??_msj2,f
  2145  035A  2B59               	goto	u1607
  2146  035B  0BDA               	decfsz	??_msj2+1,f
  2147  035C  2B59               	goto	u1607
  2148  035D  2B5E               	nop2
  2149  035E                     l1717:
  2150                           
  2151                           ;mainM.c: 199:     printf(".");
  2152  035E  30B3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2153  035F  120A  118A  21C0  120A  118A  	fcall	_printf
  2154                           
  2155                           ;mainM.c: 200:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2156  0364  3041               	movlw	65
  2157  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0367  00DA               	movwf	??_msj2+1
  2160  0368  30ED               	movlw	237
  2161  0369  00D9               	movwf	??_msj2
  2162  036A                     u1617:
  2163  036A  0BD9               	decfsz	??_msj2,f
  2164  036B  2B6A               	goto	u1617
  2165  036C  0BDA               	decfsz	??_msj2+1,f
  2166  036D  2B6A               	goto	u1617
  2167  036E  2B6F               	nop2
  2168                           
  2169                           ;mainM.c: 201:     TXREG = decena;
  2170  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0371  0826               	movf	_decena,w
  2173  0372  0099               	movwf	25	;volatile
  2174                           
  2175                           ;mainM.c: 202:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2176  0373  3041               	movlw	65
  2177  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0376  00DA               	movwf	??_msj2+1
  2180  0377  30ED               	movlw	237
  2181  0378  00D9               	movwf	??_msj2
  2182  0379                     u1627:
  2183  0379  0BD9               	decfsz	??_msj2,f
  2184  037A  2B79               	goto	u1627
  2185  037B  0BDA               	decfsz	??_msj2+1,f
  2186  037C  2B79               	goto	u1627
  2187  037D  2B7E               	nop2
  2188                           
  2189                           ;mainM.c: 203:     TXREG = unidad;
  2190  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2191  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0380  0825               	movf	_unidad,w
  2193  0381  0099               	movwf	25	;volatile
  2194                           
  2195                           ;mainM.c: 204:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2196  0382  3041               	movlw	65
  2197  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0385  00DA               	movwf	??_msj2+1
  2200  0386  30ED               	movlw	237
  2201  0387  00D9               	movwf	??_msj2
  2202  0388                     u1637:
  2203  0388  0BD9               	decfsz	??_msj2,f
  2204  0389  2B88               	goto	u1637
  2205  038A  0BDA               	decfsz	??_msj2+1,f
  2206  038B  2B88               	goto	u1637
  2207  038C  2B8D               	nop2
  2208  038D                     l1719:
  2209                           
  2210                           ;mainM.c: 205:     printf("\r\r");
  2211  038D  30AD               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2212  038E  120A  118A  21C0  120A  118A  	fcall	_printf
  2213  0393                     l132:
  2214  0393  0008               	return
  2215  0394                     __end_of_msj2:
  2216                           
  2217                           	psect	text9
  2218  02E8                     __ptext9:	
  2219 ;; *************** function _msj1 *****************
  2220 ;; Defined at:
  2221 ;;		line 178 in file "mainM.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0
  2237 ;;      Temps:          0       2       0       0       0
  2238 ;;      Totals:         0       2       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    3
  2242 ;; This function calls:
  2243 ;;		_printf
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _msj1
  2251  02E8                     _msj1:
  2252  02E8                     l1695:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _msj1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2255                           
  2256                           
  2257                           ;mainM.c: 179:     printf("\r V1 = ");
  2258  02E8  309E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2259  02E9  120A  118A  21C0  120A  118A  	fcall	_printf
  2260  02EE                     l1697:
  2261                           
  2262                           ;mainM.c: 180:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2263  02EE  3041               	movlw	65
  2264  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2265  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2266  02F1  00DA               	movwf	??_msj1+1
  2267  02F2  30ED               	movlw	237
  2268  02F3  00D9               	movwf	??_msj1
  2269  02F4                     u1647:
  2270  02F4  0BD9               	decfsz	??_msj1,f
  2271  02F5  2AF4               	goto	u1647
  2272  02F6  0BDA               	decfsz	??_msj1+1,f
  2273  02F7  2AF4               	goto	u1647
  2274  02F8  2AF9               	nop2
  2275  02F9                     l1699:
  2276                           
  2277                           ;mainM.c: 181:     TXREG = centena;
  2278  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2279  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2280  02FB  0827               	movf	_centena,w
  2281  02FC  0099               	movwf	25	;volatile
  2282  02FD                     l1701:
  2283                           
  2284                           ;mainM.c: 182:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2285  02FD  3041               	movlw	65
  2286  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2287  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0300  00DA               	movwf	??_msj1+1
  2289  0301  30ED               	movlw	237
  2290  0302  00D9               	movwf	??_msj1
  2291  0303                     u1657:
  2292  0303  0BD9               	decfsz	??_msj1,f
  2293  0304  2B03               	goto	u1657
  2294  0305  0BDA               	decfsz	??_msj1+1,f
  2295  0306  2B03               	goto	u1657
  2296  0307  2B08               	nop2
  2297  0308                     l1703:
  2298                           
  2299                           ;mainM.c: 183:     printf(".");
  2300  0308  30B3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2301  0309  120A  118A  21C0  120A  118A  	fcall	_printf
  2302                           
  2303                           ;mainM.c: 184:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2304  030E  3041               	movlw	65
  2305  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0311  00DA               	movwf	??_msj1+1
  2308  0312  30ED               	movlw	237
  2309  0313  00D9               	movwf	??_msj1
  2310  0314                     u1667:
  2311  0314  0BD9               	decfsz	??_msj1,f
  2312  0315  2B14               	goto	u1667
  2313  0316  0BDA               	decfsz	??_msj1+1,f
  2314  0317  2B14               	goto	u1667
  2315  0318  2B19               	nop2
  2316                           
  2317                           ;mainM.c: 185:     TXREG = decena;
  2318  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2319  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2320  031B  0826               	movf	_decena,w
  2321  031C  0099               	movwf	25	;volatile
  2322                           
  2323                           ;mainM.c: 186:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2324  031D  3041               	movlw	65
  2325  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2326  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0320  00DA               	movwf	??_msj1+1
  2328  0321  30ED               	movlw	237
  2329  0322  00D9               	movwf	??_msj1
  2330  0323                     u1677:
  2331  0323  0BD9               	decfsz	??_msj1,f
  2332  0324  2B23               	goto	u1677
  2333  0325  0BDA               	decfsz	??_msj1+1,f
  2334  0326  2B23               	goto	u1677
  2335  0327  2B28               	nop2
  2336                           
  2337                           ;mainM.c: 187:     TXREG = unidad;
  2338  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2340  032A  0825               	movf	_unidad,w
  2341  032B  0099               	movwf	25	;volatile
  2342                           
  2343                           ;mainM.c: 188:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2344  032C  3041               	movlw	65
  2345  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2346  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2347  032F  00DA               	movwf	??_msj1+1
  2348  0330  30ED               	movlw	237
  2349  0331  00D9               	movwf	??_msj1
  2350  0332                     u1687:
  2351  0332  0BD9               	decfsz	??_msj1,f
  2352  0333  2B32               	goto	u1687
  2353  0334  0BDA               	decfsz	??_msj1+1,f
  2354  0335  2B32               	goto	u1687
  2355  0336  2B37               	nop2
  2356  0337                     l1705:
  2357                           
  2358                           ;mainM.c: 189:     printf("\r\r");
  2359  0337  30AD               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2360  0338  120A  118A  21C0  120A  118A  	fcall	_printf
  2361  033D                     l129:
  2362  033D  0008               	return
  2363  033E                     __end_of_msj1:
  2364                           
  2365                           	psect	text10
  2366  03ED                     __ptext10:	
  2367 ;; *************** function _division *****************
  2368 ;; Defined at:
  2369 ;;		line 161 in file "mainM.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  valor           1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  valor           1   12[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0
  2385 ;;      Temps:          3       0       0       0       0
  2386 ;;      Totals:         4       0       0       0       0
  2387 ;;Total ram usage:        4 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    1
  2390 ;; This function calls:
  2391 ;;		___awdiv
  2392 ;;		___awmod
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _division
  2400  03ED                     _division:
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2404                           ;division@valor stored from wreg
  2405  03ED  00FC               	movwf	division@valor
  2406  03EE                     l1685:
  2407                           
  2408                           ;mainM.c: 162:     centena = valor/100;
  2409  03EE  3064               	movlw	100
  2410  03EF  00F0               	movwf	___awdiv@divisor
  2411  03F0  3000               	movlw	0
  2412  03F1  00F1               	movwf	___awdiv@divisor+1
  2413  03F2  087C               	movf	division@valor,w
  2414  03F3  00F9               	movwf	??_division
  2415  03F4  01FA               	clrf	??_division+1
  2416  03F5  0879               	movf	??_division,w
  2417  03F6  00F2               	movwf	___awdiv@dividend
  2418  03F7  087A               	movf	??_division+1,w
  2419  03F8  00F3               	movwf	___awdiv@dividend+1
  2420  03F9  120A  118A  2453  120A  118A  	fcall	___awdiv
  2421  03FE  0870               	movf	?___awdiv,w
  2422  03FF  00FB               	movwf	??_division+2
  2423  0400  087B               	movf	??_division+2,w
  2424  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0403  00A7               	movwf	_centena
  2427                           
  2428                           ;mainM.c: 163:     unidad = valor%100;
  2429  0404  3064               	movlw	100
  2430  0405  00F0               	movwf	___awmod@divisor
  2431  0406  3000               	movlw	0
  2432  0407  00F1               	movwf	___awmod@divisor+1
  2433  0408  087C               	movf	division@valor,w
  2434  0409  00F9               	movwf	??_division
  2435  040A  01FA               	clrf	??_division+1
  2436  040B  0879               	movf	??_division,w
  2437  040C  00F2               	movwf	___awmod@dividend
  2438  040D  087A               	movf	??_division+1,w
  2439  040E  00F3               	movwf	___awmod@dividend+1
  2440  040F  120A  118A  2394  120A  118A  	fcall	___awmod
  2441  0414  0870               	movf	?___awmod,w
  2442  0415  00FB               	movwf	??_division+2
  2443  0416  087B               	movf	??_division+2,w
  2444  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0419  00A5               	movwf	_unidad
  2447                           
  2448                           ;mainM.c: 164:     decena = unidad/10;
  2449  041A  300A               	movlw	10
  2450  041B  00F0               	movwf	___awdiv@divisor
  2451  041C  3000               	movlw	0
  2452  041D  00F1               	movwf	___awdiv@divisor+1
  2453  041E  0825               	movf	_unidad,w
  2454  041F  00F9               	movwf	??_division
  2455  0420  01FA               	clrf	??_division+1
  2456  0421  0879               	movf	??_division,w
  2457  0422  00F2               	movwf	___awdiv@dividend
  2458  0423  087A               	movf	??_division+1,w
  2459  0424  00F3               	movwf	___awdiv@dividend+1
  2460  0425  120A  118A  2453  120A  118A  	fcall	___awdiv
  2461  042A  0870               	movf	?___awdiv,w
  2462  042B  00FB               	movwf	??_division+2
  2463  042C  087B               	movf	??_division+2,w
  2464  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2465  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2466  042F  00A6               	movwf	_decena
  2467                           
  2468                           ;mainM.c: 165:     unidad = unidad%10;
  2469  0430  300A               	movlw	10
  2470  0431  00F0               	movwf	___awmod@divisor
  2471  0432  3000               	movlw	0
  2472  0433  00F1               	movwf	___awmod@divisor+1
  2473  0434  0825               	movf	_unidad,w
  2474  0435  00F9               	movwf	??_division
  2475  0436  01FA               	clrf	??_division+1
  2476  0437  0879               	movf	??_division,w
  2477  0438  00F2               	movwf	___awmod@dividend
  2478  0439  087A               	movf	??_division+1,w
  2479  043A  00F3               	movwf	___awmod@dividend+1
  2480  043B  120A  118A  2394  120A  118A  	fcall	___awmod
  2481  0440  0870               	movf	?___awmod,w
  2482  0441  00FB               	movwf	??_division+2
  2483  0442  087B               	movf	??_division+2,w
  2484  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0445  00A5               	movwf	_unidad
  2487  0446                     l1687:
  2488                           
  2489                           ;mainM.c: 166:     centena += 48;
  2490  0446  3030               	movlw	48
  2491  0447  00F9               	movwf	??_division
  2492  0448  0879               	movf	??_division,w
  2493  0449  07A7               	addwf	_centena,f
  2494  044A                     l1689:
  2495                           
  2496                           ;mainM.c: 167:     decena += 48;
  2497  044A  3030               	movlw	48
  2498  044B  00F9               	movwf	??_division
  2499  044C  0879               	movf	??_division,w
  2500  044D  07A6               	addwf	_decena,f
  2501  044E                     l1691:
  2502                           
  2503                           ;mainM.c: 168:     unidad += 48;
  2504  044E  3030               	movlw	48
  2505  044F  00F9               	movwf	??_division
  2506  0450  0879               	movf	??_division,w
  2507  0451  07A5               	addwf	_unidad,f
  2508  0452                     l120:
  2509  0452  0008               	return
  2510  0453                     __end_of_division:
  2511                           
  2512                           	psect	text11
  2513  0394                     __ptext11:	
  2514 ;; *************** function ___awmod *****************
  2515 ;; Defined at:
  2516 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  divisor         2    0[COMMON] int 
  2519 ;;  dividend        2    2[COMMON] int 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  sign            1    6[COMMON] unsigned char 
  2522 ;;  counter         1    5[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    0[COMMON] int 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         4       0       0       0       0
  2533 ;;      Locals:         2       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0
  2535 ;;      Totals:         7       0       0       0       0
  2536 ;;Total ram usage:        7 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_division
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function ___awmod
  2547  0394                     ___awmod:
  2548  0394                     l1611:	
  2549                           ;incstack = 0
  2550                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2551                           
  2552  0394  01F6               	clrf	___awmod@sign
  2553  0395                     l1613:
  2554  0395  1FF3               	btfss	___awmod@dividend+1,7
  2555  0396  2B98               	goto	u1151
  2556  0397  2B99               	goto	u1150
  2557  0398                     u1151:
  2558  0398  2BA0               	goto	l1619
  2559  0399                     u1150:
  2560  0399                     l1615:
  2561  0399  09F2               	comf	___awmod@dividend,f
  2562  039A  09F3               	comf	___awmod@dividend+1,f
  2563  039B  0AF2               	incf	___awmod@dividend,f
  2564  039C  1903               	skipnz
  2565  039D  0AF3               	incf	___awmod@dividend+1,f
  2566  039E                     l1617:
  2567  039E  01F6               	clrf	___awmod@sign
  2568  039F  0AF6               	incf	___awmod@sign,f
  2569  03A0                     l1619:
  2570  03A0  1FF1               	btfss	___awmod@divisor+1,7
  2571  03A1  2BA3               	goto	u1161
  2572  03A2  2BA4               	goto	u1160
  2573  03A3                     u1161:
  2574  03A3  2BA9               	goto	l1623
  2575  03A4                     u1160:
  2576  03A4                     l1621:
  2577  03A4  09F0               	comf	___awmod@divisor,f
  2578  03A5  09F1               	comf	___awmod@divisor+1,f
  2579  03A6  0AF0               	incf	___awmod@divisor,f
  2580  03A7  1903               	skipnz
  2581  03A8  0AF1               	incf	___awmod@divisor+1,f
  2582  03A9                     l1623:
  2583  03A9  0870               	movf	___awmod@divisor,w
  2584  03AA  0471               	iorwf	___awmod@divisor+1,w
  2585  03AB  1903               	btfsc	3,2
  2586  03AC  2BAE               	goto	u1171
  2587  03AD  2BAF               	goto	u1170
  2588  03AE                     u1171:
  2589  03AE  2BDE               	goto	l1641
  2590  03AF                     u1170:
  2591  03AF                     l1625:
  2592  03AF  01F5               	clrf	___awmod@counter
  2593  03B0  0AF5               	incf	___awmod@counter,f
  2594  03B1  2BBD               	goto	l1631
  2595  03B2                     l1627:
  2596  03B2  3001               	movlw	1
  2597  03B3                     u1185:
  2598  03B3  1003               	clrc
  2599  03B4  0DF0               	rlf	___awmod@divisor,f
  2600  03B5  0DF1               	rlf	___awmod@divisor+1,f
  2601  03B6  3EFF               	addlw	-1
  2602  03B7  1D03               	skipz
  2603  03B8  2BB3               	goto	u1185
  2604  03B9                     l1629:
  2605  03B9  3001               	movlw	1
  2606  03BA  00F4               	movwf	??___awmod
  2607  03BB  0874               	movf	??___awmod,w
  2608  03BC  07F5               	addwf	___awmod@counter,f
  2609  03BD                     l1631:
  2610  03BD  1FF1               	btfss	___awmod@divisor+1,7
  2611  03BE  2BC0               	goto	u1191
  2612  03BF  2BC1               	goto	u1190
  2613  03C0                     u1191:
  2614  03C0  2BB2               	goto	l1627
  2615  03C1                     u1190:
  2616  03C1                     l1633:
  2617  03C1  0871               	movf	___awmod@divisor+1,w
  2618  03C2  0273               	subwf	___awmod@dividend+1,w
  2619  03C3  1D03               	skipz
  2620  03C4  2BC7               	goto	u1205
  2621  03C5  0870               	movf	___awmod@divisor,w
  2622  03C6  0272               	subwf	___awmod@dividend,w
  2623  03C7                     u1205:
  2624  03C7  1C03               	skipc
  2625  03C8  2BCA               	goto	u1201
  2626  03C9  2BCB               	goto	u1200
  2627  03CA                     u1201:
  2628  03CA  2BD1               	goto	l1637
  2629  03CB                     u1200:
  2630  03CB                     l1635:
  2631  03CB  0870               	movf	___awmod@divisor,w
  2632  03CC  02F2               	subwf	___awmod@dividend,f
  2633  03CD  0871               	movf	___awmod@divisor+1,w
  2634  03CE  1C03               	skipc
  2635  03CF  03F3               	decf	___awmod@dividend+1,f
  2636  03D0  02F3               	subwf	___awmod@dividend+1,f
  2637  03D1                     l1637:
  2638  03D1  3001               	movlw	1
  2639  03D2                     u1215:
  2640  03D2  1003               	clrc
  2641  03D3  0CF1               	rrf	___awmod@divisor+1,f
  2642  03D4  0CF0               	rrf	___awmod@divisor,f
  2643  03D5  3EFF               	addlw	-1
  2644  03D6  1D03               	skipz
  2645  03D7  2BD2               	goto	u1215
  2646  03D8                     l1639:
  2647  03D8  3001               	movlw	1
  2648  03D9  02F5               	subwf	___awmod@counter,f
  2649  03DA  1D03               	btfss	3,2
  2650  03DB  2BDD               	goto	u1221
  2651  03DC  2BDE               	goto	u1220
  2652  03DD                     u1221:
  2653  03DD  2BC1               	goto	l1633
  2654  03DE                     u1220:
  2655  03DE                     l1641:
  2656  03DE  0876               	movf	___awmod@sign,w
  2657  03DF  1903               	btfsc	3,2
  2658  03E0  2BE2               	goto	u1231
  2659  03E1  2BE3               	goto	u1230
  2660  03E2                     u1231:
  2661  03E2  2BE8               	goto	l1645
  2662  03E3                     u1230:
  2663  03E3                     l1643:
  2664  03E3  09F2               	comf	___awmod@dividend,f
  2665  03E4  09F3               	comf	___awmod@dividend+1,f
  2666  03E5  0AF2               	incf	___awmod@dividend,f
  2667  03E6  1903               	skipnz
  2668  03E7  0AF3               	incf	___awmod@dividend+1,f
  2669  03E8                     l1645:
  2670  03E8  0873               	movf	___awmod@dividend+1,w
  2671  03E9  00F1               	movwf	?___awmod+1
  2672  03EA  0872               	movf	___awmod@dividend,w
  2673  03EB  00F0               	movwf	?___awmod
  2674  03EC                     l456:
  2675  03EC  0008               	return
  2676  03ED                     __end_of___awmod:
  2677                           
  2678                           	psect	text12
  2679  0453                     __ptext12:	
  2680 ;; *************** function ___awdiv *****************
  2681 ;; Defined at:
  2682 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  divisor         2    0[COMMON] int 
  2685 ;;  dividend        2    2[COMMON] int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  quotient        2    7[COMMON] int 
  2688 ;;  sign            1    6[COMMON] unsigned char 
  2689 ;;  counter         1    5[COMMON] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    0[COMMON] int 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         4       0       0       0       0
  2700 ;;      Locals:         4       0       0       0       0
  2701 ;;      Temps:          1       0       0       0       0
  2702 ;;      Totals:         9       0       0       0       0
  2703 ;;Total ram usage:        9 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_division
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function ___awdiv
  2714  0453                     ___awdiv:
  2715  0453                     l1567:	
  2716                           ;incstack = 0
  2717                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2718                           
  2719  0453  01F6               	clrf	___awdiv@sign
  2720  0454                     l1569:
  2721  0454  1FF1               	btfss	___awdiv@divisor+1,7
  2722  0455  2C57               	goto	u1051
  2723  0456  2C58               	goto	u1050
  2724  0457                     u1051:
  2725  0457  2C5F               	goto	l1575
  2726  0458                     u1050:
  2727  0458                     l1571:
  2728  0458  09F0               	comf	___awdiv@divisor,f
  2729  0459  09F1               	comf	___awdiv@divisor+1,f
  2730  045A  0AF0               	incf	___awdiv@divisor,f
  2731  045B  1903               	skipnz
  2732  045C  0AF1               	incf	___awdiv@divisor+1,f
  2733  045D                     l1573:
  2734  045D  01F6               	clrf	___awdiv@sign
  2735  045E  0AF6               	incf	___awdiv@sign,f
  2736  045F                     l1575:
  2737  045F  1FF3               	btfss	___awdiv@dividend+1,7
  2738  0460  2C62               	goto	u1061
  2739  0461  2C63               	goto	u1060
  2740  0462                     u1061:
  2741  0462  2C6C               	goto	l1581
  2742  0463                     u1060:
  2743  0463                     l1577:
  2744  0463  09F2               	comf	___awdiv@dividend,f
  2745  0464  09F3               	comf	___awdiv@dividend+1,f
  2746  0465  0AF2               	incf	___awdiv@dividend,f
  2747  0466  1903               	skipnz
  2748  0467  0AF3               	incf	___awdiv@dividend+1,f
  2749  0468                     l1579:
  2750  0468  3001               	movlw	1
  2751  0469  00F4               	movwf	??___awdiv
  2752  046A  0874               	movf	??___awdiv,w
  2753  046B  06F6               	xorwf	___awdiv@sign,f
  2754  046C                     l1581:
  2755  046C  01F7               	clrf	___awdiv@quotient
  2756  046D  01F8               	clrf	___awdiv@quotient+1
  2757  046E                     l1583:
  2758  046E  0870               	movf	___awdiv@divisor,w
  2759  046F  0471               	iorwf	___awdiv@divisor+1,w
  2760  0470  1903               	btfsc	3,2
  2761  0471  2C73               	goto	u1071
  2762  0472  2C74               	goto	u1070
  2763  0473                     u1071:
  2764  0473  2CAB               	goto	l1603
  2765  0474                     u1070:
  2766  0474                     l1585:
  2767  0474  01F5               	clrf	___awdiv@counter
  2768  0475  0AF5               	incf	___awdiv@counter,f
  2769  0476  2C82               	goto	l1591
  2770  0477                     l1587:
  2771  0477  3001               	movlw	1
  2772  0478                     u1085:
  2773  0478  1003               	clrc
  2774  0479  0DF0               	rlf	___awdiv@divisor,f
  2775  047A  0DF1               	rlf	___awdiv@divisor+1,f
  2776  047B  3EFF               	addlw	-1
  2777  047C  1D03               	skipz
  2778  047D  2C78               	goto	u1085
  2779  047E                     l1589:
  2780  047E  3001               	movlw	1
  2781  047F  00F4               	movwf	??___awdiv
  2782  0480  0874               	movf	??___awdiv,w
  2783  0481  07F5               	addwf	___awdiv@counter,f
  2784  0482                     l1591:
  2785  0482  1FF1               	btfss	___awdiv@divisor+1,7
  2786  0483  2C85               	goto	u1091
  2787  0484  2C86               	goto	u1090
  2788  0485                     u1091:
  2789  0485  2C77               	goto	l1587
  2790  0486                     u1090:
  2791  0486                     l1593:
  2792  0486  3001               	movlw	1
  2793  0487                     u1105:
  2794  0487  1003               	clrc
  2795  0488  0DF7               	rlf	___awdiv@quotient,f
  2796  0489  0DF8               	rlf	___awdiv@quotient+1,f
  2797  048A  3EFF               	addlw	-1
  2798  048B  1D03               	skipz
  2799  048C  2C87               	goto	u1105
  2800  048D  0871               	movf	___awdiv@divisor+1,w
  2801  048E  0273               	subwf	___awdiv@dividend+1,w
  2802  048F  1D03               	skipz
  2803  0490  2C93               	goto	u1115
  2804  0491  0870               	movf	___awdiv@divisor,w
  2805  0492  0272               	subwf	___awdiv@dividend,w
  2806  0493                     u1115:
  2807  0493  1C03               	skipc
  2808  0494  2C96               	goto	u1111
  2809  0495  2C97               	goto	u1110
  2810  0496                     u1111:
  2811  0496  2C9E               	goto	l1599
  2812  0497                     u1110:
  2813  0497                     l1595:
  2814  0497  0870               	movf	___awdiv@divisor,w
  2815  0498  02F2               	subwf	___awdiv@dividend,f
  2816  0499  0871               	movf	___awdiv@divisor+1,w
  2817  049A  1C03               	skipc
  2818  049B  03F3               	decf	___awdiv@dividend+1,f
  2819  049C  02F3               	subwf	___awdiv@dividend+1,f
  2820  049D                     l1597:
  2821  049D  1477               	bsf	___awdiv@quotient,0
  2822  049E                     l1599:
  2823  049E  3001               	movlw	1
  2824  049F                     u1125:
  2825  049F  1003               	clrc
  2826  04A0  0CF1               	rrf	___awdiv@divisor+1,f
  2827  04A1  0CF0               	rrf	___awdiv@divisor,f
  2828  04A2  3EFF               	addlw	-1
  2829  04A3  1D03               	skipz
  2830  04A4  2C9F               	goto	u1125
  2831  04A5                     l1601:
  2832  04A5  3001               	movlw	1
  2833  04A6  02F5               	subwf	___awdiv@counter,f
  2834  04A7  1D03               	btfss	3,2
  2835  04A8  2CAA               	goto	u1131
  2836  04A9  2CAB               	goto	u1130
  2837  04AA                     u1131:
  2838  04AA  2C86               	goto	l1593
  2839  04AB                     u1130:
  2840  04AB                     l1603:
  2841  04AB  0876               	movf	___awdiv@sign,w
  2842  04AC  1903               	btfsc	3,2
  2843  04AD  2CAF               	goto	u1141
  2844  04AE  2CB0               	goto	u1140
  2845  04AF                     u1141:
  2846  04AF  2CB5               	goto	l1607
  2847  04B0                     u1140:
  2848  04B0                     l1605:
  2849  04B0  09F7               	comf	___awdiv@quotient,f
  2850  04B1  09F8               	comf	___awdiv@quotient+1,f
  2851  04B2  0AF7               	incf	___awdiv@quotient,f
  2852  04B3  1903               	skipnz
  2853  04B4  0AF8               	incf	___awdiv@quotient+1,f
  2854  04B5                     l1607:
  2855  04B5  0878               	movf	___awdiv@quotient+1,w
  2856  04B6  00F1               	movwf	?___awdiv+1
  2857  04B7  0877               	movf	___awdiv@quotient,w
  2858  04B8  00F0               	movwf	?___awdiv
  2859  04B9                     l443:
  2860  04B9  0008               	return
  2861  04BA                     __end_of___awdiv:
  2862                           
  2863                           	psect	text13
  2864  01A6                     __ptext13:	
  2865 ;; *************** function _checkU *****************
  2866 ;; Defined at:
  2867 ;;		line 226 in file "mainM.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          0       1       0       0       0
  2884 ;;      Totals:         0       1       0       0       0
  2885 ;;Total ram usage:        1 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    3
  2888 ;; This function calls:
  2889 ;;		_printf
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _checkU
  2897  01A6                     _checkU:
  2898  01A6                     l1735:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _checkU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2901                           
  2902                           
  2903                           ;mainM.c: 227:     if(RCREG > 5){
  2904  01A6  3006               	movlw	6
  2905  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2906  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2907  01A9  021A               	subwf	26,w	;volatile
  2908  01AA  1C03               	skipc
  2909  01AB  29AD               	goto	u1301
  2910  01AC  29AE               	goto	u1300
  2911  01AD                     u1301:
  2912  01AD  29B4               	goto	l150
  2913  01AE                     u1300:
  2914  01AE                     l1737:
  2915                           
  2916                           ;mainM.c: 228:            printf("Elija un valor menor o igual a 5\r");
  2917  01AE  300B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2918  01AF  120A  118A  21C0  120A  118A  	fcall	_printf
  2919  01B4                     l150:
  2920  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2921  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2922  01B6  1E8C               	btfss	12,5	;volatile
  2923  01B7  29B9               	goto	u1311
  2924  01B8  29BA               	goto	u1310
  2925  01B9                     u1311:
  2926  01B9  29B4               	goto	l150
  2927  01BA                     u1310:
  2928  01BA                     l1739:
  2929                           
  2930                           ;mainM.c: 231:        uu = RCREG -48;
  2931  01BA  081A               	movf	26,w	;volatile
  2932  01BB  3ED0               	addlw	208
  2933  01BC  00D9               	movwf	??_checkU
  2934  01BD  0859               	movf	??_checkU,w
  2935  01BE  00A2               	movwf	_uu
  2936  01BF                     l153:
  2937  01BF  0008               	return
  2938  01C0                     __end_of_checkU:
  2939                           
  2940                           	psect	text14
  2941  018C                     __ptext14:	
  2942 ;; *************** function _checkD *****************
  2943 ;; Defined at:
  2944 ;;		line 218 in file "mainM.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       1       0       0       0
  2961 ;;      Totals:         0       1       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    3
  2965 ;; This function calls:
  2966 ;;		_printf
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _checkD
  2974  018C                     _checkD:
  2975  018C                     l1729:	
  2976                           ;incstack = 0
  2977                           ; Regs used in _checkD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2978                           
  2979                           
  2980                           ;mainM.c: 219:     if(RCREG > 5){
  2981  018C  3006               	movlw	6
  2982  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2983  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2984  018F  021A               	subwf	26,w	;volatile
  2985  0190  1C03               	skipc
  2986  0191  2993               	goto	u1281
  2987  0192  2994               	goto	u1280
  2988  0193                     u1281:
  2989  0193  299A               	goto	l143
  2990  0194                     u1280:
  2991  0194                     l1731:
  2992                           
  2993                           ;mainM.c: 220:            printf("Elija un valor menor o igual a 5\r");
  2994  0194  300B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2995  0195  120A  118A  21C0  120A  118A  	fcall	_printf
  2996  019A                     l143:
  2997  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2998  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2999  019C  1E8C               	btfss	12,5	;volatile
  3000  019D  299F               	goto	u1291
  3001  019E  29A0               	goto	u1290
  3002  019F                     u1291:
  3003  019F  299A               	goto	l143
  3004  01A0                     u1290:
  3005  01A0                     l1733:
  3006                           
  3007                           ;mainM.c: 223:        dd = RCREG -48;
  3008  01A0  081A               	movf	26,w	;volatile
  3009  01A1  3ED0               	addlw	208
  3010  01A2  00D9               	movwf	??_checkD
  3011  01A3  0859               	movf	??_checkD,w
  3012  01A4  00A3               	movwf	_dd
  3013  01A5                     l146:
  3014  01A5  0008               	return
  3015  01A6                     __end_of_checkD:
  3016                           
  3017                           	psect	text15
  3018  0172                     __ptext15:	
  3019 ;; *************** function _checkC *****************
  3020 ;; Defined at:
  3021 ;;		line 210 in file "mainM.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0
  3037 ;;      Temps:          0       1       0       0       0
  3038 ;;      Totals:         0       1       0       0       0
  3039 ;;Total ram usage:        1 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    3
  3042 ;; This function calls:
  3043 ;;		_printf
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _checkC
  3051  0172                     _checkC:
  3052  0172                     l1723:	
  3053                           ;incstack = 0
  3054                           ; Regs used in _checkC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3055                           
  3056                           
  3057                           ;mainM.c: 211:     if(RCREG > 2){
  3058  0172  3003               	movlw	3
  3059  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0175  021A               	subwf	26,w	;volatile
  3062  0176  1C03               	skipc
  3063  0177  2979               	goto	u1261
  3064  0178  297A               	goto	u1260
  3065  0179                     u1261:
  3066  0179  2980               	goto	l136
  3067  017A                     u1260:
  3068  017A                     l1725:
  3069                           
  3070                           ;mainM.c: 212:            printf("Elija un valor entre 0 y 2\r");
  3071  017A  304A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3072  017B  120A  118A  21C0  120A  118A  	fcall	_printf
  3073  0180                     l136:
  3074  0180  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0181  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0182  1E8C               	btfss	12,5	;volatile
  3077  0183  2985               	goto	u1271
  3078  0184  2986               	goto	u1270
  3079  0185                     u1271:
  3080  0185  2980               	goto	l136
  3081  0186                     u1270:
  3082  0186                     l1727:
  3083                           
  3084                           ;mainM.c: 215:        cc = RCREG -48;
  3085  0186  081A               	movf	26,w	;volatile
  3086  0187  3ED0               	addlw	208
  3087  0188  00D9               	movwf	??_checkC
  3088  0189  0859               	movf	??_checkC,w
  3089  018A  00A4               	movwf	_cc
  3090  018B                     l139:
  3091  018B  0008               	return
  3092  018C                     __end_of_checkC:
  3093                           
  3094                           	psect	text16
  3095  01C0                     __ptext16:	
  3096 ;; *************** function _printf *****************
  3097 ;; Defined at:
  3098 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  f               1    wreg     PTR const unsigned char 
  3101 ;;		 -> STR_15(34), STR_14(34), STR_13(28), STR_12(3), 
  3102 ;;		 -> STR_11(2), STR_10(7), STR_9(3), STR_8(2), 
  3103 ;;		 -> STR_7(8), STR_3(28), STR_2(28), STR_1(29), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  3106 ;;		 -> STR_15(34), STR_14(34), STR_13(28), STR_12(3), 
  3107 ;;		 -> STR_11(2), STR_10(7), STR_9(3), STR_8(2), 
  3108 ;;		 -> STR_7(8), STR_3(28), STR_2(28), STR_1(29), 
  3109 ;;  pb              2   15[BANK0 ] struct __prbuf
  3110 ;;  ap              1   13[BANK0 ] PTR void [1]
  3111 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  2   18[None  ] int 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         0       0       0       0       0
  3122 ;;      Locals:         0       4       0       0       0
  3123 ;;      Temps:          0       2       0       0       0
  3124 ;;      Totals:         0       6       0       0       0
  3125 ;;Total ram usage:        6 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    2
  3128 ;; This function calls:
  3129 ;;		__doprnt
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;;		_msj1
  3133 ;;		_msj2
  3134 ;;		_checkC
  3135 ;;		_checkD
  3136 ;;		_checkU
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _printf
  3142  01C0                     _printf:
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3146                           ;printf@f stored from wreg
  3147  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3148  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3149  01C2  00D6               	movwf	printf@f
  3150  01C3                     l1531:
  3151  01C3  01D7               	clrf	printf@pb
  3152  01C4                     l1533:
  3153  01C4  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  3154  01C5  00D3               	movwf	??_printf
  3155  01C6  0853               	movf	??_printf,w
  3156  01C7  00D8               	movwf	low ((printf@pb| 0+1))
  3157  01C8                     l1535:
  3158  01C8  3070               	movlw	(low (?_printf| 0))& (0+255)
  3159  01C9  00D3               	movwf	??_printf
  3160  01CA  0853               	movf	??_printf,w
  3161  01CB  00D5               	movwf	printf@ap
  3162  01CC                     l1537:
  3163                           
  3164                           ;	Return value of _printf is never used
  3165  01CC  0856               	movf	printf@f,w
  3166  01CD  00D3               	movwf	??_printf
  3167  01CE  0853               	movf	??_printf,w
  3168  01CF  00C8               	movwf	__doprnt@f
  3169  01D0  3055               	movlw	(low (printf@ap| 0))& (0+255)
  3170  01D1  00D4               	movwf	??_printf+1
  3171  01D2  0854               	movf	??_printf+1,w
  3172  01D3  00C9               	movwf	__doprnt@ap
  3173  01D4  3057               	movlw	(low (printf@pb| 0))& (0+255)
  3174  01D5  120A  118A  2535  120A  118A  	fcall	__doprnt
  3175  01DA                     l767:
  3176  01DA  0008               	return
  3177  01DB                     __end_of_printf:
  3178                           
  3179                           	psect	text17
  3180  0535                     __ptext17:	
  3181 ;; *************** function __doprnt *****************
  3182 ;; Defined at:
  3183 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  pb              1    wreg     PTR struct __prbuf
  3186 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3187 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3188 ;;		 -> STR_15(34), STR_14(34), STR_13(28), STR_12(3), 
  3189 ;;		 -> STR_11(2), STR_10(7), STR_9(3), STR_8(2), 
  3190 ;;		 -> STR_7(8), STR_6(3), STR_5(3), STR_4(3), 
  3191 ;;		 -> STR_3(28), STR_2(28), STR_1(29), 
  3192 ;;  ap              1    1[BANK0 ] PTR PTR void 
  3193 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  pb              1   10[BANK0 ] PTR struct __prbuf
  3196 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3197 ;;  tmpval          4    0        struct .
  3198 ;;  val             2    7[BANK0 ] unsigned int 
  3199 ;;  cp              2    0        PTR const unsigned char 
  3200 ;;  len             2    0        unsigned int 
  3201 ;;  c               1    9[BANK0 ] unsigned char 
  3202 ;;  prec            1    6[BANK0 ] char 
  3203 ;;  flag            1    5[BANK0 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  2    0[BANK0 ] int 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       2       0       0       0
  3214 ;;      Locals:         0       6       0       0       0
  3215 ;;      Temps:          0       3       0       0       0
  3216 ;;      Totals:         0      11       0       0       0
  3217 ;;Total ram usage:       11 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    1
  3220 ;; This function calls:
  3221 ;;		Absolute function
  3222 ;;		___lwdiv
  3223 ;;		___lwmod
  3224 ;;		_putch
  3225 ;; This function is called by:
  3226 ;;		_printf
  3227 ;;		_sprintf
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function __doprnt
  3233  0535                     __doprnt:
  3234                           
  3235                           ;incstack = 0
  3236                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3237                           ;__doprnt@pb stored from wreg
  3238  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0537  00D2               	movwf	__doprnt@pb
  3241  0538                     l1459:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3244  0538  2E52               	goto	l1521
  3245  0539                     l1461:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3248  0539  3025               	movlw	37
  3249  053A  0651               	xorwf	__doprnt@c,w
  3250  053B  1903               	btfsc	3,2
  3251  053C  2D3E               	goto	u891
  3252  053D  2D3F               	goto	u890
  3253  053E                     u891:
  3254  053E  2D65               	goto	l1471
  3255  053F                     u890:
  3256  053F                     l1463:
  3257  053F  0A52               	incf	__doprnt@pb,w
  3258  0540  0084               	movwf	4
  3259  0541  1383               	bcf	3,7	;select IRP bank0
  3260  0542  0800               	movf	0,w
  3261  0543  1903               	btfsc	3,2
  3262  0544  2D46               	goto	u901
  3263  0545  2D47               	goto	u900
  3264  0546                     u901:
  3265  0546  2D56               	goto	l1467
  3266  0547                     u900:
  3267  0547                     l1465:
  3268  0547  0851               	movf	__doprnt@c,w
  3269  0548  00CA               	movwf	??__doprnt
  3270  0549  084A               	movf	??__doprnt,w
  3271  054A  00F0               	movwf	putch@dato
  3272  054B  0A52               	incf	__doprnt@pb,w
  3273  054C  0084               	movwf	4
  3274  054D  0800               	movf	0,w
  3275  054E  120A  118A  2003  120A  118A  	fcall	fptable
  3276  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0555  2D38               	goto	l1459
  3279  0556                     l1467:
  3280  0556  0851               	movf	__doprnt@c,w
  3281  0557  00CA               	movwf	??__doprnt
  3282  0558  0852               	movf	__doprnt@pb,w
  3283  0559  0084               	movwf	4
  3284  055A  0800               	movf	0,w
  3285  055B  0084               	movwf	4
  3286  055C  084A               	movf	??__doprnt,w
  3287  055D  0080               	movwf	0
  3288  055E                     l1469:
  3289  055E  3001               	movlw	1
  3290  055F  00CA               	movwf	??__doprnt
  3291  0560  0852               	movf	__doprnt@pb,w
  3292  0561  0084               	movwf	4
  3293  0562  084A               	movf	??__doprnt,w
  3294  0563  0780               	addwf	0,f
  3295  0564  2D38               	goto	l1459
  3296  0565                     l1471:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3299  0565  01CD               	clrf	__doprnt@flag
  3300  0566                     l1475:	
  3301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3302                           
  3303  0566  3001               	movlw	1
  3304  0567  07C8               	addwf	__doprnt@f,f
  3305  0568  30FF               	movlw	-1
  3306  0569  0748               	addwf	__doprnt@f,w
  3307  056A  0084               	movwf	4
  3308  056B  120A  118A  200C  120A  118A  	fcall	stringdir
  3309  0570  00D1               	movwf	__doprnt@c
  3310  0571  00CA               	movwf	??__doprnt
  3311  0572  01CB               	clrf	??__doprnt+1
  3312                           
  3313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 1, Range of values is 0 to 0
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte            4     3 (average)
  3319                           ; direct_byte           11     8 (fixed)
  3320                           ; jumptable            260     6 (fixed)
  3321                           ;	Chosen strategy is simple_byte
  3322  0573  084B               	movf	??__doprnt+1,w
  3323  0574  3A00               	xorlw	0	; case 0
  3324  0575  1903               	skipnz
  3325  0576  2D78               	goto	l1899
  3326  0577  2E52               	goto	l1521
  3327  0578                     l1899:
  3328                           
  3329                           ; Switch size 1, requested type "simple"
  3330                           ; Number of cases is 3, Range of values is 0 to 105
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte           10     6 (average)
  3334                           ; jumptable            260     6 (fixed)
  3335                           ;	Chosen strategy is simple_byte
  3336  0578  084A               	movf	??__doprnt,w
  3337  0579  3A00               	xorlw	0	; case 0
  3338  057A  1903               	skipnz
  3339  057B  2E66               	goto	l1523
  3340  057C  3A64               	xorlw	100	; case 100
  3341  057D  1903               	skipnz
  3342  057E  2D83               	goto	l1477
  3343  057F  3A0D               	xorlw	13	; case 105
  3344  0580  1903               	skipnz
  3345  0581  2D83               	goto	l1477
  3346  0582  2E52               	goto	l1521
  3347  0583                     l1477:
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3350  0583  0849               	movf	__doprnt@ap,w
  3351  0584  0084               	movwf	4
  3352  0585  1383               	bcf	3,7	;select IRP bank0
  3353  0586  0800               	movf	0,w
  3354  0587  00CA               	movwf	??__doprnt
  3355  0588  3002               	movlw	2
  3356  0589  0780               	addwf	0,f
  3357  058A  084A               	movf	??__doprnt,w
  3358  058B  0084               	movwf	4
  3359  058C  0800               	movf	0,w
  3360  058D  00CF               	movwf	__doprnt@val
  3361  058E  0A84               	incf	4,f
  3362  058F  0800               	movf	0,w
  3363  0590  00D0               	movwf	__doprnt@val+1
  3364  0591                     l1479:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3367  0591  1FD0               	btfss	__doprnt@val+1,7
  3368  0592  2D94               	goto	u911
  3369  0593  2D95               	goto	u910
  3370  0594                     u911:
  3371  0594  2D9E               	goto	l1485
  3372  0595                     u910:
  3373  0595                     l1481:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3376  0595  3003               	movlw	3
  3377  0596  00CA               	movwf	??__doprnt
  3378  0597  084A               	movf	??__doprnt,w
  3379  0598  04CD               	iorwf	__doprnt@flag,f
  3380  0599                     l1483:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3383  0599  09CF               	comf	__doprnt@val,f
  3384  059A  09D0               	comf	__doprnt@val+1,f
  3385  059B  0ACF               	incf	__doprnt@val,f
  3386  059C  1903               	skipnz
  3387  059D  0AD0               	incf	__doprnt@val+1,f
  3388  059E                     l1485:
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3391  059E  01D1               	clrf	__doprnt@c
  3392  059F  0AD1               	incf	__doprnt@c,f
  3393  05A0                     l1491:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3396  05A0  0851               	movf	__doprnt@c,w
  3397  05A1  00CA               	movwf	??__doprnt
  3398  05A2  074A               	addwf	??__doprnt,w
  3399  05A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3400  05A4  0084               	movwf	4
  3401  05A5  120A  118A  200C  120A  118A  	fcall	stringdir
  3402  05AA  00CB               	movwf	??__doprnt+1
  3403  05AB  120A  118A  200C  120A  118A  	fcall	stringdir
  3404  05B0  00CC               	movwf	??__doprnt+2
  3405  05B1  084C               	movf	??__doprnt+2,w
  3406  05B2  0250               	subwf	__doprnt@val+1,w
  3407  05B3  1D03               	skipz
  3408  05B4  2DB7               	goto	u925
  3409  05B5  084B               	movf	??__doprnt+1,w
  3410  05B6  024F               	subwf	__doprnt@val,w
  3411  05B7                     u925:
  3412  05B7  1803               	skipnc
  3413  05B8  2DBA               	goto	u921
  3414  05B9  2DBB               	goto	u920
  3415  05BA                     u921:
  3416  05BA  2DBC               	goto	l1495
  3417  05BB                     u920:
  3418  05BB  2DC6               	goto	l1497
  3419  05BC                     l1495:
  3420  05BC  3001               	movlw	1
  3421  05BD  00CA               	movwf	??__doprnt
  3422  05BE  084A               	movf	??__doprnt,w
  3423  05BF  07D1               	addwf	__doprnt@c,f
  3424  05C0  3005               	movlw	5
  3425  05C1  0651               	xorwf	__doprnt@c,w
  3426  05C2  1D03               	btfss	3,2
  3427  05C3  2DC5               	goto	u931
  3428  05C4  2DC6               	goto	u930
  3429  05C5                     u931:
  3430  05C5  2DA0               	goto	l1491
  3431  05C6                     u930:
  3432  05C6                     l1497:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3435  05C6  084D               	movf	__doprnt@flag,w
  3436  05C7  3903               	andlw	3
  3437  05C8  1903               	btfsc	3,2
  3438  05C9  2DCB               	goto	u941
  3439  05CA  2DCC               	goto	u940
  3440  05CB                     u941:
  3441  05CB  2DEF               	goto	l1507
  3442  05CC                     u940:
  3443  05CC                     l1499:
  3444  05CC  0A52               	incf	__doprnt@pb,w
  3445  05CD  0084               	movwf	4
  3446  05CE  1383               	bcf	3,7	;select IRP bank0
  3447  05CF  0800               	movf	0,w
  3448  05D0  1903               	btfsc	3,2
  3449  05D1  2DD3               	goto	u951
  3450  05D2  2DD4               	goto	u950
  3451  05D3                     u951:
  3452  05D3  2DE1               	goto	l1503
  3453  05D4                     u950:
  3454  05D4                     l1501:
  3455  05D4  302D               	movlw	45
  3456  05D5  00CA               	movwf	??__doprnt
  3457  05D6  084A               	movf	??__doprnt,w
  3458  05D7  00F0               	movwf	putch@dato
  3459  05D8  0A52               	incf	__doprnt@pb,w
  3460  05D9  0084               	movwf	4
  3461  05DA  0800               	movf	0,w
  3462  05DB  120A  118A  2003  120A  118A  	fcall	fptable
  3463  05E0  2DEF               	goto	l1507
  3464  05E1                     l1503:
  3465  05E1  302D               	movlw	45
  3466  05E2  00CA               	movwf	??__doprnt
  3467  05E3  0852               	movf	__doprnt@pb,w
  3468  05E4  0084               	movwf	4
  3469  05E5  0800               	movf	0,w
  3470  05E6  0084               	movwf	4
  3471  05E7  084A               	movf	??__doprnt,w
  3472  05E8  0080               	movwf	0
  3473  05E9                     l1505:
  3474  05E9  3001               	movlw	1
  3475  05EA  00CA               	movwf	??__doprnt
  3476  05EB  0852               	movf	__doprnt@pb,w
  3477  05EC  0084               	movwf	4
  3478  05ED  084A               	movf	??__doprnt,w
  3479  05EE  0780               	addwf	0,f
  3480  05EF                     l1507:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3483  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3484  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3485  05F1  0851               	movf	__doprnt@c,w
  3486  05F2  00CA               	movwf	??__doprnt
  3487  05F3  084A               	movf	??__doprnt,w
  3488  05F4  00CE               	movwf	__doprnt@prec
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3491  05F5  2E47               	goto	l1519
  3492  05F6                     l1509:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3495  05F6  300A               	movlw	10
  3496  05F7  00F8               	movwf	___lwmod@divisor
  3497  05F8  3000               	movlw	0
  3498  05F9  00F9               	movwf	___lwmod@divisor+1
  3499  05FA  084E               	movf	__doprnt@prec,w
  3500  05FB  00CA               	movwf	??__doprnt
  3501  05FC  074A               	addwf	??__doprnt,w
  3502  05FD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3503  05FE  0084               	movwf	4
  3504  05FF  120A  118A  200C  120A  118A  	fcall	stringdir
  3505  0604  00F0               	movwf	___lwdiv@divisor
  3506  0605  120A  118A  200C  120A  118A  	fcall	stringdir
  3507  060A  00F1               	movwf	___lwdiv@divisor+1
  3508  060B  0850               	movf	__doprnt@val+1,w
  3509  060C  00F3               	movwf	___lwdiv@dividend+1
  3510  060D  084F               	movf	__doprnt@val,w
  3511  060E  00F2               	movwf	___lwdiv@dividend
  3512  060F  120A  118A  22A4  120A  118A  	fcall	___lwdiv
  3513  0614  0871               	movf	?___lwdiv+1,w
  3514  0615  00FB               	movwf	___lwmod@dividend+1
  3515  0616  0870               	movf	?___lwdiv,w
  3516  0617  00FA               	movwf	___lwmod@dividend
  3517  0618  120A  118A  226A  120A  118A  	fcall	___lwmod
  3518  061D  0878               	movf	?___lwmod,w
  3519  061E  3E30               	addlw	48
  3520  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0621  00CB               	movwf	??__doprnt+1
  3523  0622  084B               	movf	??__doprnt+1,w
  3524  0623  00D1               	movwf	__doprnt@c
  3525  0624                     l1511:
  3526  0624  0A52               	incf	__doprnt@pb,w
  3527  0625  0084               	movwf	4
  3528  0626  1383               	bcf	3,7	;select IRP bank0
  3529  0627  0800               	movf	0,w
  3530  0628  1903               	btfsc	3,2
  3531  0629  2E2B               	goto	u961
  3532  062A  2E2C               	goto	u960
  3533  062B                     u961:
  3534  062B  2E39               	goto	l1515
  3535  062C                     u960:
  3536  062C                     l1513:
  3537  062C  0851               	movf	__doprnt@c,w
  3538  062D  00CA               	movwf	??__doprnt
  3539  062E  084A               	movf	??__doprnt,w
  3540  062F  00F0               	movwf	putch@dato
  3541  0630  0A52               	incf	__doprnt@pb,w
  3542  0631  0084               	movwf	4
  3543  0632  0800               	movf	0,w
  3544  0633  120A  118A  2003  120A  118A  	fcall	fptable
  3545  0638  2E47               	goto	l1519
  3546  0639                     l1515:
  3547  0639  0851               	movf	__doprnt@c,w
  3548  063A  00CA               	movwf	??__doprnt
  3549  063B  0852               	movf	__doprnt@pb,w
  3550  063C  0084               	movwf	4
  3551  063D  0800               	movf	0,w
  3552  063E  0084               	movwf	4
  3553  063F  084A               	movf	??__doprnt,w
  3554  0640  0080               	movwf	0
  3555  0641                     l1517:
  3556  0641  3001               	movlw	1
  3557  0642  00CA               	movwf	??__doprnt
  3558  0643  0852               	movf	__doprnt@pb,w
  3559  0644  0084               	movwf	4
  3560  0645  084A               	movf	??__doprnt,w
  3561  0646  0780               	addwf	0,f
  3562  0647                     l1519:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3565  0647  30FF               	movlw	255
  3566  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3568  064A  00CA               	movwf	??__doprnt
  3569  064B  084A               	movf	??__doprnt,w
  3570  064C  07CE               	addwf	__doprnt@prec,f
  3571  064D  0A4E               	incf	__doprnt@prec,w
  3572  064E  1D03               	btfss	3,2
  3573  064F  2E51               	goto	u971
  3574  0650  2E52               	goto	u970
  3575  0651                     u971:
  3576  0651  2DF6               	goto	l1509
  3577  0652                     u970:
  3578  0652                     l1521:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3581  0652  3001               	movlw	1
  3582  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0655  07C8               	addwf	__doprnt@f,f
  3585  0656  30FF               	movlw	-1
  3586  0657  0748               	addwf	__doprnt@f,w
  3587  0658  0084               	movwf	4
  3588  0659  120A  118A  200C  120A  118A  	fcall	stringdir
  3589  065E  00CA               	movwf	??__doprnt
  3590  065F  084A               	movf	??__doprnt,w
  3591  0660  00D1               	movwf	__doprnt@c
  3592  0661  0851               	movf	__doprnt@c,w
  3593  0662  1D03               	btfss	3,2
  3594  0663  2E65               	goto	u981
  3595  0664  2E66               	goto	u980
  3596  0665                     u981:
  3597  0665  2D39               	goto	l1461
  3598  0666                     u980:
  3599  0666                     l1523:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3602  0666  01C8               	clrf	?__doprnt
  3603  0667  01C9               	clrf	?__doprnt+1
  3604  0668                     l805:
  3605  0668  0008               	return
  3606  0669                     __end_of__doprnt:
  3607                           
  3608                           	psect	text18
  3609  0138                     __ptext18:	
  3610 ;; *************** function _putch *****************
  3611 ;; Defined at:
  3612 ;;		line 172 in file "mainM.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  dato            1    0[COMMON] unsigned char 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3626 ;;      Params:         1       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0
  3629 ;;      Totals:         1       0       0       0       0
  3630 ;;Total ram usage:        1 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_printf
  3636 ;;		__doprnt
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _putch
  3642  0138                     _putch:
  3643  0138                     l1405:	
  3644                           ;incstack = 0
  3645                           ; Regs used in _putch: [wreg]
  3646                           
  3647  0138                     l123:	
  3648                           ;mainM.c: 173:     while(TXIF == 0);
  3649                           
  3650  0138  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0139  1303               	bcf	3,6	;RP1=0, select bank0
  3652  013A  1E0C               	btfss	12,4	;volatile
  3653  013B  293D               	goto	u751
  3654  013C  293E               	goto	u750
  3655  013D                     u751:
  3656  013D  2938               	goto	l123
  3657  013E                     u750:
  3658  013E                     l1407:
  3659                           
  3660                           ;mainM.c: 174:     TXREG = dato;
  3661  013E  0870               	movf	putch@dato,w
  3662  013F  0099               	movwf	25	;volatile
  3663  0140                     l126:
  3664  0140  0008               	return
  3665  0141                     __end_of_putch:
  3666                           
  3667                           	psect	text19
  3668  026A                     __ptext19:	
  3669 ;; *************** function ___lwmod *****************
  3670 ;; Defined at:
  3671 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  divisor         2    8[COMMON] unsigned int 
  3674 ;;  dividend        2   10[COMMON] unsigned int 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  counter         1   13[COMMON] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  2    8[COMMON] unsigned int 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3686 ;;      Params:         4       0       0       0       0
  3687 ;;      Locals:         1       0       0       0       0
  3688 ;;      Temps:          1       0       0       0       0
  3689 ;;      Totals:         6       0       0       0       0
  3690 ;;Total ram usage:        6 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		__doprnt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function ___lwmod
  3701  026A                     ___lwmod:
  3702  026A                     l1437:	
  3703                           ;incstack = 0
  3704                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3705                           
  3706  026A  0878               	movf	___lwmod@divisor,w
  3707  026B  0479               	iorwf	___lwmod@divisor+1,w
  3708  026C  1903               	btfsc	3,2
  3709  026D  2A6F               	goto	u831
  3710  026E  2A70               	goto	u830
  3711  026F                     u831:
  3712  026F  2A9F               	goto	l1455
  3713  0270                     u830:
  3714  0270                     l1439:
  3715  0270  01FD               	clrf	___lwmod@counter
  3716  0271  0AFD               	incf	___lwmod@counter,f
  3717  0272  2A7E               	goto	l1445
  3718  0273                     l1441:
  3719  0273  3001               	movlw	1
  3720  0274                     u845:
  3721  0274  1003               	clrc
  3722  0275  0DF8               	rlf	___lwmod@divisor,f
  3723  0276  0DF9               	rlf	___lwmod@divisor+1,f
  3724  0277  3EFF               	addlw	-1
  3725  0278  1D03               	skipz
  3726  0279  2A74               	goto	u845
  3727  027A                     l1443:
  3728  027A  3001               	movlw	1
  3729  027B  00FC               	movwf	??___lwmod
  3730  027C  087C               	movf	??___lwmod,w
  3731  027D  07FD               	addwf	___lwmod@counter,f
  3732  027E                     l1445:
  3733  027E  1FF9               	btfss	___lwmod@divisor+1,7
  3734  027F  2A81               	goto	u851
  3735  0280  2A82               	goto	u850
  3736  0281                     u851:
  3737  0281  2A73               	goto	l1441
  3738  0282                     u850:
  3739  0282                     l1447:
  3740  0282  0879               	movf	___lwmod@divisor+1,w
  3741  0283  027B               	subwf	___lwmod@dividend+1,w
  3742  0284  1D03               	skipz
  3743  0285  2A88               	goto	u865
  3744  0286  0878               	movf	___lwmod@divisor,w
  3745  0287  027A               	subwf	___lwmod@dividend,w
  3746  0288                     u865:
  3747  0288  1C03               	skipc
  3748  0289  2A8B               	goto	u861
  3749  028A  2A8C               	goto	u860
  3750  028B                     u861:
  3751  028B  2A92               	goto	l1451
  3752  028C                     u860:
  3753  028C                     l1449:
  3754  028C  0878               	movf	___lwmod@divisor,w
  3755  028D  02FA               	subwf	___lwmod@dividend,f
  3756  028E  0879               	movf	___lwmod@divisor+1,w
  3757  028F  1C03               	skipc
  3758  0290  03FB               	decf	___lwmod@dividend+1,f
  3759  0291  02FB               	subwf	___lwmod@dividend+1,f
  3760  0292                     l1451:
  3761  0292  3001               	movlw	1
  3762  0293                     u875:
  3763  0293  1003               	clrc
  3764  0294  0CF9               	rrf	___lwmod@divisor+1,f
  3765  0295  0CF8               	rrf	___lwmod@divisor,f
  3766  0296  3EFF               	addlw	-1
  3767  0297  1D03               	skipz
  3768  0298  2A93               	goto	u875
  3769  0299                     l1453:
  3770  0299  3001               	movlw	1
  3771  029A  02FD               	subwf	___lwmod@counter,f
  3772  029B  1D03               	btfss	3,2
  3773  029C  2A9E               	goto	u881
  3774  029D  2A9F               	goto	u880
  3775  029E                     u881:
  3776  029E  2A82               	goto	l1447
  3777  029F                     u880:
  3778  029F                     l1455:
  3779  029F  087B               	movf	___lwmod@dividend+1,w
  3780  02A0  00F9               	movwf	?___lwmod+1
  3781  02A1  087A               	movf	___lwmod@dividend,w
  3782  02A2  00F8               	movwf	?___lwmod
  3783  02A3                     l572:
  3784  02A3  0008               	return
  3785  02A4                     __end_of___lwmod:
  3786                           
  3787                           	psect	text20
  3788  02A4                     __ptext20:	
  3789 ;; *************** function ___lwdiv *****************
  3790 ;; Defined at:
  3791 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  divisor         2    0[COMMON] unsigned int 
  3794 ;;  dividend        2    2[COMMON] unsigned int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  quotient        2    5[COMMON] unsigned int 
  3797 ;;  counter         1    7[COMMON] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    0[COMMON] unsigned int 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         4       0       0       0       0
  3808 ;;      Locals:         3       0       0       0       0
  3809 ;;      Temps:          1       0       0       0       0
  3810 ;;      Totals:         8       0       0       0       0
  3811 ;;Total ram usage:        8 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		__doprnt
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function ___lwdiv
  3822  02A4                     ___lwdiv:
  3823  02A4                     l1411:	
  3824                           ;incstack = 0
  3825                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3826                           
  3827  02A4  01F5               	clrf	___lwdiv@quotient
  3828  02A5  01F6               	clrf	___lwdiv@quotient+1
  3829  02A6                     l1413:
  3830  02A6  0870               	movf	___lwdiv@divisor,w
  3831  02A7  0471               	iorwf	___lwdiv@divisor+1,w
  3832  02A8  1903               	btfsc	3,2
  3833  02A9  2AAB               	goto	u761
  3834  02AA  2AAC               	goto	u760
  3835  02AB                     u761:
  3836  02AB  2AE3               	goto	l1433
  3837  02AC                     u760:
  3838  02AC                     l1415:
  3839  02AC  01F7               	clrf	___lwdiv@counter
  3840  02AD  0AF7               	incf	___lwdiv@counter,f
  3841  02AE  2ABA               	goto	l1421
  3842  02AF                     l1417:
  3843  02AF  3001               	movlw	1
  3844  02B0                     u775:
  3845  02B0  1003               	clrc
  3846  02B1  0DF0               	rlf	___lwdiv@divisor,f
  3847  02B2  0DF1               	rlf	___lwdiv@divisor+1,f
  3848  02B3  3EFF               	addlw	-1
  3849  02B4  1D03               	skipz
  3850  02B5  2AB0               	goto	u775
  3851  02B6                     l1419:
  3852  02B6  3001               	movlw	1
  3853  02B7  00F4               	movwf	??___lwdiv
  3854  02B8  0874               	movf	??___lwdiv,w
  3855  02B9  07F7               	addwf	___lwdiv@counter,f
  3856  02BA                     l1421:
  3857  02BA  1FF1               	btfss	___lwdiv@divisor+1,7
  3858  02BB  2ABD               	goto	u781
  3859  02BC  2ABE               	goto	u780
  3860  02BD                     u781:
  3861  02BD  2AAF               	goto	l1417
  3862  02BE                     u780:
  3863  02BE                     l1423:
  3864  02BE  3001               	movlw	1
  3865  02BF                     u795:
  3866  02BF  1003               	clrc
  3867  02C0  0DF5               	rlf	___lwdiv@quotient,f
  3868  02C1  0DF6               	rlf	___lwdiv@quotient+1,f
  3869  02C2  3EFF               	addlw	-1
  3870  02C3  1D03               	skipz
  3871  02C4  2ABF               	goto	u795
  3872  02C5  0871               	movf	___lwdiv@divisor+1,w
  3873  02C6  0273               	subwf	___lwdiv@dividend+1,w
  3874  02C7  1D03               	skipz
  3875  02C8  2ACB               	goto	u805
  3876  02C9  0870               	movf	___lwdiv@divisor,w
  3877  02CA  0272               	subwf	___lwdiv@dividend,w
  3878  02CB                     u805:
  3879  02CB  1C03               	skipc
  3880  02CC  2ACE               	goto	u801
  3881  02CD  2ACF               	goto	u800
  3882  02CE                     u801:
  3883  02CE  2AD6               	goto	l1429
  3884  02CF                     u800:
  3885  02CF                     l1425:
  3886  02CF  0870               	movf	___lwdiv@divisor,w
  3887  02D0  02F2               	subwf	___lwdiv@dividend,f
  3888  02D1  0871               	movf	___lwdiv@divisor+1,w
  3889  02D2  1C03               	skipc
  3890  02D3  03F3               	decf	___lwdiv@dividend+1,f
  3891  02D4  02F3               	subwf	___lwdiv@dividend+1,f
  3892  02D5                     l1427:
  3893  02D5  1475               	bsf	___lwdiv@quotient,0
  3894  02D6                     l1429:
  3895  02D6  3001               	movlw	1
  3896  02D7                     u815:
  3897  02D7  1003               	clrc
  3898  02D8  0CF1               	rrf	___lwdiv@divisor+1,f
  3899  02D9  0CF0               	rrf	___lwdiv@divisor,f
  3900  02DA  3EFF               	addlw	-1
  3901  02DB  1D03               	skipz
  3902  02DC  2AD7               	goto	u815
  3903  02DD                     l1431:
  3904  02DD  3001               	movlw	1
  3905  02DE  02F7               	subwf	___lwdiv@counter,f
  3906  02DF  1D03               	btfss	3,2
  3907  02E0  2AE2               	goto	u821
  3908  02E1  2AE3               	goto	u820
  3909  02E2                     u821:
  3910  02E2  2ABE               	goto	l1423
  3911  02E3                     u820:
  3912  02E3                     l1433:
  3913  02E3  0876               	movf	___lwdiv@quotient+1,w
  3914  02E4  00F1               	movwf	?___lwdiv+1
  3915  02E5  0875               	movf	___lwdiv@quotient,w
  3916  02E6  00F0               	movwf	?___lwdiv
  3917  02E7                     l562:
  3918  02E7  0008               	return
  3919  02E8                     __end_of___lwdiv:
  3920                           
  3921                           	psect	text21
  3922  04BA                     __ptext21:	
  3923 ;; *************** function _atoi *****************
  3924 ;; Defined at:
  3925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  s               1    wreg     PTR const unsigned char 
  3928 ;;		 -> BFFR1(10), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  s               1   13[COMMON] PTR const unsigned char 
  3931 ;;		 -> BFFR1(10), 
  3932 ;;  a               2   11[COMMON] int 
  3933 ;;  sign            1   10[COMMON] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2    6[COMMON] int 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3943 ;;      Params:         2       0       0       0       0
  3944 ;;      Locals:         4       0       0       0       0
  3945 ;;      Temps:          2       0       0       0       0
  3946 ;;      Totals:         8       0       0       0       0
  3947 ;;Total ram usage:        8 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    1
  3950 ;; This function calls:
  3951 ;;		___wmul
  3952 ;;		_isdigit
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _atoi
  3960  04BA                     _atoi:
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3964                           ;atoi@s stored from wreg
  3965  04BA  00FD               	movwf	atoi@s
  3966  04BB                     l1763:
  3967  04BB  2CC0               	goto	l1767
  3968  04BC                     l1765:
  3969  04BC  3001               	movlw	1
  3970  04BD  00F8               	movwf	??_atoi
  3971  04BE  0878               	movf	??_atoi,w
  3972  04BF  07FD               	addwf	atoi@s,f
  3973  04C0                     l1767:
  3974  04C0  087D               	movf	atoi@s,w
  3975  04C1  0084               	movwf	4
  3976  04C2  3020               	movlw	32
  3977  04C3  1383               	bcf	3,7	;select IRP bank0
  3978  04C4  0600               	xorwf	0,w
  3979  04C5  1903               	btfsc	3,2
  3980  04C6  2CC8               	goto	u1341
  3981  04C7  2CC9               	goto	u1340
  3982  04C8                     u1341:
  3983  04C8  2CBC               	goto	l1765
  3984  04C9                     u1340:
  3985  04C9                     l1769:
  3986  04C9  087D               	movf	atoi@s,w
  3987  04CA  0084               	movwf	4
  3988  04CB  3009               	movlw	9
  3989  04CC  0600               	xorwf	0,w
  3990  04CD  1903               	btfsc	3,2
  3991  04CE  2CD0               	goto	u1351
  3992  04CF  2CD1               	goto	u1350
  3993  04D0                     u1351:
  3994  04D0  2CBC               	goto	l1765
  3995  04D1                     u1350:
  3996  04D1                     l1771:
  3997  04D1  01FB               	clrf	atoi@a
  3998  04D2  01FC               	clrf	atoi@a+1
  3999  04D3  01FA               	clrf	atoi@sign
  4000  04D4                     l1773:
  4001  04D4  087D               	movf	atoi@s,w
  4002  04D5  0084               	movwf	4
  4003  04D6  302D               	movlw	45
  4004  04D7  0600               	xorwf	0,w
  4005  04D8  1D03               	btfss	3,2
  4006  04D9  2CDB               	goto	u1361
  4007  04DA  2CDC               	goto	u1360
  4008  04DB                     u1361:
  4009  04DB  2CE5               	goto	l1777
  4010  04DC                     u1360:
  4011  04DC                     l1775:
  4012  04DC  3001               	movlw	1
  4013  04DD  00F8               	movwf	??_atoi
  4014  04DE  0878               	movf	??_atoi,w
  4015  04DF  07FA               	addwf	atoi@sign,f
  4016  04E0  3001               	movlw	1
  4017  04E1  00F8               	movwf	??_atoi
  4018  04E2  0878               	movf	??_atoi,w
  4019  04E3  07FD               	addwf	atoi@s,f
  4020  04E4  2D13               	goto	l1785
  4021  04E5                     l1777:
  4022  04E5  087D               	movf	atoi@s,w
  4023  04E6  0084               	movwf	4
  4024  04E7  302B               	movlw	43
  4025  04E8  0600               	xorwf	0,w
  4026  04E9  1D03               	btfss	3,2
  4027  04EA  2CEC               	goto	u1371
  4028  04EB  2CED               	goto	u1370
  4029  04EC                     u1371:
  4030  04EC  2D13               	goto	l1785
  4031  04ED                     u1370:
  4032  04ED                     l1779:
  4033  04ED  3001               	movlw	1
  4034  04EE  00F8               	movwf	??_atoi
  4035  04EF  0878               	movf	??_atoi,w
  4036  04F0  07FD               	addwf	atoi@s,f
  4037  04F1  2D13               	goto	l1785
  4038  04F2                     l1781:
  4039  04F2  087D               	movf	atoi@s,w
  4040  04F3  0084               	movwf	4
  4041  04F4  087C               	movf	atoi@a+1,w
  4042  04F5  00F1               	movwf	___wmul@multiplier+1
  4043  04F6  087B               	movf	atoi@a,w
  4044  04F7  00F0               	movwf	___wmul@multiplier
  4045  04F8  300A               	movlw	10
  4046  04F9  00F2               	movwf	___wmul@multiplicand
  4047  04FA  3000               	movlw	0
  4048  04FB  00F3               	movwf	___wmul@multiplicand+1
  4049  04FC  120A  118A  221C  120A  118A  	fcall	___wmul
  4050  0501  1383               	bcf	3,7	;select IRP bank0
  4051  0502  0800               	movf	0,w
  4052  0503  0770               	addwf	?___wmul,w
  4053  0504  00F8               	movwf	??_atoi
  4054  0505  3000               	movlw	0
  4055  0506  1803               	skipnc
  4056  0507  3001               	movlw	1
  4057  0508  0771               	addwf	?___wmul+1,w
  4058  0509  00F9               	movwf	??_atoi+1
  4059  050A  0878               	movf	??_atoi,w
  4060  050B  3ED0               	addlw	208
  4061  050C  00FB               	movwf	atoi@a
  4062  050D  0879               	movf	??_atoi+1,w
  4063  050E  1803               	skipnc
  4064  050F  3E01               	addlw	1
  4065  0510  3EFF               	addlw	255
  4066  0511  00FC               	movwf	atoi@a+1
  4067  0512  2CED               	goto	l1779
  4068  0513                     l1785:
  4069  0513  087D               	movf	atoi@s,w
  4070  0514  0084               	movwf	4
  4071  0515  0800               	movf	0,w
  4072  0516  120A  118A  214A  120A  118A  	fcall	_isdigit
  4073  051B  1803               	btfsc	3,0
  4074  051C  2D1E               	goto	u1381
  4075  051D  2D1F               	goto	u1380
  4076  051E                     u1381:
  4077  051E  2CF2               	goto	l1781
  4078  051F                     u1380:
  4079  051F                     l1787:
  4080  051F  087A               	movf	atoi@sign,w
  4081  0520  1903               	btfsc	3,2
  4082  0521  2D23               	goto	u1391
  4083  0522  2D24               	goto	u1390
  4084  0523                     u1391:
  4085  0523  2D30               	goto	l1793
  4086  0524                     u1390:
  4087  0524                     l1789:
  4088  0524  097B               	comf	atoi@a,w
  4089  0525  00F8               	movwf	??_atoi
  4090  0526  097C               	comf	atoi@a+1,w
  4091  0527  00F9               	movwf	??_atoi+1
  4092  0528  0AF8               	incf	??_atoi,f
  4093  0529  1903               	skipnz
  4094  052A  0AF9               	incf	??_atoi+1,f
  4095  052B  0878               	movf	??_atoi,w
  4096  052C  00F6               	movwf	?_atoi
  4097  052D  0879               	movf	??_atoi+1,w
  4098  052E  00F7               	movwf	?_atoi+1
  4099  052F  2D34               	goto	l753
  4100  0530                     l1793:
  4101  0530  087C               	movf	atoi@a+1,w
  4102  0531  00F7               	movwf	?_atoi+1
  4103  0532  087B               	movf	atoi@a,w
  4104  0533  00F6               	movwf	?_atoi
  4105  0534                     l753:
  4106  0534  0008               	return
  4107  0535                     __end_of_atoi:
  4108                           
  4109                           	psect	text22
  4110  014A                     __ptext22:	
  4111 ;; *************** function _isdigit *****************
  4112 ;; Defined at:
  4113 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  c               1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  c               1    1[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;		None               void
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         0       0       0       0       0
  4128 ;;      Locals:         2       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0
  4130 ;;      Totals:         2       0       0       0       0
  4131 ;;Total ram usage:        2 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_atoi
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function _isdigit
  4142  014A                     _isdigit:
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4146                           ;isdigit@c stored from wreg
  4147  014A  00F1               	movwf	isdigit@c
  4148  014B                     l1649:
  4149  014B  01F0               	clrf	_isdigit$1014
  4150  014C                     l1651:
  4151  014C  303A               	movlw	58
  4152  014D  0271               	subwf	isdigit@c,w
  4153  014E  1803               	skipnc
  4154  014F  2951               	goto	u1241
  4155  0150  2952               	goto	u1240
  4156  0151                     u1241:
  4157  0151  295A               	goto	l1657
  4158  0152                     u1240:
  4159  0152                     l1653:
  4160  0152  3030               	movlw	48
  4161  0153  0271               	subwf	isdigit@c,w
  4162  0154  1C03               	skipc
  4163  0155  2957               	goto	u1251
  4164  0156  2958               	goto	u1250
  4165  0157                     u1251:
  4166  0157  295A               	goto	l1657
  4167  0158                     u1250:
  4168  0158                     l1655:
  4169  0158  01F0               	clrf	_isdigit$1014
  4170  0159  0AF0               	incf	_isdigit$1014,f
  4171  015A                     l1657:
  4172  015A  0C70               	rrf	_isdigit$1014,w
  4173  015B                     l758:
  4174  015B  0008               	return
  4175  015C                     __end_of_isdigit:
  4176                           
  4177                           	psect	text23
  4178  021C                     __ptext23:	
  4179 ;; *************** function ___wmul *****************
  4180 ;; Defined at:
  4181 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  multiplier      2    0[COMMON] unsigned int 
  4184 ;;  multiplicand    2    2[COMMON] unsigned int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  product         2    4[COMMON] unsigned int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    0[COMMON] unsigned int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         4       0       0       0       0
  4197 ;;      Locals:         2       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0
  4199 ;;      Totals:         6       0       0       0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_atoi
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function ___wmul
  4211  021C                     ___wmul:
  4212  021C                     l1553:	
  4213                           ;incstack = 0
  4214                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4215                           
  4216  021C  01F4               	clrf	___wmul@product
  4217  021D  01F5               	clrf	___wmul@product+1
  4218  021E                     l1555:
  4219  021E  1C70               	btfss	___wmul@multiplier,0
  4220  021F  2A21               	goto	u1011
  4221  0220  2A22               	goto	u1010
  4222  0221                     u1011:
  4223  0221  2A28               	goto	l290
  4224  0222                     u1010:
  4225  0222                     l1557:
  4226  0222  0872               	movf	___wmul@multiplicand,w
  4227  0223  07F4               	addwf	___wmul@product,f
  4228  0224  1803               	skipnc
  4229  0225  0AF5               	incf	___wmul@product+1,f
  4230  0226  0873               	movf	___wmul@multiplicand+1,w
  4231  0227  07F5               	addwf	___wmul@product+1,f
  4232  0228                     l290:
  4233  0228  3001               	movlw	1
  4234  0229                     u1025:
  4235  0229  1003               	clrc
  4236  022A  0DF2               	rlf	___wmul@multiplicand,f
  4237  022B  0DF3               	rlf	___wmul@multiplicand+1,f
  4238  022C  3EFF               	addlw	-1
  4239  022D  1D03               	skipz
  4240  022E  2A29               	goto	u1025
  4241  022F                     l1559:
  4242  022F  3001               	movlw	1
  4243  0230                     u1035:
  4244  0230  1003               	clrc
  4245  0231  0CF1               	rrf	___wmul@multiplier+1,f
  4246  0232  0CF0               	rrf	___wmul@multiplier,f
  4247  0233  3EFF               	addlw	-1
  4248  0234  1D03               	skipz
  4249  0235  2A30               	goto	u1035
  4250  0236                     l1561:
  4251  0236  0870               	movf	___wmul@multiplier,w
  4252  0237  0471               	iorwf	___wmul@multiplier+1,w
  4253  0238  1D03               	btfss	3,2
  4254  0239  2A3B               	goto	u1041
  4255  023A  2A3C               	goto	u1040
  4256  023B                     u1041:
  4257  023B  2A1E               	goto	l1555
  4258  023C                     u1040:
  4259  023C                     l1563:
  4260  023C  0875               	movf	___wmul@product+1,w
  4261  023D  00F1               	movwf	?___wmul+1
  4262  023E  0874               	movf	___wmul@product,w
  4263  023F  00F0               	movwf	?___wmul
  4264  0240                     l292:
  4265  0240  0008               	return
  4266  0241                     __end_of___wmul:
  4267  0002                     
  4268                           	psect	functab
  4269  0003                     __pfunctab:
  4270  0003                     __fptable:
  4271  0003                     fptable:
  4272  0003  00FF               	movwf	(btemp+1)& (0+127)
  4273  0004  3000               	movlw	high fptable
  4274  0005  008A               	movwf	10
  4275  0006  087F               	movf	(btemp+1)& (0+127),w
  4276  0007  0782               	addwf	2,f
  4277  0008                     fpbase:
  4278  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4279  0009                     fp__putch:
  4280  0009  120A  118A  2938   	ljmp	_putch
  4281  000C                     __end_of__fptable:
  4282  007E                     btemp	set	126	;btemp
  4283  007E                     wtemp0	set	126
  4284                           
  4285                           	psect	config
  4286                           
  4287                           ;Config register CONFIG1 @ 0x2007
  4288                           ;	Oscillator Selection bits
  4289                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4290                           ;	Watchdog Timer Enable bit
  4291                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4292                           ;	Power-up Timer Enable bit
  4293                           ;	PWRTE = OFF, PWRT disabled
  4294                           ;	RE3/MCLR pin function select bit
  4295                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4296                           ;	Code Protection bit
  4297                           ;	CP = OFF, Program memory code protection is disabled
  4298                           ;	Data Code Protection bit
  4299                           ;	CPD = OFF, Data memory code protection is disabled
  4300                           ;	Brown Out Reset Selection bits
  4301                           ;	BOREN = OFF, BOR disabled
  4302                           ;	Internal External Switchover bit
  4303                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4304                           ;	Fail-Safe Clock Monitor Enabled bit
  4305                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4306                           ;	Low Voltage Programming Enable bit
  4307                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4308                           ;	In-Circuit Debugger Mode bit
  4309                           ;	DEBUG = 0x1, unprogrammed default
  4310  2007                     	org	8199
  4311  2007  20D4               	dw	8404
  4312                           
  4313                           ;Config register CONFIG2 @ 0x2008
  4314                           ;	Brown-out Reset Selection bit
  4315                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4316                           ;	Flash Program Memory Self Write Enable bits
  4317                           ;	WRT = OFF, Write protection off
  4318  2008                     	org	8200
  4319  2008  3FFF               	dw	16383

Data Sizes:
    Strings     170
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> BFFR3(BANK0[10]), BFFR2(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> BFFR1(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> BFFR1(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 10
		 -> BFFR3(BANK0[10]), BFFR2(BANK0[10]), BFFR1(BANK0[10]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), BFFR3(BANK0[10]), BFFR2(BANK0[10]), BFFR1(BANK0[10]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_15(CODE[34]), STR_14(CODE[34]), STR_13(CODE[28]), STR_12(CODE[3]), 
		 -> STR_11(CODE[2]), STR_10(CODE[7]), STR_9(CODE[3]), STR_8(CODE[2]), 
		 -> STR_7(CODE[8]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[28]), STR_2(CODE[28]), STR_1(CODE[29]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), BFFR3(BANK0[10]), BFFR2(BANK0[10]), BFFR1(BANK0[10]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_15(CODE[34]), STR_14(CODE[34]), STR_13(CODE[28]), STR_12(CODE[3]), 
		 -> STR_11(CODE[2]), STR_10(CODE[7]), STR_9(CODE[3]), STR_8(CODE[2]), 
		 -> STR_7(CODE[8]), STR_3(CODE[28]), STR_2(CODE[28]), STR_1(CODE[29]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S1016__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1016__prbuf$ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), BFFR3(BANK0[10]), BFFR2(BANK0[10]), BFFR1(BANK0[10]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), BFFR3(BANK0[10]), BFFR2(BANK0[10]), BFFR1(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> BFFR1(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> BFFR1(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _setup->_spiInit
    _division->___awdiv
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _msj2->_printf
    _msj1->_printf
    _checkU->_printf
    _checkD->_printf
    _checkC->_printf
    _printf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19117
                                             20 BANK0      3     3      0
                               _atoi
                             _checkC
                             _checkD
                             _checkU
                           _division
                               _msj1
                               _msj2
                             _printf
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2360
                                             11 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _msj2                                                 2     2      0    2373
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _msj1                                                 2     2      0    2373
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1248
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _checkU                                               1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _checkD                                               1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _checkC                                               1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     6      0    2373
                                             11 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    1868
                                              0 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _checkC
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _checkD
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _checkU
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _division
     ___awdiv
     ___awmod
   _msj1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _msj2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 01 15:50:31 2021

                      pc 0002              _SSPSTATbits 0094                       l92 06ED  
                     _V1 0029                       l98 070C                       _V2 0028  
           ___awdiv@sign 0076                       _cc 0024                       _dd 0023  
                     _uu 0022                       fsr 0004      ___wmul@multiplicand 0072  
                    l120 0452                      l105 0731                      l123 0138  
                    l132 0393                      l117 01FA                      l126 0140  
                    l150 01B4                      l143 019A                      l136 0180  
                    l153 01BF                      l129 033D                      l146 01A5  
                    l170 0171                      l139 018B                      l173 0129  
                    l176 012F                      l169 016C                      l290 0228  
                    l443 04B9                      l187 0149                      l179 0128  
                    l292 0240                      l456 03EC                      l562 02E7  
                    l572 02A3                      l812 021B                      l805 0668  
                    l821 0269                      l753 0534                      l758 015B  
                    l767 01DA                      u800 02CF                      u801 02CE  
                    u820 02E3                      u900 0547                      u821 02E2  
                    u805 02CB                      u901 0546                      u830 0270  
                    u750 013E                      u910 0595                      u815 02D7  
                    u831 026F                      u751 013D                      u911 0594  
                    u760 02AC                      u920 05BB                      u761 02AB  
                    u921 05BA                      u850 0282                      u930 05C6  
                    u851 0281                      u931 05C5                      u780 02BE  
                    u860 028C                      u940 05CC                      u781 02BD  
                    u861 028B                      u845 0274                      u941 05CB  
                    u925 05B7                      u950 05D4                      u775 02B0  
                    u951 05D3                      u880 029F                      u960 062C  
                    u881 029E                      u865 0288                      u961 062B  
                    u970 0652                      u890 053F                      u795 02BF  
                    u875 0293                      u971 0651                      u891 053E  
                    u980 0666                      u981 0665                      u990 0164  
                    u991 0163                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     l1411 02A4                     l1421 02BA  
                   l1413 02A6                     l1405 0138                     l1501 05D4  
                   l1431 02DD                     l1423 02BE                     l1415 02AC  
                   l1407 013E                     l1511 0624                     l1503 05E1  
                   l1425 02CF                     l1417 02AF                     l1433 02E3  
                   l1441 0273                     l1513 062C                     l1505 05E9  
                   l1521 0652                     l1601 04A5                     l1427 02D5  
                   l1419 02B6                     l1451 0292                     l1443 027A  
                   l1515 0639                     l1507 05EF                     l1523 0666  
                   l1531 01C3                     l1603 04AB                     l1611 0394  
                   l1429 02D6                     l1453 0299                     l1445 027E  
                   l1437 026A                     l1517 0641                     l1509 05F6  
                   l1461 0539                     l1533 01C4                     l1605 04B0  
                   l1621 03A4                     l1613 0395                     l1701 02FD  
                   l1541 015D                     l1447 0282                     l1439 0270  
                   l1455 029F                     l1519 0647                     l1463 053F  
                   l1471 0565                     l1535 01C8                     l1607 04B5  
                   l1631 03BD                     l1623 03A9                     l1615 0399  
                   l1703 0308                     l1711 0344                     l1543 0164  
                   l1551 0129                     l1561 0236                     l1553 021C  
                   l1449 028C                     l1481 0595                     l1465 0547  
                   l1537 01CC                     l1633 03C1                     l1625 03AF  
                   l1641 03DE                     l1617 039E                     l1705 0337  
                   l1713 034F                     l1545 0166                     l1801 0671  
                   l1563 023C                     l1555 021E                     l1651 014C  
                   l1491 05A0                     l1483 0599                     l1475 0566  
                   l1467 0556                     l1459 0538                     l1723 0172  
                   l1731 0194                     l1571 0458                     l1643 03E3  
                   l1635 03CB                     l1627 03B2                     l1619 03A0  
                   l1715 0353                     l1547 0168                     l1811 06A9  
                   l1803 0679                     l1557 0222                     l1653 0152  
                   l1485 059E                     l1477 0583                     l1469 055E  
                   l1725 017A                     l1733 01A0                     l1581 046C  
                   l1573 045D                     l1645 03E8                     l1637 03D1  
                   l1629 03B9                     l1717 035E                     l1709 033E  
                   l1549 016B                     l1661 01DB                     l1741 01FE  
                   l1821 06D7                     l1813 06AC                     l1805 067F  
                   l1559 022F                     l1655 0158                     l1495 05BC  
                   l1479 0591                     l1727 0186                     l1735 01A6  
                   l1591 0482                     l1583 046E                     l1575 045F  
                   l1567 0453                     l1639 03D8                     l1719 038D  
                   l1671 01F0                     l1663 01E3                     l1743 0202  
                   l1831 0706                     l1823 06E7                     l1815 06BF  
                   l1807 0689                     l1657 015A                     l1649 014B  
                   l1497 05C6                     l1729 018C                     l1737 01AE  
                   l1593 0486                     l1585 0474                     l1577 0463  
                   l1569 0454                     l1673 01F1                     l1665 01EB  
                   l1681 0146                     l1745 0203                     l1761 025C  
                   l1753 0242                     l1841 072B                     l1833 0712  
                   l1825 06F3                     l1817 06C4                     l1809 06A1  
                   l1771 04D1                     l1763 04BB                     l1499 05CC  
                   l1739 01BA                     l1595 0497                     l1587 0477  
                   l1579 0468                     l1691 044E                     l1667 01EE  
                   l1747 0207                     l1755 0247                     l1851 074E  
                   l1843 0737                     l1827 06F9                     l1819 06CF  
                   l1781 04F2                     l1773 04D4                     l1765 04BC  
                   l1597 049D                     l1589 047E                     l1685 03EE  
                   l1669 01EF                     l1677 0124                     l1749 0215  
                   l1757 024B                     l1861 07B1                     l1845 0742  
                   l1853 0756                     l1837 071E                     l1829 06FE  
                   l1775 04DC                     l1767 04C0                     l1599 049E  
                   l1687 0446                     l1695 02E8                     l1679 0141  
                   l1759 0254                     l1871 07D3                     l1863 07B7  
                   l1855 078D                     l1839 0723                     l1793 0530  
                   l1785 0513                     l1777 04E5                     l1769 04C9  
                   l1689 044A                     l1697 02EE                     l1873 07DD  
                   l1865 07C1                     l1857 0799                     l1849 0749  
                   l1787 051F                     l1779 04ED                     l1699 02F9  
                   l1875 07E1                     l1867 07C5                     l1859 07A5  
                   l1789 0524                     l1877 07EB                     l1869 07CF  
                   l1797 0669                     l1799 066E                     l1899 0578  
                   STR_1 003E                     STR_2 0077                     STR_3 0093  
                   STR_4 00C1                     STR_5 00C1                     STR_6 00C1  
                   STR_7 00AF                     STR_8 00C4                     STR_9 00BE  
                   u1000 012F                     u1001 012E                     u1010 0222  
                   u1011 0221                     u1110 0497                     u1111 0496  
                   u1040 023C                     u1200 03CB                     u1041 023B  
                   u1025 0229                     u1105 0487                     u1201 03CA  
                   u1130 04AB                     u1050 0458                     u1035 0230  
                   u1131 04AA                     u1115 0493                     u1051 0457  
                   u1300 01AE                     u1140 04B0                     u1060 0463  
                   u1220 03DE                     u1301 01AD                     u1141 04AF  
                   u1125 049F                     u1061 0462                     u1221 03DD  
                   u1205 03C7                     u1310 01BA                     u1070 0474  
                   u1230 03E3                     u1150 0399                     u1311 01B9  
                   u1071 0473                     u1231 03E2                     u1215 03D2  
                   u1151 0398                     u1240 0152                     u1160 03A4  
                   u1320 0253                     u1400 06F3                     u1241 0151  
                   u1161 03A3                     u1321 0252                     u1401 06F2  
                   u1250 0158                     u1090 0486                     u1170 03AF  
                   u1330 0269                     u1410 0706                     u1251 0157  
                   u1091 0485                     u1171 03AE                     u1331 0268  
                   u1411 0705                     u1340 04C9                     u1260 017A  
                   u1420 0712                     u1341 04C8                     u1261 0179  
                   u1085 0478                     u1421 0711                     u1350 04D1  
                   u1270 0186                     u1190 03C1                     u1430 071D  
                   u1351 04D0                     u1271 0185                     u1191 03C0  
                   u1431 071C                     u1360 04DC                     u1280 0194  
                   u1440 072B                     u1361 04DB                     u1281 0193  
                   u1185 03B3                     u1441 072A                     u1370 04ED  
                   u1290 01A0                     u1450 0737                     u1371 04EC  
                   u1291 019F                     u1451 0736                     u1507 068D  
                   u1380 051F                     u1460 0742                     u1381 051E  
                   u1461 0741                     u1517 06A5                     u1390 0524  
                   u1470 0748                     u1391 0523                     u1607 0359  
                   u1471 0747                     u1527 06B2                     u1480 0756  
                   u1617 036A                     u1481 0755                     u1537 06CA  
                   u1627 0379                     u1547 06E2                     u1637 0388  
                   u1557 07BD                     u1647 02F4                     u1567 07CB  
                   u1657 0303                     u1577 07D9                     u1497 0675  
                   u1667 0314                     u1587 07E7                     u1677 0323  
                   u1597 034A                     u1687 0332                     _RCIF 0065  
                   _TXIF 0064                     _atoi 04BA                     _main 0669  
                   _msj1 02E8                     _msj2 033E                     btemp 007E  
                   start 0000                    ?_atoi 0076                    ?_main 0070  
                  ?_msj1 0070                    ?_msj2 0070                    _BFFR1 003E  
                  _BFFR2 0034                    _BFFR3 002A          __end_of___awdiv 04BA  
                  STR_10 00B7                    STR_11 00C4                    STR_12 00BE  
                  STR_13 005B                    STR_14 001C                    STR_15 001C  
        __end_of___awmod 03ED                    _ANSEL 0188          ___awdiv@divisor 0070  
        __end_of___lwdiv 02E8          __end_of___lwmod 02A4          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009          __end_of__doprnt 0669                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 001C  
        __end_of_isdigit 015C                    atoi@a 007B                    _setup 01DB  
                  atoi@s 007D                    _putch 0138                    fpbase 0008  
                  pclath 000A          __end_of_spiInit 0172          __end_of_spiRead 014A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 021C  
        __initialization 07F3             __end_of_atoi 0535             __end_of_main 07F3  
           __end_of_msj1 033E             __end_of_msj2 0394                   ??_atoi 0078  
                 ??_main 005C                   ??_msj1 0059                   ??_msj2 0059  
       ___awdiv@dividend 0072                   ?_setup 0070                   ?_putch 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of__fptable 000C         __end_of_division 0453                   ___wmul 021C  
                 _checkC 0172                   _checkD 018C                ??___awdiv 0074  
                 _decena 0026                   _checkU 01A6                ??___awmod 0074  
              ??___lwdiv 0074                ??___lwmod 007C                ??__doprnt 004A  
       ___awdiv@quotient 0077          ___awmod@divisor 0070             __doprnt@flag 004D  
        ___awmod@counter 0075                   _printf 01C0                   _unidad 0025  
           __doprnt@prec 004E                   _strcat 0241                   fptable 0003  
                 fptotal 0002                ??_isdigit 0070         __end_of_spiWrite 0129  
              ??_spiInit 0073                ??_spiRead 0070                ??_sprintf 0056  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 01FB  
          __end_of_putch 0141            division@valor 007C               __doprnt@ap 0049  
             __doprnt@pb 0052                  ??_setup 0074                  ??_putch 0071  
             __pbssBANK0 0020               __pmaintext 0669                  ?___wmul 0070  
                ?_checkC 0070                  ?_checkD 0070                  ?_checkU 0070  
__size_of_spiReceiveWait 0007                  ?_printf 0070                  ?_strcat 0070  
                _SSPSTAT 0094               __stringtab 000C                ?_division 0070  
              ?_spiWrite 0070                  ___awdiv 0453                  ___awmod 0394  
        __size_of___wmul 0025          __size_of_checkC 001A          __size_of_checkD 001A  
        __size_of_checkU 001A                  ___lwdiv 02A4                  ___lwmod 026A  
                __doprnt 0535                  _centena 0027                  __ptext1 0241  
                __ptext2 01FB                  __ptext3 0123                  __ptext4 0141  
                __ptext5 0129                  __ptext6 01DB                  __ptext7 015C  
                __ptext8 033E                  __ptext9 02E8          __size_of_printf 001B  
        __size_of_strcat 0029                  _dpowers 0012                  _isdigit 014A  
       ___awmod@dividend 0072                  _spiInit 015C                  _spiRead 0141  
                _sprintf 01FB                  clrloop0 0131     end_of_initialization 07FC  
             ??_division 0079                _RCSTAbits 0018                  printf@f 0056  
             ??_spiWrite 0070                _PORTCbits 0007                _TRISCbits 0087  
            spiWrite@dat 0070                _TXSTAbits 0098           _spiReceiveWait 0129  
         __end_of___wmul 0241           __end_of_checkC 018C           __end_of_checkD 01A6  
         __end_of_checkU 01C0              _BAUDCTLbits 0187           __end_of_printf 01DB  
         __end_of_strcat 026A      start_initialization 07F3   __end_of_spiReceiveWait 0130  
               ??___wmul 0074                 ??_checkC 0059                 ??_checkD 0059  
               ??_checkU 0059              __doprnt@val 004F                 ??_printf 0053  
               ??_strcat 0071                ___latbits 0002            __pcstackBANK0 0048  
      __size_of__fptable 0009             _isdigit$1014 0070                __doprnt@c 0051  
              __doprnt@f 0048        __size_of_division 0066         ___lwdiv@dividend 0072  
        ?_spiReceiveWait 0070                __pfunctab 0003                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
               ?__doprnt 0048        __size_of_spiWrite 0006                __pstrings 000C  
               ?_isdigit 0070                 ?_spiInit 0070                 ?_spiRead 0070  
       ___lwdiv@quotient 0075                 ?_sprintf 0053           __size_of_setup 0020  
         __size_of_putch 0009     spiInit@sTransmitEdge 0072           ___wmul@product 0074  
              clear_ram0 0130       spiInit@sDataSample 0070                 _PIR1bits 000C  
            __stringbase 0011        ___wmul@multiplier 0070         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003A  
       __size_of__doprnt 0134       __end_of__stringtab 0012                 __fptable 0003  
             strcat@from 0070         __size_of_isdigit 0012          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 03ED                 __ptext11 0394  
               __ptext20 02A4                 __ptext12 0453                 __ptext21 04BA  
               __ptext13 01A6                 __ptext22 014A                 __ptext14 018C  
               __ptext23 021C                 __ptext15 0172                 __ptext16 01C0  
               __ptext17 0535                 __ptext18 0138                 __ptext19 026A  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _division 03ED  
       __size_of_sprintf 0021            __size_of_atoi 007B            __size_of_main 018A  
          __size_of_msj1 0056            __size_of_msj2 0056                 _variable 0020  
               _spiWrite 0123             spiInit@sType 0073                 atoi@sign 007A  
               fp__putch 0009        spiInit@sClockIdle 0071                putch@dato 0070  
             _INTCONbits 000B                 isdigit@c 0071                sprintf@ap 0058  
              sprintf@pb 005A                sprintf@wh 0059         ___lwmod@dividend 007A  
       ??_spiReceiveWait 0070                stringcode 000C               _OSCCONbits 008F  
               printf@ap 0055                 printf@pb 0057                 sprintf@f 0053  
               strcat@cp 0073                 strcat@to 0072          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 000C                 stringtab 000C  
