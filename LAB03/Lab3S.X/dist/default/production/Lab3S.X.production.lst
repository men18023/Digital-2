

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 13:03:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  000B                     _INTCONbits	set	11
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  000C                     _PIR1bits	set	12
   377  0063                     _SSPIF	set	99
   378  009F                     _ADCON1bits	set	159
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008C                     _PIE1bits	set	140
   382  008F                     _OSCCONbits	set	143
   383  0088                     _TRISD	set	136
   384  0086                     _TRISB	set	134
   385  0085                     _TRISAbits	set	133
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   401  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0013  1283               	bcf	3,5	;RP0=0, select bank0
   405  0014  1303               	bcf	3,6	;RP1=0, select bank0
   406  0015  01A0               	clrf	__pbssBANK0& (0+127)
   407  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   408  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   409  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   410  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   411  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   412  001B                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  001B                     __end_of__initialization:
   416  001B  0183               	clrf	3
   417  001C  120A  118A  293C   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMMON
   420  0075                     __pbssCOMMON:
   421  0075                     _ADC2:
   422  0075                     	ds	2
   423  0077                     _ADC1:
   424  0077                     	ds	2
   425                           
   426                           	psect	bssBANK0
   427  0020                     __pbssBANK0:
   428  0020                     _contador:
   429  0020                     	ds	2
   430  0022                     _T2:
   431  0022                     	ds	2
   432  0024                     _T1:
   433  0024                     	ds	2
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_spiRead:
   438  0070                     ??_spiRead:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_spiWrite:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_spiWrite:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_setup:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_configADC:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_isr:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_main:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_spiReceiveWait:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_spiReceiveWait:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     spiWrite@dat:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	1
   471  0071                     ??_isr:
   472                           
   473                           ; 1 bytes @ 0x1
   474  0071                     	ds	4
   475  0075                     ??_setup:
   476  0075                     ??_spiInit:	
   477                           ; 1 bytes @ 0x5
   478                           
   479                           
   480                           	psect	cstackBANK0
   481  0026                     __pcstackBANK0:	
   482                           ; 1 bytes @ 0x5
   483                           
   484  0026                     ?_spiInit:
   485  0026                     ??_configADC:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0026                     spiInit@sDataSample:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 1 bytes @ 0x0
   493  0026                     	ds	1
   494  0027                     spiInit@sClockIdle:
   495                           
   496                           ; 1 bytes @ 0x1
   497  0027                     	ds	1
   498  0028                     spiInit@sTransmitEdge:
   499  0028                     configADC@fr:	
   500                           ; 1 bytes @ 0x2
   501                           
   502                           
   503                           ; 1 bytes @ 0x2
   504  0028                     	ds	1
   505  0029                     spiInit@sType:
   506                           
   507                           ; 1 bytes @ 0x3
   508  0029                     	ds	1
   509  002A                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x4
   512  002A                     	ds	1
   513                           
   514                           	psect	maintext
   515  013C                     __pmaintext:	
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 68 in file "mainS.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : B00/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       1       0       0       0
   538 ;;      Totals:         0       1       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels required when called:    5
   541 ;; This function calls:
   542 ;;		_setup
   543 ;; This function is called by:
   544 ;;		Startup code after reset
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _main
   550  013C                     _main:
   551  013C                     l1149:	
   552                           ;incstack = 0
   553                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   554                           
   555                           
   556                           ;mainS.c: 70:     setup();
   557  013C  120A  118A  20EC  120A  118A  	fcall	_setup
   558  0141                     l1151:
   559                           
   560                           ;mainS.c: 72:     {;mainS.c: 73:      if (ADCON0bits.GO == 0){
   561  0141  1283               	bcf	3,5	;RP0=0, select bank0
   562  0142  1303               	bcf	3,6	;RP1=0, select bank0
   563  0143  189F               	btfsc	31,1	;volatile
   564  0144  2946               	goto	u161
   565  0145  2947               	goto	u160
   566  0146                     u161:
   567  0146  2941               	goto	l1151
   568  0147                     u160:
   569  0147                     l1153:
   570                           
   571                           ;mainS.c: 74:          _delay((unsigned long)((100)*(4000000/4000000.0)));
   572  0147  3020               	movlw	32
   573  0148  1283               	bcf	3,5	;RP0=0, select bank0
   574  0149  1303               	bcf	3,6	;RP1=0, select bank0
   575  014A  00AA               	movwf	??_main
   576  014B                     u177:
   577  014B  0BAA               	decfsz	??_main,f
   578  014C  294B               	goto	u177
   579  014D  0000               	nop
   580  014E                     l1155:
   581                           
   582                           ;mainS.c: 75:          ADCON0bits.GO = 1;
   583  014E  1283               	bcf	3,5	;RP0=0, select bank0
   584  014F  1303               	bcf	3,6	;RP1=0, select bank0
   585  0150  149F               	bsf	31,1	;volatile
   586  0151  2941               	goto	l1151
   587  0152  120A  118A  280C   	ljmp	start
   588  0155                     __end_of_main:
   589                           
   590                           	psect	text1
   591  00EC                     __ptext1:	
   592 ;; *************** function _setup *****************
   593 ;; Defined at:
   594 ;;		line 81 in file "mainS.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    4
   615 ;; This function calls:
   616 ;;		_configADC
   617 ;;		_spiInit
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _setup
   625  00EC                     _setup:
   626  00EC                     l1107:	
   627                           ;incstack = 0
   628                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;mainS.c: 83:     ANSEL = 0b00000011;
   632  00EC  3003               	movlw	3
   633  00ED  1683               	bsf	3,5	;RP0=1, select bank3
   634  00EE  1703               	bsf	3,6	;RP1=1, select bank3
   635  00EF  0088               	movwf	8	;volatile
   636  00F0                     l1109:
   637                           
   638                           ;mainS.c: 84:     ANSELH = 0;
   639  00F0  0189               	clrf	9	;volatile
   640  00F1                     l1111:
   641                           
   642                           ;mainS.c: 86:     TRISAbits.TRISA0 = 1;
   643  00F1  1683               	bsf	3,5	;RP0=1, select bank1
   644  00F2  1303               	bcf	3,6	;RP1=0, select bank1
   645  00F3  1405               	bsf	5,0	;volatile
   646  00F4                     l1113:
   647                           
   648                           ;mainS.c: 87:     TRISAbits.TRISA1 = 1;
   649  00F4  1485               	bsf	5,1	;volatile
   650  00F5                     l1115:
   651                           
   652                           ;mainS.c: 88:     TRISAbits.TRISA5 = 1;
   653  00F5  1685               	bsf	5,5	;volatile
   654  00F6                     l1117:
   655                           
   656                           ;mainS.c: 89:     TRISB = 0;
   657  00F6  0186               	clrf	6	;volatile
   658  00F7                     l1119:
   659                           
   660                           ;mainS.c: 90:     TRISD = 0;
   661  00F7  0188               	clrf	8	;volatile
   662  00F8                     l1121:
   663                           
   664                           ;mainS.c: 92:     PORTA = 0;
   665  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   666  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   667  00FA  0185               	clrf	5	;volatile
   668  00FB                     l1123:
   669                           
   670                           ;mainS.c: 93:     PORTB = 0;
   671  00FB  0186               	clrf	6	;volatile
   672  00FC                     l1125:
   673                           
   674                           ;mainS.c: 94:     PORTC = 0;
   675  00FC  0187               	clrf	7	;volatile
   676  00FD                     l1127:
   677                           
   678                           ;mainS.c: 95:     PORTD = 0;
   679  00FD  0188               	clrf	8	;volatile
   680  00FE                     l1129:
   681                           
   682                           ;mainS.c: 97:     OSCCONbits.IRCF0 = 0;
   683  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   684  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   685  0100  120F               	bcf	15,4	;volatile
   686  0101                     l1131:
   687                           
   688                           ;mainS.c: 98:     OSCCONbits.IRCF1 = 1;
   689  0101  168F               	bsf	15,5	;volatile
   690  0102                     l1133:
   691                           
   692                           ;mainS.c: 99:     OSCCONbits.IRCF2 = 1;
   693  0102  170F               	bsf	15,6	;volatile
   694  0103                     l1135:
   695                           
   696                           ;mainS.c: 100:     OSCCONbits.SCS = 1;
   697  0103  140F               	bsf	15,0	;volatile
   698  0104                     l1137:
   699                           
   700                           ;mainS.c: 102:     INTCONbits.GIE = 1;
   701  0104  178B               	bsf	11,7	;volatile
   702  0105                     l1139:
   703                           
   704                           ;mainS.c: 103:     INTCONbits.PEIE = 1;
   705  0105  170B               	bsf	11,6	;volatile
   706  0106                     l1141:
   707                           
   708                           ;mainS.c: 104:     PIR1bits.SSPIF = 0;
   709  0106  1283               	bcf	3,5	;RP0=0, select bank0
   710  0107  1303               	bcf	3,6	;RP1=0, select bank0
   711  0108  118C               	bcf	12,3	;volatile
   712  0109                     l1143:
   713                           
   714                           ;mainS.c: 105:     PIE1bits.SSPIE = 1;
   715  0109  1683               	bsf	3,5	;RP0=1, select bank1
   716  010A  1303               	bcf	3,6	;RP1=0, select bank1
   717  010B  158C               	bsf	12,3	;volatile
   718  010C                     l1145:
   719                           
   720                           ;mainS.c: 107:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
   721  010C  1283               	bcf	3,5	;RP0=0, select bank0
   722  010D  1303               	bcf	3,6	;RP1=0, select bank0
   723  010E  01A6               	clrf	spiInit@sDataSample
   724  010F  01A7               	clrf	spiInit@sClockIdle
   725  0110  01A8               	clrf	spiInit@sTransmitEdge
   726  0111  3024               	movlw	36
   727  0112  120A  118A  211E  120A  118A  	fcall	_spiInit
   728  0117                     l1147:
   729                           
   730                           ;mainS.c: 110:     configADC(2);
   731  0117  3002               	movlw	2
   732  0118  120A  118A  201F  120A  118A  	fcall	_configADC
   733  011D                     l76:
   734  011D  0008               	return
   735  011E                     __end_of_setup:
   736                           
   737                           	psect	text2
   738  011E                     __ptext2:	
   739 ;; *************** function _spiInit *****************
   740 ;; Defined at:
   741 ;;		line 11 in file "SPI.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  sType           1    wreg     enum E1264
   744 ;;  sDataSample     1    0[BANK0 ] enum E1272
   745 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   746 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  sType           1    3[BANK0 ] enum E1264
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       3       0       0       0
   759 ;;      Locals:         0       1       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       4       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_setup
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _spiInit
   774  011E                     _spiInit:
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   778                           ;spiInit@sType stored from wreg
   779  011E  1283               	bcf	3,5	;RP0=0, select bank0
   780  011F  1303               	bcf	3,6	;RP1=0, select bank0
   781  0120  00A9               	movwf	spiInit@sType
   782  0121                     l1021:
   783                           
   784                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
   785  0121  1683               	bsf	3,5	;RP0=1, select bank1
   786  0122  1303               	bcf	3,6	;RP1=0, select bank1
   787  0123  1287               	bcf	7,5	;volatile
   788                           
   789                           ;SPI.c: 14:     if(sType & 0b00000100)
   790  0124  1283               	bcf	3,5	;RP0=0, select bank0
   791  0125  1303               	bcf	3,6	;RP1=0, select bank0
   792  0126  1D29               	btfss	spiInit@sType,2
   793  0127  2929               	goto	u151
   794  0128  292A               	goto	u150
   795  0129                     u151:
   796  0129  2930               	goto	l1027
   797  012A                     u150:
   798  012A                     l1023:
   799                           
   800                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
   801  012A  0828               	movf	spiInit@sTransmitEdge,w
   802  012B  1683               	bsf	3,5	;RP0=1, select bank1
   803  012C  1303               	bcf	3,6	;RP1=0, select bank1
   804  012D  0094               	movwf	20	;volatile
   805  012E                     l1025:
   806                           
   807                           ;SPI.c: 17:         TRISC3 = 1;
   808  012E  1587               	bsf	7,3	;volatile
   809                           
   810                           ;SPI.c: 18:     }
   811  012F  2936               	goto	l92
   812  0130                     l1027:
   813                           
   814                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   815  0130  0826               	movf	spiInit@sDataSample,w
   816  0131  0428               	iorwf	spiInit@sTransmitEdge,w
   817  0132  1683               	bsf	3,5	;RP0=1, select bank1
   818  0133  1303               	bcf	3,6	;RP1=0, select bank1
   819  0134  0094               	movwf	20	;volatile
   820  0135                     l1029:
   821                           
   822                           ;SPI.c: 22:         TRISC3 = 0;
   823  0135  1187               	bcf	7,3	;volatile
   824  0136                     l92:	
   825                           ;SPI.c: 23:     }
   826                           
   827                           
   828                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
   829  0136  1283               	bcf	3,5	;RP0=0, select bank0
   830  0137  1303               	bcf	3,6	;RP1=0, select bank0
   831  0138  0829               	movf	spiInit@sType,w
   832  0139  0427               	iorwf	spiInit@sClockIdle,w
   833  013A  0094               	movwf	20	;volatile
   834  013B                     l93:
   835  013B  0008               	return
   836  013C                     __end_of_spiInit:
   837                           
   838                           	psect	text3
   839  001F                     __ptext3:	
   840 ;; *************** function _configADC *****************
   841 ;; Defined at:
   842 ;;		line 14 in file "ADC.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  fr              1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  fr              1    2[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       1       0       0       0
   858 ;;      Temps:          0       2       0       0       0
   859 ;;      Totals:         0       3       0       0       0
   860 ;;Total ram usage:        3 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    3
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_setup
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _configADC
   872  001F                     _configADC:
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
   876                           ;configADC@fr stored from wreg
   877  001F  1283               	bcf	3,5	;RP0=0, select bank0
   878  0020  1303               	bcf	3,6	;RP1=0, select bank0
   879  0021  00A8               	movwf	configADC@fr
   880  0022                     l1031:
   881                           
   882                           ;ADC.c: 15:     switch(fr){
   883  0022  2873               	goto	l1099
   884  0023                     l1033:
   885                           
   886                           ;ADC.c: 17:             ADCON0bits.CHS = 0;
   887  0023  30C3               	movlw	-61
   888  0024  059F               	andwf	31,f	;volatile
   889  0025                     l1035:
   890                           
   891                           ;ADC.c: 18:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   892  0025  3020               	movlw	32
   893  0026  1283               	bcf	3,5	;RP0=0, select bank0
   894  0027  1303               	bcf	3,6	;RP1=0, select bank0
   895  0028  00A6               	movwf	??_configADC
   896  0029                     u187:
   897  0029  0BA6               	decfsz	??_configADC,f
   898  002A  2829               	goto	u187
   899  002B  0000               	nop
   900  002C                     l1037:
   901                           
   902                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 0;
   903  002C  1283               	bcf	3,5	;RP0=0, select bank0
   904  002D  1303               	bcf	3,6	;RP1=0, select bank0
   905  002E  131F               	bcf	31,6	;volatile
   906  002F                     l1039:
   907                           
   908                           ;ADC.c: 21:             ADCON0bits.ADCS1 = 0;
   909  002F  139F               	bcf	31,7	;volatile
   910  0030                     l1041:
   911                           
   912                           ;ADC.c: 22:             ADCON0bits.ADON = 1;
   913  0030  141F               	bsf	31,0	;volatile
   914  0031                     l1043:
   915                           
   916                           ;ADC.c: 23:             ADCON1bits.ADFM = 0;
   917  0031  1683               	bsf	3,5	;RP0=1, select bank1
   918  0032  1303               	bcf	3,6	;RP1=0, select bank1
   919  0033  139F               	bcf	31,7	;volatile
   920  0034                     l1045:
   921                           
   922                           ;ADC.c: 24:             ADCON1bits.VCFG1 = 0;
   923  0034  129F               	bcf	31,5	;volatile
   924  0035                     l1047:
   925                           
   926                           ;ADC.c: 25:             ADCON1bits.VCFG0 = 0;
   927  0035  121F               	bcf	31,4	;volatile
   928                           
   929                           ;ADC.c: 26:             break;
   930  0036  2889               	goto	l125
   931  0037                     l1049:
   932                           
   933                           ;ADC.c: 28:             ADCON0bits.CHS = 0;
   934  0037  30C3               	movlw	-61
   935  0038  059F               	andwf	31,f	;volatile
   936  0039                     l1051:
   937                           
   938                           ;ADC.c: 29:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   939  0039  3020               	movlw	32
   940  003A  1283               	bcf	3,5	;RP0=0, select bank0
   941  003B  1303               	bcf	3,6	;RP1=0, select bank0
   942  003C  00A6               	movwf	??_configADC
   943  003D                     u197:
   944  003D  0BA6               	decfsz	??_configADC,f
   945  003E  283D               	goto	u197
   946  003F  0000               	nop
   947  0040                     l1053:
   948                           
   949                           ;ADC.c: 31:             ADCON0bits.ADCS0 = 1;
   950  0040  1283               	bcf	3,5	;RP0=0, select bank0
   951  0041  1303               	bcf	3,6	;RP1=0, select bank0
   952  0042  171F               	bsf	31,6	;volatile
   953  0043                     l1055:
   954                           
   955                           ;ADC.c: 32:             ADCON0bits.ADCS1 = 0;
   956  0043  139F               	bcf	31,7	;volatile
   957  0044                     l1057:
   958                           
   959                           ;ADC.c: 33:             ADCON0bits.ADON = 1;
   960  0044  141F               	bsf	31,0	;volatile
   961  0045                     l1059:
   962                           
   963                           ;ADC.c: 34:             ADCON1bits.ADFM = 0;
   964  0045  1683               	bsf	3,5	;RP0=1, select bank1
   965  0046  1303               	bcf	3,6	;RP1=0, select bank1
   966  0047  139F               	bcf	31,7	;volatile
   967  0048                     l1061:
   968                           
   969                           ;ADC.c: 35:             ADCON1bits.VCFG1 = 0;
   970  0048  129F               	bcf	31,5	;volatile
   971  0049                     l1063:
   972                           
   973                           ;ADC.c: 36:             ADCON1bits.VCFG0 = 0;
   974  0049  121F               	bcf	31,4	;volatile
   975                           
   976                           ;ADC.c: 37:             break;
   977  004A  2889               	goto	l125
   978  004B                     l1065:
   979                           
   980                           ;ADC.c: 39:             ADCON0bits.CHS = 0;
   981  004B  30C3               	movlw	-61
   982  004C  059F               	andwf	31,f	;volatile
   983  004D                     l1067:
   984                           
   985                           ;ADC.c: 40:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   986  004D  3020               	movlw	32
   987  004E  1283               	bcf	3,5	;RP0=0, select bank0
   988  004F  1303               	bcf	3,6	;RP1=0, select bank0
   989  0050  00A6               	movwf	??_configADC
   990  0051                     u207:
   991  0051  0BA6               	decfsz	??_configADC,f
   992  0052  2851               	goto	u207
   993  0053  0000               	nop
   994  0054                     l1069:
   995                           
   996                           ;ADC.c: 42:             ADCON0bits.ADCS0 = 0;
   997  0054  1283               	bcf	3,5	;RP0=0, select bank0
   998  0055  1303               	bcf	3,6	;RP1=0, select bank0
   999  0056  131F               	bcf	31,6	;volatile
  1000  0057                     l1071:
  1001                           
  1002                           ;ADC.c: 43:             ADCON0bits.ADCS1 = 1;
  1003  0057  179F               	bsf	31,7	;volatile
  1004  0058                     l1073:
  1005                           
  1006                           ;ADC.c: 44:             ADCON0bits.ADON = 1;
  1007  0058  141F               	bsf	31,0	;volatile
  1008  0059                     l1075:
  1009                           
  1010                           ;ADC.c: 45:             ADCON1bits.ADFM = 0;
  1011  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1012  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1013  005B  139F               	bcf	31,7	;volatile
  1014  005C                     l1077:
  1015                           
  1016                           ;ADC.c: 46:             ADCON1bits.VCFG1 = 0;
  1017  005C  129F               	bcf	31,5	;volatile
  1018  005D                     l1079:
  1019                           
  1020                           ;ADC.c: 47:             ADCON1bits.VCFG0 = 0;
  1021  005D  121F               	bcf	31,4	;volatile
  1022                           
  1023                           ;ADC.c: 48:             break;
  1024  005E  2889               	goto	l125
  1025  005F                     l1081:
  1026                           
  1027                           ;ADC.c: 50:             ADCON0bits.CHS = 0;
  1028  005F  30C3               	movlw	-61
  1029  0060  059F               	andwf	31,f	;volatile
  1030  0061                     l1083:
  1031                           
  1032                           ;ADC.c: 51:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1033  0061  3020               	movlw	32
  1034  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0064  00A6               	movwf	??_configADC
  1037  0065                     u217:
  1038  0065  0BA6               	decfsz	??_configADC,f
  1039  0066  2865               	goto	u217
  1040  0067  0000               	nop
  1041  0068                     l1085:
  1042                           
  1043                           ;ADC.c: 53:             ADCON0bits.ADCS0 = 1;
  1044  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1046  006A  171F               	bsf	31,6	;volatile
  1047  006B                     l1087:
  1048                           
  1049                           ;ADC.c: 54:             ADCON0bits.ADCS1 = 1;
  1050  006B  179F               	bsf	31,7	;volatile
  1051  006C                     l1089:
  1052                           
  1053                           ;ADC.c: 55:             ADCON0bits.ADON = 1;
  1054  006C  141F               	bsf	31,0	;volatile
  1055  006D                     l1091:
  1056                           
  1057                           ;ADC.c: 56:             ADCON1bits.ADFM = 0;
  1058  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1059  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1060  006F  139F               	bcf	31,7	;volatile
  1061  0070                     l1093:
  1062                           
  1063                           ;ADC.c: 57:             ADCON1bits.VCFG1 = 0;
  1064  0070  129F               	bcf	31,5	;volatile
  1065  0071                     l1095:
  1066                           
  1067                           ;ADC.c: 58:             ADCON1bits.VCFG0 = 0;
  1068  0071  121F               	bcf	31,4	;volatile
  1069                           
  1070                           ;ADC.c: 59:             break;
  1071  0072  2889               	goto	l125
  1072  0073                     l1099:
  1073  0073  0828               	movf	configADC@fr,w
  1074  0074  00A6               	movwf	??_configADC
  1075  0075  01A7               	clrf	??_configADC+1
  1076                           
  1077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1078                           ; Switch size 1, requested type "simple"
  1079                           ; Number of cases is 1, Range of values is 0 to 0
  1080                           ; switch strategies available:
  1081                           ; Name         Instructions Cycles
  1082                           ; simple_byte            4     3 (average)
  1083                           ; direct_byte           11     8 (fixed)
  1084                           ; jumptable            260     6 (fixed)
  1085                           ;	Chosen strategy is simple_byte
  1086  0076  0827               	movf	??_configADC+1,w
  1087  0077  3A00               	xorlw	0	; case 0
  1088  0078  1903               	skipnz
  1089  0079  287B               	goto	l1187
  1090  007A  2889               	goto	l125
  1091  007B                     l1187:
  1092                           
  1093                           ; Switch size 1, requested type "simple"
  1094                           ; Number of cases is 4, Range of values is 0 to 3
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte           13     7 (average)
  1098                           ; direct_byte           20     8 (fixed)
  1099                           ; jumptable            260     6 (fixed)
  1100                           ;	Chosen strategy is simple_byte
  1101  007B  0826               	movf	??_configADC,w
  1102  007C  3A00               	xorlw	0	; case 0
  1103  007D  1903               	skipnz
  1104  007E  2823               	goto	l1033
  1105  007F  3A01               	xorlw	1	; case 1
  1106  0080  1903               	skipnz
  1107  0081  2837               	goto	l1049
  1108  0082  3A03               	xorlw	3	; case 2
  1109  0083  1903               	skipnz
  1110  0084  284B               	goto	l1065
  1111  0085  3A01               	xorlw	1	; case 3
  1112  0086  1903               	skipnz
  1113  0087  285F               	goto	l1081
  1114  0088  2889               	goto	l125
  1115  0089                     l125:
  1116  0089  0008               	return
  1117  008A                     __end_of_configADC:
  1118                           
  1119                           	psect	text4
  1120  008A                     __ptext4:	
  1121 ;; *************** function _isr *****************
  1122 ;; Defined at:
  1123 ;;		line 42 in file "mainS.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          4       0       0       0       0
  1140 ;;      Totals:         4       0       0       0       0
  1141 ;;Total ram usage:        4 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		_spiRead
  1146 ;;		_spiWrite
  1147 ;; This function is called by:
  1148 ;;		Interrupt level 1
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _isr
  1154  008A                     _isr:
  1155  008A                     i1l971:
  1156                           
  1157                           ;mainS.c: 44:         if(SSPIF == 1){
  1158  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1159  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1160  008C  1D8C               	btfss	12,3	;volatile
  1161  008D  288F               	goto	u10_21
  1162  008E  2890               	goto	u10_20
  1163  008F                     u10_21:
  1164  008F  28B9               	goto	i1l977
  1165  0090                     u10_20:
  1166  0090                     i1l973:
  1167                           
  1168                           ;mainS.c: 45:             T1 = spiRead();
  1169  0090  120A  118A  2155  120A  118A  	fcall	_spiRead
  1170  0095  00F1               	movwf	??_isr
  1171  0096  01F2               	clrf	??_isr+1
  1172  0097  0871               	movf	??_isr,w
  1173  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1175  009A  00A4               	movwf	_T1
  1176  009B  0872               	movf	??_isr+1,w
  1177  009C  00A5               	movwf	_T1+1
  1178                           
  1179                           ;mainS.c: 46:             spiWrite(ADC2);
  1180  009D  0875               	movf	_ADC2,w
  1181  009E  120A  118A  2165  120A  118A  	fcall	_spiWrite
  1182                           
  1183                           ;mainS.c: 47:             T2 = spiRead();
  1184  00A3  120A  118A  2155  120A  118A  	fcall	_spiRead
  1185  00A8  00F1               	movwf	??_isr
  1186  00A9  01F2               	clrf	??_isr+1
  1187  00AA  0871               	movf	??_isr,w
  1188  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1189  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1190  00AD  00A2               	movwf	_T2
  1191  00AE  0872               	movf	??_isr+1,w
  1192  00AF  00A3               	movwf	_T2+1
  1193                           
  1194                           ;mainS.c: 48:             spiWrite(ADC1);
  1195  00B0  0877               	movf	_ADC1,w
  1196  00B1  120A  118A  2165  120A  118A  	fcall	_spiWrite
  1197  00B6                     i1l975:
  1198                           
  1199                           ;mainS.c: 49:             SSPIF = 0;
  1200  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1201  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1202  00B8  118C               	bcf	12,3	;volatile
  1203  00B9                     i1l977:
  1204                           
  1205                           ;mainS.c: 52:     if(PIR1bits.ADIF == 1)
  1206  00B9  1F0C               	btfss	12,6	;volatile
  1207  00BA  28BC               	goto	u11_21
  1208  00BB  28BD               	goto	u11_20
  1209  00BC                     u11_21:
  1210  00BC  28E5               	goto	i1l64
  1211  00BD                     u11_20:
  1212  00BD                     i1l979:
  1213                           
  1214                           ;mainS.c: 53:        {;mainS.c: 54:            if(ADCON0bits.CHS == 0) {
  1215  00BD  0C1F               	rrf	31,w	;volatile
  1216  00BE  00F1               	movwf	??_isr
  1217  00BF  0C71               	rrf	??_isr,w
  1218  00C0  390F               	andlw	15
  1219  00C1  3A00               	xorlw	0
  1220  00C2  1D03               	skipz
  1221  00C3  28C5               	goto	u12_21
  1222  00C4  28C6               	goto	u12_20
  1223  00C5                     u12_21:
  1224  00C5  28D2               	goto	i1l985
  1225  00C6                     u12_20:
  1226  00C6                     i1l981:
  1227                           
  1228                           ;mainS.c: 55:                ADC1 = ADRESH;
  1229  00C6  081E               	movf	30,w	;volatile
  1230  00C7  00F1               	movwf	??_isr
  1231  00C8  01F2               	clrf	??_isr+1
  1232  00C9  0871               	movf	??_isr,w
  1233  00CA  00F7               	movwf	_ADC1
  1234  00CB  0872               	movf	??_isr+1,w
  1235  00CC  00F8               	movwf	_ADC1+1
  1236  00CD                     i1l983:
  1237                           
  1238                           ;mainS.c: 56:                ADCON0bits.CHS = 1;
  1239  00CD  081F               	movf	31,w	;volatile
  1240  00CE  39C3               	andlw	-61
  1241  00CF  3804               	iorlw	4
  1242  00D0  009F               	movwf	31	;volatile
  1243                           
  1244                           ;mainS.c: 57:            }
  1245  00D1  28E4               	goto	i1l991
  1246  00D2                     i1l985:
  1247  00D2  0C1F               	rrf	31,w	;volatile
  1248  00D3  00F1               	movwf	??_isr
  1249  00D4  0C71               	rrf	??_isr,w
  1250  00D5  390F               	andlw	15
  1251  00D6  3A01               	xorlw	1
  1252  00D7  1D03               	skipz
  1253  00D8  28DA               	goto	u13_21
  1254  00D9  28DB               	goto	u13_20
  1255  00DA                     u13_21:
  1256  00DA  28E4               	goto	i1l991
  1257  00DB                     u13_20:
  1258  00DB                     i1l987:
  1259                           
  1260                           ;mainS.c: 59:             ADCON0bits.CHS = 0;
  1261  00DB  30C3               	movlw	-61
  1262  00DC  059F               	andwf	31,f	;volatile
  1263  00DD                     i1l989:
  1264                           
  1265                           ;mainS.c: 60:                ADC2 = ADRESH;
  1266  00DD  081E               	movf	30,w	;volatile
  1267  00DE  00F1               	movwf	??_isr
  1268  00DF  01F2               	clrf	??_isr+1
  1269  00E0  0871               	movf	??_isr,w
  1270  00E1  00F5               	movwf	_ADC2
  1271  00E2  0872               	movf	??_isr+1,w
  1272  00E3  00F6               	movwf	_ADC2+1
  1273  00E4                     i1l991:
  1274                           
  1275                           ;mainS.c: 62:            PIR1bits.ADIF = 0;
  1276  00E4  130C               	bcf	12,6	;volatile
  1277  00E5                     i1l64:
  1278  00E5  0874               	movf	??_isr+3,w
  1279  00E6  008A               	movwf	10
  1280  00E7  0E73               	swapf	??_isr+2,w
  1281  00E8  0083               	movwf	3
  1282  00E9  0EFE               	swapf	btemp,f
  1283  00EA  0E7E               	swapf	btemp,w
  1284  00EB  0009               	retfie
  1285  00EC                     __end_of_isr:
  1286                           
  1287                           	psect	intentry
  1288  0004                     __pintentry:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1291                           
  1292  0004                     interrupt_function:
  1293  007E                     saved_w	set	btemp
  1294  0004  00FE               	movwf	btemp
  1295  0005  0E03               	swapf	3,w
  1296  0006  00F3               	movwf	??_isr+2
  1297  0007  080A               	movf	10,w
  1298  0008  00F4               	movwf	??_isr+3
  1299  0009  120A  118A  288A   	ljmp	_isr
  1300                           
  1301                           	psect	text5
  1302  0165                     __ptext5:	
  1303 ;; *************** function _spiWrite *****************
  1304 ;; Defined at:
  1305 ;;		line 33 in file "SPI.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  dat             1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  dat             1    0[COMMON] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_isr
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _spiWrite
  1334  0165                     _spiWrite:
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _spiWrite: [wreg]
  1338                           ;spiWrite@dat stored from wreg
  1339  0165  00F0               	movwf	spiWrite@dat
  1340  0166                     i1l927:
  1341                           
  1342                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
  1343  0166  0870               	movf	spiWrite@dat,w
  1344  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0169  0093               	movwf	19	;volatile
  1347  016A                     i1l102:
  1348  016A  0008               	return
  1349  016B                     __end_of_spiWrite:
  1350                           
  1351                           	psect	text6
  1352  0155                     __ptext6:	
  1353 ;; *************** function _spiRead *****************
  1354 ;; Defined at:
  1355 ;;		line 46 in file "SPI.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    1
  1376 ;; This function calls:
  1377 ;;		_spiReceiveWait
  1378 ;; This function is called by:
  1379 ;;		_isr
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _spiRead
  1385  0155                     _spiRead:
  1386  0155                     i1l921:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1389                           
  1390                           
  1391                           ;SPI.c: 48:     spiReceiveWait();
  1392  0155  120A  118A  215E  120A  118A  	fcall	_spiReceiveWait
  1393  015A                     i1l923:
  1394                           
  1395                           ;SPI.c: 49:     return(SSPBUF);
  1396  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1397  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1398  015C  0813               	movf	19,w	;volatile
  1399  015D                     i1l110:
  1400  015D  0008               	return
  1401  015E                     __end_of_spiRead:
  1402                           
  1403                           	psect	text7
  1404  015E                     __ptext7:	
  1405 ;; *************** function _spiReceiveWait *****************
  1406 ;; Defined at:
  1407 ;;		line 28 in file "SPI.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		None
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_spiRead
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _spiReceiveWait
  1436  015E                     _spiReceiveWait:
  1437  015E                     i1l919:	
  1438                           ;incstack = 0
  1439                           ; Regs used in _spiReceiveWait: []
  1440                           
  1441  015E                     i1l96:	
  1442                           ;SPI.c: 30:     while ( !SSPSTATbits.BF );
  1443                           
  1444  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1445  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1446  0160  1C14               	btfss	20,0	;volatile
  1447  0161  2963               	goto	u9_21
  1448  0162  2964               	goto	u9_20
  1449  0163                     u9_21:
  1450  0163  295E               	goto	i1l96
  1451  0164                     u9_20:
  1452  0164                     i1l99:
  1453  0164  0008               	return
  1454  0165                     __end_of_spiReceiveWait:
  1455  007E                     btemp	set	126	;btemp
  1456  007E                     wtemp0	set	126
  1457                           
  1458                           	psect	config
  1459                           
  1460                           ;Config register CONFIG1 @ 0x2007
  1461                           ;	Oscillator Selection bits
  1462                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1463                           ;	Watchdog Timer Enable bit
  1464                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1465                           ;	Power-up Timer Enable bit
  1466                           ;	PWRTE = OFF, PWRT disabled
  1467                           ;	RE3/MCLR pin function select bit
  1468                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1469                           ;	Code Protection bit
  1470                           ;	CP = OFF, Program memory code protection is disabled
  1471                           ;	Data Code Protection bit
  1472                           ;	CPD = OFF, Data memory code protection is disabled
  1473                           ;	Brown Out Reset Selection bits
  1474                           ;	BOREN = OFF, BOR disabled
  1475                           ;	Internal External Switchover bit
  1476                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1477                           ;	Fail-Safe Clock Monitor Enabled bit
  1478                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1479                           ;	Low Voltage Programming Enable bit
  1480                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1481                           ;	In-Circuit Debugger Mode bit
  1482                           ;	DEBUG = 0x1, unprogrammed default
  1483  2007                     	org	8199
  1484  2007  20D4               	dw	8404
  1485                           
  1486                           ;Config register CONFIG2 @ 0x2008
  1487                           ;	Brown-out Reset Selection bit
  1488                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1489                           ;	Flash Program Memory Self Write Enable bits
  1490                           ;	WRT = OFF, Write protection off
  1491  2008                     	org	8200
  1492  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     478
                                              4 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     478
                          _configADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _configADC                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      22
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _configADC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 13:03:12 2021

            _SSPSTATbits 0094                       l92 0136                       l76 011D  
                     l93 013B                       _T1 0024                       _T2 0022  
                    l125 0089                      u150 012A                      u207 0051  
                    u151 0129                      u160 0147                      u217 0065  
                    u161 0146                      u177 014B                      u187 0029  
                    u197 003D                      _isr 008A                     l1021 0121  
                   l1031 0022                     l1023 012A                     l1111 00F1  
                   l1041 0030                     l1033 0023                     l1025 012E  
                   l1121 00F8                     l1113 00F4                     l1051 0039  
                   l1043 0031                     l1035 0025                     l1027 0130  
                   l1131 0101                     l1123 00FB                     l1115 00F5  
                   l1107 00EC                     l1061 0048                     l1053 0040  
                   l1045 0034                     l1037 002C                     l1029 0135  
                   l1141 0106                     l1133 0102                     l1125 00FC  
                   l1117 00F6                     l1109 00F0                     l1071 0057  
                   l1063 0049                     l1055 0043                     l1047 0035  
                   l1039 002F                     l1143 0109                     l1135 0103  
                   l1127 00FD                     l1119 00F7                     l1151 0141  
                   l1081 005F                     l1073 0058                     l1065 004B  
                   l1057 0044                     l1049 0037                     l1145 010C  
                   l1137 0104                     l1129 00FE                     l1153 0147  
                   l1091 006D                     l1083 0061                     l1075 0059  
                   l1067 004D                     l1059 0045                     l1147 0117  
                   l1139 0105                     l1155 014E                     l1093 0070  
                   l1085 0068                     l1077 005C                     l1069 0054  
                   l1149 013C                     l1095 0071                     l1087 006B  
                   l1079 005D                     l1089 006C                     l1187 007B  
                   l1099 0073                     _ADC1 0077                     _ADC2 0075  
                   ?_isr 0070                     i1l64 00E5                     i1l96 015E  
                   i1l99 0164                     u9_20 0164                     u9_21 0163  
                   _main 013C                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l110 015D                    i1l102 016A                    i1l921 0155  
                  i1l923 015A                    i1l919 015E                    i1l927 0166  
                  i1l971 008A                    i1l981 00C6                    i1l973 0090  
                  i1l991 00E4                    i1l983 00CD                    i1l975 00B6  
                  i1l985 00D2                    i1l977 00B9                    i1l987 00DB  
                  i1l979 00BD                    i1l989 00DD                    u10_20 0090  
                  u10_21 008F                    u11_20 00BD                    u11_21 00BC  
                  u12_20 00C6                    u12_21 00C5                    u13_20 00DB  
                  u13_21 00DA                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 00EC  
                  pclath 000A          __end_of_spiInit 013C          __end_of_spiRead 015E  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0155                   ??_main 002A                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 016B                ??_spiInit 0075  
              ??_spiRead 0070  __end_of__initialization 001B           __pcstackCOMMON 0070  
          __end_of_setup 011E       __size_of_configADC 006B                  ??_setup 0075  
             __pbssBANK0 0020               __pmaintext 013C               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094        __end_of_configADC 008A  
              ?_spiWrite 0070                  __ptext1 00EC                  __ptext2 011E  
                __ptext3 001F                  __ptext4 008A                  __ptext5 0165  
                __ptext6 0155                  __ptext7 015E             __size_of_isr 0062  
                _spiInit 011E                  _spiRead 0155     end_of_initialization 001B  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 015E      start_initialization 000F              __end_of_isr 00EC  
 __end_of_spiReceiveWait 0165              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0026          ?_spiReceiveWait 0070                _configADC 001F  
      __size_of_spiWrite 0006                 ?_spiInit 0026                 ?_spiRead 0070  
         __size_of_setup 0032     spiInit@sTransmitEdge 0028        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0026                 _PIR1bits 000C  
             ?_configADC 0070               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_spiInit 001E         __size_of_spiRead 0009                 _contador 0020  
          __size_of_main 0019                 _spiWrite 0165             spiInit@sType 0029  
            ??_configADC 0026        spiInit@sClockIdle 0027               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            configADC@fr 0028  
