

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 01 11:31:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  0009                     _PORTE	set	9
   367  0008                     _PORTD	set	8
   368  0007                     _PORTC	set	7
   369  0006                     _PORTB	set	6
   370  0005                     _PORTA	set	5
   371  001F                     _ADCON0bits	set	31
   372  0048                     _RE0	set	72
   373  0063                     _SSPIF	set	99
   374  0086                     _TRISBbits	set	134
   375  0089                     _TRISEbits	set	137
   376  009F                     _ADCON1	set	159
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  0086                     _TRISB	set	134
   380  0085                     _TRISAbits	set	133
   381  043B                     _TRISC3	set	1083
   382  043D                     _TRISC5	set	1085
   383  0189                     _ANSELHbits	set	393
   384  0188                     _ANSELbits	set	392
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390                           ; #config settings
   391                           
   392  000F                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   396  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   397  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   398  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   399  0013                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0013                     __end_of__initialization:
   403  0013  0183               	clrf	3
   404  0014  120A  118A  2900   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0077                     __pbssCOMMON:
   408  0077                     _T2:
   409  0077                     	ds	1
   410  0078                     _T1:
   411  0078                     	ds	1
   412  0079                     _V2:
   413  0079                     	ds	1
   414  007A                     _V1:
   415  007A                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_setup:
   420  0070                     ?_configADC:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_isr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_isr:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 1 bytes @ 0x0
   437  0070                     	ds	2
   438  0072                     ??_configADC:
   439  0072                     ??_spiWrite:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     ?_spiInit:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     spiInit@sDataSample:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     spiWrite@dat:	
   449                           ; 1 bytes @ 0x2
   450                           
   451                           
   452                           ; 1 bytes @ 0x2
   453  0072                     	ds	1
   454  0073                     spiInit@sClockIdle:
   455                           
   456                           ; 1 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     spiInit@sTransmitEdge:
   459  0074                     configADC@ch:	
   460                           ; 1 bytes @ 0x4
   461                           
   462                           
   463                           ; 1 bytes @ 0x4
   464  0074                     	ds	1
   465  0075                     ??_spiInit:
   466  0075                     spiInit@sType:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     ??_setup:
   473  0076                     ??_main:	
   474                           ; 1 bytes @ 0x6
   475                           
   476                           
   477                           ; 1 bytes @ 0x6
   478  0076                     	ds	1
   479                           
   480                           	psect	maintext
   481  0100                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 48 in file "mainS.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : B00/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0
   503 ;;      Temps:          1       0       0       0       0
   504 ;;      Totals:         1       0       0       0       0
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels required when called:    3
   507 ;; This function calls:
   508 ;;		_configADC
   509 ;;		_setup
   510 ;;		_spiWrite
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _main
   518  0100                     _main:
   519  0100                     l925:	
   520                           ;incstack = 0
   521                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   522                           
   523                           
   524                           ;mainS.c: 50:     setup();
   525  0100  120A  118A  2146  120A  118A  	fcall	_setup
   526  0105                     l927:
   527                           
   528                           ;mainS.c: 52:     {;mainS.c: 53:         V1 = configADC(0);
   529  0105  3000               	movlw	0
   530  0106  120A  118A  2017  120A  118A  	fcall	_configADC
   531  010B  00F6               	movwf	??_main
   532  010C  0876               	movf	??_main,w
   533  010D  00FA               	movwf	_V1
   534  010E                     l929:
   535                           
   536                           ;mainS.c: 54:         V2 = configADC(1);
   537  010E  3001               	movlw	1
   538  010F  120A  118A  2017  120A  118A  	fcall	_configADC
   539  0114  00F6               	movwf	??_main
   540  0115  0876               	movf	??_main,w
   541  0116  00F9               	movwf	_V2
   542  0117                     l931:
   543                           
   544                           ;mainS.c: 56:         if(SSPIF){
   545  0117  1283               	bcf	3,5	;RP0=0, select bank0
   546  0118  1303               	bcf	3,6	;RP1=0, select bank0
   547  0119  1D8C               	btfss	12,3	;volatile
   548  011A  291C               	goto	u81
   549  011B  291D               	goto	u80
   550  011C                     u81:
   551  011C  2943               	goto	l55
   552  011D                     u80:
   553  011D                     l933:
   554                           
   555                           ;mainS.c: 57:         if(ADCON0bits.CHS==0){
   556  011D  0C1F               	rrf	31,w	;volatile
   557  011E  00F6               	movwf	??_main
   558  011F  0C76               	rrf	??_main,w
   559  0120  390F               	andlw	15
   560  0121  3A00               	xorlw	0
   561  0122  1D03               	skipz
   562  0123  2925               	goto	u91
   563  0124  2926               	goto	u90
   564  0125                     u91:
   565  0125  2930               	goto	l939
   566  0126                     u90:
   567  0126                     l935:
   568                           
   569                           ;mainS.c: 58:             spiWrite(V1);
   570  0126  087A               	movf	_V1,w
   571  0127  120A  118A  217E  120A  118A  	fcall	_spiWrite
   572  012C                     l937:
   573                           
   574                           ;mainS.c: 59:             RE0 = 1;
   575  012C  1283               	bcf	3,5	;RP0=0, select bank0
   576  012D  1303               	bcf	3,6	;RP1=0, select bank0
   577  012E  1409               	bsf	9,0	;volatile
   578                           
   579                           ;mainS.c: 60:         }
   580  012F  2942               	goto	l945
   581  0130                     l939:
   582  0130  0C1F               	rrf	31,w	;volatile
   583  0131  00F6               	movwf	??_main
   584  0132  0C76               	rrf	??_main,w
   585  0133  390F               	andlw	15
   586  0134  3A01               	xorlw	1
   587  0135  1D03               	skipz
   588  0136  2938               	goto	u101
   589  0137  2939               	goto	u100
   590  0138                     u101:
   591  0138  2942               	goto	l945
   592  0139                     u100:
   593  0139                     l941:
   594                           
   595                           ;mainS.c: 62:             spiWrite(V2);
   596  0139  0879               	movf	_V2,w
   597  013A  120A  118A  217E  120A  118A  	fcall	_spiWrite
   598  013F                     l943:
   599                           
   600                           ;mainS.c: 63:             RE0 = 0;
   601  013F  1283               	bcf	3,5	;RP0=0, select bank0
   602  0140  1303               	bcf	3,6	;RP1=0, select bank0
   603  0141  1009               	bcf	9,0	;volatile
   604  0142                     l945:
   605                           
   606                           ;mainS.c: 65:         SSPIF = 0;
   607  0142  118C               	bcf	12,3	;volatile
   608  0143                     l55:
   609  0143  120A  118A  280C   	ljmp	start
   610  0146                     __end_of_main:
   611                           
   612                           	psect	text1
   613  017E                     __ptext1:	
   614 ;; *************** function _spiWrite *****************
   615 ;; Defined at:
   616 ;;		line 33 in file "SPI.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  dat             1    wreg     unsigned char 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  dat             1    2[COMMON] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         1       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         1       0       0       0       0
   634 ;;Total ram usage:        1 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _spiWrite
   646  017E                     _spiWrite:
   647                           
   648                           ;incstack = 0
   649                           ; Regs used in _spiWrite: [wreg]
   650                           ;spiWrite@dat stored from wreg
   651  017E  00F2               	movwf	spiWrite@dat
   652  017F                     l821:
   653                           
   654                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
   655  017F  0872               	movf	spiWrite@dat,w
   656  0180  1283               	bcf	3,5	;RP0=0, select bank0
   657  0181  1303               	bcf	3,6	;RP1=0, select bank0
   658  0182  0093               	movwf	19	;volatile
   659  0183                     l86:
   660  0183  0008               	return
   661  0184                     __end_of_spiWrite:
   662                           
   663                           	psect	text2
   664  0146                     __ptext2:	
   665 ;; *************** function _setup *****************
   666 ;; Defined at:
   667 ;;		line 72 in file "mainS.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    2
   688 ;; This function calls:
   689 ;;		_spiInit
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _setup
   697  0146                     _setup:
   698  0146                     l901:	
   699                           ;incstack = 0
   700                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;mainS.c: 74:     ANSEL = 0b0000011;
   704  0146  3003               	movlw	3
   705  0147  1683               	bsf	3,5	;RP0=1, select bank3
   706  0148  1703               	bsf	3,6	;RP1=1, select bank3
   707  0149  0088               	movwf	8	;volatile
   708  014A                     l903:
   709                           
   710                           ;mainS.c: 75:     ANSELH = 0;
   711  014A  0189               	clrf	9	;volatile
   712  014B                     l905:
   713                           
   714                           ;mainS.c: 77:     TRISAbits.TRISA0 = 1;
   715  014B  1683               	bsf	3,5	;RP0=1, select bank1
   716  014C  1303               	bcf	3,6	;RP1=0, select bank1
   717  014D  1405               	bsf	5,0	;volatile
   718  014E                     l907:
   719                           
   720                           ;mainS.c: 78:     TRISAbits.TRISA1 = 1;
   721  014E  1485               	bsf	5,1	;volatile
   722  014F                     l909:
   723                           
   724                           ;mainS.c: 79:     TRISB = 0;
   725  014F  0186               	clrf	6	;volatile
   726  0150                     l911:
   727                           
   728                           ;mainS.c: 84:     PORTA = 0;
   729  0150  1283               	bcf	3,5	;RP0=0, select bank0
   730  0151  1303               	bcf	3,6	;RP1=0, select bank0
   731  0152  0185               	clrf	5	;volatile
   732  0153                     l913:
   733                           
   734                           ;mainS.c: 85:     PORTB = 0;
   735  0153  0186               	clrf	6	;volatile
   736  0154                     l915:
   737                           
   738                           ;mainS.c: 86:     PORTC = 0;
   739  0154  0187               	clrf	7	;volatile
   740  0155                     l917:
   741                           
   742                           ;mainS.c: 87:     PORTD = 0;
   743  0155  0188               	clrf	8	;volatile
   744  0156                     l919:
   745                           
   746                           ;mainS.c: 88:     PORTE = 0;
   747  0156  0189               	clrf	9	;volatile
   748  0157                     l921:
   749                           
   750                           ;mainS.c: 95:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   751  0157  01F2               	clrf	spiInit@sDataSample
   752  0158  01F3               	clrf	spiInit@sClockIdle
   753  0159  01F4               	clrf	spiInit@sTransmitEdge
   754  015A  3020               	movlw	32
   755  015B  120A  118A  2161  120A  118A  	fcall	_spiInit
   756  0160                     l60:
   757  0160  0008               	return
   758  0161                     __end_of_setup:
   759                           
   760                           	psect	text3
   761  0161                     __ptext3:	
   762 ;; *************** function _spiInit *****************
   763 ;; Defined at:
   764 ;;		line 11 in file "SPI.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  sType           1    wreg     enum E1264
   767 ;;  sDataSample     1    2[COMMON] enum E1272
   768 ;;  sClockIdle      1    3[COMMON] enum E1276
   769 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  sType           1    5[COMMON] enum E1264
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         3       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0
   784 ;;      Totals:         4       0       0       0       0
   785 ;;Total ram usage:        4 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_setup
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _spiInit
   797  0161                     _spiInit:
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   801                           ;spiInit@sType stored from wreg
   802  0161  00F5               	movwf	spiInit@sType
   803  0162                     l891:
   804                           
   805                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
   806  0162  1683               	bsf	3,5	;RP0=1, select bank1
   807  0163  1303               	bcf	3,6	;RP1=0, select bank1
   808  0164  1287               	bcf	7,5	;volatile
   809                           
   810                           ;SPI.c: 14:     if(sType & 0b00000100)
   811  0165  1D75               	btfss	spiInit@sType,2
   812  0166  2968               	goto	u71
   813  0167  2969               	goto	u70
   814  0168                     u71:
   815  0168  296D               	goto	l897
   816  0169                     u70:
   817  0169                     l893:
   818                           
   819                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
   820  0169  0874               	movf	spiInit@sTransmitEdge,w
   821  016A  0094               	movwf	20	;volatile
   822  016B                     l895:
   823                           
   824                           ;SPI.c: 17:         TRISC3 = 1;
   825  016B  1587               	bsf	7,3	;volatile
   826                           
   827                           ;SPI.c: 18:     }
   828  016C  2971               	goto	l76
   829  016D                     l897:
   830                           
   831                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   832  016D  0872               	movf	spiInit@sDataSample,w
   833  016E  0474               	iorwf	spiInit@sTransmitEdge,w
   834  016F  0094               	movwf	20	;volatile
   835  0170                     l899:
   836                           
   837                           ;SPI.c: 22:         TRISC3 = 0;
   838  0170  1187               	bcf	7,3	;volatile
   839  0171                     l76:	
   840                           ;SPI.c: 23:     }
   841                           
   842                           
   843                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
   844  0171  0875               	movf	spiInit@sType,w
   845  0172  0473               	iorwf	spiInit@sClockIdle,w
   846  0173  1283               	bcf	3,5	;RP0=0, select bank0
   847  0174  1303               	bcf	3,6	;RP1=0, select bank0
   848  0175  0094               	movwf	20	;volatile
   849  0176                     l77:
   850  0176  0008               	return
   851  0177                     __end_of_spiInit:
   852                           
   853                           	psect	text4
   854  0017                     __ptext4:	
   855 ;; *************** function _configADC *****************
   856 ;; Defined at:
   857 ;;		line 14 in file "ADC.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  ch              1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  ch              1    4[COMMON] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      unsigned char 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0
   873 ;;      Temps:          2       0       0       0       0
   874 ;;      Totals:         3       0       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _configADC
   887  0017                     _configADC:
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
   891                           ;configADC@ch stored from wreg
   892  0017  00F4               	movwf	configADC@ch
   893  0018                     l761:
   894                           
   895                           ;ADC.c: 15:     ADCON0bits.ADCS = 1;
   896  0018  1283               	bcf	3,5	;RP0=0, select bank0
   897  0019  1303               	bcf	3,6	;RP1=0, select bank0
   898  001A  081F               	movf	31,w	;volatile
   899  001B  393F               	andlw	-193
   900  001C  3840               	iorlw	64
   901  001D  009F               	movwf	31	;volatile
   902  001E                     l763:
   903                           
   904                           ;ADC.c: 16:     ADCON1 = 0;
   905  001E  1683               	bsf	3,5	;RP0=1, select bank1
   906  001F  1303               	bcf	3,6	;RP1=0, select bank1
   907  0020  019F               	clrf	31	;volatile
   908                           
   909                           ;ADC.c: 18:     switch (ch) {
   910  0021  28BC               	goto	l799
   911  0022                     l116:	
   912                           ;ADC.c: 19:         case 0:
   913                           
   914                           
   915                           ;ADC.c: 20:             TRISAbits.TRISA0 = 1;
   916  0022  1405               	bsf	5,0	;volatile
   917                           
   918                           ;ADC.c: 21:             ANSELbits.ANS0 = 1;
   919  0023  1683               	bsf	3,5	;RP0=1, select bank3
   920  0024  1703               	bsf	3,6	;RP1=1, select bank3
   921  0025  1408               	bsf	8,0	;volatile
   922  0026                     l765:
   923                           
   924                           ;ADC.c: 22:             ADCON0bits.CHS = 0;
   925  0026  30C3               	movlw	-61
   926  0027  1283               	bcf	3,5	;RP0=0, select bank0
   927  0028  1303               	bcf	3,6	;RP1=0, select bank0
   928  0029  059F               	andwf	31,f	;volatile
   929                           
   930                           ;ADC.c: 23:             break;
   931  002A  28F0               	goto	l117
   932  002B                     l118:	
   933                           ;ADC.c: 24:         case 1:
   934                           
   935                           
   936                           ;ADC.c: 25:             TRISAbits.TRISA1=1;
   937  002B  1485               	bsf	5,1	;volatile
   938                           
   939                           ;ADC.c: 26:             ANSELbits.ANS1=1;
   940  002C  1683               	bsf	3,5	;RP0=1, select bank3
   941  002D  1703               	bsf	3,6	;RP1=1, select bank3
   942  002E  1488               	bsf	8,1	;volatile
   943  002F                     l767:
   944                           
   945                           ;ADC.c: 27:             ADCON0bits.CHS=1;
   946  002F  1283               	bcf	3,5	;RP0=0, select bank0
   947  0030  1303               	bcf	3,6	;RP1=0, select bank0
   948  0031  081F               	movf	31,w	;volatile
   949  0032  39C3               	andlw	-61
   950  0033  3804               	iorlw	4
   951  0034  009F               	movwf	31	;volatile
   952                           
   953                           ;ADC.c: 28:             break;
   954  0035  28F0               	goto	l117
   955  0036                     l119:	
   956                           ;ADC.c: 29:         case 2:
   957                           
   958                           
   959                           ;ADC.c: 30:             TRISAbits.TRISA2=1;
   960  0036  1505               	bsf	5,2	;volatile
   961                           
   962                           ;ADC.c: 31:             ANSELbits.ANS2=1;
   963  0037  1683               	bsf	3,5	;RP0=1, select bank3
   964  0038  1703               	bsf	3,6	;RP1=1, select bank3
   965  0039  1508               	bsf	8,2	;volatile
   966  003A                     l769:
   967                           
   968                           ;ADC.c: 32:             ADCON0bits.CHS=2;
   969  003A  1283               	bcf	3,5	;RP0=0, select bank0
   970  003B  1303               	bcf	3,6	;RP1=0, select bank0
   971  003C  081F               	movf	31,w	;volatile
   972  003D  39C3               	andlw	-61
   973  003E  3808               	iorlw	8
   974  003F  009F               	movwf	31	;volatile
   975                           
   976                           ;ADC.c: 33:             break;
   977  0040  28F0               	goto	l117
   978  0041                     l120:	
   979                           ;ADC.c: 34:         case 3:
   980                           
   981                           
   982                           ;ADC.c: 35:             TRISAbits.TRISA3=1;
   983  0041  1585               	bsf	5,3	;volatile
   984                           
   985                           ;ADC.c: 36:             ANSELbits.ANS3=1;
   986  0042  1683               	bsf	3,5	;RP0=1, select bank3
   987  0043  1703               	bsf	3,6	;RP1=1, select bank3
   988  0044  1588               	bsf	8,3	;volatile
   989  0045                     l771:
   990                           
   991                           ;ADC.c: 37:             ADCON0bits.CHS=3;
   992  0045  1283               	bcf	3,5	;RP0=0, select bank0
   993  0046  1303               	bcf	3,6	;RP1=0, select bank0
   994  0047  081F               	movf	31,w	;volatile
   995  0048  39C3               	andlw	-61
   996  0049  380C               	iorlw	12
   997  004A  009F               	movwf	31	;volatile
   998                           
   999                           ;ADC.c: 38:             break;
  1000  004B  28F0               	goto	l117
  1001  004C                     l121:	
  1002                           ;ADC.c: 39:         case 4:
  1003                           
  1004                           
  1005                           ;ADC.c: 40:             TRISAbits.TRISA5=1;
  1006  004C  1685               	bsf	5,5	;volatile
  1007                           
  1008                           ;ADC.c: 41:             ANSELbits.ANS4=1;
  1009  004D  1683               	bsf	3,5	;RP0=1, select bank3
  1010  004E  1703               	bsf	3,6	;RP1=1, select bank3
  1011  004F  1608               	bsf	8,4	;volatile
  1012  0050                     l773:
  1013                           
  1014                           ;ADC.c: 42:             ADCON0bits.CHS=4;
  1015  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0052  081F               	movf	31,w	;volatile
  1018  0053  39C3               	andlw	-61
  1019  0054  3810               	iorlw	16
  1020  0055  009F               	movwf	31	;volatile
  1021                           
  1022                           ;ADC.c: 43:             break;
  1023  0056  28F0               	goto	l117
  1024  0057                     l122:	
  1025                           ;ADC.c: 44:         case 5:
  1026                           
  1027                           
  1028                           ;ADC.c: 45:             TRISEbits.TRISE0=1;
  1029  0057  1409               	bsf	9,0	;volatile
  1030                           
  1031                           ;ADC.c: 46:             ANSELbits.ANS5=1;
  1032  0058  1683               	bsf	3,5	;RP0=1, select bank3
  1033  0059  1703               	bsf	3,6	;RP1=1, select bank3
  1034  005A  1688               	bsf	8,5	;volatile
  1035  005B                     l775:
  1036                           
  1037                           ;ADC.c: 47:             ADCON0bits.CHS=5;
  1038  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  005D  081F               	movf	31,w	;volatile
  1041  005E  39C3               	andlw	-61
  1042  005F  3814               	iorlw	20
  1043  0060  009F               	movwf	31	;volatile
  1044                           
  1045                           ;ADC.c: 48:             break;
  1046  0061  28F0               	goto	l117
  1047  0062                     l123:	
  1048                           ;ADC.c: 49:         case 6:
  1049                           
  1050                           
  1051                           ;ADC.c: 50:             TRISEbits.TRISE1=1;
  1052  0062  1489               	bsf	9,1	;volatile
  1053                           
  1054                           ;ADC.c: 51:             ANSELbits.ANS6=1;
  1055  0063  1683               	bsf	3,5	;RP0=1, select bank3
  1056  0064  1703               	bsf	3,6	;RP1=1, select bank3
  1057  0065  1708               	bsf	8,6	;volatile
  1058  0066                     l777:
  1059                           
  1060                           ;ADC.c: 52:             ADCON0bits.CHS=6;
  1061  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0068  081F               	movf	31,w	;volatile
  1064  0069  39C3               	andlw	-61
  1065  006A  3818               	iorlw	24
  1066  006B  009F               	movwf	31	;volatile
  1067                           
  1068                           ;ADC.c: 53:             break;
  1069  006C  28F0               	goto	l117
  1070  006D                     l124:	
  1071                           ;ADC.c: 54:         case 7:
  1072                           
  1073                           
  1074                           ;ADC.c: 55:             TRISEbits.TRISE2=1;
  1075  006D  1509               	bsf	9,2	;volatile
  1076                           
  1077                           ;ADC.c: 56:             ANSELbits.ANS7=1;
  1078  006E  1683               	bsf	3,5	;RP0=1, select bank3
  1079  006F  1703               	bsf	3,6	;RP1=1, select bank3
  1080  0070  1788               	bsf	8,7	;volatile
  1081  0071                     l779:
  1082                           
  1083                           ;ADC.c: 57:             ADCON0bits.CHS=7;
  1084  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0073  081F               	movf	31,w	;volatile
  1087  0074  39C3               	andlw	-61
  1088  0075  381C               	iorlw	28
  1089  0076  009F               	movwf	31	;volatile
  1090                           
  1091                           ;ADC.c: 58:             break;
  1092  0077  28F0               	goto	l117
  1093  0078                     l125:	
  1094                           ;ADC.c: 59:         case 8:
  1095                           
  1096                           
  1097                           ;ADC.c: 60:             TRISBbits.TRISB2=1;
  1098  0078  1506               	bsf	6,2	;volatile
  1099                           
  1100                           ;ADC.c: 61:             ANSELHbits.ANS8=1;
  1101  0079  1683               	bsf	3,5	;RP0=1, select bank3
  1102  007A  1703               	bsf	3,6	;RP1=1, select bank3
  1103  007B  1409               	bsf	9,0	;volatile
  1104  007C                     l781:
  1105                           
  1106                           ;ADC.c: 62:             ADCON0bits.CHS=8;
  1107  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1108  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1109  007E  081F               	movf	31,w	;volatile
  1110  007F  39C3               	andlw	-61
  1111  0080  3820               	iorlw	32
  1112  0081  009F               	movwf	31	;volatile
  1113                           
  1114                           ;ADC.c: 63:             break;
  1115  0082  28F0               	goto	l117
  1116  0083                     l126:	
  1117                           ;ADC.c: 64:         case 9:
  1118                           
  1119                           
  1120                           ;ADC.c: 65:             TRISBbits.TRISB3=1;
  1121  0083  1586               	bsf	6,3	;volatile
  1122                           
  1123                           ;ADC.c: 66:             ANSELHbits.ANS9=1;
  1124  0084  1683               	bsf	3,5	;RP0=1, select bank3
  1125  0085  1703               	bsf	3,6	;RP1=1, select bank3
  1126  0086  1489               	bsf	9,1	;volatile
  1127  0087                     l783:
  1128                           
  1129                           ;ADC.c: 67:             ADCON0bits.CHS=9;
  1130  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0089  081F               	movf	31,w	;volatile
  1133  008A  39C3               	andlw	-61
  1134  008B  3824               	iorlw	36
  1135  008C  009F               	movwf	31	;volatile
  1136                           
  1137                           ;ADC.c: 68:             break;
  1138  008D  28F0               	goto	l117
  1139  008E                     l127:	
  1140                           ;ADC.c: 69:         case 10:
  1141                           
  1142                           
  1143                           ;ADC.c: 70:             TRISBbits.TRISB1=1;
  1144  008E  1486               	bsf	6,1	;volatile
  1145                           
  1146                           ;ADC.c: 71:             ANSELHbits.ANS10=1;
  1147  008F  1683               	bsf	3,5	;RP0=1, select bank3
  1148  0090  1703               	bsf	3,6	;RP1=1, select bank3
  1149  0091  1509               	bsf	9,2	;volatile
  1150  0092                     l785:
  1151                           
  1152                           ;ADC.c: 72:             ADCON0bits.CHS=10;
  1153  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0094  081F               	movf	31,w	;volatile
  1156  0095  39C3               	andlw	-61
  1157  0096  3828               	iorlw	40
  1158  0097  009F               	movwf	31	;volatile
  1159                           
  1160                           ;ADC.c: 73:             break;
  1161  0098  28F0               	goto	l117
  1162  0099                     l128:	
  1163                           ;ADC.c: 74:         case 11:
  1164                           
  1165                           
  1166                           ;ADC.c: 75:             TRISBbits.TRISB4=1;
  1167  0099  1606               	bsf	6,4	;volatile
  1168                           
  1169                           ;ADC.c: 76:             ANSELHbits.ANS11=1;
  1170  009A  1683               	bsf	3,5	;RP0=1, select bank3
  1171  009B  1703               	bsf	3,6	;RP1=1, select bank3
  1172  009C  1589               	bsf	9,3	;volatile
  1173  009D                     l787:
  1174                           
  1175                           ;ADC.c: 77:             ADCON0bits.CHS=11;
  1176  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1177  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1178  009F  081F               	movf	31,w	;volatile
  1179  00A0  39C3               	andlw	-61
  1180  00A1  382C               	iorlw	44
  1181  00A2  009F               	movwf	31	;volatile
  1182                           
  1183                           ;ADC.c: 78:             break;
  1184  00A3  28F0               	goto	l117
  1185  00A4                     l129:	
  1186                           ;ADC.c: 79:         case 12:
  1187                           
  1188                           
  1189                           ;ADC.c: 80:             TRISBbits.TRISB0=1;
  1190  00A4  1406               	bsf	6,0	;volatile
  1191                           
  1192                           ;ADC.c: 81:             ANSELHbits.ANS12=1;
  1193  00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1194  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1195  00A7  1609               	bsf	9,4	;volatile
  1196  00A8                     l789:
  1197                           
  1198                           ;ADC.c: 82:             ADCON0bits.CHS=12;
  1199  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00AA  081F               	movf	31,w	;volatile
  1202  00AB  39C3               	andlw	-61
  1203  00AC  3830               	iorlw	48
  1204  00AD  009F               	movwf	31	;volatile
  1205                           
  1206                           ;ADC.c: 83:             break;
  1207  00AE  28F0               	goto	l117
  1208  00AF                     l130:	
  1209                           ;ADC.c: 84:         case 13:
  1210                           
  1211                           
  1212                           ;ADC.c: 85:             TRISBbits.TRISB5=1;
  1213  00AF  1686               	bsf	6,5	;volatile
  1214                           
  1215                           ;ADC.c: 86:             ANSELHbits.ANS13=1;
  1216  00B0  1683               	bsf	3,5	;RP0=1, select bank3
  1217  00B1  1703               	bsf	3,6	;RP1=1, select bank3
  1218  00B2  1689               	bsf	9,5	;volatile
  1219  00B3                     l791:
  1220                           
  1221                           ;ADC.c: 87:             ADCON0bits.CHS=13;
  1222  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1223  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1224  00B5  081F               	movf	31,w	;volatile
  1225  00B6  39C3               	andlw	-61
  1226  00B7  3834               	iorlw	52
  1227  00B8  009F               	movwf	31	;volatile
  1228                           
  1229                           ;ADC.c: 88:             break;
  1230  00B9  28F0               	goto	l117
  1231  00BA                     l793:
  1232                           
  1233                           ;ADC.c: 90:             return 0;
  1234  00BA  3000               	movlw	0
  1235  00BB  28FF               	goto	l132
  1236  00BC                     l799:
  1237  00BC  0874               	movf	configADC@ch,w
  1238  00BD  00F2               	movwf	??_configADC
  1239  00BE  01F3               	clrf	??_configADC+1
  1240                           
  1241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 1, Range of values is 0 to 0
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            4     3 (average)
  1247                           ; direct_byte           11     8 (fixed)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250  00BF  0873               	movf	??_configADC+1,w
  1251  00C0  3A00               	xorlw	0	; case 0
  1252  00C1  1903               	skipnz
  1253  00C2  28C4               	goto	l979
  1254  00C3  28BA               	goto	l793
  1255  00C4                     l979:
  1256                           
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 14, Range of values is 0 to 13
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte           43    22 (average)
  1262                           ; direct_byte           50     8 (fixed)
  1263                           ; jumptable            260     6 (fixed)
  1264                           ;	Chosen strategy is simple_byte
  1265  00C4  0872               	movf	??_configADC,w
  1266  00C5  3A00               	xorlw	0	; case 0
  1267  00C6  1903               	skipnz
  1268  00C7  2822               	goto	l116
  1269  00C8  3A01               	xorlw	1	; case 1
  1270  00C9  1903               	skipnz
  1271  00CA  282B               	goto	l118
  1272  00CB  3A03               	xorlw	3	; case 2
  1273  00CC  1903               	skipnz
  1274  00CD  2836               	goto	l119
  1275  00CE  3A01               	xorlw	1	; case 3
  1276  00CF  1903               	skipnz
  1277  00D0  2841               	goto	l120
  1278  00D1  3A07               	xorlw	7	; case 4
  1279  00D2  1903               	skipnz
  1280  00D3  284C               	goto	l121
  1281  00D4  3A01               	xorlw	1	; case 5
  1282  00D5  1903               	skipnz
  1283  00D6  2857               	goto	l122
  1284  00D7  3A03               	xorlw	3	; case 6
  1285  00D8  1903               	skipnz
  1286  00D9  2862               	goto	l123
  1287  00DA  3A01               	xorlw	1	; case 7
  1288  00DB  1903               	skipnz
  1289  00DC  286D               	goto	l124
  1290  00DD  3A0F               	xorlw	15	; case 8
  1291  00DE  1903               	skipnz
  1292  00DF  2878               	goto	l125
  1293  00E0  3A01               	xorlw	1	; case 9
  1294  00E1  1903               	skipnz
  1295  00E2  2883               	goto	l126
  1296  00E3  3A03               	xorlw	3	; case 10
  1297  00E4  1903               	skipnz
  1298  00E5  288E               	goto	l127
  1299  00E6  3A01               	xorlw	1	; case 11
  1300  00E7  1903               	skipnz
  1301  00E8  2899               	goto	l128
  1302  00E9  3A07               	xorlw	7	; case 12
  1303  00EA  1903               	skipnz
  1304  00EB  28A4               	goto	l129
  1305  00EC  3A01               	xorlw	1	; case 13
  1306  00ED  1903               	skipnz
  1307  00EE  28AF               	goto	l130
  1308  00EF  28BA               	goto	l793
  1309  00F0                     l117:
  1310                           
  1311                           ;ADC.c: 93:     ADCON0bits.ADON = 1;
  1312  00F0  141F               	bsf	31,0	;volatile
  1313  00F1                     l801:
  1314                           
  1315                           ;ADC.c: 94:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  1316  00F1  3053               	movlw	83
  1317  00F2  00F2               	movwf	??_configADC
  1318  00F3                     u117:
  1319  00F3  0BF2               	decfsz	??_configADC,f
  1320  00F4  28F3               	goto	u117
  1321  00F5                     l803:
  1322                           
  1323                           ;ADC.c: 95:     ADCON0bits.GO = 1;
  1324  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1326  00F7  149F               	bsf	31,1	;volatile
  1327  00F8                     l805:
  1328                           
  1329                           ;ADC.c: 98:     if (ADCON0bits.GO_DONE == 1){
  1330  00F8  1C9F               	btfss	31,1	;volatile
  1331  00F9  28FB               	goto	u21
  1332  00FA  28FC               	goto	u20
  1333  00FB                     u21:
  1334  00FB  28FD               	goto	l134
  1335  00FC                     u20:
  1336  00FC  28F8               	goto	l805
  1337  00FD                     l134:	
  1338                           ;ADC.c: 101:     else{
  1339                           
  1340                           
  1341                           ;ADC.c: 102:         ADCON0bits.ADON = 0;
  1342  00FD  101F               	bcf	31,0	;volatile
  1343  00FE                     l811:
  1344                           
  1345                           ;ADC.c: 103:         return ADRESH;
  1346  00FE  081E               	movf	30,w	;volatile
  1347  00FF                     l132:
  1348  00FF  0008               	return
  1349  0100                     __end_of_configADC:
  1350                           
  1351                           	psect	text5
  1352  0177                     __ptext5:	
  1353 ;; *************** function _isr *****************
  1354 ;; Defined at:
  1355 ;;		line 41 in file "mainS.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		None
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		Interrupt level 1
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _isr
  1384  0177                     _isr:
  1385  0177                     i1l45:
  1386  0177  0871               	movf	??_isr+1,w
  1387  0178  008A               	movwf	10
  1388  0179  0E70               	swapf	??_isr,w
  1389  017A  0083               	movwf	3
  1390  017B  0EFE               	swapf	btemp,f
  1391  017C  0E7E               	swapf	btemp,w
  1392  017D  0009               	retfie
  1393  017E                     __end_of_isr:
  1394  007E                     btemp	set	126	;btemp
  1395  007E                     wtemp0	set	126
  1396                           
  1397                           	psect	intentry
  1398  0004                     __pintentry:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _isr: []
  1401                           
  1402  0004                     interrupt_function:
  1403  007E                     saved_w	set	btemp
  1404  0004  00FE               	movwf	btemp
  1405  0005  0E03               	swapf	3,w
  1406  0006  00F0               	movwf	??_isr
  1407  0007  080A               	movf	10,w
  1408  0008  00F1               	movwf	??_isr+1
  1409  0009  120A  118A  2977   	ljmp	_isr
  1410                           
  1411                           	psect	config
  1412                           
  1413                           ;Config register CONFIG1 @ 0x2007
  1414                           ;	Oscillator Selection bits
  1415                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1416                           ;	Watchdog Timer Enable bit
  1417                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1418                           ;	Power-up Timer Enable bit
  1419                           ;	PWRTE = OFF, PWRT disabled
  1420                           ;	RE3/MCLR pin function select bit
  1421                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1422                           ;	Code Protection bit
  1423                           ;	CP = OFF, Program memory code protection is disabled
  1424                           ;	Data Code Protection bit
  1425                           ;	CPD = OFF, Data memory code protection is disabled
  1426                           ;	Brown Out Reset Selection bits
  1427                           ;	BOREN = OFF, BOR disabled
  1428                           ;	Internal External Switchover bit
  1429                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1430                           ;	Fail-Safe Clock Monitor Enabled bit
  1431                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1432                           ;	Low Voltage Programming Enable bit
  1433                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1434                           ;	In-Circuit Debugger Mode bit
  1435                           ;	DEBUG = 0x1, unprogrammed default
  1436  2007                     	org	8199
  1437  2007  20D4               	dw	8404
  1438                           
  1439                           ;Config register CONFIG2 @ 0x2008
  1440                           ;	Brown-out Reset Selection bit
  1441                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1442                           ;	Flash Program Memory Self Write Enable bits
  1443                           ;	WRT = OFF, Write protection off
  1444  2008                     	org	8200
  1445  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     390
                                              6 COMMON     1     1      0
                          _configADC
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _setup
     _spiInit
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 01 11:31:31 2021

            _SSPSTATbits 0094                       l60 0160                       l55 0143  
                     l76 0171                       l77 0176                       _T1 0078  
                     l86 0183                       _T2 0077                       _V1 007A  
                     _V2 0079                       u20 00FC                       u21 00FB  
                     u70 0169                       u71 0168                       u80 011D  
                     u81 011C                       u90 0126                       u91 0125  
                    l120 0041                      l121 004C                      l130 00AF  
                    l122 0057                      l123 0062                      l132 00FF  
                    l124 006D                      l116 0022                      l125 0078  
                    l117 00F0                      l134 00FD                      l126 0083  
                    l118 002B                      l127 008E                      l119 0036  
                    l128 0099                      l129 00A4                      l801 00F1  
                    l811 00FE                      l803 00F5                      l805 00F8  
                    l901 0146                      l821 017F                      l911 0150  
                    l903 014A                      l761 0018                      l921 0157  
                    l913 0153                      l905 014B                      l771 0045  
                    l763 001E                      l915 0154                      l907 014E  
                    l931 0117                      l781 007C                      l773 0050  
                    l765 0026                      l917 0155                      l909 014F  
                    l941 0139                      l933 011D                      l925 0100  
                    l791 00B3                      l783 0087                      l775 005B  
                    l767 002F                      l919 0156                      l943 013F  
                    l935 0126                      l927 0105                      l793 00BA  
                    l785 0092                      l777 0066                      l769 003A  
                    l945 0142                      l937 012C                      l929 010E  
                    l787 009D                      l779 0071                      l891 0162  
                    l939 0130                      l789 00A8                      l893 0169  
                    l799 00BC                      l895 016B                      l897 016D  
                    l979 00C4                      l899 0170                      _RE0 0048  
                    u100 0139                      u101 0138                      u117 00F3  
                    _isr 0177                     ?_isr 0070                     i1l45 0177  
                   _main 0100                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _SSPIF 0063                    _setup 0146                    pclath 000A  
        __end_of_spiInit 0177                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0146                   ??_main 0076  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 0184                ??_spiInit 0075  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 0161       __size_of_configADC 00E9  
                ??_setup 0076               __pmaintext 0100               __pintentry 0004  
                _SSPSTAT 0094        __end_of_configADC 0100                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 017E                  __ptext2 0146  
                __ptext3 0161                  __ptext4 0017                  __ptext5 0177  
           __size_of_isr 0007                  _spiInit 0161     end_of_initialization 0013  
             ??_spiWrite 0072                _TRISAbits 0085                _TRISBbits 0086  
              _TRISEbits 0089              spiWrite@dat 0072      start_initialization 000F  
            __end_of_isr 017E              __pbssCOMMON 0077                ___latbits 0002  
              _configADC 0017        __size_of_spiWrite 0006                 ?_spiInit 0072  
         __size_of_setup 001B     spiInit@sTransmitEdge 0074        interrupt_function 0004  
     spiInit@sDataSample 0072               ?_configADC 0070               _ADCON0bits 001F  
             _ANSELHbits 0189         __size_of_spiInit 0016            __size_of_main 0046  
               _spiWrite 017E             spiInit@sType 0075              ??_configADC 0072  
      spiInit@sClockIdle 0073                 intlevel1 0000              configADC@ch 0074  
