

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 01 15:50:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  0105                     	;# 
   347  0107                     	;# 
   348  0108                     	;# 
   349  0109                     	;# 
   350  010C                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  0185                     	;# 
   356  0187                     	;# 
   357  0188                     	;# 
   358  0189                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  001E                     _ADRESH	set	30
   362  0013                     _SSPBUF	set	19
   363  0014                     _SSPCON	set	20
   364  0009                     _PORTE	set	9
   365  0008                     _PORTD	set	8
   366  0007                     _PORTC	set	7
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  001F                     _ADCON0bits	set	31
   370  0048                     _RE0	set	72
   371  0063                     _SSPIF	set	99
   372  0086                     _TRISBbits	set	134
   373  0089                     _TRISEbits	set	137
   374  009F                     _ADCON1	set	159
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  0086                     _TRISB	set	134
   378  0085                     _TRISAbits	set	133
   379  043B                     _TRISC3	set	1083
   380  043D                     _TRISC5	set	1085
   381  0189                     _ANSELHbits	set	393
   382  0188                     _ANSELbits	set	392
   383  0189                     _ANSELH	set	393
   384  0188                     _ANSEL	set	392
   385                           
   386                           	psect	cinit
   387  07F8                     start_initialization:	
   388                           ; #config settings
   389                           
   390  07F8                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  07F8  01F5               	clrf	__pbssCOMMON& (0+127)
   394  07F9  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   395  07FA  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   396  07FB  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   397  07FC                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  07FC                     __end_of__initialization:
   401  07FC  0183               	clrf	3
   402  07FD  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0075                     __pbssCOMMON:
   406  0075                     _T2:
   407  0075                     	ds	1
   408  0076                     _T1:
   409  0076                     	ds	1
   410  0077                     _V2:
   411  0077                     	ds	1
   412  0078                     _V1:
   413  0078                     	ds	1
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_setup:
   418  0070                     ?_configADC:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_configADC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_spiInit:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiInit@sDataSample:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     spiInit@sClockIdle:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     spiInit@sTransmitEdge:
   450  0072                     configADC@ch:	
   451                           ; 1 bytes @ 0x2
   452                           
   453                           
   454                           ; 1 bytes @ 0x2
   455  0072                     	ds	1
   456  0073                     ??_spiInit:
   457  0073                     spiInit@sType:	
   458                           ; 1 bytes @ 0x3
   459                           
   460                           
   461                           ; 1 bytes @ 0x3
   462  0073                     	ds	1
   463  0074                     ??_setup:
   464  0074                     ??_main:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	1
   470                           
   471                           	psect	maintext
   472  06CB                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 49 in file "mainS.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          1       0       0       0       0
   495 ;;      Totals:         1       0       0       0       0
   496 ;;Total ram usage:        1 bytes
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		_configADC
   500 ;;		_setup
   501 ;;		_spiWrite
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  06CB                     _main:
   510  06CB                     l924:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;mainS.c: 51:     setup();
   516  06CB  120A  118A  26AF  120A  118A  	fcall	_setup
   517  06D0                     l926:
   518                           
   519                           ;mainS.c: 53:     {;mainS.c: 54:         V1 = configADC(0);
   520  06D0  3000               	movlw	0
   521  06D1  120A  118A  2711  120A  118A  	fcall	_configADC
   522  06D6  00F4               	movwf	??_main
   523  06D7  0874               	movf	??_main,w
   524  06D8  00F8               	movwf	_V1
   525  06D9                     l928:
   526                           
   527                           ;mainS.c: 55:         V2 = configADC(1);
   528  06D9  3001               	movlw	1
   529  06DA  120A  118A  2711  120A  118A  	fcall	_configADC
   530  06DF  00F4               	movwf	??_main
   531  06E0  0874               	movf	??_main,w
   532  06E1  00F7               	movwf	_V2
   533  06E2                     l930:
   534                           
   535                           ;mainS.c: 57:         if(SSPIF){
   536  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   537  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   538  06E4  1D8C               	btfss	12,3	;volatile
   539  06E5  2EE7               	goto	u81
   540  06E6  2EE8               	goto	u80
   541  06E7                     u81:
   542  06E7  2F0E               	goto	l50
   543  06E8                     u80:
   544  06E8                     l932:
   545                           
   546                           ;mainS.c: 58:         if(ADCON0bits.CHS==0){
   547  06E8  0C1F               	rrf	31,w	;volatile
   548  06E9  00F4               	movwf	??_main
   549  06EA  0C74               	rrf	??_main,w
   550  06EB  390F               	andlw	15
   551  06EC  3A00               	xorlw	0
   552  06ED  1D03               	skipz
   553  06EE  2EF0               	goto	u91
   554  06EF  2EF1               	goto	u90
   555  06F0                     u91:
   556  06F0  2EFB               	goto	l938
   557  06F1                     u90:
   558  06F1                     l934:
   559                           
   560                           ;mainS.c: 59:             spiWrite(V1);
   561  06F1  0878               	movf	_V1,w
   562  06F2  120A  118A  2693  120A  118A  	fcall	_spiWrite
   563  06F7                     l936:
   564                           
   565                           ;mainS.c: 60:             RE0 = 1;
   566  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   567  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   568  06F9  1409               	bsf	9,0	;volatile
   569                           
   570                           ;mainS.c: 61:         }
   571  06FA  2F0D               	goto	l944
   572  06FB                     l938:
   573  06FB  0C1F               	rrf	31,w	;volatile
   574  06FC  00F4               	movwf	??_main
   575  06FD  0C74               	rrf	??_main,w
   576  06FE  390F               	andlw	15
   577  06FF  3A01               	xorlw	1
   578  0700  1D03               	skipz
   579  0701  2F03               	goto	u101
   580  0702  2F04               	goto	u100
   581  0703                     u101:
   582  0703  2F0D               	goto	l944
   583  0704                     u100:
   584  0704                     l940:
   585                           
   586                           ;mainS.c: 63:             spiWrite(V2);
   587  0704  0877               	movf	_V2,w
   588  0705  120A  118A  2693  120A  118A  	fcall	_spiWrite
   589  070A                     l942:
   590                           
   591                           ;mainS.c: 64:             RE0 = 0;
   592  070A  1283               	bcf	3,5	;RP0=0, select bank0
   593  070B  1303               	bcf	3,6	;RP1=0, select bank0
   594  070C  1009               	bcf	9,0	;volatile
   595  070D                     l944:
   596                           
   597                           ;mainS.c: 66:         SSPIF = 0;
   598  070D  118C               	bcf	12,3	;volatile
   599  070E                     l50:
   600  070E  120A  118A  2800   	ljmp	start
   601  0711                     __end_of_main:
   602                           
   603                           	psect	text1
   604  0693                     __ptext1:	
   605 ;; *************** function _spiWrite *****************
   606 ;; Defined at:
   607 ;;		line 33 in file "SPI.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  dat             1    wreg     unsigned char 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  dat             1    0[COMMON] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         1       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         1       0       0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _spiWrite
   636  0693                     _spiWrite:
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _spiWrite: [wreg]
   640                           ;spiWrite@dat stored from wreg
   641  0693  00F0               	movwf	spiWrite@dat
   642  0694                     l818:
   643                           
   644                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
   645  0694  0870               	movf	spiWrite@dat,w
   646  0695  1283               	bcf	3,5	;RP0=0, select bank0
   647  0696  1303               	bcf	3,6	;RP1=0, select bank0
   648  0697  0093               	movwf	19	;volatile
   649  0698                     l81:
   650  0698  0008               	return
   651  0699                     __end_of_spiWrite:
   652                           
   653                           	psect	text2
   654  06AF                     __ptext2:	
   655 ;; *************** function _setup *****************
   656 ;; Defined at:
   657 ;;		line 73 in file "mainS.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    1
   678 ;; This function calls:
   679 ;;		_spiInit
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _setup
   687  06AF                     _setup:
   688  06AF                     l898:	
   689                           ;incstack = 0
   690                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;mainS.c: 75:     ANSEL = 0b0000011;
   694  06AF  3003               	movlw	3
   695  06B0  1683               	bsf	3,5	;RP0=1, select bank3
   696  06B1  1703               	bsf	3,6	;RP1=1, select bank3
   697  06B2  0088               	movwf	8	;volatile
   698  06B3                     l900:
   699                           
   700                           ;mainS.c: 76:     ANSELH = 0;
   701  06B3  0189               	clrf	9	;volatile
   702  06B4                     l902:
   703                           
   704                           ;mainS.c: 78:     TRISAbits.TRISA0 = 1;
   705  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   706  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   707  06B6  1405               	bsf	5,0	;volatile
   708  06B7                     l904:
   709                           
   710                           ;mainS.c: 79:     TRISAbits.TRISA1 = 1;
   711  06B7  1485               	bsf	5,1	;volatile
   712  06B8                     l906:
   713                           
   714                           ;mainS.c: 80:     TRISAbits.TRISA5 = 1;
   715  06B8  1685               	bsf	5,5	;volatile
   716  06B9                     l908:
   717                           
   718                           ;mainS.c: 81:     TRISB = 0;
   719  06B9  0186               	clrf	6	;volatile
   720  06BA                     l910:
   721                           
   722                           ;mainS.c: 86:     PORTA = 0;
   723  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   724  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   725  06BC  0185               	clrf	5	;volatile
   726  06BD                     l912:
   727                           
   728                           ;mainS.c: 87:     PORTB = 0;
   729  06BD  0186               	clrf	6	;volatile
   730  06BE                     l914:
   731                           
   732                           ;mainS.c: 88:     PORTC = 0;
   733  06BE  0187               	clrf	7	;volatile
   734  06BF                     l916:
   735                           
   736                           ;mainS.c: 89:     PORTD = 0;
   737  06BF  0188               	clrf	8	;volatile
   738  06C0                     l918:
   739                           
   740                           ;mainS.c: 90:     PORTE = 0;
   741  06C0  0189               	clrf	9	;volatile
   742  06C1                     l920:
   743                           
   744                           ;mainS.c: 97:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   745  06C1  01F0               	clrf	spiInit@sDataSample
   746  06C2  01F1               	clrf	spiInit@sClockIdle
   747  06C3  01F2               	clrf	spiInit@sTransmitEdge
   748  06C4  3020               	movlw	32
   749  06C5  120A  118A  2699  120A  118A  	fcall	_spiInit
   750  06CA                     l55:
   751  06CA  0008               	return
   752  06CB                     __end_of_setup:
   753                           
   754                           	psect	text3
   755  0699                     __ptext3:	
   756 ;; *************** function _spiInit *****************
   757 ;; Defined at:
   758 ;;		line 11 in file "SPI.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  sType           1    wreg     enum E1264
   761 ;;  sDataSample     1    0[COMMON] enum E1272
   762 ;;  sClockIdle      1    1[COMMON] enum E1276
   763 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  sType           1    3[COMMON] enum E1264
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         3       0       0       0       0
   776 ;;      Locals:         1       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         4       0       0       0       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_setup
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _spiInit
   790  0699                     _spiInit:
   791                           
   792                           ;incstack = 0
   793                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   794                           ;spiInit@sType stored from wreg
   795  0699  00F3               	movwf	spiInit@sType
   796  069A                     l888:
   797                           
   798                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
   799  069A  1683               	bsf	3,5	;RP0=1, select bank1
   800  069B  1303               	bcf	3,6	;RP1=0, select bank1
   801  069C  1287               	bcf	7,5	;volatile
   802                           
   803                           ;SPI.c: 14:     if(sType & 0b00000100)
   804  069D  1D73               	btfss	spiInit@sType,2
   805  069E  2EA0               	goto	u71
   806  069F  2EA1               	goto	u70
   807  06A0                     u71:
   808  06A0  2EA5               	goto	l894
   809  06A1                     u70:
   810  06A1                     l890:
   811                           
   812                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
   813  06A1  0872               	movf	spiInit@sTransmitEdge,w
   814  06A2  0094               	movwf	20	;volatile
   815  06A3                     l892:
   816                           
   817                           ;SPI.c: 17:         TRISC3 = 1;
   818  06A3  1587               	bsf	7,3	;volatile
   819                           
   820                           ;SPI.c: 18:     }
   821  06A4  2EA9               	goto	l71
   822  06A5                     l894:
   823                           
   824                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   825  06A5  0870               	movf	spiInit@sDataSample,w
   826  06A6  0472               	iorwf	spiInit@sTransmitEdge,w
   827  06A7  0094               	movwf	20	;volatile
   828  06A8                     l896:
   829                           
   830                           ;SPI.c: 22:         TRISC3 = 0;
   831  06A8  1187               	bcf	7,3	;volatile
   832  06A9                     l71:	
   833                           ;SPI.c: 23:     }
   834                           
   835                           
   836                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
   837  06A9  0873               	movf	spiInit@sType,w
   838  06AA  0471               	iorwf	spiInit@sClockIdle,w
   839  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   840  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   841  06AD  0094               	movwf	20	;volatile
   842  06AE                     l72:
   843  06AE  0008               	return
   844  06AF                     __end_of_spiInit:
   845                           
   846                           	psect	text4
   847  0711                     __ptext4:	
   848 ;; *************** function _configADC *****************
   849 ;; Defined at:
   850 ;;		line 14 in file "ADC.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  ch              1    wreg     unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  ch              1    2[COMMON] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      unsigned char 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         1       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0
   867 ;;      Totals:         3       0       0       0       0
   868 ;;Total ram usage:        3 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _configADC
   879  0711                     _configADC:
   880                           
   881                           ;incstack = 0
   882                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
   883                           ;configADC@ch stored from wreg
   884  0711  00F2               	movwf	configADC@ch
   885  0712                     l758:
   886                           
   887                           ;ADC.c: 15:     ADCON0bits.ADCS0 = 1;
   888  0712  1283               	bcf	3,5	;RP0=0, select bank0
   889  0713  1303               	bcf	3,6	;RP1=0, select bank0
   890  0714  171F               	bsf	31,6	;volatile
   891                           
   892                           ;ADC.c: 16:     ADCON0bits.ADCS1 = 0;
   893  0715  139F               	bcf	31,7	;volatile
   894  0716                     l760:
   895                           
   896                           ;ADC.c: 17:     ADCON1 = 0;
   897  0716  1683               	bsf	3,5	;RP0=1, select bank1
   898  0717  1303               	bcf	3,6	;RP1=0, select bank1
   899  0718  019F               	clrf	31	;volatile
   900                           
   901                           ;ADC.c: 19:     switch (ch) {
   902  0719  2FB4               	goto	l796
   903  071A                     l111:	
   904                           ;ADC.c: 20:         case 0:
   905                           
   906                           
   907                           ;ADC.c: 21:             TRISAbits.TRISA0 = 1;
   908  071A  1405               	bsf	5,0	;volatile
   909                           
   910                           ;ADC.c: 22:             ANSELbits.ANS0 = 1;
   911  071B  1683               	bsf	3,5	;RP0=1, select bank3
   912  071C  1703               	bsf	3,6	;RP1=1, select bank3
   913  071D  1408               	bsf	8,0	;volatile
   914  071E                     l762:
   915                           
   916                           ;ADC.c: 23:             ADCON0bits.CHS = 0;
   917  071E  30C3               	movlw	-61
   918  071F  1283               	bcf	3,5	;RP0=0, select bank0
   919  0720  1303               	bcf	3,6	;RP1=0, select bank0
   920  0721  059F               	andwf	31,f	;volatile
   921                           
   922                           ;ADC.c: 24:             break;
   923  0722  2FE8               	goto	l112
   924  0723                     l113:	
   925                           ;ADC.c: 25:         case 1:
   926                           
   927                           
   928                           ;ADC.c: 26:             TRISAbits.TRISA1=1;
   929  0723  1485               	bsf	5,1	;volatile
   930                           
   931                           ;ADC.c: 27:             ANSELbits.ANS1=1;
   932  0724  1683               	bsf	3,5	;RP0=1, select bank3
   933  0725  1703               	bsf	3,6	;RP1=1, select bank3
   934  0726  1488               	bsf	8,1	;volatile
   935  0727                     l764:
   936                           
   937                           ;ADC.c: 28:             ADCON0bits.CHS=1;
   938  0727  1283               	bcf	3,5	;RP0=0, select bank0
   939  0728  1303               	bcf	3,6	;RP1=0, select bank0
   940  0729  081F               	movf	31,w	;volatile
   941  072A  39C3               	andlw	-61
   942  072B  3804               	iorlw	4
   943  072C  009F               	movwf	31	;volatile
   944                           
   945                           ;ADC.c: 29:             break;
   946  072D  2FE8               	goto	l112
   947  072E                     l114:	
   948                           ;ADC.c: 30:         case 2:
   949                           
   950                           
   951                           ;ADC.c: 31:             TRISAbits.TRISA2=1;
   952  072E  1505               	bsf	5,2	;volatile
   953                           
   954                           ;ADC.c: 32:             ANSELbits.ANS2=1;
   955  072F  1683               	bsf	3,5	;RP0=1, select bank3
   956  0730  1703               	bsf	3,6	;RP1=1, select bank3
   957  0731  1508               	bsf	8,2	;volatile
   958  0732                     l766:
   959                           
   960                           ;ADC.c: 33:             ADCON0bits.CHS=2;
   961  0732  1283               	bcf	3,5	;RP0=0, select bank0
   962  0733  1303               	bcf	3,6	;RP1=0, select bank0
   963  0734  081F               	movf	31,w	;volatile
   964  0735  39C3               	andlw	-61
   965  0736  3808               	iorlw	8
   966  0737  009F               	movwf	31	;volatile
   967                           
   968                           ;ADC.c: 34:             break;
   969  0738  2FE8               	goto	l112
   970  0739                     l115:	
   971                           ;ADC.c: 35:         case 3:
   972                           
   973                           
   974                           ;ADC.c: 36:             TRISAbits.TRISA3=1;
   975  0739  1585               	bsf	5,3	;volatile
   976                           
   977                           ;ADC.c: 37:             ANSELbits.ANS3=1;
   978  073A  1683               	bsf	3,5	;RP0=1, select bank3
   979  073B  1703               	bsf	3,6	;RP1=1, select bank3
   980  073C  1588               	bsf	8,3	;volatile
   981  073D                     l768:
   982                           
   983                           ;ADC.c: 38:             ADCON0bits.CHS=3;
   984  073D  1283               	bcf	3,5	;RP0=0, select bank0
   985  073E  1303               	bcf	3,6	;RP1=0, select bank0
   986  073F  081F               	movf	31,w	;volatile
   987  0740  39C3               	andlw	-61
   988  0741  380C               	iorlw	12
   989  0742  009F               	movwf	31	;volatile
   990                           
   991                           ;ADC.c: 39:             break;
   992  0743  2FE8               	goto	l112
   993  0744                     l116:	
   994                           ;ADC.c: 40:         case 4:
   995                           
   996                           
   997                           ;ADC.c: 41:             TRISAbits.TRISA5=1;
   998  0744  1685               	bsf	5,5	;volatile
   999                           
  1000                           ;ADC.c: 42:             ANSELbits.ANS4=1;
  1001  0745  1683               	bsf	3,5	;RP0=1, select bank3
  1002  0746  1703               	bsf	3,6	;RP1=1, select bank3
  1003  0747  1608               	bsf	8,4	;volatile
  1004  0748                     l770:
  1005                           
  1006                           ;ADC.c: 43:             ADCON0bits.CHS=4;
  1007  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1009  074A  081F               	movf	31,w	;volatile
  1010  074B  39C3               	andlw	-61
  1011  074C  3810               	iorlw	16
  1012  074D  009F               	movwf	31	;volatile
  1013                           
  1014                           ;ADC.c: 44:             break;
  1015  074E  2FE8               	goto	l112
  1016  074F                     l117:	
  1017                           ;ADC.c: 45:         case 5:
  1018                           
  1019                           
  1020                           ;ADC.c: 46:             TRISEbits.TRISE0=1;
  1021  074F  1409               	bsf	9,0	;volatile
  1022                           
  1023                           ;ADC.c: 47:             ANSELbits.ANS5=1;
  1024  0750  1683               	bsf	3,5	;RP0=1, select bank3
  1025  0751  1703               	bsf	3,6	;RP1=1, select bank3
  1026  0752  1688               	bsf	8,5	;volatile
  1027  0753                     l772:
  1028                           
  1029                           ;ADC.c: 48:             ADCON0bits.CHS=5;
  1030  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0755  081F               	movf	31,w	;volatile
  1033  0756  39C3               	andlw	-61
  1034  0757  3814               	iorlw	20
  1035  0758  009F               	movwf	31	;volatile
  1036                           
  1037                           ;ADC.c: 49:             break;
  1038  0759  2FE8               	goto	l112
  1039  075A                     l118:	
  1040                           ;ADC.c: 50:         case 6:
  1041                           
  1042                           
  1043                           ;ADC.c: 51:             TRISEbits.TRISE1=1;
  1044  075A  1489               	bsf	9,1	;volatile
  1045                           
  1046                           ;ADC.c: 52:             ANSELbits.ANS6=1;
  1047  075B  1683               	bsf	3,5	;RP0=1, select bank3
  1048  075C  1703               	bsf	3,6	;RP1=1, select bank3
  1049  075D  1708               	bsf	8,6	;volatile
  1050  075E                     l774:
  1051                           
  1052                           ;ADC.c: 53:             ADCON0bits.CHS=6;
  1053  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1054  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0760  081F               	movf	31,w	;volatile
  1056  0761  39C3               	andlw	-61
  1057  0762  3818               	iorlw	24
  1058  0763  009F               	movwf	31	;volatile
  1059                           
  1060                           ;ADC.c: 54:             break;
  1061  0764  2FE8               	goto	l112
  1062  0765                     l119:	
  1063                           ;ADC.c: 55:         case 7:
  1064                           
  1065                           
  1066                           ;ADC.c: 56:             TRISEbits.TRISE2=1;
  1067  0765  1509               	bsf	9,2	;volatile
  1068                           
  1069                           ;ADC.c: 57:             ANSELbits.ANS7=1;
  1070  0766  1683               	bsf	3,5	;RP0=1, select bank3
  1071  0767  1703               	bsf	3,6	;RP1=1, select bank3
  1072  0768  1788               	bsf	8,7	;volatile
  1073  0769                     l776:
  1074                           
  1075                           ;ADC.c: 58:             ADCON0bits.CHS=7;
  1076  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1077  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1078  076B  081F               	movf	31,w	;volatile
  1079  076C  39C3               	andlw	-61
  1080  076D  381C               	iorlw	28
  1081  076E  009F               	movwf	31	;volatile
  1082                           
  1083                           ;ADC.c: 59:             break;
  1084  076F  2FE8               	goto	l112
  1085  0770                     l120:	
  1086                           ;ADC.c: 60:         case 8:
  1087                           
  1088                           
  1089                           ;ADC.c: 61:             TRISBbits.TRISB2=1;
  1090  0770  1506               	bsf	6,2	;volatile
  1091                           
  1092                           ;ADC.c: 62:             ANSELHbits.ANS8=1;
  1093  0771  1683               	bsf	3,5	;RP0=1, select bank3
  1094  0772  1703               	bsf	3,6	;RP1=1, select bank3
  1095  0773  1409               	bsf	9,0	;volatile
  1096  0774                     l778:
  1097                           
  1098                           ;ADC.c: 63:             ADCON0bits.CHS=8;
  1099  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0776  081F               	movf	31,w	;volatile
  1102  0777  39C3               	andlw	-61
  1103  0778  3820               	iorlw	32
  1104  0779  009F               	movwf	31	;volatile
  1105                           
  1106                           ;ADC.c: 64:             break;
  1107  077A  2FE8               	goto	l112
  1108  077B                     l121:	
  1109                           ;ADC.c: 65:         case 9:
  1110                           
  1111                           
  1112                           ;ADC.c: 66:             TRISBbits.TRISB3=1;
  1113  077B  1586               	bsf	6,3	;volatile
  1114                           
  1115                           ;ADC.c: 67:             ANSELHbits.ANS9=1;
  1116  077C  1683               	bsf	3,5	;RP0=1, select bank3
  1117  077D  1703               	bsf	3,6	;RP1=1, select bank3
  1118  077E  1489               	bsf	9,1	;volatile
  1119  077F                     l780:
  1120                           
  1121                           ;ADC.c: 68:             ADCON0bits.CHS=9;
  1122  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0781  081F               	movf	31,w	;volatile
  1125  0782  39C3               	andlw	-61
  1126  0783  3824               	iorlw	36
  1127  0784  009F               	movwf	31	;volatile
  1128                           
  1129                           ;ADC.c: 69:             break;
  1130  0785  2FE8               	goto	l112
  1131  0786                     l122:	
  1132                           ;ADC.c: 70:         case 10:
  1133                           
  1134                           
  1135                           ;ADC.c: 71:             TRISBbits.TRISB1=1;
  1136  0786  1486               	bsf	6,1	;volatile
  1137                           
  1138                           ;ADC.c: 72:             ANSELHbits.ANS10=1;
  1139  0787  1683               	bsf	3,5	;RP0=1, select bank3
  1140  0788  1703               	bsf	3,6	;RP1=1, select bank3
  1141  0789  1509               	bsf	9,2	;volatile
  1142  078A                     l782:
  1143                           
  1144                           ;ADC.c: 73:             ADCON0bits.CHS=10;
  1145  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1146  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1147  078C  081F               	movf	31,w	;volatile
  1148  078D  39C3               	andlw	-61
  1149  078E  3828               	iorlw	40
  1150  078F  009F               	movwf	31	;volatile
  1151                           
  1152                           ;ADC.c: 74:             break;
  1153  0790  2FE8               	goto	l112
  1154  0791                     l123:	
  1155                           ;ADC.c: 75:         case 11:
  1156                           
  1157                           
  1158                           ;ADC.c: 76:             TRISBbits.TRISB4=1;
  1159  0791  1606               	bsf	6,4	;volatile
  1160                           
  1161                           ;ADC.c: 77:             ANSELHbits.ANS11=1;
  1162  0792  1683               	bsf	3,5	;RP0=1, select bank3
  1163  0793  1703               	bsf	3,6	;RP1=1, select bank3
  1164  0794  1589               	bsf	9,3	;volatile
  1165  0795                     l784:
  1166                           
  1167                           ;ADC.c: 78:             ADCON0bits.CHS=11;
  1168  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0797  081F               	movf	31,w	;volatile
  1171  0798  39C3               	andlw	-61
  1172  0799  382C               	iorlw	44
  1173  079A  009F               	movwf	31	;volatile
  1174                           
  1175                           ;ADC.c: 79:             break;
  1176  079B  2FE8               	goto	l112
  1177  079C                     l124:	
  1178                           ;ADC.c: 80:         case 12:
  1179                           
  1180                           
  1181                           ;ADC.c: 81:             TRISBbits.TRISB0=1;
  1182  079C  1406               	bsf	6,0	;volatile
  1183                           
  1184                           ;ADC.c: 82:             ANSELHbits.ANS12=1;
  1185  079D  1683               	bsf	3,5	;RP0=1, select bank3
  1186  079E  1703               	bsf	3,6	;RP1=1, select bank3
  1187  079F  1609               	bsf	9,4	;volatile
  1188  07A0                     l786:
  1189                           
  1190                           ;ADC.c: 83:             ADCON0bits.CHS=12;
  1191  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1192  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1193  07A2  081F               	movf	31,w	;volatile
  1194  07A3  39C3               	andlw	-61
  1195  07A4  3830               	iorlw	48
  1196  07A5  009F               	movwf	31	;volatile
  1197                           
  1198                           ;ADC.c: 84:             break;
  1199  07A6  2FE8               	goto	l112
  1200  07A7                     l125:	
  1201                           ;ADC.c: 85:         case 13:
  1202                           
  1203                           
  1204                           ;ADC.c: 86:             TRISBbits.TRISB5=1;
  1205  07A7  1686               	bsf	6,5	;volatile
  1206                           
  1207                           ;ADC.c: 87:             ANSELHbits.ANS13=1;
  1208  07A8  1683               	bsf	3,5	;RP0=1, select bank3
  1209  07A9  1703               	bsf	3,6	;RP1=1, select bank3
  1210  07AA  1689               	bsf	9,5	;volatile
  1211  07AB                     l788:
  1212                           
  1213                           ;ADC.c: 88:             ADCON0bits.CHS=13;
  1214  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1215  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1216  07AD  081F               	movf	31,w	;volatile
  1217  07AE  39C3               	andlw	-61
  1218  07AF  3834               	iorlw	52
  1219  07B0  009F               	movwf	31	;volatile
  1220                           
  1221                           ;ADC.c: 89:             break;
  1222  07B1  2FE8               	goto	l112
  1223  07B2                     l790:
  1224                           
  1225                           ;ADC.c: 91:             return 0;
  1226  07B2  3000               	movlw	0
  1227  07B3  2FF7               	goto	l127
  1228  07B4                     l796:
  1229  07B4  0872               	movf	configADC@ch,w
  1230  07B5  00F0               	movwf	??_configADC
  1231  07B6  01F1               	clrf	??_configADC+1
  1232                           
  1233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1234                           ; Switch size 1, requested type "simple"
  1235                           ; Number of cases is 1, Range of values is 0 to 0
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte            4     3 (average)
  1239                           ; direct_byte           11     8 (fixed)
  1240                           ; jumptable            260     6 (fixed)
  1241                           ;	Chosen strategy is simple_byte
  1242  07B7  0871               	movf	??_configADC+1,w
  1243  07B8  3A00               	xorlw	0	; case 0
  1244  07B9  1903               	skipnz
  1245  07BA  2FBC               	goto	l978
  1246  07BB  2FB2               	goto	l790
  1247  07BC                     l978:
  1248                           
  1249                           ; Switch size 1, requested type "simple"
  1250                           ; Number of cases is 14, Range of values is 0 to 13
  1251                           ; switch strategies available:
  1252                           ; Name         Instructions Cycles
  1253                           ; simple_byte           43    22 (average)
  1254                           ; direct_byte           50     8 (fixed)
  1255                           ; jumptable            260     6 (fixed)
  1256                           ;	Chosen strategy is simple_byte
  1257  07BC  0870               	movf	??_configADC,w
  1258  07BD  3A00               	xorlw	0	; case 0
  1259  07BE  1903               	skipnz
  1260  07BF  2F1A               	goto	l111
  1261  07C0  3A01               	xorlw	1	; case 1
  1262  07C1  1903               	skipnz
  1263  07C2  2F23               	goto	l113
  1264  07C3  3A03               	xorlw	3	; case 2
  1265  07C4  1903               	skipnz
  1266  07C5  2F2E               	goto	l114
  1267  07C6  3A01               	xorlw	1	; case 3
  1268  07C7  1903               	skipnz
  1269  07C8  2F39               	goto	l115
  1270  07C9  3A07               	xorlw	7	; case 4
  1271  07CA  1903               	skipnz
  1272  07CB  2F44               	goto	l116
  1273  07CC  3A01               	xorlw	1	; case 5
  1274  07CD  1903               	skipnz
  1275  07CE  2F4F               	goto	l117
  1276  07CF  3A03               	xorlw	3	; case 6
  1277  07D0  1903               	skipnz
  1278  07D1  2F5A               	goto	l118
  1279  07D2  3A01               	xorlw	1	; case 7
  1280  07D3  1903               	skipnz
  1281  07D4  2F65               	goto	l119
  1282  07D5  3A0F               	xorlw	15	; case 8
  1283  07D6  1903               	skipnz
  1284  07D7  2F70               	goto	l120
  1285  07D8  3A01               	xorlw	1	; case 9
  1286  07D9  1903               	skipnz
  1287  07DA  2F7B               	goto	l121
  1288  07DB  3A03               	xorlw	3	; case 10
  1289  07DC  1903               	skipnz
  1290  07DD  2F86               	goto	l122
  1291  07DE  3A01               	xorlw	1	; case 11
  1292  07DF  1903               	skipnz
  1293  07E0  2F91               	goto	l123
  1294  07E1  3A07               	xorlw	7	; case 12
  1295  07E2  1903               	skipnz
  1296  07E3  2F9C               	goto	l124
  1297  07E4  3A01               	xorlw	1	; case 13
  1298  07E5  1903               	skipnz
  1299  07E6  2FA7               	goto	l125
  1300  07E7  2FB2               	goto	l790
  1301  07E8                     l112:
  1302                           
  1303                           ;ADC.c: 94:     ADCON0bits.ADON = 1;
  1304  07E8  141F               	bsf	31,0	;volatile
  1305  07E9                     l798:
  1306                           
  1307                           ;ADC.c: 95:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  1308  07E9  3053               	movlw	83
  1309  07EA  00F0               	movwf	??_configADC
  1310  07EB                     u117:
  1311  07EB  0BF0               	decfsz	??_configADC,f
  1312  07EC  2FEB               	goto	u117
  1313  07ED                     l800:
  1314                           
  1315                           ;ADC.c: 96:     ADCON0bits.GO = 1;
  1316  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1317  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1318  07EF  149F               	bsf	31,1	;volatile
  1319  07F0                     l802:
  1320                           
  1321                           ;ADC.c: 99:     if (ADCON0bits.GO_DONE == 1){
  1322  07F0  1C9F               	btfss	31,1	;volatile
  1323  07F1  2FF3               	goto	u21
  1324  07F2  2FF4               	goto	u20
  1325  07F3                     u21:
  1326  07F3  2FF5               	goto	l129
  1327  07F4                     u20:
  1328  07F4  2FF0               	goto	l802
  1329  07F5                     l129:	
  1330                           ;ADC.c: 102:     else{
  1331                           
  1332                           
  1333                           ;ADC.c: 103:         ADCON0bits.ADON = 0;
  1334  07F5  101F               	bcf	31,0	;volatile
  1335  07F6                     l808:
  1336                           
  1337                           ;ADC.c: 104:         return ADRESH;
  1338  07F6  081E               	movf	30,w	;volatile
  1339  07F7                     l127:
  1340  07F7  0008               	return
  1341  07F8                     __end_of_configADC:
  1342  007E                     btemp	set	126	;btemp
  1343  007E                     wtemp0	set	126
  1344                           
  1345                           	psect	config
  1346                           
  1347                           ;Config register CONFIG1 @ 0x2007
  1348                           ;	Oscillator Selection bits
  1349                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1350                           ;	Watchdog Timer Enable bit
  1351                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1352                           ;	Power-up Timer Enable bit
  1353                           ;	PWRTE = OFF, PWRT disabled
  1354                           ;	RE3/MCLR pin function select bit
  1355                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1356                           ;	Code Protection bit
  1357                           ;	CP = OFF, Program memory code protection is disabled
  1358                           ;	Data Code Protection bit
  1359                           ;	CPD = OFF, Data memory code protection is disabled
  1360                           ;	Brown Out Reset Selection bits
  1361                           ;	BOREN = OFF, BOR disabled
  1362                           ;	Internal External Switchover bit
  1363                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1364                           ;	Fail-Safe Clock Monitor Enabled bit
  1365                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1366                           ;	Low Voltage Programming Enable bit
  1367                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1368                           ;	In-Circuit Debugger Mode bit
  1369                           ;	DEBUG = 0x1, unprogrammed default
  1370  2007                     	org	8199
  1371  2007  20D4               	dw	8404
  1372                           
  1373                           ;Config register CONFIG2 @ 0x2008
  1374                           ;	Brown-out Reset Selection bit
  1375                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1376                           ;	Flash Program Memory Self Write Enable bits
  1377                           ;	WRT = OFF, Write protection off
  1378  2008                     	org	8200
  1379  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     390
                                              4 COMMON     1     1      0
                          _configADC
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _setup
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 01 15:50:43 2021

            _SSPSTATbits 0094                       l50 070E                       l71 06A9  
                     l55 06CA                       l72 06AE                       l81 0698  
                     _T1 0076                       _T2 0075                       _V1 0078  
                     _V2 0077                       u20 07F4                       u21 07F3  
                     u70 06A1                       u71 06A0                       u80 06E8  
                     u81 06E7                       u90 06F1                       u91 06F0  
                    l111 071A                      l120 0770                      l112 07E8  
                    l121 077B                      l113 0723                      l122 0786  
                    l114 072E                      l123 0791                      l115 0739  
                    l124 079C                      l116 0744                      l125 07A7  
                    l117 074F                      l118 075A                      l127 07F7  
                    l119 0765                      l129 07F5                      l800 07ED  
                    l802 07F0                      l900 06B3                      l910 06BA  
                    l902 06B4                      l808 07F6                      l760 0716  
                    l920 06C1                      l912 06BD                      l904 06B7  
                    l770 0748                      l762 071E                      l914 06BE  
                    l906 06B8                      l818 0694                      l930 06E2  
                    l780 077F                      l772 0753                      l764 0727  
                    l916 06BF                      l908 06B9                      l940 0704  
                    l932 06E8                      l924 06CB                      l790 07B2  
                    l782 078A                      l774 075E                      l766 0732  
                    l758 0712                      l918 06C0                      l942 070A  
                    l934 06F1                      l926 06D0                      l784 0795  
                    l776 0769                      l768 073D                      l944 070D  
                    l936 06F7                      l928 06D9                      l786 07A0  
                    l778 0774                      l890 06A1                      l938 06FB  
                    l788 07AB                      l796 07B4                      l892 06A3  
                    l798 07E9                      l894 06A5                      l896 06A8  
                    l888 069A                      l978 07BC                      l898 06AF  
                    _RE0 0048                      u100 0704                      u101 0703  
                    u117 07EB                     _main 06CB                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _SSPIF 0063                    _setup 06AF          __end_of_spiInit 06AF  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 0711                   ??_main 0074                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 0699                ??_spiInit 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 06CB  
     __size_of_configADC 00E7                  ??_setup 0074               __pmaintext 06CB  
                _SSPSTAT 0094        __end_of_configADC 07F8                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 0693                  __ptext2 06AF  
                __ptext3 0699                  __ptext4 0711                  _spiInit 0699  
   end_of_initialization 07FC               ??_spiWrite 0070                _TRISAbits 0085  
              _TRISBbits 0086                _TRISEbits 0089              spiWrite@dat 0070  
    start_initialization 07F8              __pbssCOMMON 0075                ___latbits 0002  
              _configADC 0711        __size_of_spiWrite 0006                 ?_spiInit 0070  
         __size_of_setup 001C     spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070  
             ?_configADC 0070               _ADCON0bits 001F               _ANSELHbits 0189  
       __size_of_spiInit 0016            __size_of_main 0046                 _spiWrite 0693  
           spiInit@sType 0073              ??_configADC 0070        spiInit@sClockIdle 0071  
            configADC@ch 0072  
