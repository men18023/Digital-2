

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 22:39:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	functab,global,class=ENTRY,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226                           
   227                           	psect	strings
   228  0300                     __pstrings:
   229  0300                     stringtab:
   230  0300                     __stringtab:
   231  0300                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234  0300                     stringdir:
   235  0300  3003               	movlw	high stringdir
   236  0301  008A               	movwf	10
   237  0302  0804               	movf	4,w
   238  0303  0A84               	incf	4,f
   239  0304  0782               	addwf	2,f
   240  0305                     __stringbase:
   241  0305  3400               	retlw	0
   242  0306                     __end_of__stringtab:
   243  0306                     _dpowers:
   244  0306  3401               	retlw	1
   245  0307  3400               	retlw	0
   246  0308  340A               	retlw	10
   247  0309  3400               	retlw	0
   248  030A  3464               	retlw	100
   249  030B  3400               	retlw	0
   250  030C  34E8               	retlw	232
   251  030D  3403               	retlw	3
   252  030E  3410               	retlw	16
   253  030F  3427               	retlw	39
   254  0310                     __end_of_dpowers:
   255  0310                     STR_3:
   256  0310  340D               	retlw	13
   257  0311  3449               	retlw	73	;'I'
   258  0312  346E               	retlw	110	;'n'
   259  0313  3467               	retlw	103	;'g'
   260  0314  3472               	retlw	114	;'r'
   261  0315  3465               	retlw	101	;'e'
   262  0316  3473               	retlw	115	;'s'
   263  0317  3465               	retlw	101	;'e'
   264  0318  3420               	retlw	32	;' '
   265  0319  3465               	retlw	101	;'e'
   266  031A  346C               	retlw	108	;'l'
   267  031B  3420               	retlw	32	;' '
   268  031C  3476               	retlw	118	;'v'
   269  031D  3461               	retlw	97	;'a'
   270  031E  346C               	retlw	108	;'l'
   271  031F  346F               	retlw	111	;'o'
   272  0320  3472               	retlw	114	;'r'
   273  0321  3420               	retlw	32	;' '
   274  0322  3464               	retlw	100	;'d'
   275  0323  3465               	retlw	101	;'e'
   276  0324  3420               	retlw	32	;' '
   277  0325  3463               	retlw	99	;'c'
   278  0326  3465               	retlw	101	;'e'
   279  0327  346E               	retlw	110	;'n'
   280  0328  3474               	retlw	116	;'t'
   281  0329  3465               	retlw	101	;'e'
   282  032A  346E               	retlw	110	;'n'
   283  032B  3461               	retlw	97	;'a'
   284  032C  343A               	retlw	58	;':'
   285  032D  3420               	retlw	32	;' '
   286  032E  3428               	retlw	40	;'('
   287  032F  3430               	retlw	48	;'0'
   288  0330  342D               	retlw	45	;'-'
   289  0331  3432               	retlw	50	;'2'
   290  0332  3429               	retlw	41	;')'
   291  0333  340D               	retlw	13
   292  0334  3400               	retlw	0
   293  0335                     STR_4:
   294  0335  3449               	retlw	73	;'I'
   295  0336  346E               	retlw	110	;'n'
   296  0337  3467               	retlw	103	;'g'
   297  0338  3472               	retlw	114	;'r'
   298  0339  3465               	retlw	101	;'e'
   299  033A  3473               	retlw	115	;'s'
   300  033B  3465               	retlw	101	;'e'
   301  033C  3420               	retlw	32	;' '
   302  033D  3465               	retlw	101	;'e'
   303  033E  346C               	retlw	108	;'l'
   304  033F  3420               	retlw	32	;' '
   305  0340  3476               	retlw	118	;'v'
   306  0341  3461               	retlw	97	;'a'
   307  0342  346C               	retlw	108	;'l'
   308  0343  346F               	retlw	111	;'o'
   309  0344  3472               	retlw	114	;'r'
   310  0345  3420               	retlw	32	;' '
   311  0346  3464               	retlw	100	;'d'
   312  0347  3465               	retlw	101	;'e'
   313  0348  3420               	retlw	32	;' '
   314  0349  3464               	retlw	100	;'d'
   315  034A  3465               	retlw	101	;'e'
   316  034B  3463               	retlw	99	;'c'
   317  034C  3465               	retlw	101	;'e'
   318  034D  346E               	retlw	110	;'n'
   319  034E  3461               	retlw	97	;'a'
   320  034F  343A               	retlw	58	;':'
   321  0350  3420               	retlw	32	;' '
   322  0351  3428               	retlw	40	;'('
   323  0352  3430               	retlw	48	;'0'
   324  0353  342D               	retlw	45	;'-'
   325  0354  3435               	retlw	53	;'5'
   326  0355  3429               	retlw	41	;')'
   327  0356  340D               	retlw	13
   328  0357  3400               	retlw	0
   329  0358                     STR_5:
   330  0358  3449               	retlw	73	;'I'
   331  0359  346E               	retlw	110	;'n'
   332  035A  3467               	retlw	103	;'g'
   333  035B  3472               	retlw	114	;'r'
   334  035C  3465               	retlw	101	;'e'
   335  035D  3473               	retlw	115	;'s'
   336  035E  3465               	retlw	101	;'e'
   337  035F  3420               	retlw	32	;' '
   338  0360  3465               	retlw	101	;'e'
   339  0361  346C               	retlw	108	;'l'
   340  0362  3420               	retlw	32	;' '
   341  0363  3476               	retlw	118	;'v'
   342  0364  3461               	retlw	97	;'a'
   343  0365  346C               	retlw	108	;'l'
   344  0366  346F               	retlw	111	;'o'
   345  0367  3472               	retlw	114	;'r'
   346  0368  3420               	retlw	32	;' '
   347  0369  3464               	retlw	100	;'d'
   348  036A  3465               	retlw	101	;'e'
   349  036B  3420               	retlw	32	;' '
   350  036C  3475               	retlw	117	;'u'
   351  036D  346E               	retlw	110	;'n'
   352  036E  3469               	retlw	105	;'i'
   353  036F  3464               	retlw	100	;'d'
   354  0370  3461               	retlw	97	;'a'
   355  0371  3464               	retlw	100	;'d'
   356  0372  343A               	retlw	58	;':'
   357  0373  3420               	retlw	32	;' '
   358  0374  3428               	retlw	40	;'('
   359  0375  3430               	retlw	48	;'0'
   360  0376  342D               	retlw	45	;'-'
   361  0377  3435               	retlw	53	;'5'
   362  0378  3429               	retlw	41	;')'
   363  0379  340D               	retlw	13
   364  037A  3400               	retlw	0
   365  037B                     STR_6:
   366  037B  340D               	retlw	13
   367  037C  3445               	retlw	69	;'E'
   368  037D  346C               	retlw	108	;'l'
   369  037E  3420               	retlw	32	;' '
   370  037F  3476               	retlw	118	;'v'
   371  0380  3461               	retlw	97	;'a'
   372  0381  346C               	retlw	108	;'l'
   373  0382  346F               	retlw	111	;'o'
   374  0383  3472               	retlw	114	;'r'
   375  0384  3420               	retlw	32	;' '
   376  0385  3473               	retlw	115	;'s'
   377  0386  3465               	retlw	101	;'e'
   378  0387  346C               	retlw	108	;'l'
   379  0388  3465               	retlw	101	;'e'
   380  0389  3463               	retlw	99	;'c'
   381  038A  3463               	retlw	99	;'c'
   382  038B  3469               	retlw	105	;'i'
   383  038C  346F               	retlw	111	;'o'
   384  038D  346E               	retlw	110	;'n'
   385  038E  3461               	retlw	97	;'a'
   386  038F  3464               	retlw	100	;'d'
   387  0390  346F               	retlw	111	;'o'
   388  0391  3420               	retlw	32	;' '
   389  0392  3465               	retlw	101	;'e'
   390  0393  3473               	retlw	115	;'s'
   391  0394  343A               	retlw	58	;':'
   392  0395  3420               	retlw	32	;' '
   393  0396  3425               	retlw	37	;'%'
   394  0397  3464               	retlw	100	;'d'
   395  0398  340D               	retlw	13
   396  0399  3400               	retlw	0
   397  039A                     STR_1:
   398  039A  3456               	retlw	86	;'V'
   399  039B  3461               	retlw	97	;'a'
   400  039C  346C               	retlw	108	;'l'
   401  039D  346F               	retlw	111	;'o'
   402  039E  3472               	retlw	114	;'r'
   403  039F  3420               	retlw	32	;' '
   404  03A0  3464               	retlw	100	;'d'
   405  03A1  3465               	retlw	101	;'e'
   406  03A2  3420               	retlw	32	;' '
   407  03A3  3463               	retlw	99	;'c'
   408  03A4  346F               	retlw	111	;'o'
   409  03A5  346E               	retlw	110	;'n'
   410  03A6  3474               	retlw	116	;'t'
   411  03A7  3461               	retlw	97	;'a'
   412  03A8  3464               	retlw	100	;'d'
   413  03A9  346F               	retlw	111	;'o'
   414  03AA  3472               	retlw	114	;'r'
   415  03AB  343A               	retlw	58	;':'
   416  03AC  3400               	retlw	0
   417  03AD                     STR_7:
   418  03AD  3425               	retlw	37	;'%'
   419  03AE  3464               	retlw	100	;'d'
   420  03AF  3400               	retlw	0
   421  0333                     
   422                           	psect	nvBANK1
   423  00AC                     __pnvBANK1:
   424  00AC                     _cont:
   425  00AC                     	ds	1
   426  001A                     _RCREG	set	26
   427  0019                     _TXREG	set	25
   428  000C                     _PIR1bits	set	12
   429  0018                     _RCSTAbits	set	24
   430  0009                     _PORTE	set	9
   431  0007                     _PORTC	set	7
   432  0006                     _PORTB	set	6
   433  0008                     _PORTD	set	8
   434  000B                     _INTCONbits	set	11
   435  0005                     _PORTA	set	5
   436  0006                     _PORTBbits	set	6
   437  0065                     _RCIF	set	101
   438  0064                     _TXIF	set	100
   439  0058                     _RBIF	set	88
   440  009A                     _SPBRGH	set	154
   441  0099                     _SPBRG	set	153
   442  0098                     _TXSTAbits	set	152
   443  008C                     _PIE1bits	set	140
   444  0096                     _IOCBbits	set	150
   445  0095                     _WPUB	set	149
   446  0081                     _OPTION_REGbits	set	129
   447  008F                     _OSCCONbits	set	143
   448  0088                     _TRISD	set	136
   449  0086                     _TRISBbits	set	134
   450  0085                     _TRISA	set	133
   451  0187                     _BAUDCTLbits	set	391
   452  0189                     _ANSELH	set	393
   453  0188                     _ANSEL	set	392
   454                           
   455                           	psect	cinit
   456  000F                     start_initialization:	
   457                           ; #config settings
   458                           
   459  000F                     __initialization:
   460                           
   461                           ; Clear objects allocated to COMMON
   462  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   463  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   464                           
   465                           ; Clear objects allocated to BANK0
   466  0011  1283               	bcf	3,5	;RP0=0, select bank0
   467  0012  1303               	bcf	3,6	;RP1=0, select bank0
   468  0013  01EA               	clrf	__pbssBANK0& (0+127)
   469  0014  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   470  0015  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK1
   473  0016  1683               	bsf	3,5	;RP0=1, select bank1
   474  0017  1303               	bcf	3,6	;RP1=0, select bank1
   475  0018  01A0               	clrf	__pbssBANK1& (0+127)
   476  0019  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   477  001A  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   478  001B  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   479  001C  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   480  001D  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   481  001E  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   482  001F                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  001F                     __end_of__initialization:
   486  001F  0183               	clrf	3
   487  0020  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMMON
   490  007A                     __pbssCOMMON:
   491  007A                     _completo:
   492  007A                     	ds	1
   493  007B                     _seleccionar:
   494  007B                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497  006A                     __pbssBANK0:
   498  006A                     _cc:
   499  006A                     	ds	1
   500  006B                     _dd:
   501  006B                     	ds	1
   502  006C                     _residuo:
   503  006C                     	ds	1
   504                           
   505                           	psect	bssBANK1
   506  00A0                     __pbssBANK1:
   507  00A0                     _con1:
   508  00A0                     	ds	1
   509  00A1                     _vv:
   510  00A1                     	ds	1
   511  00A2                     _uu:
   512  00A2                     	ds	1
   513  00A3                     _u:
   514  00A3                     	ds	1
   515  00A4                     _c:
   516  00A4                     	ds	1
   517  00A5                     _d:
   518  00A5                     	ds	1
   519  00A6                     _valor:
   520  00A6                     	ds	1
   521                           
   522                           	psect	cstackBANK1
   523  00A7                     __pcstackBANK1:
   524  00A7                     ??_mensaje:
   525                           
   526                           ; 1 bytes @ 0x0
   527  00A7                     	ds	5
   528                           
   529                           	psect	cstackCOMMON
   530  0070                     __pcstackCOMMON:
   531  0070                     ?_isdigit:
   532  0070                     ?_setup:	
   533                           ; 1 bit 
   534                           
   535  0070                     ?_mensaje:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_isr:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_isr:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_main:	
   545                           ; 1 bytes @ 0x0
   546                           
   547                           
   548                           ; 1 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ??_setup:
   551  0072                     ?_strcat:	
   552                           ; 1 bytes @ 0x2
   553                           
   554  0072                     ??_isdigit:	
   555                           ; 1 bytes @ 0x2
   556                           
   557  0072                     ?_putch:	
   558                           ; 1 bytes @ 0x2
   559                           
   560  0072                     ?___wmul:	
   561                           ; 1 bytes @ 0x2
   562                           
   563  0072                     ?___awdiv:	
   564                           ; 2 bytes @ 0x2
   565                           
   566  0072                     ?___awmod:	
   567                           ; 2 bytes @ 0x2
   568                           
   569  0072                     ?___lwdiv:	
   570                           ; 2 bytes @ 0x2
   571                           
   572  0072                     putch@dato:	
   573                           ; 2 bytes @ 0x2
   574                           
   575  0072                     _isdigit$934:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0072                     strcat@from:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     ___wmul@multiplier:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ___awdiv@divisor:	
   585                           ; 2 bytes @ 0x2
   586                           
   587  0072                     ___awmod@divisor:	
   588                           ; 2 bytes @ 0x2
   589                           
   590  0072                     ___lwdiv@divisor:	
   591                           ; 2 bytes @ 0x2
   592                           
   593                           
   594                           ; 2 bytes @ 0x2
   595  0072                     	ds	1
   596  0073                     ??_strcat:
   597  0073                     ??_putch:	
   598                           ; 1 bytes @ 0x3
   599                           
   600  0073                     isdigit@c:	
   601                           ; 1 bytes @ 0x3
   602                           
   603                           
   604                           ; 1 bytes @ 0x3
   605  0073                     	ds	1
   606  0074                     strcat@to:
   607  0074                     ___wmul@multiplicand:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0074                     ___awdiv@dividend:	
   611                           ; 2 bytes @ 0x4
   612                           
   613  0074                     ___awmod@dividend:	
   614                           ; 2 bytes @ 0x4
   615                           
   616  0074                     ___lwdiv@dividend:	
   617                           ; 2 bytes @ 0x4
   618                           
   619                           
   620                           ; 2 bytes @ 0x4
   621  0074                     	ds	1
   622  0075                     strcat@cp:
   623                           
   624                           ; 1 bytes @ 0x5
   625  0075                     	ds	1
   626  0076                     ??___wmul:
   627  0076                     ??___awdiv:	
   628                           ; 1 bytes @ 0x6
   629                           
   630  0076                     ??___awmod:	
   631                           ; 1 bytes @ 0x6
   632                           
   633  0076                     ??___lwdiv:	
   634                           ; 1 bytes @ 0x6
   635                           
   636  0076                     ___wmul@product:	
   637                           ; 1 bytes @ 0x6
   638                           
   639                           
   640                           ; 2 bytes @ 0x6
   641  0076                     	ds	1
   642  0077                     ___awmod@counter:
   643  0077                     ___lwdiv@quotient:	
   644                           ; 1 bytes @ 0x7
   645                           
   646                           
   647                           ; 2 bytes @ 0x7
   648  0077                     	ds	1
   649  0078                     ?_atoi:
   650  0078                     ___awmod@sign:	
   651                           ; 2 bytes @ 0x8
   652                           
   653                           
   654                           ; 1 bytes @ 0x8
   655  0078                     	ds	1
   656  0079                     ___lwdiv@counter:
   657                           
   658                           ; 1 bytes @ 0x9
   659  0079                     	ds	1
   660                           
   661                           	psect	cstackBANK0
   662  0020                     __pcstackBANK0:
   663  0020                     ??_atoi:
   664  0020                     ?___lwmod:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0020                     ___awdiv@counter:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0020                     ___lwmod@divisor:	
   671                           ; 1 bytes @ 0x0
   672                           
   673                           
   674                           ; 2 bytes @ 0x0
   675  0020                     	ds	1
   676  0021                     ___awdiv@sign:
   677                           
   678                           ; 1 bytes @ 0x1
   679  0021                     	ds	1
   680  0022                     atoi@sign:
   681  0022                     ___awdiv@quotient:	
   682                           ; 1 bytes @ 0x2
   683                           
   684  0022                     ___lwmod@dividend:	
   685                           ; 2 bytes @ 0x2
   686                           
   687                           
   688                           ; 2 bytes @ 0x2
   689  0022                     	ds	1
   690  0023                     atoi@a:
   691                           
   692                           ; 2 bytes @ 0x3
   693  0023                     	ds	1
   694  0024                     ?_division:
   695  0024                     ??___lwmod:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0024                     division@valor:	
   699                           ; 1 bytes @ 0x4
   700                           
   701                           
   702                           ; 2 bytes @ 0x4
   703  0024                     	ds	1
   704  0025                     ___lwmod@counter:
   705  0025                     atoi@s:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 1 bytes @ 0x5
   710  0025                     	ds	1
   711  0026                     ??_division:
   712  0026                     ?__doprnt:	
   713                           ; 1 bytes @ 0x6
   714                           
   715  0026                     __doprnt@f:	
   716                           ; 2 bytes @ 0x6
   717                           
   718                           
   719                           ; 1 bytes @ 0x6
   720  0026                     	ds	1
   721  0027                     __doprnt@ap:
   722                           
   723                           ; 1 bytes @ 0x7
   724  0027                     	ds	1
   725  0028                     ??__doprnt:
   726                           
   727                           ; 1 bytes @ 0x8
   728  0028                     	ds	3
   729  002B                     __doprnt@flag:
   730                           
   731                           ; 1 bytes @ 0xB
   732  002B                     	ds	1
   733  002C                     __doprnt@prec:
   734                           
   735                           ; 1 bytes @ 0xC
   736  002C                     	ds	1
   737  002D                     __doprnt@val:
   738                           
   739                           ; 2 bytes @ 0xD
   740  002D                     	ds	2
   741  002F                     __doprnt@c:
   742                           
   743                           ; 1 bytes @ 0xF
   744  002F                     	ds	1
   745  0030                     __doprnt@pb:
   746                           
   747                           ; 1 bytes @ 0x10
   748  0030                     	ds	1
   749  0031                     ?_printf:
   750  0031                     ?_sprintf:	
   751                           ; 2 bytes @ 0x11
   752                           
   753  0031                     sprintf@f:	
   754                           ; 2 bytes @ 0x11
   755                           
   756                           
   757                           ; 1 bytes @ 0x11
   758  0031                     	ds	2
   759  0033                     ??_printf:
   760                           
   761                           ; 1 bytes @ 0x13
   762  0033                     	ds	1
   763  0034                     ??_sprintf:
   764                           
   765                           ; 1 bytes @ 0x14
   766  0034                     	ds	1
   767  0035                     printf@ap:
   768                           
   769                           ; 1 bytes @ 0x15
   770  0035                     	ds	1
   771  0036                     printf@f:
   772  0036                     sprintf@wh:	
   773                           ; 1 bytes @ 0x16
   774                           
   775                           
   776                           ; 1 bytes @ 0x16
   777  0036                     	ds	1
   778  0037                     sprintf@ap:
   779  0037                     printf@pb:	
   780                           ; 1 bytes @ 0x17
   781                           
   782                           
   783                           ; 2 bytes @ 0x17
   784  0037                     	ds	1
   785  0038                     sprintf@pb:
   786                           
   787                           ; 2 bytes @ 0x18
   788  0038                     	ds	2
   789  003A                     ?_concatenado:
   790  003A                     concatenado@a:	
   791                           ; 2 bytes @ 0x1A
   792                           
   793                           
   794                           ; 2 bytes @ 0x1A
   795  003A                     	ds	2
   796  003C                     concatenado@b:
   797                           
   798                           ; 2 bytes @ 0x1C
   799  003C                     	ds	2
   800  003E                     ??_concatenado:
   801                           
   802                           ; 1 bytes @ 0x1E
   803  003E                     	ds	1
   804  003F                     concatenado@BFFR2:
   805                           
   806                           ; 20 bytes @ 0x1F
   807  003F                     	ds	20
   808  0053                     concatenado@BFFR1:
   809                           
   810                           ; 20 bytes @ 0x33
   811  0053                     	ds	20
   812  0067                     concatenado@c:
   813                           
   814                           ; 2 bytes @ 0x47
   815  0067                     	ds	2
   816  0069                     ??_main:
   817                           
   818                           ; 1 bytes @ 0x49
   819  0069                     	ds	1
   820                           
   821                           	psect	maintext
   822  070A                     __pmaintext:	
   823 ;;
   824 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   825 ;;
   826 ;; *************** function _main *****************
   827 ;; Defined at:
   828 ;;		line 63 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : B00/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          0       1       0       0       0
   845 ;;      Totals:         0       1       0       0       0
   846 ;;Total ram usage:        1 bytes
   847 ;; Hardware stack levels required when called:    6
   848 ;; This function calls:
   849 ;;		_mensaje
   850 ;;		_setup
   851 ;; This function is called by:
   852 ;;		Startup code after reset
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _main
   858  070A                     _main:
   859  070A                     l2020:	
   860                           ;incstack = 0
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   862                           
   863                           
   864                           ;main.c: 64:     setup();
   865  070A  120A  118A  2629  120A  118A  	fcall	_setup
   866  070F                     l2022:
   867                           
   868                           ;main.c: 66:         cont = PORTA;
   869  070F  1283               	bcf	3,5	;RP0=0, select bank0
   870  0710  1303               	bcf	3,6	;RP1=0, select bank0
   871  0711  0805               	movf	5,w	;volatile
   872  0712  00E9               	movwf	??_main
   873  0713  0869               	movf	??_main,w
   874  0714  1683               	bsf	3,5	;RP0=1, select bank1
   875  0715  1303               	bcf	3,6	;RP1=0, select bank1
   876  0716  00AC               	movwf	_cont^(0+128)
   877  0717                     l2024:
   878                           
   879                           ;main.c: 67:         PORTD = seleccionar;
   880  0717  087B               	movf	_seleccionar,w
   881  0718  1283               	bcf	3,5	;RP0=0, select bank0
   882  0719  1303               	bcf	3,6	;RP1=0, select bank0
   883  071A  0088               	movwf	8	;volatile
   884  071B                     l2026:
   885                           
   886                           ;main.c: 68:         mensaje();
   887  071B  120A  118A  202C  120A  118A  	fcall	_mensaje
   888  0720  2F0F               	goto	l2022
   889  0721  120A  118A  280C   	ljmp	start
   890  0724                     __end_of_main:
   891                           
   892                           	psect	text1
   893  0629                     __ptext1:	
   894 ;; *************** function _setup *****************
   895 ;; Defined at:
   896 ;;		line 74 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         0       0       0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _setup
   926  0629                     _setup:
   927  0629                     l1618:	
   928                           ;incstack = 0
   929                           ; Regs used in _setup: [wreg+status,2]
   930                           
   931                           
   932                           ;main.c: 76:     ANSEL = 0;
   933  0629  1683               	bsf	3,5	;RP0=1, select bank3
   934  062A  1703               	bsf	3,6	;RP1=1, select bank3
   935  062B  0188               	clrf	8	;volatile
   936                           
   937                           ;main.c: 77:     ANSELH = 0;
   938  062C  0189               	clrf	9	;volatile
   939                           
   940                           ;main.c: 79:     TRISA = 0;
   941  062D  1683               	bsf	3,5	;RP0=1, select bank1
   942  062E  1303               	bcf	3,6	;RP1=0, select bank1
   943  062F  0185               	clrf	5	;volatile
   944  0630                     l1620:
   945                           
   946                           ;main.c: 81:     TRISBbits.TRISB0 = 1;
   947  0630  1406               	bsf	6,0	;volatile
   948  0631                     l1622:
   949                           
   950                           ;main.c: 82:     TRISBbits.TRISB1 = 1;
   951  0631  1486               	bsf	6,1	;volatile
   952                           
   953                           ;main.c: 84:     TRISD = 0;
   954  0632  0188               	clrf	8	;volatile
   955                           
   956                           ;main.c: 87:     PORTA = 0;
   957  0633  1283               	bcf	3,5	;RP0=0, select bank0
   958  0634  1303               	bcf	3,6	;RP1=0, select bank0
   959  0635  0185               	clrf	5	;volatile
   960                           
   961                           ;main.c: 88:     PORTB = 0;
   962  0636  0186               	clrf	6	;volatile
   963                           
   964                           ;main.c: 89:     PORTC = 0;
   965  0637  0187               	clrf	7	;volatile
   966                           
   967                           ;main.c: 90:     PORTD = 0;
   968  0638  0188               	clrf	8	;volatile
   969                           
   970                           ;main.c: 91:     PORTE = 0;
   971  0639  0189               	clrf	9	;volatile
   972  063A                     l1624:
   973                           
   974                           ;main.c: 93:     OSCCONbits.IRCF0 = 0;
   975  063A  1683               	bsf	3,5	;RP0=1, select bank1
   976  063B  1303               	bcf	3,6	;RP1=0, select bank1
   977  063C  120F               	bcf	15,4	;volatile
   978  063D                     l1626:
   979                           
   980                           ;main.c: 94:     OSCCONbits.IRCF1 = 1;
   981  063D  168F               	bsf	15,5	;volatile
   982  063E                     l1628:
   983                           
   984                           ;main.c: 95:     OSCCONbits.IRCF2 = 1;
   985  063E  170F               	bsf	15,6	;volatile
   986  063F                     l1630:
   987                           
   988                           ;main.c: 96:     OSCCONbits.SCS = 1;
   989  063F  140F               	bsf	15,0	;volatile
   990  0640                     l1632:
   991                           
   992                           ;main.c: 98:     OPTION_REGbits.nRBPU = 0;
   993  0640  1381               	bcf	1,7	;volatile
   994  0641                     l1634:
   995                           
   996                           ;main.c: 99:     WPUB = 0b00000011;
   997  0641  3003               	movlw	3
   998  0642  0095               	movwf	21	;volatile
   999  0643                     l1636:
  1000                           
  1001                           ;main.c: 100:     IOCBbits.IOCB0 = 1;
  1002  0643  1416               	bsf	22,0	;volatile
  1003  0644                     l1638:
  1004                           
  1005                           ;main.c: 101:     IOCBbits.IOCB1 = 1;
  1006  0644  1496               	bsf	22,1	;volatile
  1007  0645                     l1640:
  1008                           
  1009                           ;main.c: 103:     INTCONbits.GIE = 1;
  1010  0645  178B               	bsf	11,7	;volatile
  1011  0646                     l1642:
  1012                           
  1013                           ;main.c: 104:     INTCONbits.PEIE = 1;
  1014  0646  170B               	bsf	11,6	;volatile
  1015  0647                     l1644:
  1016                           
  1017                           ;main.c: 105:     INTCONbits.RBIE = 1;
  1018  0647  158B               	bsf	11,3	;volatile
  1019  0648                     l1646:
  1020                           
  1021                           ;main.c: 106:     INTCONbits.RBIF = 0;
  1022  0648  100B               	bcf	11,0	;volatile
  1023  0649                     l1648:
  1024                           
  1025                           ;main.c: 107:     PIE1bits.RCIE = 0;
  1026  0649  128C               	bcf	12,5	;volatile
  1027  064A                     l1650:
  1028                           
  1029                           ;main.c: 108:     PIE1bits.TXIE = 0;
  1030  064A  120C               	bcf	12,4	;volatile
  1031  064B                     l1652:
  1032                           
  1033                           ;main.c: 110:     TXSTAbits.SYNC = 0;
  1034  064B  1218               	bcf	24,4	;volatile
  1035  064C                     l1654:
  1036                           
  1037                           ;main.c: 111:     TXSTAbits.BRGH = 1;
  1038  064C  1518               	bsf	24,2	;volatile
  1039  064D                     l1656:
  1040                           
  1041                           ;main.c: 112:     BAUDCTLbits.BRG16 = 0;
  1042  064D  1683               	bsf	3,5	;RP0=1, select bank3
  1043  064E  1703               	bsf	3,6	;RP1=1, select bank3
  1044  064F  1187               	bcf	7,3	;volatile
  1045  0650                     l1658:
  1046                           
  1047                           ;main.c: 114:     SPBRG = 25;
  1048  0650  3019               	movlw	25
  1049  0651  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0652  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0653  0099               	movwf	25	;volatile
  1052  0654                     l1660:
  1053                           
  1054                           ;main.c: 115:     SPBRGH = 1;
  1055  0654  3001               	movlw	1
  1056  0655  009A               	movwf	26	;volatile
  1057  0656                     l1662:
  1058                           
  1059                           ;main.c: 117:     RCSTAbits.SPEN = 1;
  1060  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0658  1798               	bsf	24,7	;volatile
  1063  0659                     l1664:
  1064                           
  1065                           ;main.c: 118:     RCSTAbits.RX9 = 0;
  1066  0659  1318               	bcf	24,6	;volatile
  1067  065A                     l1666:
  1068                           
  1069                           ;main.c: 119:     RCSTAbits.CREN = 1;
  1070  065A  1618               	bsf	24,4	;volatile
  1071  065B                     l1668:
  1072                           
  1073                           ;main.c: 120:     TXSTAbits.TX9 = 0;
  1074  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1075  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1076  065D  1318               	bcf	24,6	;volatile
  1077  065E                     l1670:
  1078                           
  1079                           ;main.c: 122:     TXSTAbits.TXEN = 1;
  1080  065E  1698               	bsf	24,5	;volatile
  1081  065F                     l1672:
  1082                           
  1083                           ;main.c: 124:     PIR1bits.RCIF = 0;
  1084  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0661  128C               	bcf	12,5	;volatile
  1087  0662                     l1674:
  1088                           
  1089                           ;main.c: 125:     PIR1bits.TXIF = 0;
  1090  0662  120C               	bcf	12,4	;volatile
  1091  0663                     l119:
  1092  0663  0008               	return
  1093  0664                     __end_of_setup:
  1094                           
  1095                           	psect	text2
  1096  002C                     __ptext2:	
  1097 ;; *************** function _mensaje *****************
  1098 ;; Defined at:
  1099 ;;		line 134 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0
  1115 ;;      Temps:          0       0       5       0       0
  1116 ;;      Totals:         0       0       5       0       0
  1117 ;;Total ram usage:        5 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    5
  1120 ;; This function calls:
  1121 ;;		_concatenado
  1122 ;;		_division
  1123 ;;		_printf
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           
  1130                           ;psect for function _mensaje
  1131  002C                     _mensaje:
  1132  002C                     l1968:	
  1133                           ;incstack = 0
  1134                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1135                           
  1136                           
  1137                           ;main.c: 135:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1138  002C  3002               	movlw	2
  1139  002D  1683               	bsf	3,5	;RP0=1, select bank1
  1140  002E  1303               	bcf	3,6	;RP1=0, select bank1
  1141  002F  00A9               	movwf	(??_mensaje^(0+128)+2)
  1142  0030  3045               	movlw	69
  1143  0031  00A8               	movwf	(??_mensaje^(0+128)+1)
  1144  0032  30A9               	movlw	169
  1145  0033  00A7               	movwf	??_mensaje^(0+128)
  1146  0034                     u1777:
  1147  0034  0BA7               	decfsz	??_mensaje^(0+128),f
  1148  0035  2834               	goto	u1777
  1149  0036  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1150  0037  2834               	goto	u1777
  1151  0038  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1152  0039  2834               	goto	u1777
  1153  003A                     l1970:
  1154                           
  1155                           ;main.c: 136:     division(cont);
  1156  003A  1683               	bsf	3,5	;RP0=1, select bank1
  1157  003B  1303               	bcf	3,6	;RP1=0, select bank1
  1158  003C  082C               	movf	_cont^(0+128),w
  1159  003D  00A7               	movwf	??_mensaje^(0+128)
  1160  003E  01A8               	clrf	(??_mensaje^(0+128)+1)
  1161  003F  0827               	movf	??_mensaje^(0+128),w
  1162  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0042  00A4               	movwf	division@valor
  1165  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0045  0828               	movf	(??_mensaje+1)^(0+128),w
  1168  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0048  00A5               	movwf	division@valor+1
  1171  0049  120A  118A  2433  120A  118A  	fcall	_division
  1172  004E                     l1972:
  1173                           
  1174                           ;main.c: 137:     printf("Valor de contador:");
  1175  004E  3095               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1176  004F  120A  118A  26EF  120A  118A  	fcall	_printf
  1177  0054                     l1974:
  1178                           
  1179                           ;main.c: 138:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1180  0054  3002               	movlw	2
  1181  0055  1683               	bsf	3,5	;RP0=1, select bank1
  1182  0056  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0057  00A9               	movwf	(??_mensaje^(0+128)+2)
  1184  0058  3045               	movlw	69
  1185  0059  00A8               	movwf	(??_mensaje^(0+128)+1)
  1186  005A  30A9               	movlw	169
  1187  005B  00A7               	movwf	??_mensaje^(0+128)
  1188  005C                     u1787:
  1189  005C  0BA7               	decfsz	??_mensaje^(0+128),f
  1190  005D  285C               	goto	u1787
  1191  005E  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1192  005F  285C               	goto	u1787
  1193  0060  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1194  0061  285C               	goto	u1787
  1195  0062                     l1976:
  1196                           
  1197                           ;main.c: 139:     TXREG = d;
  1198  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0064  0825               	movf	_d^(0+128),w
  1201  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0067  0099               	movwf	25	;volatile
  1204  0068                     l1978:
  1205                           
  1206                           ;main.c: 140:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1207  0068  3002               	movlw	2
  1208  0069  1683               	bsf	3,5	;RP0=1, select bank1
  1209  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1210  006B  00A9               	movwf	(??_mensaje^(0+128)+2)
  1211  006C  3045               	movlw	69
  1212  006D  00A8               	movwf	(??_mensaje^(0+128)+1)
  1213  006E  30A9               	movlw	169
  1214  006F  00A7               	movwf	??_mensaje^(0+128)
  1215  0070                     u1797:
  1216  0070  0BA7               	decfsz	??_mensaje^(0+128),f
  1217  0071  2870               	goto	u1797
  1218  0072  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1219  0073  2870               	goto	u1797
  1220  0074  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1221  0075  2870               	goto	u1797
  1222  0076                     l1980:
  1223                           
  1224                           ;main.c: 141:     TXREG = c;
  1225  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1226  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1227  0078  0824               	movf	_c^(0+128),w
  1228  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1229  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1230  007B  0099               	movwf	25	;volatile
  1231  007C                     l1982:
  1232                           
  1233                           ;main.c: 142:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1234  007C  3002               	movlw	2
  1235  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1236  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1237  007F  00A9               	movwf	(??_mensaje^(0+128)+2)
  1238  0080  3045               	movlw	69
  1239  0081  00A8               	movwf	(??_mensaje^(0+128)+1)
  1240  0082  30A9               	movlw	169
  1241  0083  00A7               	movwf	??_mensaje^(0+128)
  1242  0084                     u1807:
  1243  0084  0BA7               	decfsz	??_mensaje^(0+128),f
  1244  0085  2884               	goto	u1807
  1245  0086  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1246  0087  2884               	goto	u1807
  1247  0088  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1248  0089  2884               	goto	u1807
  1249  008A                     l1984:
  1250                           
  1251                           ;main.c: 143:     TXREG = u;
  1252  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1253  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1254  008C  0823               	movf	_u^(0+128),w
  1255  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1256  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1257  008F  0099               	movwf	25	;volatile
  1258  0090                     l1986:
  1259                           
  1260                           ;main.c: 144:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1261  0090  3002               	movlw	2
  1262  0091  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0092  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0093  00A9               	movwf	(??_mensaje^(0+128)+2)
  1265  0094  3045               	movlw	69
  1266  0095  00A8               	movwf	(??_mensaje^(0+128)+1)
  1267  0096  30A9               	movlw	169
  1268  0097  00A7               	movwf	??_mensaje^(0+128)
  1269  0098                     u1817:
  1270  0098  0BA7               	decfsz	??_mensaje^(0+128),f
  1271  0099  2898               	goto	u1817
  1272  009A  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1273  009B  2898               	goto	u1817
  1274  009C  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1275  009D  2898               	goto	u1817
  1276  009E                     l1988:
  1277                           
  1278                           ;main.c: 145:     printf("\r");
  1279  009E  302E               	movlw	(low (((STR_3+35)-__stringbase)| (0+32768)))& (0+255)
  1280  009F  120A  118A  26EF  120A  118A  	fcall	_printf
  1281  00A4                     l1990:
  1282                           
  1283                           ;main.c: 147:     printf("\rIngrese el valor de centena: (0-2)\r");
  1284  00A4  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1285  00A5  120A  118A  26EF  120A  118A  	fcall	_printf
  1286  00AA                     l129:
  1287  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1288  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1289  00AC  1E8C               	btfss	12,5	;volatile
  1290  00AD  28AF               	goto	u1681
  1291  00AE  28B0               	goto	u1680
  1292  00AF                     u1681:
  1293  00AF  28AA               	goto	l129
  1294  00B0                     u1680:
  1295  00B0                     l1992:
  1296                           
  1297                           ;main.c: 150:         cc = RCREG -48;
  1298  00B0  081A               	movf	26,w	;volatile
  1299  00B1  3ED0               	addlw	208
  1300  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1301  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1302  00B4  00A7               	movwf	??_mensaje^(0+128)
  1303  00B5  0827               	movf	??_mensaje^(0+128),w
  1304  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1306  00B8  00EA               	movwf	_cc
  1307  00B9                     l1994:	
  1308                           ;main.c: 152:        while(RCREG > '2'){
  1309                           
  1310                           
  1311                           ;main.c: 152:        while(RCREG > '2'){
  1312  00B9  3033               	movlw	51
  1313  00BA  021A               	subwf	26,w	;volatile
  1314  00BB  1803               	skipnc
  1315  00BC  28BE               	goto	u1691
  1316  00BD  28BF               	goto	u1690
  1317  00BE                     u1691:
  1318  00BE  28AA               	goto	l129
  1319  00BF                     u1690:
  1320  00BF                     l1996:
  1321                           
  1322                           ;main.c: 156:     printf("Ingrese el valor de decena: (0-5)\r");
  1323  00BF  3030               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1324  00C0  120A  118A  26EF  120A  118A  	fcall	_printf
  1325  00C5                     l136:
  1326  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1327  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1328  00C7  1E8C               	btfss	12,5	;volatile
  1329  00C8  28CA               	goto	u1701
  1330  00C9  28CB               	goto	u1700
  1331  00CA                     u1701:
  1332  00CA  28C5               	goto	l136
  1333  00CB                     u1700:
  1334  00CB                     l1998:
  1335                           
  1336                           ;main.c: 159:          dd = RCREG -48;
  1337  00CB  081A               	movf	26,w	;volatile
  1338  00CC  3ED0               	addlw	208
  1339  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1340  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1341  00CF  00A7               	movwf	??_mensaje^(0+128)
  1342  00D0  0827               	movf	??_mensaje^(0+128),w
  1343  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1344  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1345  00D3  00EB               	movwf	_dd
  1346                           
  1347                           ;main.c: 161:         if(cc == 2){
  1348  00D4  3002               	movlw	2
  1349  00D5  066A               	xorwf	_cc,w
  1350  00D6  1D03               	btfss	3,2
  1351  00D7  28D9               	goto	u1711
  1352  00D8  28DA               	goto	u1710
  1353  00D9                     u1711:
  1354  00D9  28E0               	goto	l2004
  1355  00DA                     u1710:
  1356  00DA                     l2002:
  1357                           
  1358                           ;main.c: 162:            while(RCREG > '5'){
  1359  00DA  3036               	movlw	54
  1360  00DB  021A               	subwf	26,w	;volatile
  1361  00DC  1803               	skipnc
  1362  00DD  28DF               	goto	u1721
  1363  00DE  28E0               	goto	u1720
  1364  00DF                     u1721:
  1365  00DF  28C5               	goto	l136
  1366  00E0                     u1720:
  1367  00E0                     l2004:
  1368                           
  1369                           ;main.c: 167:     printf("Ingrese el valor de unidad: (0-5)\r");
  1370  00E0  3053               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1371  00E1  120A  118A  26EF  120A  118A  	fcall	_printf
  1372  00E6                     l144:
  1373  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1374  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1375  00E8  1E8C               	btfss	12,5	;volatile
  1376  00E9  28EB               	goto	u1731
  1377  00EA  28EC               	goto	u1730
  1378  00EB                     u1731:
  1379  00EB  28E6               	goto	l144
  1380  00EC                     u1730:
  1381  00EC                     l2006:
  1382                           
  1383                           ;main.c: 170:         uu = RCREG -48;
  1384  00EC  081A               	movf	26,w	;volatile
  1385  00ED  3ED0               	addlw	208
  1386  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1387  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1388  00F0  00A7               	movwf	??_mensaje^(0+128)
  1389  00F1  0827               	movf	??_mensaje^(0+128),w
  1390  00F2  00A2               	movwf	_uu^(0+128)
  1391                           
  1392                           ;main.c: 172:        if(cc == 2 && dd == 5){
  1393  00F3  3002               	movlw	2
  1394  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1395  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1396  00F6  066A               	xorwf	_cc,w
  1397  00F7  1D03               	btfss	3,2
  1398  00F8  28FA               	goto	u1741
  1399  00F9  28FB               	goto	u1740
  1400  00FA                     u1741:
  1401  00FA  2907               	goto	l2014
  1402  00FB                     u1740:
  1403  00FB                     l2008:
  1404  00FB  3005               	movlw	5
  1405  00FC  066B               	xorwf	_dd,w
  1406  00FD  1D03               	btfss	3,2
  1407  00FE  2900               	goto	u1751
  1408  00FF  2901               	goto	u1750
  1409  0100                     u1751:
  1410  0100  2907               	goto	l2014
  1411  0101                     u1750:
  1412  0101                     l2012:
  1413                           
  1414                           ;main.c: 173:            while(RCREG > '5'){
  1415  0101  3036               	movlw	54
  1416  0102  021A               	subwf	26,w	;volatile
  1417  0103  1803               	skipnc
  1418  0104  2906               	goto	u1761
  1419  0105  2907               	goto	u1760
  1420  0106                     u1761:
  1421  0106  28E6               	goto	l144
  1422  0107                     u1760:
  1423  0107                     l2014:
  1424                           
  1425                           ;main.c: 177:       con1 = concatenado(cc, dd);
  1426  0107  086A               	movf	_cc,w
  1427  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1429  010A  00A7               	movwf	??_mensaje^(0+128)
  1430  010B  01A8               	clrf	(??_mensaje^(0+128)+1)
  1431  010C  0827               	movf	??_mensaje^(0+128),w
  1432  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1433  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1434  010F  00BA               	movwf	concatenado@a
  1435  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0112  0828               	movf	(??_mensaje+1)^(0+128),w
  1438  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0115  00BB               	movwf	concatenado@a+1
  1441  0116  086B               	movf	_dd,w
  1442  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0119  00A9               	movwf	(??_mensaje+2)^(0+128)
  1445  011A  01AA               	clrf	((??_mensaje+2)^(0+128)+1)
  1446  011B  0829               	movf	(??_mensaje+2)^(0+128),w
  1447  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1448  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1449  011E  00BC               	movwf	concatenado@b
  1450  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0121  082A               	movf	(??_mensaje+3)^(0+128),w
  1453  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0124  00BD               	movwf	concatenado@b+1
  1456  0125  120A  118A  25B0  120A  118A  	fcall	_concatenado
  1457  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1458  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1459  012C  083A               	movf	?_concatenado,w
  1460  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1461  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1462  012F  00AB               	movwf	(??_mensaje+4)^(0+128)
  1463  0130  082B               	movf	(??_mensaje+4)^(0+128),w
  1464  0131  00A0               	movwf	_con1^(0+128)
  1465                           
  1466                           ;main.c: 178:       completo = concatenado(con1, uu);
  1467  0132  0820               	movf	_con1^(0+128),w
  1468  0133  00A7               	movwf	??_mensaje^(0+128)
  1469  0134  01A8               	clrf	(??_mensaje^(0+128)+1)
  1470  0135  0827               	movf	??_mensaje^(0+128),w
  1471  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0138  00BA               	movwf	concatenado@a
  1474  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1475  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1476  013B  0828               	movf	(??_mensaje+1)^(0+128),w
  1477  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  013E  00BB               	movwf	concatenado@a+1
  1480  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0141  0822               	movf	_uu^(0+128),w
  1483  0142  00A9               	movwf	(??_mensaje+2)^(0+128)
  1484  0143  01AA               	clrf	((??_mensaje+2)^(0+128)+1)
  1485  0144  0829               	movf	(??_mensaje+2)^(0+128),w
  1486  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0147  00BC               	movwf	concatenado@b
  1489  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1491  014A  082A               	movf	(??_mensaje+3)^(0+128),w
  1492  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1493  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1494  014D  00BD               	movwf	concatenado@b+1
  1495  014E  120A  118A  25B0  120A  118A  	fcall	_concatenado
  1496  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0155  083A               	movf	?_concatenado,w
  1499  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1500  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1501  0158  00AB               	movwf	(??_mensaje+4)^(0+128)
  1502  0159  082B               	movf	(??_mensaje+4)^(0+128),w
  1503  015A  00FA               	movwf	_completo
  1504  015B                     l2016:
  1505                           
  1506                           ;main.c: 179:       _delay((unsigned long)((250)*(4000000/4000.0)));
  1507  015B  3002               	movlw	2
  1508  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1509  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1510  015E  00A9               	movwf	(??_mensaje^(0+128)+2)
  1511  015F  3045               	movlw	69
  1512  0160  00A8               	movwf	(??_mensaje^(0+128)+1)
  1513  0161  30A9               	movlw	169
  1514  0162  00A7               	movwf	??_mensaje^(0+128)
  1515  0163                     u1827:
  1516  0163  0BA7               	decfsz	??_mensaje^(0+128),f
  1517  0164  2963               	goto	u1827
  1518  0165  0BA8               	decfsz	(??_mensaje^(0+128)+1),f
  1519  0166  2963               	goto	u1827
  1520  0167  0BA9               	decfsz	(??_mensaje^(0+128)+2),f
  1521  0168  2963               	goto	u1827
  1522  0169                     l2018:
  1523                           
  1524                           ;main.c: 180:       printf("\rEl valor seleccionado es: %d\r", completo);
  1525  0169  087A               	movf	_completo,w
  1526  016A  1683               	bsf	3,5	;RP0=1, select bank1
  1527  016B  1303               	bcf	3,6	;RP1=0, select bank1
  1528  016C  00A7               	movwf	??_mensaje^(0+128)
  1529  016D  01A8               	clrf	(??_mensaje^(0+128)+1)
  1530  016E  0827               	movf	??_mensaje^(0+128),w
  1531  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0171  00B1               	movwf	?_printf
  1534  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0174  0828               	movf	(??_mensaje+1)^(0+128),w
  1537  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0177  00B2               	movwf	?_printf+1
  1540  0178  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1541  0179  120A  118A  26EF  120A  118A  	fcall	_printf
  1542                           
  1543                           ;main.c: 182:       seleccionar = completo;
  1544  017E  087A               	movf	_completo,w
  1545  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0181  00A7               	movwf	??_mensaje^(0+128)
  1548  0182  0827               	movf	??_mensaje^(0+128),w
  1549  0183  00FB               	movwf	_seleccionar
  1550  0184                     l151:
  1551  0184  0008               	return
  1552  0185                     __end_of_mensaje:
  1553                           
  1554                           	psect	text3
  1555  06EF                     __ptext3:	
  1556 ;; *************** function _printf *****************
  1557 ;; Defined at:
  1558 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  f               1    wreg     PTR const unsigned char 
  1561 ;;		 -> STR_6(31), STR_5(35), STR_4(35), STR_3(37), 
  1562 ;;		 -> STR_2(2), STR_1(19), 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1565 ;;		 -> STR_6(31), STR_5(35), STR_4(35), STR_3(37), 
  1566 ;;		 -> STR_2(2), STR_1(19), 
  1567 ;;  pb              2   23[BANK0 ] struct __prbuf
  1568 ;;  ap              1   21[BANK0 ] PTR void [1]
  1569 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2   17[BANK0 ] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       2       0       0       0
  1580 ;;      Locals:         0       4       0       0       0
  1581 ;;      Temps:          0       2       0       0       0
  1582 ;;      Totals:         0       8       0       0       0
  1583 ;;Total ram usage:        8 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    3
  1586 ;; This function calls:
  1587 ;;		__doprnt
  1588 ;; This function is called by:
  1589 ;;		_mensaje
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _printf
  1595  06EF                     _printf:
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1599                           ;printf@f stored from wreg
  1600  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1601  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1602  06F1  00B6               	movwf	printf@f
  1603  06F2                     l1948:
  1604  06F2  01B7               	clrf	printf@pb
  1605  06F3                     l1950:
  1606  06F3  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1607  06F4  00B3               	movwf	??_printf
  1608  06F5  0833               	movf	??_printf,w
  1609  06F6  00B8               	movwf	low ((printf@pb| 0+1))
  1610  06F7                     l1952:
  1611  06F7  3031               	movlw	(low (?_printf| 0))& (0+255)
  1612  06F8  00B3               	movwf	??_printf
  1613  06F9  0833               	movf	??_printf,w
  1614  06FA  00B5               	movwf	printf@ap
  1615  06FB                     l1954:
  1616                           
  1617                           ;	Return value of _printf is never used
  1618  06FB  0836               	movf	printf@f,w
  1619  06FC  00B3               	movwf	??_printf
  1620  06FD  0833               	movf	??_printf,w
  1621  06FE  00A6               	movwf	__doprnt@f
  1622  06FF  3035               	movlw	(low (printf@ap| 0))& (0+255)
  1623  0700  00B4               	movwf	??_printf+1
  1624  0701  0834               	movf	??_printf+1,w
  1625  0702  00A7               	movwf	__doprnt@ap
  1626  0703  3037               	movlw	(low (printf@pb| 0))& (0+255)
  1627  0704  120A  118A  2185  120A  118A  	fcall	__doprnt
  1628  0709                     l720:
  1629  0709  0008               	return
  1630  070A                     __end_of_printf:
  1631                           
  1632                           	psect	text4
  1633  0433                     __ptext4:	
  1634 ;; *************** function _division *****************
  1635 ;; Defined at:
  1636 ;;		line 199 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  valor           2    4[BANK0 ] int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      unsigned char 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       2       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       3       0       0       0
  1653 ;;      Totals:         0       5       0       0       0
  1654 ;;Total ram usage:        5 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    2
  1657 ;; This function calls:
  1658 ;;		___awdiv
  1659 ;;		___awmod
  1660 ;; This function is called by:
  1661 ;;		_mensaje
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _division
  1667  0433                     _division:
  1668  0433                     l1940:	
  1669                           ;incstack = 0
  1670                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1671                           
  1672                           
  1673                           ;main.c: 200:     d = valor/100;
  1674  0433  3064               	movlw	100
  1675  0434  00F2               	movwf	___awdiv@divisor
  1676  0435  3000               	movlw	0
  1677  0436  00F3               	movwf	___awdiv@divisor+1
  1678  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0439  0825               	movf	division@valor+1,w
  1681  043A  00F5               	movwf	___awdiv@dividend+1
  1682  043B  0824               	movf	division@valor,w
  1683  043C  00F4               	movwf	___awdiv@dividend
  1684  043D  120A  118A  24AA  120A  118A  	fcall	___awdiv
  1685  0442  0872               	movf	?___awdiv,w
  1686  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0445  00A6               	movwf	??_division
  1689  0446  0826               	movf	??_division,w
  1690  0447  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0448  1303               	bcf	3,6	;RP1=0, select bank1
  1692  0449  00A5               	movwf	_d^(0+128)
  1693                           
  1694                           ;main.c: 201:     residuo = valor%100;
  1695  044A  3064               	movlw	100
  1696  044B  00F2               	movwf	___awmod@divisor
  1697  044C  3000               	movlw	0
  1698  044D  00F3               	movwf	___awmod@divisor+1
  1699  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1700  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0450  0825               	movf	division@valor+1,w
  1702  0451  00F5               	movwf	___awmod@dividend+1
  1703  0452  0824               	movf	division@valor,w
  1704  0453  00F4               	movwf	___awmod@dividend
  1705  0454  120A  118A  2513  120A  118A  	fcall	___awmod
  1706  0459  0872               	movf	?___awmod,w
  1707  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1708  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1709  045C  00A6               	movwf	??_division
  1710  045D  0826               	movf	??_division,w
  1711  045E  00EC               	movwf	_residuo
  1712                           
  1713                           ;main.c: 202:     c = residuo/10;
  1714  045F  300A               	movlw	10
  1715  0460  00F2               	movwf	___awdiv@divisor
  1716  0461  3000               	movlw	0
  1717  0462  00F3               	movwf	___awdiv@divisor+1
  1718  0463  086C               	movf	_residuo,w
  1719  0464  00A6               	movwf	??_division
  1720  0465  01A7               	clrf	??_division+1
  1721  0466  0826               	movf	??_division,w
  1722  0467  00F4               	movwf	___awdiv@dividend
  1723  0468  0827               	movf	??_division+1,w
  1724  0469  00F5               	movwf	___awdiv@dividend+1
  1725  046A  120A  118A  24AA  120A  118A  	fcall	___awdiv
  1726  046F  0872               	movf	?___awdiv,w
  1727  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0472  00A8               	movwf	??_division+2
  1730  0473  0828               	movf	??_division+2,w
  1731  0474  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0475  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0476  00A4               	movwf	_c^(0+128)
  1734                           
  1735                           ;main.c: 203:     u = residuo%10;
  1736  0477  300A               	movlw	10
  1737  0478  00F2               	movwf	___awmod@divisor
  1738  0479  3000               	movlw	0
  1739  047A  00F3               	movwf	___awmod@divisor+1
  1740  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1741  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1742  047D  086C               	movf	_residuo,w
  1743  047E  00A6               	movwf	??_division
  1744  047F  01A7               	clrf	??_division+1
  1745  0480  0826               	movf	??_division,w
  1746  0481  00F4               	movwf	___awmod@dividend
  1747  0482  0827               	movf	??_division+1,w
  1748  0483  00F5               	movwf	___awmod@dividend+1
  1749  0484  120A  118A  2513  120A  118A  	fcall	___awmod
  1750  0489  0872               	movf	?___awmod,w
  1751  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1752  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1753  048C  00A8               	movwf	??_division+2
  1754  048D  0828               	movf	??_division+2,w
  1755  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1756  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0490  00A3               	movwf	_u^(0+128)
  1758  0491                     l1942:
  1759                           
  1760                           ;main.c: 204:     d += 48;
  1761  0491  3030               	movlw	48
  1762  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0494  00A6               	movwf	??_division
  1765  0495  0826               	movf	??_division,w
  1766  0496  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0497  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0498  07A5               	addwf	_d^(0+128),f
  1769  0499                     l1944:
  1770                           
  1771                           ;main.c: 205:     c += 48;
  1772  0499  3030               	movlw	48
  1773  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1774  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1775  049C  00A6               	movwf	??_division
  1776  049D  0826               	movf	??_division,w
  1777  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1778  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1779  04A0  07A4               	addwf	_c^(0+128),f
  1780  04A1                     l1946:
  1781                           
  1782                           ;main.c: 206:     u += 48;
  1783  04A1  3030               	movlw	48
  1784  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1785  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1786  04A4  00A6               	movwf	??_division
  1787  04A5  0826               	movf	??_division,w
  1788  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1789  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1790  04A8  07A3               	addwf	_u^(0+128),f
  1791  04A9                     l157:
  1792  04A9  0008               	return
  1793  04AA                     __end_of_division:
  1794                           
  1795                           	psect	text5
  1796  0513                     __ptext5:	
  1797 ;; *************** function ___awmod *****************
  1798 ;; Defined at:
  1799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  divisor         2    2[COMMON] int 
  1802 ;;  dividend        2    4[COMMON] int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  sign            1    8[COMMON] unsigned char 
  1805 ;;  counter         1    7[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2    2[COMMON] int 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         4       0       0       0       0
  1816 ;;      Locals:         2       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0
  1818 ;;      Totals:         7       0       0       0       0
  1819 ;;Total ram usage:        7 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_division
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function ___awmod
  1831  0513                     ___awmod:
  1832  0513                     l1552:	
  1833                           ;incstack = 0
  1834                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1835                           
  1836  0513  01F8               	clrf	___awmod@sign
  1837  0514                     l1554:
  1838  0514  1FF5               	btfss	___awmod@dividend+1,7
  1839  0515  2D17               	goto	u1181
  1840  0516  2D18               	goto	u1180
  1841  0517                     u1181:
  1842  0517  2D1F               	goto	l1560
  1843  0518                     u1180:
  1844  0518                     l1556:
  1845  0518  09F4               	comf	___awmod@dividend,f
  1846  0519  09F5               	comf	___awmod@dividend+1,f
  1847  051A  0AF4               	incf	___awmod@dividend,f
  1848  051B  1903               	skipnz
  1849  051C  0AF5               	incf	___awmod@dividend+1,f
  1850  051D                     l1558:
  1851  051D  01F8               	clrf	___awmod@sign
  1852  051E  0AF8               	incf	___awmod@sign,f
  1853  051F                     l1560:
  1854  051F  1FF3               	btfss	___awmod@divisor+1,7
  1855  0520  2D22               	goto	u1191
  1856  0521  2D23               	goto	u1190
  1857  0522                     u1191:
  1858  0522  2D28               	goto	l1564
  1859  0523                     u1190:
  1860  0523                     l1562:
  1861  0523  09F2               	comf	___awmod@divisor,f
  1862  0524  09F3               	comf	___awmod@divisor+1,f
  1863  0525  0AF2               	incf	___awmod@divisor,f
  1864  0526  1903               	skipnz
  1865  0527  0AF3               	incf	___awmod@divisor+1,f
  1866  0528                     l1564:
  1867  0528  0872               	movf	___awmod@divisor,w
  1868  0529  0473               	iorwf	___awmod@divisor+1,w
  1869  052A  1903               	btfsc	3,2
  1870  052B  2D2D               	goto	u1201
  1871  052C  2D2E               	goto	u1200
  1872  052D                     u1201:
  1873  052D  2D5D               	goto	l1582
  1874  052E                     u1200:
  1875  052E                     l1566:
  1876  052E  01F7               	clrf	___awmod@counter
  1877  052F  0AF7               	incf	___awmod@counter,f
  1878  0530  2D3C               	goto	l1572
  1879  0531                     l1568:
  1880  0531  3001               	movlw	1
  1881  0532                     u1215:
  1882  0532  1003               	clrc
  1883  0533  0DF2               	rlf	___awmod@divisor,f
  1884  0534  0DF3               	rlf	___awmod@divisor+1,f
  1885  0535  3EFF               	addlw	-1
  1886  0536  1D03               	skipz
  1887  0537  2D32               	goto	u1215
  1888  0538                     l1570:
  1889  0538  3001               	movlw	1
  1890  0539  00F6               	movwf	??___awmod
  1891  053A  0876               	movf	??___awmod,w
  1892  053B  07F7               	addwf	___awmod@counter,f
  1893  053C                     l1572:
  1894  053C  1FF3               	btfss	___awmod@divisor+1,7
  1895  053D  2D3F               	goto	u1221
  1896  053E  2D40               	goto	u1220
  1897  053F                     u1221:
  1898  053F  2D31               	goto	l1568
  1899  0540                     u1220:
  1900  0540                     l1574:
  1901  0540  0873               	movf	___awmod@divisor+1,w
  1902  0541  0275               	subwf	___awmod@dividend+1,w
  1903  0542  1D03               	skipz
  1904  0543  2D46               	goto	u1235
  1905  0544  0872               	movf	___awmod@divisor,w
  1906  0545  0274               	subwf	___awmod@dividend,w
  1907  0546                     u1235:
  1908  0546  1C03               	skipc
  1909  0547  2D49               	goto	u1231
  1910  0548  2D4A               	goto	u1230
  1911  0549                     u1231:
  1912  0549  2D50               	goto	l1578
  1913  054A                     u1230:
  1914  054A                     l1576:
  1915  054A  0872               	movf	___awmod@divisor,w
  1916  054B  02F4               	subwf	___awmod@dividend,f
  1917  054C  0873               	movf	___awmod@divisor+1,w
  1918  054D  1C03               	skipc
  1919  054E  03F5               	decf	___awmod@dividend+1,f
  1920  054F  02F5               	subwf	___awmod@dividend+1,f
  1921  0550                     l1578:
  1922  0550  3001               	movlw	1
  1923  0551                     u1245:
  1924  0551  1003               	clrc
  1925  0552  0CF3               	rrf	___awmod@divisor+1,f
  1926  0553  0CF2               	rrf	___awmod@divisor,f
  1927  0554  3EFF               	addlw	-1
  1928  0555  1D03               	skipz
  1929  0556  2D51               	goto	u1245
  1930  0557                     l1580:
  1931  0557  3001               	movlw	1
  1932  0558  02F7               	subwf	___awmod@counter,f
  1933  0559  1D03               	btfss	3,2
  1934  055A  2D5C               	goto	u1251
  1935  055B  2D5D               	goto	u1250
  1936  055C                     u1251:
  1937  055C  2D40               	goto	l1574
  1938  055D                     u1250:
  1939  055D                     l1582:
  1940  055D  0878               	movf	___awmod@sign,w
  1941  055E  1903               	btfsc	3,2
  1942  055F  2D61               	goto	u1261
  1943  0560  2D62               	goto	u1260
  1944  0561                     u1261:
  1945  0561  2D67               	goto	l1586
  1946  0562                     u1260:
  1947  0562                     l1584:
  1948  0562  09F4               	comf	___awmod@dividend,f
  1949  0563  09F5               	comf	___awmod@dividend+1,f
  1950  0564  0AF4               	incf	___awmod@dividend,f
  1951  0565  1903               	skipnz
  1952  0566  0AF5               	incf	___awmod@dividend+1,f
  1953  0567                     l1586:
  1954  0567  0875               	movf	___awmod@dividend+1,w
  1955  0568  00F3               	movwf	?___awmod+1
  1956  0569  0874               	movf	___awmod@dividend,w
  1957  056A  00F2               	movwf	?___awmod
  1958  056B                     l409:
  1959  056B  0008               	return
  1960  056C                     __end_of___awmod:
  1961                           
  1962                           	psect	text6
  1963  04AA                     __ptext6:	
  1964 ;; *************** function ___awdiv *****************
  1965 ;; Defined at:
  1966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  divisor         2    2[COMMON] int 
  1969 ;;  dividend        2    4[COMMON] int 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  quotient        2    2[BANK0 ] int 
  1972 ;;  sign            1    1[BANK0 ] unsigned char 
  1973 ;;  counter         1    0[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  2    2[COMMON] int 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         4       0       0       0       0
  1984 ;;      Locals:         0       4       0       0       0
  1985 ;;      Temps:          1       0       0       0       0
  1986 ;;      Totals:         5       4       0       0       0
  1987 ;;Total ram usage:        9 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_division
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function ___awdiv
  1999  04AA                     ___awdiv:
  2000  04AA                     l1896:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2003                           
  2004  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2005  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2006  04AC  01A1               	clrf	___awdiv@sign
  2007  04AD                     l1898:
  2008  04AD  1FF3               	btfss	___awdiv@divisor+1,7
  2009  04AE  2CB0               	goto	u1581
  2010  04AF  2CB1               	goto	u1580
  2011  04B0                     u1581:
  2012  04B0  2CB8               	goto	l1904
  2013  04B1                     u1580:
  2014  04B1                     l1900:
  2015  04B1  09F2               	comf	___awdiv@divisor,f
  2016  04B2  09F3               	comf	___awdiv@divisor+1,f
  2017  04B3  0AF2               	incf	___awdiv@divisor,f
  2018  04B4  1903               	skipnz
  2019  04B5  0AF3               	incf	___awdiv@divisor+1,f
  2020  04B6                     l1902:
  2021  04B6  01A1               	clrf	___awdiv@sign
  2022  04B7  0AA1               	incf	___awdiv@sign,f
  2023  04B8                     l1904:
  2024  04B8  1FF5               	btfss	___awdiv@dividend+1,7
  2025  04B9  2CBB               	goto	u1591
  2026  04BA  2CBC               	goto	u1590
  2027  04BB                     u1591:
  2028  04BB  2CC5               	goto	l1910
  2029  04BC                     u1590:
  2030  04BC                     l1906:
  2031  04BC  09F4               	comf	___awdiv@dividend,f
  2032  04BD  09F5               	comf	___awdiv@dividend+1,f
  2033  04BE  0AF4               	incf	___awdiv@dividend,f
  2034  04BF  1903               	skipnz
  2035  04C0  0AF5               	incf	___awdiv@dividend+1,f
  2036  04C1                     l1908:
  2037  04C1  3001               	movlw	1
  2038  04C2  00F6               	movwf	??___awdiv
  2039  04C3  0876               	movf	??___awdiv,w
  2040  04C4  06A1               	xorwf	___awdiv@sign,f
  2041  04C5                     l1910:
  2042  04C5  01A2               	clrf	___awdiv@quotient
  2043  04C6  01A3               	clrf	___awdiv@quotient+1
  2044  04C7                     l1912:
  2045  04C7  0872               	movf	___awdiv@divisor,w
  2046  04C8  0473               	iorwf	___awdiv@divisor+1,w
  2047  04C9  1903               	btfsc	3,2
  2048  04CA  2CCC               	goto	u1601
  2049  04CB  2CCD               	goto	u1600
  2050  04CC                     u1601:
  2051  04CC  2D04               	goto	l1932
  2052  04CD                     u1600:
  2053  04CD                     l1914:
  2054  04CD  01A0               	clrf	___awdiv@counter
  2055  04CE  0AA0               	incf	___awdiv@counter,f
  2056  04CF  2CDB               	goto	l1920
  2057  04D0                     l1916:
  2058  04D0  3001               	movlw	1
  2059  04D1                     u1615:
  2060  04D1  1003               	clrc
  2061  04D2  0DF2               	rlf	___awdiv@divisor,f
  2062  04D3  0DF3               	rlf	___awdiv@divisor+1,f
  2063  04D4  3EFF               	addlw	-1
  2064  04D5  1D03               	skipz
  2065  04D6  2CD1               	goto	u1615
  2066  04D7                     l1918:
  2067  04D7  3001               	movlw	1
  2068  04D8  00F6               	movwf	??___awdiv
  2069  04D9  0876               	movf	??___awdiv,w
  2070  04DA  07A0               	addwf	___awdiv@counter,f
  2071  04DB                     l1920:
  2072  04DB  1FF3               	btfss	___awdiv@divisor+1,7
  2073  04DC  2CDE               	goto	u1621
  2074  04DD  2CDF               	goto	u1620
  2075  04DE                     u1621:
  2076  04DE  2CD0               	goto	l1916
  2077  04DF                     u1620:
  2078  04DF                     l1922:
  2079  04DF  3001               	movlw	1
  2080  04E0                     u1635:
  2081  04E0  1003               	clrc
  2082  04E1  0DA2               	rlf	___awdiv@quotient,f
  2083  04E2  0DA3               	rlf	___awdiv@quotient+1,f
  2084  04E3  3EFF               	addlw	-1
  2085  04E4  1D03               	skipz
  2086  04E5  2CE0               	goto	u1635
  2087  04E6  0873               	movf	___awdiv@divisor+1,w
  2088  04E7  0275               	subwf	___awdiv@dividend+1,w
  2089  04E8  1D03               	skipz
  2090  04E9  2CEC               	goto	u1645
  2091  04EA  0872               	movf	___awdiv@divisor,w
  2092  04EB  0274               	subwf	___awdiv@dividend,w
  2093  04EC                     u1645:
  2094  04EC  1C03               	skipc
  2095  04ED  2CEF               	goto	u1641
  2096  04EE  2CF0               	goto	u1640
  2097  04EF                     u1641:
  2098  04EF  2CF7               	goto	l1928
  2099  04F0                     u1640:
  2100  04F0                     l1924:
  2101  04F0  0872               	movf	___awdiv@divisor,w
  2102  04F1  02F4               	subwf	___awdiv@dividend,f
  2103  04F2  0873               	movf	___awdiv@divisor+1,w
  2104  04F3  1C03               	skipc
  2105  04F4  03F5               	decf	___awdiv@dividend+1,f
  2106  04F5  02F5               	subwf	___awdiv@dividend+1,f
  2107  04F6                     l1926:
  2108  04F6  1422               	bsf	___awdiv@quotient,0
  2109  04F7                     l1928:
  2110  04F7  3001               	movlw	1
  2111  04F8                     u1655:
  2112  04F8  1003               	clrc
  2113  04F9  0CF3               	rrf	___awdiv@divisor+1,f
  2114  04FA  0CF2               	rrf	___awdiv@divisor,f
  2115  04FB  3EFF               	addlw	-1
  2116  04FC  1D03               	skipz
  2117  04FD  2CF8               	goto	u1655
  2118  04FE                     l1930:
  2119  04FE  3001               	movlw	1
  2120  04FF  02A0               	subwf	___awdiv@counter,f
  2121  0500  1D03               	btfss	3,2
  2122  0501  2D03               	goto	u1661
  2123  0502  2D04               	goto	u1660
  2124  0503                     u1661:
  2125  0503  2CDF               	goto	l1922
  2126  0504                     u1660:
  2127  0504                     l1932:
  2128  0504  0821               	movf	___awdiv@sign,w
  2129  0505  1903               	btfsc	3,2
  2130  0506  2D08               	goto	u1671
  2131  0507  2D09               	goto	u1670
  2132  0508                     u1671:
  2133  0508  2D0E               	goto	l1936
  2134  0509                     u1670:
  2135  0509                     l1934:
  2136  0509  09A2               	comf	___awdiv@quotient,f
  2137  050A  09A3               	comf	___awdiv@quotient+1,f
  2138  050B  0AA2               	incf	___awdiv@quotient,f
  2139  050C  1903               	skipnz
  2140  050D  0AA3               	incf	___awdiv@quotient+1,f
  2141  050E                     l1936:
  2142  050E  0823               	movf	___awdiv@quotient+1,w
  2143  050F  00F3               	movwf	?___awdiv+1
  2144  0510  0822               	movf	___awdiv@quotient,w
  2145  0511  00F2               	movwf	?___awdiv
  2146  0512                     l396:
  2147  0512  0008               	return
  2148  0513                     __end_of___awdiv:
  2149                           
  2150                           	psect	text7
  2151  05B0                     __ptext7:	
  2152 ;; *************** function _concatenado *****************
  2153 ;; Defined at:
  2154 ;;		line 185 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  a               2   26[BANK0 ] int 
  2157 ;;  b               2   28[BANK0 ] int 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  BFFR1          20   51[BANK0 ] unsigned char [20]
  2160 ;;  BFFR2          20   31[BANK0 ] unsigned char [20]
  2161 ;;  c               2   71[BANK0 ] int 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2   26[BANK0 ] int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       4       0       0       0
  2172 ;;      Locals:         0      42       0       0       0
  2173 ;;      Temps:          0       1       0       0       0
  2174 ;;      Totals:         0      47       0       0       0
  2175 ;;Total ram usage:       47 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    4
  2178 ;; This function calls:
  2179 ;;		_atoi
  2180 ;;		_sprintf
  2181 ;;		_strcat
  2182 ;; This function is called by:
  2183 ;;		_mensaje
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _concatenado
  2189  05B0                     _concatenado:
  2190  05B0                     l1958:	
  2191                           ;incstack = 0
  2192                           ; Regs used in _concatenado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2193                           
  2194                           
  2195                           ;main.c: 185: int concatenado(int a, int b);main.c: 186: {;main.c: 187:     char BFFR1[2
      +                          0];;main.c: 188:     char BFFR2[20];;main.c: 190:     sprintf(BFFR1, "%d", a);
  2196  05B0  30A8               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2197  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2198  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2199  05B3  00BE               	movwf	??_concatenado
  2200  05B4  083E               	movf	??_concatenado,w
  2201  05B5  00B1               	movwf	sprintf@f
  2202  05B6  083B               	movf	concatenado@a+1,w
  2203  05B7  00B3               	movwf	?_sprintf+2
  2204  05B8  083A               	movf	concatenado@a,w
  2205  05B9  00B2               	movwf	?_sprintf+1
  2206  05BA  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2207  05BB  120A  118A  26B2  120A  118A  	fcall	_sprintf
  2208                           
  2209                           ;main.c: 191:     sprintf(BFFR2, "%d", b);
  2210  05C0  30A8               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2211  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2212  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2213  05C3  00BE               	movwf	??_concatenado
  2214  05C4  083E               	movf	??_concatenado,w
  2215  05C5  00B1               	movwf	sprintf@f
  2216  05C6  083D               	movf	concatenado@b+1,w
  2217  05C7  00B3               	movwf	?_sprintf+2
  2218  05C8  083C               	movf	concatenado@b,w
  2219  05C9  00B2               	movwf	?_sprintf+1
  2220  05CA  303F               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  2221  05CB  120A  118A  26B2  120A  118A  	fcall	_sprintf
  2222  05D0                     l1960:
  2223                           
  2224                           ;main.c: 193:     strcat(BFFR1, BFFR2);
  2225  05D0  303F               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  2226  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2227  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2228  05D3  00BE               	movwf	??_concatenado
  2229  05D4  083E               	movf	??_concatenado,w
  2230  05D5  00F2               	movwf	strcat@from
  2231  05D6  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2232  05D7  120A  118A  2664  120A  118A  	fcall	_strcat
  2233  05DC                     l1962:
  2234                           
  2235                           ;main.c: 195:     int c = atoi(BFFR1);
  2236  05DC  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2237  05DD  120A  118A  23B0  120A  118A  	fcall	_atoi
  2238  05E2  0879               	movf	?_atoi+1,w
  2239  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2240  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2241  05E5  00E8               	movwf	concatenado@c+1
  2242  05E6  0878               	movf	?_atoi,w
  2243  05E7  00E7               	movwf	concatenado@c
  2244  05E8                     l1964:
  2245                           
  2246                           ;main.c: 196:     return c;
  2247  05E8  0868               	movf	concatenado@c+1,w
  2248  05E9  00BB               	movwf	?_concatenado+1
  2249  05EA  0867               	movf	concatenado@c,w
  2250  05EB  00BA               	movwf	?_concatenado
  2251  05EC                     l154:
  2252  05EC  0008               	return
  2253  05ED                     __end_of_concatenado:
  2254                           
  2255                           	psect	text8
  2256  0664                     __ptext8:	
  2257 ;; *************** function _strcat *****************
  2258 ;; Defined at:
  2259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  to              1    wreg     PTR unsigned char 
  2262 ;;		 -> concatenado@BFFR1(20), 
  2263 ;;  from            1    2[COMMON] PTR const unsigned char 
  2264 ;;		 -> concatenado@BFFR2(20), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  to              1    4[COMMON] PTR unsigned char 
  2267 ;;		 -> concatenado@BFFR1(20), 
  2268 ;;  cp              1    5[COMMON] PTR unsigned char 
  2269 ;;		 -> concatenado@BFFR1(20), 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      PTR unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         1       0       0       0       0
  2280 ;;      Locals:         2       0       0       0       0
  2281 ;;      Temps:          1       0       0       0       0
  2282 ;;      Totals:         4       0       0       0       0
  2283 ;;Total ram usage:        4 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    1
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_concatenado
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _strcat
  2295  0664                     _strcat:
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2299                           ;strcat@to stored from wreg
  2300  0664  00F4               	movwf	strcat@to
  2301  0665                     l1464:
  2302  0665  0874               	movf	strcat@to,w
  2303  0666  00F3               	movwf	??_strcat
  2304  0667  0873               	movf	??_strcat,w
  2305  0668  00F5               	movwf	strcat@cp
  2306  0669  2E6E               	goto	l1468
  2307  066A                     l1466:
  2308  066A  3001               	movlw	1
  2309  066B  00F3               	movwf	??_strcat
  2310  066C  0873               	movf	??_strcat,w
  2311  066D  07F5               	addwf	strcat@cp,f
  2312  066E                     l1468:
  2313  066E  0875               	movf	strcat@cp,w
  2314  066F  0084               	movwf	4
  2315  0670  1383               	bcf	3,7	;select IRP bank0
  2316  0671  0800               	movf	0,w
  2317  0672  1D03               	btfss	3,2
  2318  0673  2E75               	goto	u1001
  2319  0674  2E76               	goto	u1000
  2320  0675                     u1001:
  2321  0675  2E6A               	goto	l1466
  2322  0676                     u1000:
  2323  0676  2E7F               	goto	l1472
  2324  0677                     l1470:
  2325  0677  3001               	movlw	1
  2326  0678  00F3               	movwf	??_strcat
  2327  0679  0873               	movf	??_strcat,w
  2328  067A  07F5               	addwf	strcat@cp,f
  2329  067B  3001               	movlw	1
  2330  067C  00F3               	movwf	??_strcat
  2331  067D  0873               	movf	??_strcat,w
  2332  067E  07F2               	addwf	strcat@from,f
  2333  067F                     l1472:
  2334  067F  0872               	movf	strcat@from,w
  2335  0680  0084               	movwf	4
  2336  0681  0800               	movf	0,w
  2337  0682  00F3               	movwf	??_strcat
  2338  0683  0875               	movf	strcat@cp,w
  2339  0684  0084               	movwf	4
  2340  0685  0873               	movf	??_strcat,w
  2341  0686  0080               	movwf	0
  2342  0687  0800               	movf	0,w
  2343  0688  1D03               	btfss	3,2
  2344  0689  2E8B               	goto	u1011
  2345  068A  2E8C               	goto	u1010
  2346  068B                     u1011:
  2347  068B  2E77               	goto	l1470
  2348  068C                     u1010:
  2349  068C                     l774:
  2350  068C  0008               	return
  2351  068D                     __end_of_strcat:
  2352                           
  2353                           	psect	text9
  2354  06B2                     __ptext9:	
  2355 ;; *************** function _sprintf *****************
  2356 ;; Defined at:
  2357 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  wh              1    wreg     PTR unsigned char 
  2360 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  2361 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2362 ;;		 -> STR_8(3), STR_7(3), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2365 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  2366 ;;  pb              2   24[BANK0 ] struct __prbuf
  2367 ;;  ap              1   23[BANK0 ] PTR void [1]
  2368 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  2   17[BANK0 ] int 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       3       0       0       0
  2379 ;;      Locals:         0       4       0       0       0
  2380 ;;      Temps:          0       2       0       0       0
  2381 ;;      Totals:         0       9       0       0       0
  2382 ;;Total ram usage:        9 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    3
  2385 ;; This function calls:
  2386 ;;		__doprnt
  2387 ;; This function is called by:
  2388 ;;		_concatenado
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _sprintf
  2394  06B2                     _sprintf:
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2398                           ;sprintf@wh stored from wreg
  2399  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2400  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2401  06B4  00B6               	movwf	sprintf@wh
  2402  06B5                     l1850:
  2403  06B5  0836               	movf	sprintf@wh,w
  2404  06B6  00B4               	movwf	??_sprintf
  2405  06B7  0834               	movf	??_sprintf,w
  2406  06B8  00B8               	movwf	sprintf@pb
  2407  06B9                     l1852:
  2408  06B9  01B9               	clrf	low ((sprintf@pb| 0+1))
  2409  06BA                     l1854:
  2410  06BA  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2411  06BB  00B4               	movwf	??_sprintf
  2412  06BC  0834               	movf	??_sprintf,w
  2413  06BD  00B7               	movwf	sprintf@ap
  2414  06BE                     l1856:
  2415  06BE  0831               	movf	sprintf@f,w
  2416  06BF  00B4               	movwf	??_sprintf
  2417  06C0  0834               	movf	??_sprintf,w
  2418  06C1  00A6               	movwf	__doprnt@f
  2419  06C2  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2420  06C3  00B5               	movwf	??_sprintf+1
  2421  06C4  0835               	movf	??_sprintf+1,w
  2422  06C5  00A7               	movwf	__doprnt@ap
  2423  06C6  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2424  06C7  120A  118A  2185  120A  118A  	fcall	__doprnt
  2425  06CC                     l1858:
  2426  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2427  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2428  06CE  0838               	movf	sprintf@pb,w
  2429  06CF  0084               	movwf	4
  2430  06D0  1383               	bcf	3,7	;select IRP bank0
  2431  06D1  0180               	clrf	0
  2432  06D2                     l765:
  2433  06D2  0008               	return
  2434  06D3                     __end_of_sprintf:
  2435                           
  2436                           	psect	text10
  2437  0185                     __ptext10:	
  2438 ;; *************** function __doprnt *****************
  2439 ;; Defined at:
  2440 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  pb              1    wreg     PTR struct __prbuf
  2443 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2444 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2445 ;;		 -> STR_8(3), STR_7(3), STR_6(31), STR_5(35), 
  2446 ;;		 -> STR_4(35), STR_3(37), STR_2(2), STR_1(19), 
  2447 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2448 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2451 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2452 ;;  tmpval          4    0        struct .
  2453 ;;  val             2   13[BANK0 ] unsigned int 
  2454 ;;  cp              2    0        PTR const unsigned char 
  2455 ;;  len             2    0        unsigned int 
  2456 ;;  c               1   15[BANK0 ] unsigned char 
  2457 ;;  prec            1   12[BANK0 ] char 
  2458 ;;  flag            1   11[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    6[BANK0 ] int 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       2       0       0       0
  2469 ;;      Locals:         0       6       0       0       0
  2470 ;;      Temps:          0       3       0       0       0
  2471 ;;      Totals:         0      11       0       0       0
  2472 ;;Total ram usage:       11 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Absolute function
  2477 ;;		___lwdiv
  2478 ;;		___lwmod
  2479 ;;		_putch
  2480 ;; This function is called by:
  2481 ;;		_printf
  2482 ;;		_sprintf
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function __doprnt
  2488  0185                     __doprnt:
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2492                           ;__doprnt@pb stored from wreg
  2493  0185  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0186  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0187  00B0               	movwf	__doprnt@pb
  2496  0188                     l1778:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2499  0188  2AA4               	goto	l1840
  2500  0189                     l1780:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2503  0189  3025               	movlw	37
  2504  018A  062F               	xorwf	__doprnt@c,w
  2505  018B  1903               	btfsc	3,2
  2506  018C  298E               	goto	u1421
  2507  018D  298F               	goto	u1420
  2508  018E                     u1421:
  2509  018E  29B5               	goto	l1790
  2510  018F                     u1420:
  2511  018F                     l1782:
  2512  018F  0A30               	incf	__doprnt@pb,w
  2513  0190  0084               	movwf	4
  2514  0191  1383               	bcf	3,7	;select IRP bank0
  2515  0192  0800               	movf	0,w
  2516  0193  1903               	btfsc	3,2
  2517  0194  2996               	goto	u1431
  2518  0195  2997               	goto	u1430
  2519  0196                     u1431:
  2520  0196  29A6               	goto	l1786
  2521  0197                     u1430:
  2522  0197                     l1784:
  2523  0197  082F               	movf	__doprnt@c,w
  2524  0198  00A8               	movwf	??__doprnt
  2525  0199  0828               	movf	??__doprnt,w
  2526  019A  00F2               	movwf	putch@dato
  2527  019B  0A30               	incf	__doprnt@pb,w
  2528  019C  0084               	movwf	4
  2529  019D  0800               	movf	0,w
  2530  019E  120A  118A  2023  120A  118A  	fcall	fptable
  2531  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2532  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2533  01A5  2988               	goto	l1778
  2534  01A6                     l1786:
  2535  01A6  082F               	movf	__doprnt@c,w
  2536  01A7  00A8               	movwf	??__doprnt
  2537  01A8  0830               	movf	__doprnt@pb,w
  2538  01A9  0084               	movwf	4
  2539  01AA  0800               	movf	0,w
  2540  01AB  0084               	movwf	4
  2541  01AC  0828               	movf	??__doprnt,w
  2542  01AD  0080               	movwf	0
  2543  01AE                     l1788:
  2544  01AE  3001               	movlw	1
  2545  01AF  00A8               	movwf	??__doprnt
  2546  01B0  0830               	movf	__doprnt@pb,w
  2547  01B1  0084               	movwf	4
  2548  01B2  0828               	movf	??__doprnt,w
  2549  01B3  0780               	addwf	0,f
  2550  01B4  2988               	goto	l1778
  2551  01B5                     l1790:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2554  01B5  01AB               	clrf	__doprnt@flag
  2555  01B6                     l1794:	
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2557                           
  2558  01B6  3001               	movlw	1
  2559  01B7  07A6               	addwf	__doprnt@f,f
  2560  01B8  30FF               	movlw	-1
  2561  01B9  0726               	addwf	__doprnt@f,w
  2562  01BA  0084               	movwf	4
  2563  01BB  120A  118A  2300  120A  118A  	fcall	stringdir
  2564  01C0  00AF               	movwf	__doprnt@c
  2565  01C1  00A8               	movwf	??__doprnt
  2566  01C2  01A9               	clrf	??__doprnt+1
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ; direct_byte           11     8 (fixed)
  2575                           ; jumptable            260     6 (fixed)
  2576                           ;	Chosen strategy is simple_byte
  2577  01C3  0829               	movf	??__doprnt+1,w
  2578  01C4  3A00               	xorlw	0	; case 0
  2579  01C5  1903               	skipnz
  2580  01C6  29C8               	goto	l2048
  2581  01C7  2AA4               	goto	l1840
  2582  01C8                     l2048:
  2583                           
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 3, Range of values is 0 to 105
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           10     6 (average)
  2589                           ; jumptable            260     6 (fixed)
  2590                           ;	Chosen strategy is simple_byte
  2591  01C8  0828               	movf	??__doprnt,w
  2592  01C9  3A00               	xorlw	0	; case 0
  2593  01CA  1903               	skipnz
  2594  01CB  2AB8               	goto	l1842
  2595  01CC  3A64               	xorlw	100	; case 100
  2596  01CD  1903               	skipnz
  2597  01CE  29D3               	goto	l1796
  2598  01CF  3A0D               	xorlw	13	; case 105
  2599  01D0  1903               	skipnz
  2600  01D1  29D3               	goto	l1796
  2601  01D2  2AA4               	goto	l1840
  2602  01D3                     l1796:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2605  01D3  0827               	movf	__doprnt@ap,w
  2606  01D4  0084               	movwf	4
  2607  01D5  1383               	bcf	3,7	;select IRP bank0
  2608  01D6  0800               	movf	0,w
  2609  01D7  00A8               	movwf	??__doprnt
  2610  01D8  3002               	movlw	2
  2611  01D9  0780               	addwf	0,f
  2612  01DA  0828               	movf	??__doprnt,w
  2613  01DB  0084               	movwf	4
  2614  01DC  0800               	movf	0,w
  2615  01DD  00AD               	movwf	__doprnt@val
  2616  01DE  0A84               	incf	4,f
  2617  01DF  0800               	movf	0,w
  2618  01E0  00AE               	movwf	__doprnt@val+1
  2619  01E1                     l1798:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2622  01E1  1FAE               	btfss	__doprnt@val+1,7
  2623  01E2  29E4               	goto	u1441
  2624  01E3  29E5               	goto	u1440
  2625  01E4                     u1441:
  2626  01E4  29EE               	goto	l1804
  2627  01E5                     u1440:
  2628  01E5                     l1800:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2631  01E5  3003               	movlw	3
  2632  01E6  00A8               	movwf	??__doprnt
  2633  01E7  0828               	movf	??__doprnt,w
  2634  01E8  04AB               	iorwf	__doprnt@flag,f
  2635  01E9                     l1802:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2638  01E9  09AD               	comf	__doprnt@val,f
  2639  01EA  09AE               	comf	__doprnt@val+1,f
  2640  01EB  0AAD               	incf	__doprnt@val,f
  2641  01EC  1903               	skipnz
  2642  01ED  0AAE               	incf	__doprnt@val+1,f
  2643  01EE                     l1804:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2646  01EE  01AF               	clrf	__doprnt@c
  2647  01EF  0AAF               	incf	__doprnt@c,f
  2648  01F0                     l1810:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2651  01F0  082F               	movf	__doprnt@c,w
  2652  01F1  00A8               	movwf	??__doprnt
  2653  01F2  0728               	addwf	??__doprnt,w
  2654  01F3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2655  01F4  0084               	movwf	4
  2656  01F5  120A  118A  2300  120A  118A  	fcall	stringdir
  2657  01FA  00A9               	movwf	??__doprnt+1
  2658  01FB  120A  118A  2300  120A  118A  	fcall	stringdir
  2659  0200  00AA               	movwf	??__doprnt+2
  2660  0201  082A               	movf	??__doprnt+2,w
  2661  0202  022E               	subwf	__doprnt@val+1,w
  2662  0203  1D03               	skipz
  2663  0204  2A07               	goto	u1455
  2664  0205  0829               	movf	??__doprnt+1,w
  2665  0206  022D               	subwf	__doprnt@val,w
  2666  0207                     u1455:
  2667  0207  1803               	skipnc
  2668  0208  2A0A               	goto	u1451
  2669  0209  2A0B               	goto	u1450
  2670  020A                     u1451:
  2671  020A  2A0C               	goto	l1814
  2672  020B                     u1450:
  2673  020B  2A16               	goto	l1816
  2674  020C                     l1814:
  2675  020C  3001               	movlw	1
  2676  020D  00A8               	movwf	??__doprnt
  2677  020E  0828               	movf	??__doprnt,w
  2678  020F  07AF               	addwf	__doprnt@c,f
  2679  0210  3005               	movlw	5
  2680  0211  062F               	xorwf	__doprnt@c,w
  2681  0212  1D03               	btfss	3,2
  2682  0213  2A15               	goto	u1461
  2683  0214  2A16               	goto	u1460
  2684  0215                     u1461:
  2685  0215  29F0               	goto	l1810
  2686  0216                     u1460:
  2687  0216                     l1816:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2690  0216  082B               	movf	__doprnt@flag,w
  2691  0217  3903               	andlw	3
  2692  0218  1903               	btfsc	3,2
  2693  0219  2A1B               	goto	u1471
  2694  021A  2A1C               	goto	u1470
  2695  021B                     u1471:
  2696  021B  2A3F               	goto	l1826
  2697  021C                     u1470:
  2698  021C                     l1818:
  2699  021C  0A30               	incf	__doprnt@pb,w
  2700  021D  0084               	movwf	4
  2701  021E  1383               	bcf	3,7	;select IRP bank0
  2702  021F  0800               	movf	0,w
  2703  0220  1903               	btfsc	3,2
  2704  0221  2A23               	goto	u1481
  2705  0222  2A24               	goto	u1480
  2706  0223                     u1481:
  2707  0223  2A31               	goto	l1822
  2708  0224                     u1480:
  2709  0224                     l1820:
  2710  0224  302D               	movlw	45
  2711  0225  00A8               	movwf	??__doprnt
  2712  0226  0828               	movf	??__doprnt,w
  2713  0227  00F2               	movwf	putch@dato
  2714  0228  0A30               	incf	__doprnt@pb,w
  2715  0229  0084               	movwf	4
  2716  022A  0800               	movf	0,w
  2717  022B  120A  118A  2023  120A  118A  	fcall	fptable
  2718  0230  2A3F               	goto	l1826
  2719  0231                     l1822:
  2720  0231  302D               	movlw	45
  2721  0232  00A8               	movwf	??__doprnt
  2722  0233  0830               	movf	__doprnt@pb,w
  2723  0234  0084               	movwf	4
  2724  0235  0800               	movf	0,w
  2725  0236  0084               	movwf	4
  2726  0237  0828               	movf	??__doprnt,w
  2727  0238  0080               	movwf	0
  2728  0239                     l1824:
  2729  0239  3001               	movlw	1
  2730  023A  00A8               	movwf	??__doprnt
  2731  023B  0830               	movf	__doprnt@pb,w
  2732  023C  0084               	movwf	4
  2733  023D  0828               	movf	??__doprnt,w
  2734  023E  0780               	addwf	0,f
  2735  023F                     l1826:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2738  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0241  082F               	movf	__doprnt@c,w
  2741  0242  00A8               	movwf	??__doprnt
  2742  0243  0828               	movf	??__doprnt,w
  2743  0244  00AC               	movwf	__doprnt@prec
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2746  0245  2A99               	goto	l1838
  2747  0246                     l1828:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2750  0246  300A               	movlw	10
  2751  0247  00A0               	movwf	___lwmod@divisor
  2752  0248  3000               	movlw	0
  2753  0249  00A1               	movwf	___lwmod@divisor+1
  2754  024A  082C               	movf	__doprnt@prec,w
  2755  024B  00A8               	movwf	??__doprnt
  2756  024C  0728               	addwf	??__doprnt,w
  2757  024D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2758  024E  0084               	movwf	4
  2759  024F  120A  118A  2300  120A  118A  	fcall	stringdir
  2760  0254  00F2               	movwf	___lwdiv@divisor
  2761  0255  120A  118A  2300  120A  118A  	fcall	stringdir
  2762  025A  00F3               	movwf	___lwdiv@divisor+1
  2763  025B  082E               	movf	__doprnt@val+1,w
  2764  025C  00F5               	movwf	___lwdiv@dividend+1
  2765  025D  082D               	movf	__doprnt@val,w
  2766  025E  00F4               	movwf	___lwdiv@dividend
  2767  025F  120A  118A  256C  120A  118A  	fcall	___lwdiv
  2768  0264  0873               	movf	?___lwdiv+1,w
  2769  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0267  00A3               	movwf	___lwmod@dividend+1
  2772  0268  0872               	movf	?___lwdiv,w
  2773  0269  00A2               	movwf	___lwmod@dividend
  2774  026A  120A  118A  25ED  120A  118A  	fcall	___lwmod
  2775  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0271  0820               	movf	?___lwmod,w
  2778  0272  3E30               	addlw	48
  2779  0273  00A9               	movwf	??__doprnt+1
  2780  0274  0829               	movf	??__doprnt+1,w
  2781  0275  00AF               	movwf	__doprnt@c
  2782  0276                     l1830:
  2783  0276  0A30               	incf	__doprnt@pb,w
  2784  0277  0084               	movwf	4
  2785  0278  1383               	bcf	3,7	;select IRP bank0
  2786  0279  0800               	movf	0,w
  2787  027A  1903               	btfsc	3,2
  2788  027B  2A7D               	goto	u1491
  2789  027C  2A7E               	goto	u1490
  2790  027D                     u1491:
  2791  027D  2A8B               	goto	l1834
  2792  027E                     u1490:
  2793  027E                     l1832:
  2794  027E  082F               	movf	__doprnt@c,w
  2795  027F  00A8               	movwf	??__doprnt
  2796  0280  0828               	movf	??__doprnt,w
  2797  0281  00F2               	movwf	putch@dato
  2798  0282  0A30               	incf	__doprnt@pb,w
  2799  0283  0084               	movwf	4
  2800  0284  0800               	movf	0,w
  2801  0285  120A  118A  2023  120A  118A  	fcall	fptable
  2802  028A  2A99               	goto	l1838
  2803  028B                     l1834:
  2804  028B  082F               	movf	__doprnt@c,w
  2805  028C  00A8               	movwf	??__doprnt
  2806  028D  0830               	movf	__doprnt@pb,w
  2807  028E  0084               	movwf	4
  2808  028F  0800               	movf	0,w
  2809  0290  0084               	movwf	4
  2810  0291  0828               	movf	??__doprnt,w
  2811  0292  0080               	movwf	0
  2812  0293                     l1836:
  2813  0293  3001               	movlw	1
  2814  0294  00A8               	movwf	??__doprnt
  2815  0295  0830               	movf	__doprnt@pb,w
  2816  0296  0084               	movwf	4
  2817  0297  0828               	movf	??__doprnt,w
  2818  0298  0780               	addwf	0,f
  2819  0299                     l1838:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2822  0299  30FF               	movlw	255
  2823  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2824  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2825  029C  00A8               	movwf	??__doprnt
  2826  029D  0828               	movf	??__doprnt,w
  2827  029E  07AC               	addwf	__doprnt@prec,f
  2828  029F  0A2C               	incf	__doprnt@prec,w
  2829  02A0  1D03               	btfss	3,2
  2830  02A1  2AA3               	goto	u1501
  2831  02A2  2AA4               	goto	u1500
  2832  02A3                     u1501:
  2833  02A3  2A46               	goto	l1828
  2834  02A4                     u1500:
  2835  02A4                     l1840:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2838  02A4  3001               	movlw	1
  2839  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2840  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2841  02A7  07A6               	addwf	__doprnt@f,f
  2842  02A8  30FF               	movlw	-1
  2843  02A9  0726               	addwf	__doprnt@f,w
  2844  02AA  0084               	movwf	4
  2845  02AB  120A  118A  2300  120A  118A  	fcall	stringdir
  2846  02B0  00A8               	movwf	??__doprnt
  2847  02B1  0828               	movf	??__doprnt,w
  2848  02B2  00AF               	movwf	__doprnt@c
  2849  02B3  082F               	movf	__doprnt@c,w
  2850  02B4  1D03               	btfss	3,2
  2851  02B5  2AB7               	goto	u1511
  2852  02B6  2AB8               	goto	u1510
  2853  02B7                     u1511:
  2854  02B7  2989               	goto	l1780
  2855  02B8                     u1510:
  2856  02B8                     l1842:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2859  02B8  01A6               	clrf	?__doprnt
  2860  02B9  01A7               	clrf	?__doprnt+1
  2861  02BA                     l758:
  2862  02BA  0008               	return
  2863  02BB                     __end_of__doprnt:
  2864                           
  2865                           	psect	text11
  2866  0736                     __ptext11:	
  2867 ;; *************** function _putch *****************
  2868 ;; Defined at:
  2869 ;;		line 128 in file "main.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  dato            1    2[COMMON] unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         1       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         1       0       0       0       0
  2887 ;;Total ram usage:        1 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_printf
  2894 ;;		__doprnt
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _putch
  2900  0736                     _putch:
  2901  0736                     l1300:	
  2902                           ;incstack = 0
  2903                           ; Regs used in _putch: [wreg]
  2904                           
  2905  0736                     l122:	
  2906                           ;main.c: 129:     while(TXIF == 0);
  2907                           
  2908  0736  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0737  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0738  1E0C               	btfss	12,4	;volatile
  2911  0739  2F3B               	goto	u701
  2912  073A  2F3C               	goto	u700
  2913  073B                     u701:
  2914  073B  2F36               	goto	l122
  2915  073C                     u700:
  2916  073C                     l1302:
  2917                           
  2918                           ;main.c: 130:     TXREG = dato;
  2919  073C  0872               	movf	putch@dato,w
  2920  073D  0099               	movwf	25	;volatile
  2921  073E                     l125:
  2922  073E  0008               	return
  2923  073F                     __end_of_putch:
  2924                           
  2925                           	psect	text12
  2926  05ED                     __ptext12:	
  2927 ;; *************** function ___lwmod *****************
  2928 ;; Defined at:
  2929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  divisor         2    0[BANK0 ] unsigned int 
  2932 ;;  dividend        2    2[BANK0 ] unsigned int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  counter         1    5[BANK0 ] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    0[BANK0 ] unsigned int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2944 ;;      Params:         0       4       0       0       0
  2945 ;;      Locals:         0       1       0       0       0
  2946 ;;      Temps:          0       1       0       0       0
  2947 ;;      Totals:         0       6       0       0       0
  2948 ;;Total ram usage:        6 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		__doprnt
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function ___lwmod
  2960  05ED                     ___lwmod:
  2961  05ED                     l1756:	
  2962                           ;incstack = 0
  2963                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2964                           
  2965  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2966  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2967  05EF  0820               	movf	___lwmod@divisor,w
  2968  05F0  0421               	iorwf	___lwmod@divisor+1,w
  2969  05F1  1903               	btfsc	3,2
  2970  05F2  2DF4               	goto	u1361
  2971  05F3  2DF5               	goto	u1360
  2972  05F4                     u1361:
  2973  05F4  2E24               	goto	l1774
  2974  05F5                     u1360:
  2975  05F5                     l1758:
  2976  05F5  01A5               	clrf	___lwmod@counter
  2977  05F6  0AA5               	incf	___lwmod@counter,f
  2978  05F7  2E03               	goto	l1764
  2979  05F8                     l1760:
  2980  05F8  3001               	movlw	1
  2981  05F9                     u1375:
  2982  05F9  1003               	clrc
  2983  05FA  0DA0               	rlf	___lwmod@divisor,f
  2984  05FB  0DA1               	rlf	___lwmod@divisor+1,f
  2985  05FC  3EFF               	addlw	-1
  2986  05FD  1D03               	skipz
  2987  05FE  2DF9               	goto	u1375
  2988  05FF                     l1762:
  2989  05FF  3001               	movlw	1
  2990  0600  00A4               	movwf	??___lwmod
  2991  0601  0824               	movf	??___lwmod,w
  2992  0602  07A5               	addwf	___lwmod@counter,f
  2993  0603                     l1764:
  2994  0603  1FA1               	btfss	___lwmod@divisor+1,7
  2995  0604  2E06               	goto	u1381
  2996  0605  2E07               	goto	u1380
  2997  0606                     u1381:
  2998  0606  2DF8               	goto	l1760
  2999  0607                     u1380:
  3000  0607                     l1766:
  3001  0607  0821               	movf	___lwmod@divisor+1,w
  3002  0608  0223               	subwf	___lwmod@dividend+1,w
  3003  0609  1D03               	skipz
  3004  060A  2E0D               	goto	u1395
  3005  060B  0820               	movf	___lwmod@divisor,w
  3006  060C  0222               	subwf	___lwmod@dividend,w
  3007  060D                     u1395:
  3008  060D  1C03               	skipc
  3009  060E  2E10               	goto	u1391
  3010  060F  2E11               	goto	u1390
  3011  0610                     u1391:
  3012  0610  2E17               	goto	l1770
  3013  0611                     u1390:
  3014  0611                     l1768:
  3015  0611  0820               	movf	___lwmod@divisor,w
  3016  0612  02A2               	subwf	___lwmod@dividend,f
  3017  0613  0821               	movf	___lwmod@divisor+1,w
  3018  0614  1C03               	skipc
  3019  0615  03A3               	decf	___lwmod@dividend+1,f
  3020  0616  02A3               	subwf	___lwmod@dividend+1,f
  3021  0617                     l1770:
  3022  0617  3001               	movlw	1
  3023  0618                     u1405:
  3024  0618  1003               	clrc
  3025  0619  0CA1               	rrf	___lwmod@divisor+1,f
  3026  061A  0CA0               	rrf	___lwmod@divisor,f
  3027  061B  3EFF               	addlw	-1
  3028  061C  1D03               	skipz
  3029  061D  2E18               	goto	u1405
  3030  061E                     l1772:
  3031  061E  3001               	movlw	1
  3032  061F  02A5               	subwf	___lwmod@counter,f
  3033  0620  1D03               	btfss	3,2
  3034  0621  2E23               	goto	u1411
  3035  0622  2E24               	goto	u1410
  3036  0623                     u1411:
  3037  0623  2E07               	goto	l1766
  3038  0624                     u1410:
  3039  0624                     l1774:
  3040  0624  0823               	movf	___lwmod@dividend+1,w
  3041  0625  00A1               	movwf	?___lwmod+1
  3042  0626  0822               	movf	___lwmod@dividend,w
  3043  0627  00A0               	movwf	?___lwmod
  3044  0628                     l525:
  3045  0628  0008               	return
  3046  0629                     __end_of___lwmod:
  3047                           
  3048                           	psect	text13
  3049  056C                     __ptext13:	
  3050 ;; *************** function ___lwdiv *****************
  3051 ;; Defined at:
  3052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  divisor         2    2[COMMON] unsigned int 
  3055 ;;  dividend        2    4[COMMON] unsigned int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  quotient        2    7[COMMON] unsigned int 
  3058 ;;  counter         1    9[COMMON] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2    2[COMMON] unsigned int 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         4       0       0       0       0
  3069 ;;      Locals:         3       0       0       0       0
  3070 ;;      Temps:          1       0       0       0       0
  3071 ;;      Totals:         8       0       0       0       0
  3072 ;;Total ram usage:        8 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		__doprnt
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function ___lwdiv
  3084  056C                     ___lwdiv:
  3085  056C                     l1306:	
  3086                           ;incstack = 0
  3087                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3088                           
  3089  056C  01F7               	clrf	___lwdiv@quotient
  3090  056D  01F8               	clrf	___lwdiv@quotient+1
  3091  056E                     l1308:
  3092  056E  0872               	movf	___lwdiv@divisor,w
  3093  056F  0473               	iorwf	___lwdiv@divisor+1,w
  3094  0570  1903               	btfsc	3,2
  3095  0571  2D73               	goto	u711
  3096  0572  2D74               	goto	u710
  3097  0573                     u711:
  3098  0573  2DAB               	goto	l1328
  3099  0574                     u710:
  3100  0574                     l1310:
  3101  0574  01F9               	clrf	___lwdiv@counter
  3102  0575  0AF9               	incf	___lwdiv@counter,f
  3103  0576  2D82               	goto	l1316
  3104  0577                     l1312:
  3105  0577  3001               	movlw	1
  3106  0578                     u725:
  3107  0578  1003               	clrc
  3108  0579  0DF2               	rlf	___lwdiv@divisor,f
  3109  057A  0DF3               	rlf	___lwdiv@divisor+1,f
  3110  057B  3EFF               	addlw	-1
  3111  057C  1D03               	skipz
  3112  057D  2D78               	goto	u725
  3113  057E                     l1314:
  3114  057E  3001               	movlw	1
  3115  057F  00F6               	movwf	??___lwdiv
  3116  0580  0876               	movf	??___lwdiv,w
  3117  0581  07F9               	addwf	___lwdiv@counter,f
  3118  0582                     l1316:
  3119  0582  1FF3               	btfss	___lwdiv@divisor+1,7
  3120  0583  2D85               	goto	u731
  3121  0584  2D86               	goto	u730
  3122  0585                     u731:
  3123  0585  2D77               	goto	l1312
  3124  0586                     u730:
  3125  0586                     l1318:
  3126  0586  3001               	movlw	1
  3127  0587                     u745:
  3128  0587  1003               	clrc
  3129  0588  0DF7               	rlf	___lwdiv@quotient,f
  3130  0589  0DF8               	rlf	___lwdiv@quotient+1,f
  3131  058A  3EFF               	addlw	-1
  3132  058B  1D03               	skipz
  3133  058C  2D87               	goto	u745
  3134  058D  0873               	movf	___lwdiv@divisor+1,w
  3135  058E  0275               	subwf	___lwdiv@dividend+1,w
  3136  058F  1D03               	skipz
  3137  0590  2D93               	goto	u755
  3138  0591  0872               	movf	___lwdiv@divisor,w
  3139  0592  0274               	subwf	___lwdiv@dividend,w
  3140  0593                     u755:
  3141  0593  1C03               	skipc
  3142  0594  2D96               	goto	u751
  3143  0595  2D97               	goto	u750
  3144  0596                     u751:
  3145  0596  2D9E               	goto	l1324
  3146  0597                     u750:
  3147  0597                     l1320:
  3148  0597  0872               	movf	___lwdiv@divisor,w
  3149  0598  02F4               	subwf	___lwdiv@dividend,f
  3150  0599  0873               	movf	___lwdiv@divisor+1,w
  3151  059A  1C03               	skipc
  3152  059B  03F5               	decf	___lwdiv@dividend+1,f
  3153  059C  02F5               	subwf	___lwdiv@dividend+1,f
  3154  059D                     l1322:
  3155  059D  1477               	bsf	___lwdiv@quotient,0
  3156  059E                     l1324:
  3157  059E  3001               	movlw	1
  3158  059F                     u765:
  3159  059F  1003               	clrc
  3160  05A0  0CF3               	rrf	___lwdiv@divisor+1,f
  3161  05A1  0CF2               	rrf	___lwdiv@divisor,f
  3162  05A2  3EFF               	addlw	-1
  3163  05A3  1D03               	skipz
  3164  05A4  2D9F               	goto	u765
  3165  05A5                     l1326:
  3166  05A5  3001               	movlw	1
  3167  05A6  02F9               	subwf	___lwdiv@counter,f
  3168  05A7  1D03               	btfss	3,2
  3169  05A8  2DAA               	goto	u771
  3170  05A9  2DAB               	goto	u770
  3171  05AA                     u771:
  3172  05AA  2D86               	goto	l1318
  3173  05AB                     u770:
  3174  05AB                     l1328:
  3175  05AB  0878               	movf	___lwdiv@quotient+1,w
  3176  05AC  00F3               	movwf	?___lwdiv+1
  3177  05AD  0877               	movf	___lwdiv@quotient,w
  3178  05AE  00F2               	movwf	?___lwdiv
  3179  05AF                     l515:
  3180  05AF  0008               	return
  3181  05B0                     __end_of___lwdiv:
  3182                           
  3183                           	psect	text14
  3184  03B0                     __ptext14:	
  3185 ;; *************** function _atoi *****************
  3186 ;; Defined at:
  3187 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  s               1    wreg     PTR const unsigned char 
  3190 ;;		 -> concatenado@BFFR1(20), 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3193 ;;		 -> concatenado@BFFR1(20), 
  3194 ;;  a               2    3[BANK0 ] int 
  3195 ;;  sign            1    2[BANK0 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    8[COMMON] int 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         2       0       0       0       0
  3206 ;;      Locals:         0       4       0       0       0
  3207 ;;      Temps:          0       2       0       0       0
  3208 ;;      Totals:         2       6       0       0       0
  3209 ;;Total ram usage:        8 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    2
  3212 ;; This function calls:
  3213 ;;		___wmul
  3214 ;;		_isdigit
  3215 ;; This function is called by:
  3216 ;;		_concatenado
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           
  3221                           ;psect for function _atoi
  3222  03B0                     _atoi:
  3223                           
  3224                           ;incstack = 0
  3225                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3226                           ;atoi@s stored from wreg
  3227  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3228  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3229  03B2  00A5               	movwf	atoi@s
  3230  03B3                     l1862:
  3231  03B3  2BB8               	goto	l1866
  3232  03B4                     l1864:
  3233  03B4  3001               	movlw	1
  3234  03B5  00A0               	movwf	??_atoi
  3235  03B6  0820               	movf	??_atoi,w
  3236  03B7  07A5               	addwf	atoi@s,f
  3237  03B8                     l1866:
  3238  03B8  0825               	movf	atoi@s,w
  3239  03B9  0084               	movwf	4
  3240  03BA  3020               	movlw	32
  3241  03BB  1383               	bcf	3,7	;select IRP bank0
  3242  03BC  0600               	xorwf	0,w
  3243  03BD  1903               	btfsc	3,2
  3244  03BE  2BC0               	goto	u1521
  3245  03BF  2BC1               	goto	u1520
  3246  03C0                     u1521:
  3247  03C0  2BB4               	goto	l1864
  3248  03C1                     u1520:
  3249  03C1                     l1868:
  3250  03C1  0825               	movf	atoi@s,w
  3251  03C2  0084               	movwf	4
  3252  03C3  3009               	movlw	9
  3253  03C4  0600               	xorwf	0,w
  3254  03C5  1903               	btfsc	3,2
  3255  03C6  2BC8               	goto	u1531
  3256  03C7  2BC9               	goto	u1530
  3257  03C8                     u1531:
  3258  03C8  2BB4               	goto	l1864
  3259  03C9                     u1530:
  3260  03C9                     l1870:
  3261  03C9  01A3               	clrf	atoi@a
  3262  03CA  01A4               	clrf	atoi@a+1
  3263  03CB  01A2               	clrf	atoi@sign
  3264  03CC                     l1872:
  3265  03CC  0825               	movf	atoi@s,w
  3266  03CD  0084               	movwf	4
  3267  03CE  302D               	movlw	45
  3268  03CF  0600               	xorwf	0,w
  3269  03D0  1D03               	btfss	3,2
  3270  03D1  2BD3               	goto	u1541
  3271  03D2  2BD4               	goto	u1540
  3272  03D3                     u1541:
  3273  03D3  2BDD               	goto	l1876
  3274  03D4                     u1540:
  3275  03D4                     l1874:
  3276  03D4  3001               	movlw	1
  3277  03D5  00A0               	movwf	??_atoi
  3278  03D6  0820               	movf	??_atoi,w
  3279  03D7  07A2               	addwf	atoi@sign,f
  3280  03D8  3001               	movlw	1
  3281  03D9  00A0               	movwf	??_atoi
  3282  03DA  0820               	movf	??_atoi,w
  3283  03DB  07A5               	addwf	atoi@s,f
  3284  03DC  2C0F               	goto	l1884
  3285  03DD                     l1876:
  3286  03DD  0825               	movf	atoi@s,w
  3287  03DE  0084               	movwf	4
  3288  03DF  302B               	movlw	43
  3289  03E0  0600               	xorwf	0,w
  3290  03E1  1D03               	btfss	3,2
  3291  03E2  2BE4               	goto	u1551
  3292  03E3  2BE5               	goto	u1550
  3293  03E4                     u1551:
  3294  03E4  2C0F               	goto	l1884
  3295  03E5                     u1550:
  3296  03E5                     l1878:
  3297  03E5  3001               	movlw	1
  3298  03E6  00A0               	movwf	??_atoi
  3299  03E7  0820               	movf	??_atoi,w
  3300  03E8  07A5               	addwf	atoi@s,f
  3301  03E9  2C0F               	goto	l1884
  3302  03EA                     l1880:
  3303  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3304  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3305  03EC  0825               	movf	atoi@s,w
  3306  03ED  0084               	movwf	4
  3307  03EE  0824               	movf	atoi@a+1,w
  3308  03EF  00F3               	movwf	___wmul@multiplier+1
  3309  03F0  0823               	movf	atoi@a,w
  3310  03F1  00F2               	movwf	___wmul@multiplier
  3311  03F2  300A               	movlw	10
  3312  03F3  00F4               	movwf	___wmul@multiplicand
  3313  03F4  3000               	movlw	0
  3314  03F5  00F5               	movwf	___wmul@multiplicand+1
  3315  03F6  120A  118A  268D  120A  118A  	fcall	___wmul
  3316  03FB  1383               	bcf	3,7	;select IRP bank0
  3317  03FC  0800               	movf	0,w
  3318  03FD  0772               	addwf	?___wmul,w
  3319  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3320  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0400  00A0               	movwf	??_atoi
  3322  0401  3000               	movlw	0
  3323  0402  1803               	skipnc
  3324  0403  3001               	movlw	1
  3325  0404  0773               	addwf	?___wmul+1,w
  3326  0405  00A1               	movwf	??_atoi+1
  3327  0406  0820               	movf	??_atoi,w
  3328  0407  3ED0               	addlw	208
  3329  0408  00A3               	movwf	atoi@a
  3330  0409  0821               	movf	??_atoi+1,w
  3331  040A  1803               	skipnc
  3332  040B  3E01               	addlw	1
  3333  040C  3EFF               	addlw	255
  3334  040D  00A4               	movwf	atoi@a+1
  3335  040E  2BE5               	goto	l1878
  3336  040F                     l1884:
  3337  040F  0825               	movf	atoi@s,w
  3338  0410  0084               	movwf	4
  3339  0411  0800               	movf	0,w
  3340  0412  120A  118A  2724  120A  118A  	fcall	_isdigit
  3341  0417  1803               	btfsc	3,0
  3342  0418  2C1A               	goto	u1561
  3343  0419  2C1B               	goto	u1560
  3344  041A                     u1561:
  3345  041A  2BEA               	goto	l1880
  3346  041B                     u1560:
  3347  041B                     l1886:
  3348  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3349  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3350  041D  0822               	movf	atoi@sign,w
  3351  041E  1903               	btfsc	3,2
  3352  041F  2C21               	goto	u1571
  3353  0420  2C22               	goto	u1570
  3354  0421                     u1571:
  3355  0421  2C2E               	goto	l1892
  3356  0422                     u1570:
  3357  0422                     l1888:
  3358  0422  0923               	comf	atoi@a,w
  3359  0423  00A0               	movwf	??_atoi
  3360  0424  0924               	comf	atoi@a+1,w
  3361  0425  00A1               	movwf	??_atoi+1
  3362  0426  0AA0               	incf	??_atoi,f
  3363  0427  1903               	skipnz
  3364  0428  0AA1               	incf	??_atoi+1,f
  3365  0429  0820               	movf	??_atoi,w
  3366  042A  00F8               	movwf	?_atoi
  3367  042B  0821               	movf	??_atoi+1,w
  3368  042C  00F9               	movwf	?_atoi+1
  3369  042D  2C32               	goto	l706
  3370  042E                     l1892:
  3371  042E  0824               	movf	atoi@a+1,w
  3372  042F  00F9               	movwf	?_atoi+1
  3373  0430  0823               	movf	atoi@a,w
  3374  0431  00F8               	movwf	?_atoi
  3375  0432                     l706:
  3376  0432  0008               	return
  3377  0433                     __end_of_atoi:
  3378                           
  3379                           	psect	text15
  3380  0724                     __ptext15:	
  3381 ;; *************** function _isdigit *****************
  3382 ;; Defined at:
  3383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  c               1    wreg     unsigned char 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  c               1    3[COMMON] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         2       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         2       0       0       0       0
  3401 ;;Total ram usage:        2 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_atoi
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _isdigit
  3413  0724                     _isdigit:
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3417                           ;isdigit@c stored from wreg
  3418  0724  00F3               	movwf	isdigit@c
  3419  0725                     l1368:
  3420  0725  01F2               	clrf	_isdigit$934
  3421  0726                     l1370:
  3422  0726  303A               	movlw	58
  3423  0727  0273               	subwf	isdigit@c,w
  3424  0728  1803               	skipnc
  3425  0729  2F2B               	goto	u881
  3426  072A  2F2C               	goto	u880
  3427  072B                     u881:
  3428  072B  2F34               	goto	l1376
  3429  072C                     u880:
  3430  072C                     l1372:
  3431  072C  3030               	movlw	48
  3432  072D  0273               	subwf	isdigit@c,w
  3433  072E  1C03               	skipc
  3434  072F  2F31               	goto	u891
  3435  0730  2F32               	goto	u890
  3436  0731                     u891:
  3437  0731  2F34               	goto	l1376
  3438  0732                     u890:
  3439  0732                     l1374:
  3440  0732  01F2               	clrf	_isdigit$934
  3441  0733  0AF2               	incf	_isdigit$934,f
  3442  0734                     l1376:
  3443  0734  0C72               	rrf	_isdigit$934,w
  3444  0735                     l711:
  3445  0735  0008               	return
  3446  0736                     __end_of_isdigit:
  3447                           
  3448                           	psect	text16
  3449  068D                     __ptext16:	
  3450 ;; *************** function ___wmul *****************
  3451 ;; Defined at:
  3452 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  multiplier      2    2[COMMON] unsigned int 
  3455 ;;  multiplicand    2    4[COMMON] unsigned int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  product         2    6[COMMON] unsigned int 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2    2[COMMON] unsigned int 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         4       0       0       0       0
  3468 ;;      Locals:         2       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         6       0       0       0       0
  3471 ;;Total ram usage:        6 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_atoi
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           
  3482                           ;psect for function ___wmul
  3483  068D                     ___wmul:
  3484  068D                     l1354:	
  3485                           ;incstack = 0
  3486                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3487                           
  3488  068D  01F6               	clrf	___wmul@product
  3489  068E  01F7               	clrf	___wmul@product+1
  3490  068F                     l1356:
  3491  068F  1C72               	btfss	___wmul@multiplier,0
  3492  0690  2E92               	goto	u841
  3493  0691  2E93               	goto	u840
  3494  0692                     u841:
  3495  0692  2E99               	goto	l243
  3496  0693                     u840:
  3497  0693                     l1358:
  3498  0693  0874               	movf	___wmul@multiplicand,w
  3499  0694  07F6               	addwf	___wmul@product,f
  3500  0695  1803               	skipnc
  3501  0696  0AF7               	incf	___wmul@product+1,f
  3502  0697  0875               	movf	___wmul@multiplicand+1,w
  3503  0698  07F7               	addwf	___wmul@product+1,f
  3504  0699                     l243:
  3505  0699  3001               	movlw	1
  3506  069A                     u855:
  3507  069A  1003               	clrc
  3508  069B  0DF4               	rlf	___wmul@multiplicand,f
  3509  069C  0DF5               	rlf	___wmul@multiplicand+1,f
  3510  069D  3EFF               	addlw	-1
  3511  069E  1D03               	skipz
  3512  069F  2E9A               	goto	u855
  3513  06A0                     l1360:
  3514  06A0  3001               	movlw	1
  3515  06A1                     u865:
  3516  06A1  1003               	clrc
  3517  06A2  0CF3               	rrf	___wmul@multiplier+1,f
  3518  06A3  0CF2               	rrf	___wmul@multiplier,f
  3519  06A4  3EFF               	addlw	-1
  3520  06A5  1D03               	skipz
  3521  06A6  2EA1               	goto	u865
  3522  06A7                     l1362:
  3523  06A7  0872               	movf	___wmul@multiplier,w
  3524  06A8  0473               	iorwf	___wmul@multiplier+1,w
  3525  06A9  1D03               	btfss	3,2
  3526  06AA  2EAC               	goto	u871
  3527  06AB  2EAD               	goto	u870
  3528  06AC                     u871:
  3529  06AC  2E8F               	goto	l1356
  3530  06AD                     u870:
  3531  06AD                     l1364:
  3532  06AD  0877               	movf	___wmul@product+1,w
  3533  06AE  00F3               	movwf	?___wmul+1
  3534  06AF  0876               	movf	___wmul@product,w
  3535  06B0  00F2               	movwf	?___wmul
  3536  06B1                     l245:
  3537  06B1  0008               	return
  3538  06B2                     __end_of___wmul:
  3539                           
  3540                           	psect	text17
  3541  06D3                     __ptext17:	
  3542 ;; *************** function _isr *****************
  3543 ;; Defined at:
  3544 ;;		line 46 in file "main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0
  3561 ;;      Totals:         2       0       0       0       0
  3562 ;;Total ram usage:        2 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		Interrupt level 1
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _isr
  3573  06D3                     _isr:
  3574  06D3                     i1l1260:
  3575                           
  3576                           ;main.c: 48:     if (RBIF == 1)
  3577  06D3  1C0B               	btfss	11,0	;volatile
  3578  06D4  2ED6               	goto	u67_21
  3579  06D5  2ED7               	goto	u67_20
  3580  06D6                     u67_21:
  3581  06D6  2EE8               	goto	i1l108
  3582  06D7                     u67_20:
  3583  06D7                     i1l1262:
  3584                           
  3585                           ;main.c: 49:     {;main.c: 50:         if (PORTBbits.RB0 == 0)
  3586  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3587  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3588  06D9  1806               	btfsc	6,0	;volatile
  3589  06DA  2EDC               	goto	u68_21
  3590  06DB  2EDD               	goto	u68_20
  3591  06DC                     u68_21:
  3592  06DC  2EE0               	goto	i1l1266
  3593  06DD                     u68_20:
  3594  06DD                     i1l1264:
  3595                           
  3596                           ;main.c: 51:         {;main.c: 52:             PORTA = PORTA + 1;
  3597  06DD  0805               	movf	5,w	;volatile
  3598  06DE  3E01               	addlw	1
  3599  06DF  0085               	movwf	5	;volatile
  3600  06E0                     i1l1266:
  3601                           
  3602                           ;main.c: 54:         if (PORTBbits.RB1 == 0)
  3603  06E0  1886               	btfsc	6,1	;volatile
  3604  06E1  2EE3               	goto	u69_21
  3605  06E2  2EE4               	goto	u69_20
  3606  06E3                     u69_21:
  3607  06E3  2EE7               	goto	i1l1270
  3608  06E4                     u69_20:
  3609  06E4                     i1l1268:
  3610                           
  3611                           ;main.c: 55:         {;main.c: 56:             PORTA = PORTA - 1;
  3612  06E4  0805               	movf	5,w	;volatile
  3613  06E5  3EFF               	addlw	255
  3614  06E6  0085               	movwf	5	;volatile
  3615  06E7                     i1l1270:
  3616                           
  3617                           ;main.c: 58:         INTCONbits.RBIF = 0;
  3618  06E7  100B               	bcf	11,0	;volatile
  3619  06E8                     i1l108:
  3620  06E8  0871               	movf	??_isr+1,w
  3621  06E9  008A               	movwf	10
  3622  06EA  0E70               	swapf	??_isr,w
  3623  06EB  0083               	movwf	3
  3624  06EC  0EFE               	swapf	btemp,f
  3625  06ED  0E7E               	swapf	btemp,w
  3626  06EE  0009               	retfie
  3627  06EF                     __end_of_isr:
  3628  0002                     
  3629                           	psect	intentry
  3630  0004                     __pintentry:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _isr: [wreg+status,2+status,0]
  3633                           
  3634  0004                     interrupt_function:
  3635  007E                     saved_w	set	btemp
  3636  0004  00FE               	movwf	btemp
  3637  0005  0E03               	swapf	3,w
  3638  0006  00F0               	movwf	??_isr
  3639  0007  080A               	movf	10,w
  3640  0008  00F1               	movwf	??_isr+1
  3641  0009  120A  118A  2ED3   	ljmp	_isr
  3642                           
  3643                           	psect	functab
  3644  0023                     __pfunctab:
  3645  0023                     __fptable:
  3646  0023                     fptable:
  3647  0023  00FF               	movwf	(btemp+1)& (0+127)
  3648  0024  3000               	movlw	high fptable
  3649  0025  008A               	movwf	10
  3650  0026  087F               	movf	(btemp+1)& (0+127),w
  3651  0027  0782               	addwf	2,f
  3652  0028                     fpbase:
  3653  0028  2828               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3654  0029                     fp__putch:
  3655  0029  120A  118A  2F36   	ljmp	_putch
  3656  002C                     __end_of__fptable:
  3657  007E                     btemp	set	126	;btemp
  3658  007E                     wtemp0	set	126
  3659                           
  3660                           	psect	config
  3661                           
  3662                           ;Config register CONFIG1 @ 0x2007
  3663                           ;	Oscillator Selection bits
  3664                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3665                           ;	Watchdog Timer Enable bit
  3666                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3667                           ;	Power-up Timer Enable bit
  3668                           ;	PWRTE = OFF, PWRT disabled
  3669                           ;	RE3/MCLR pin function select bit
  3670                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3671                           ;	Code Protection bit
  3672                           ;	CP = OFF, Program memory code protection is disabled
  3673                           ;	Data Code Protection bit
  3674                           ;	CPD = OFF, Data memory code protection is disabled
  3675                           ;	Brown Out Reset Selection bits
  3676                           ;	BOREN = OFF, BOR disabled
  3677                           ;	Internal External Switchover bit
  3678                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3679                           ;	Fail-Safe Clock Monitor Enabled bit
  3680                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3681                           ;	Low Voltage Programming Enable bit
  3682                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3683                           ;	In-Circuit Debugger Mode bit
  3684                           ;	DEBUG = 0x1, unprogrammed default
  3685  2007                     	org	8199
  3686  2007  20D4               	dw	8404
  3687                           
  3688                           ;Config register CONFIG2 @ 0x2008
  3689                           ;	Brown-out Reset Selection bit
  3690                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3691                           ;	Flash Program Memory Self Write Enable bits
  3692                           ;	WRT = OFF, Write protection off
  3693  2008                     	org	8200
  3694  2008  3FFF               	dw	16383

Data Sizes:
    Strings     160
    Constant    10
    Data        0
    BSS         12
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      77
    BANK1            80      5      13
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[31]), STR_5(CODE[35]), 
		 -> STR_4(CODE[35]), STR_3(CODE[37]), STR_2(CODE[2]), STR_1(CODE[19]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_6(CODE[31]), STR_5(CODE[35]), STR_4(CODE[35]), STR_3(CODE[37]), 
		 -> STR_2(CODE[2]), STR_1(CODE[19]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S936__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S936__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 


Critical Paths under _main in COMMON

    _division->___awmod
    _concatenado->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mensaje->_concatenado
    _printf->__doprnt
    _division->___awdiv
    _concatenado->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mensaje

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8713
                                             73 BANK0      1     1      0
                            _mensaje
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              5     5      0    8713
                                              0 BANK1      5     5      0
                        _concatenado
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2733
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             5     3      2    1557
                                              4 BANK0      5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concatenado                                         47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mensaje
     _concatenado
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      66       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       D       7       16.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      66      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 22:39:10 2021

                      _c 00A4                        _d 00A5                        _u 00A3  
                      pc 0002             ___awdiv@sign 0021                       _cc 006A  
                     _dd 006B                       _uu 00A2                       _vv 00A1  
                     fsr 0004      ___wmul@multiplicand 0074                      l122 0736  
                    l125 073E                      l151 0184                      l119 0663  
                    l144 00E6                      l136 00C5                      l129 00AA  
                    l154 05EC                      l243 0699                      l245 06B1  
                    l157 04A9                      l409 056B                      l515 05AF  
                    l525 0628                      l711 0735                      l720 0709  
                    l706 0432                      l396 0512                      l765 06D2  
                    l758 02BA                      l774 068C                      u700 073C  
                    u701 073B                      u710 0574                      u711 0573  
                    u730 0586                      u731 0585                      u725 0578  
                    u750 0597                      u751 0596                      u840 0693  
                    u841 0692                      u745 0587                      u770 05AB  
                    u771 05AA                      u755 0593                      u765 059F  
                    u870 06AD                      u871 06AC                      u855 069A  
                    u880 072C                      u865 06A1                      u881 072B  
                    u890 0732                      u891 0731                      _isr 06D3  
                    fsr0 0004                      indf 0000             ___awmod@sign 0078  
           concatenado@a 003A             concatenado@b 003C             concatenado@c 0067  
                   l2002 00DA                     l1300 0736                     l2012 0101  
                   l2004 00E0                     l2020 070A                     l1310 0574  
                   l1302 073C                     l2014 0107                     l2006 00EC  
                   l2022 070F                     l1320 0597                     l1312 0577  
                   l2016 015B                     l2008 00FB                     l2024 0717  
                   l1322 059D                     l1314 057E                     l1306 056C  
                   l2018 0169                     l2026 071B                     l1324 059E  
                   l1316 0582                     l1308 056E                     l1326 05A5  
                   l1318 0586                     l1360 06A0                     l1328 05AB  
                   l2048 01C8                     l1362 06A7                     l1354 068D  
                   l1370 0726                     l1364 06AD                     l1356 068F  
                   l1372 072C                     l1620 0630                     l1358 0693  
                   l1374 0732                     l1470 0677                     l1630 063F  
                   l1622 0631                     l1376 0734                     l1368 0725  
                   l1800 01E5                     l1472 067F                     l1464 0665  
                   l1560 051F                     l1552 0513                     l1640 0645  
                   l1632 0640                     l1624 063A                     l1810 01F0  
                   l1802 01E9                     l1466 066A                     l1570 0538  
                   l1562 0523                     l1554 0514                     l1650 064A  
                   l1642 0646                     l1634 0641                     l1626 063D  
                   l1618 0629                     l1820 0224                     l1804 01EE  
                   l1468 066E                     l1900 04B1                     l1580 0557  
                   l1572 053C                     l1564 0528                     l1556 0518  
                   l1660 0654                     l1652 064B                     l1644 0647  
                   l1636 0643                     l1628 063E                     l1830 0276  
                   l1822 0231                     l1814 020C                     l1910 04C5  
                   l1902 04B6                     l1574 0540                     l1566 052E  
                   l1582 055D                     l1558 051D                     l1670 065E  
                   l1662 0656                     l1654 064C                     l1646 0648  
                   l1638 0644                     l1760 05F8                     l1832 027E  
                   l1824 0239                     l1816 0216                     l1840 02A4  
                   l1920 04DB                     l1912 04C7                     l1904 04B8  
                   l1584 0562                     l1576 054A                     l1568 0531  
                   l1672 065F                     l1664 0659                     l1656 064D  
                   l1648 0649                     l1770 0617                     l1762 05FF  
                   l1834 028B                     l1818 021C                     l1826 023F  
                   l1842 02B8                     l1850 06B5                     l1930 04FE  
                   l1922 04DF                     l1914 04CD                     l1906 04BC  
                   l1586 0567                     l1578 0550                     l1674 0662  
                   l1666 065A                     l1658 0650                     l1772 061E  
                   l1764 0603                     l1756 05ED                     l1836 0293  
                   l1828 0246                     l1780 0189                     l1852 06B9  
                   l1924 04F0                     l1916 04D0                     l1932 0504  
                   l1908 04C1                     l1940 0433                     l1668 065B  
                   l1870 03C9                     l1862 03B3                     l1766 0607  
                   l1758 05F5                     l1774 0624                     l1838 0299  
                   l1782 018F                     l1790 01B5                     l1854 06BA  
                   l1934 0509                     l1926 04F6                     l1918 04D7  
                   l1942 0491                     l1950 06F3                     l1880 03EA  
                   l1872 03CC                     l1864 03B4                     l1768 0611  
                   l1784 0197                     l1856 06BE                     l1960 05D0  
                   l1936 050E                     l1928 04F7                     l1944 0499  
                   l1952 06F7                     l1874 03D4                     l1866 03B8  
                   l1794 01B6                     l1786 01A6                     l1778 0188  
                   l1858 06CC                     l1962 05DC                     l1946 04A1  
                   l1954 06FB                     l1970 003A                     l1892 042E  
                   l1884 040F                     l1876 03DD                     l1868 03C1  
                   l1796 01D3                     l1788 01AE                     l1964 05E8  
                   l1948 06F2                     l1980 0076                     l1972 004E  
                   l1886 041B                     l1878 03E5                     l1798 01E1  
                   l1958 05B0                     l1990 00A4                     l1982 007C  
                   l1974 0054                     l1888 0422                     l1896 04AA  
                   l1992 00B0                     l1984 008A                     l1976 0062  
                   l1968 002C                     l1898 04AD                     l1994 00B9  
                   l1986 0090                     l1978 0068                     l1996 00BF  
                   l1988 009E                     l1998 00CB                     ?_isr 0070  
                   STR_1 039A                     STR_2 0333                     STR_3 0310  
                   STR_4 0335                     STR_5 0358                     STR_6 037B  
                   STR_7 03AD                     STR_8 03AD                     u1000 0676  
                   u1001 0675                     u1010 068C                     u1011 068B  
                   u1200 052E                     u1201 052D                     u1220 0540  
                   u1221 053F                     u1230 054A                     u1231 0549  
                   u1215 0532                     u1410 0624                     u1250 055D  
                   u1411 0623                     u1251 055C                     u1235 0546  
                   u1500 02A4                     u1420 018F                     u1260 0562  
                   u1180 0518                     u1405 0618                     u1501 02A3  
                   u1421 018E                     u1261 0561                     u1245 0551  
                   u1181 0517                     u1510 02B8                     u1430 0197  
                   u1190 0523                     u1511 02B7                     u1431 0196  
                   u1191 0522                     u1520 03C1                     u1360 05F5  
                   u1440 01E5                     u1600 04CD                     u1521 03C0  
                   u1361 05F4                     u1441 01E4                     u1601 04CC  
                   u1530 03C9                     u1450 020B                     u1531 03C8  
                   u1451 020A                     u1540 03D4                     u1380 0607  
                   u1460 0216                     u1620 04DF                     u1700 00CB  
                   u1541 03D3                     u1381 0606                     u1461 0215  
                   u1621 04DE                     u1701 00CA                     u1550 03E5  
                   u1390 0611                     u1470 021C                     u1710 00DA  
                   u1551 03E4                     u1391 0610                     u1375 05F9  
                   u1471 021B                     u1455 0207                     u1615 04D1  
                   u1711 00D9                     u1560 041B                     u1480 0224  
                   u1640 04F0                     u1720 00E0                     u1561 041A  
                   u1481 0223                     u1641 04EF                     u1721 00DF  
                   u1570 0422                     u1490 027E                     u1730 00EC  
                   u1571 0421                     u1395 060D                     u1491 027D  
                   u1635 04E0                     u1731 00EB                     u1660 0504  
                   u1580 04B1                     u1740 00FB                     u1661 0503  
                   u1645 04EC                     u1581 04B0                     u1741 00FA  
                   u1670 0509                     u1590 04BC                     u1750 0101  
                   u1671 0508                     u1655 04F8                     u1591 04BB  
                   u1751 0100                     u1807 0084                     u1760 0107  
                   u1680 00B0                     u1761 0106                     u1681 00AF  
                   u1817 0098                     u1690 00BF                     u1827 0163  
                   u1691 00BE                     u1777 0034                     u1787 005C  
                   u1797 0070                     _RBIF 0058                     _RCIF 0065  
                   _TXIF 0064                     _WPUB 0095                     _con1 00A0  
                   _atoi 03B0                     _cont 00AC                     _main 070A  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 0513  
        __end_of___awmod 056C                    _ANSEL 0188          ___awdiv@divisor 0072  
        __end_of___lwdiv 05B0                    i1l108 06E8          __end_of___lwmod 0629  
        ___awdiv@counter 0020                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009          __end_of__doprnt 02BB  
                  _TRISA 0085                    _TRISD 0088                    u67_20 06D7  
                  u67_21 06D6                    u68_20 06DD                    u68_21 06DC  
                  u69_20 06E4                    u69_21 06E3                    _TXREG 0019  
        __end_of_dpowers 0310          __end_of_isdigit 0736          __end_of_mensaje 0185  
                  _valor 00A6                    atoi@a 0023                    _setup 0629  
                  atoi@s 0025                    _putch 0736                    fpbase 0028  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 06D3          __initialization 000F             __end_of_atoi 0433  
           __end_of_main 0724                   ??_atoi 0020                   ??_main 0069  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   i1l1260 06D3                   i1l1270 06E7  
                 i1l1262 06D7                   i1l1264 06DD                   i1l1266 06E0  
                 i1l1268 06E4                   _SPBRGH 009A         __end_of__fptable 002C  
   __size_of_concatenado 003D         __end_of_division 04AA                   ___wmul 068D  
              ??___awdiv 0076                ??___awmod 0076                ??___lwdiv 0076  
              ??___lwmod 0024                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072             __doprnt@flag 002B          ___awmod@counter 0077  
                 _printf 06EF             __doprnt@prec 002C                   _strcat 0664  
                 fptable 0023                   fptotal 0002                ??_isdigit 0072  
              ??_mensaje 00A7                   saved_w 007E                ??_sprintf 0034  
__end_of__initialization 001F           __pcstackCOMMON 0070            __end_of_setup 0664  
          __end_of_putch 073F            division@valor 0024           _OPTION_REGbits 0081  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0072  
                ??_putch 0073               __pbssBANK0 006A               __pbssBANK1 00A0  
             __pmaintext 070A                  ?___wmul 0072               __pintentry 0004  
                ?_printf 0031                  ?_strcat 0072               __stringtab 0300  
              ?_division 0024                  ___awdiv 04AA                  ___awmod 0513  
        __size_of___wmul 0025                  ___lwdiv 056C                  ___lwmod 05ED  
                __doprnt 0185                  __ptext1 0629                  __ptext2 002C  
                __ptext3 06EF                  __ptext4 0433                  __ptext5 0513  
                __ptext6 04AA                  __ptext7 05B0                  __ptext8 0664  
                __ptext9 06B2          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0306                  _isdigit 0724             __size_of_isr 001C  
                _mensaje 002C         ___awmod@dividend 0074                  _residuo 006C  
                _sprintf 06B2     end_of_initialization 001F               ??_division 0026  
              _RCSTAbits 0018                  printf@f 0036                _PORTBbits 0006  
              _TRISBbits 0086            ??_concatenado 003E                _TXSTAbits 0098  
       concatenado@BFFR1 0053         concatenado@BFFR2 003F           __end_of___wmul 06B2  
            _BAUDCTLbits 0187           __end_of_printf 070A           __end_of_strcat 068D  
    start_initialization 000F              __end_of_isr 06EF                 ??___wmul 0076  
    __end_of_concatenado 05ED              __doprnt@val 002D                 ??_printf 0033  
               ??_strcat 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A7        __size_of__fptable 0009  
              __doprnt@c 002F                __doprnt@f 0026        __size_of_division 0077  
              __pnvBANK1 00AC         ___lwdiv@dividend 0074                __pfunctab 0023  
               ?___awdiv 0072                 ?___awmod 0072                 ?___lwdiv 0072  
               ?___lwmod 0020                 ?__doprnt 0026                __pstrings 0300  
               ?_isdigit 0070                 ?_mensaje 0070         ___lwdiv@quotient 0077  
               ?_sprintf 0031           __size_of_setup 003B           __size_of_putch 0009  
      interrupt_function 0004           ___wmul@product 0076                 _IOCBbits 0096  
            _concatenado 05B0                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 0305        ___wmul@multiplier 0072         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0306              _isdigit$934 0072  
               __fptable 0023               strcat@from 0072         __size_of_isdigit 0012  
       __size_of_mensaje 0159          ___lwdiv@divisor 0072          ___lwdiv@counter 0079  
               __ptext10 0185                 __ptext11 0736                 __ptext12 05ED  
               __ptext13 056C                 __ptext14 03B0                 __ptext15 0724  
               __ptext16 068D                 __ptext17 06D3                 _division 0433  
               _completo 007A         __size_of_sprintf 0021            __size_of_atoi 0083  
          __size_of_main 001A                 atoi@sign 0022                 fp__putch 0029  
              putch@dato 0072               _INTCONbits 000B              _seleccionar 007B  
               isdigit@c 0073                 intlevel1 0023                sprintf@ap 0037  
              sprintf@pb 0038                sprintf@wh 0036         ___lwmod@dividend 0022  
              stringcode 0300               _OSCCONbits 008F                 printf@ap 0035  
               printf@pb 0037                 sprintf@f 0031                 strcat@cp 0075  
               strcat@to 0074          ___lwmod@divisor 0020          ___lwmod@counter 0025  
               stringdir 0300                 stringtab 0300             ?_concatenado 003A  
