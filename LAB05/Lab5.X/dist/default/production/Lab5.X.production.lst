

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 15 20:30:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	functab,global,class=ENTRY,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0300                     __pstrings:
   228  0300                     stringtab:
   229  0300                     __stringtab:
   230  0300                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0300                     stringdir:
   234  0300  3003               	movlw	high stringdir
   235  0301  008A               	movwf	10
   236  0302  0804               	movf	4,w
   237  0303  0A84               	incf	4,f
   238  0304  0782               	addwf	2,f
   239  0305                     __stringbase:
   240  0305  3400               	retlw	0
   241  0306                     __end_of__stringtab:
   242  0306                     _dpowers:
   243  0306  3401               	retlw	1
   244  0307  3400               	retlw	0
   245  0308  340A               	retlw	10
   246  0309  3400               	retlw	0
   247  030A  3464               	retlw	100
   248  030B  3400               	retlw	0
   249  030C  34E8               	retlw	232
   250  030D  3403               	retlw	3
   251  030E  3410               	retlw	16
   252  030F  3427               	retlw	39
   253  0310                     __end_of_dpowers:
   254  001A                     _RCREG	set	26
   255  0019                     _TXREG	set	25
   256  000C                     _PIR1bits	set	12
   257  0018                     _RCSTAbits	set	24
   258  0009                     _PORTE	set	9
   259  0007                     _PORTC	set	7
   260  0006                     _PORTB	set	6
   261  0005                     _PORTA	set	5
   262  000B                     _INTCONbits	set	11
   263  0008                     _PORTD	set	8
   264  0006                     _PORTBbits	set	6
   265  0065                     _RCIF	set	101
   266  0064                     _TXIF	set	100
   267  0058                     _RBIF	set	88
   268  009A                     _SPBRGH	set	154
   269  0099                     _SPBRG	set	153
   270  0098                     _TXSTAbits	set	152
   271  008C                     _PIE1bits	set	140
   272  0096                     _IOCBbits	set	150
   273  0095                     _WPUB	set	149
   274  0081                     _OPTION_REGbits	set	129
   275  008F                     _OSCCONbits	set	143
   276  0088                     _TRISD	set	136
   277  0086                     _TRISBbits	set	134
   278  0085                     _TRISA	set	133
   279  0187                     _BAUDCTLbits	set	391
   280  0189                     _ANSELH	set	393
   281  0188                     _ANSEL	set	392
   282  0310                     STR_3:
   283  0310  340D               	retlw	13
   284  0311  3449               	retlw	73	;'I'
   285  0312  346E               	retlw	110	;'n'
   286  0313  3467               	retlw	103	;'g'
   287  0314  3472               	retlw	114	;'r'
   288  0315  3465               	retlw	101	;'e'
   289  0316  3473               	retlw	115	;'s'
   290  0317  3465               	retlw	101	;'e'
   291  0318  3420               	retlw	32	;' '
   292  0319  3465               	retlw	101	;'e'
   293  031A  346C               	retlw	108	;'l'
   294  031B  3420               	retlw	32	;' '
   295  031C  3476               	retlw	118	;'v'
   296  031D  3461               	retlw	97	;'a'
   297  031E  346C               	retlw	108	;'l'
   298  031F  346F               	retlw	111	;'o'
   299  0320  3472               	retlw	114	;'r'
   300  0321  3420               	retlw	32	;' '
   301  0322  3464               	retlw	100	;'d'
   302  0323  3465               	retlw	101	;'e'
   303  0324  3420               	retlw	32	;' '
   304  0325  3463               	retlw	99	;'c'
   305  0326  3465               	retlw	101	;'e'
   306  0327  346E               	retlw	110	;'n'
   307  0328  3474               	retlw	116	;'t'
   308  0329  3465               	retlw	101	;'e'
   309  032A  346E               	retlw	110	;'n'
   310  032B  3461               	retlw	97	;'a'
   311  032C  343A               	retlw	58	;':'
   312  032D  3420               	retlw	32	;' '
   313  032E  3428               	retlw	40	;'('
   314  032F  3430               	retlw	48	;'0'
   315  0330  342D               	retlw	45	;'-'
   316  0331  3432               	retlw	50	;'2'
   317  0332  3429               	retlw	41	;')'
   318  0333  340D               	retlw	13
   319  0334  3400               	retlw	0
   320  0335                     STR_4:
   321  0335  3449               	retlw	73	;'I'
   322  0336  346E               	retlw	110	;'n'
   323  0337  3467               	retlw	103	;'g'
   324  0338  3472               	retlw	114	;'r'
   325  0339  3465               	retlw	101	;'e'
   326  033A  3473               	retlw	115	;'s'
   327  033B  3465               	retlw	101	;'e'
   328  033C  3420               	retlw	32	;' '
   329  033D  3465               	retlw	101	;'e'
   330  033E  346C               	retlw	108	;'l'
   331  033F  3420               	retlw	32	;' '
   332  0340  3476               	retlw	118	;'v'
   333  0341  3461               	retlw	97	;'a'
   334  0342  346C               	retlw	108	;'l'
   335  0343  346F               	retlw	111	;'o'
   336  0344  3472               	retlw	114	;'r'
   337  0345  3420               	retlw	32	;' '
   338  0346  3464               	retlw	100	;'d'
   339  0347  3465               	retlw	101	;'e'
   340  0348  3420               	retlw	32	;' '
   341  0349  3464               	retlw	100	;'d'
   342  034A  3465               	retlw	101	;'e'
   343  034B  3463               	retlw	99	;'c'
   344  034C  3465               	retlw	101	;'e'
   345  034D  346E               	retlw	110	;'n'
   346  034E  3461               	retlw	97	;'a'
   347  034F  343A               	retlw	58	;':'
   348  0350  3420               	retlw	32	;' '
   349  0351  3428               	retlw	40	;'('
   350  0352  3430               	retlw	48	;'0'
   351  0353  342D               	retlw	45	;'-'
   352  0354  3435               	retlw	53	;'5'
   353  0355  3429               	retlw	41	;')'
   354  0356  340D               	retlw	13
   355  0357  3400               	retlw	0
   356  0358                     STR_5:
   357  0358  3449               	retlw	73	;'I'
   358  0359  346E               	retlw	110	;'n'
   359  035A  3467               	retlw	103	;'g'
   360  035B  3472               	retlw	114	;'r'
   361  035C  3465               	retlw	101	;'e'
   362  035D  3473               	retlw	115	;'s'
   363  035E  3465               	retlw	101	;'e'
   364  035F  3420               	retlw	32	;' '
   365  0360  3465               	retlw	101	;'e'
   366  0361  346C               	retlw	108	;'l'
   367  0362  3420               	retlw	32	;' '
   368  0363  3476               	retlw	118	;'v'
   369  0364  3461               	retlw	97	;'a'
   370  0365  346C               	retlw	108	;'l'
   371  0366  346F               	retlw	111	;'o'
   372  0367  3472               	retlw	114	;'r'
   373  0368  3420               	retlw	32	;' '
   374  0369  3464               	retlw	100	;'d'
   375  036A  3465               	retlw	101	;'e'
   376  036B  3420               	retlw	32	;' '
   377  036C  3475               	retlw	117	;'u'
   378  036D  346E               	retlw	110	;'n'
   379  036E  3469               	retlw	105	;'i'
   380  036F  3464               	retlw	100	;'d'
   381  0370  3461               	retlw	97	;'a'
   382  0371  3464               	retlw	100	;'d'
   383  0372  343A               	retlw	58	;':'
   384  0373  3420               	retlw	32	;' '
   385  0374  3428               	retlw	40	;'('
   386  0375  3430               	retlw	48	;'0'
   387  0376  342D               	retlw	45	;'-'
   388  0377  3435               	retlw	53	;'5'
   389  0378  3429               	retlw	41	;')'
   390  0379  340D               	retlw	13
   391  037A  3400               	retlw	0
   392  037B                     STR_6:
   393  037B  340D               	retlw	13
   394  037C  3445               	retlw	69	;'E'
   395  037D  346C               	retlw	108	;'l'
   396  037E  3420               	retlw	32	;' '
   397  037F  3476               	retlw	118	;'v'
   398  0380  3461               	retlw	97	;'a'
   399  0381  346C               	retlw	108	;'l'
   400  0382  346F               	retlw	111	;'o'
   401  0383  3472               	retlw	114	;'r'
   402  0384  3420               	retlw	32	;' '
   403  0385  3473               	retlw	115	;'s'
   404  0386  3465               	retlw	101	;'e'
   405  0387  346C               	retlw	108	;'l'
   406  0388  3465               	retlw	101	;'e'
   407  0389  3463               	retlw	99	;'c'
   408  038A  3463               	retlw	99	;'c'
   409  038B  3469               	retlw	105	;'i'
   410  038C  346F               	retlw	111	;'o'
   411  038D  346E               	retlw	110	;'n'
   412  038E  3461               	retlw	97	;'a'
   413  038F  3464               	retlw	100	;'d'
   414  0390  346F               	retlw	111	;'o'
   415  0391  3420               	retlw	32	;' '
   416  0392  3465               	retlw	101	;'e'
   417  0393  3473               	retlw	115	;'s'
   418  0394  343A               	retlw	58	;':'
   419  0395  3420               	retlw	32	;' '
   420  0396  3425               	retlw	37	;'%'
   421  0397  3464               	retlw	100	;'d'
   422  0398  340D               	retlw	13
   423  0399  3400               	retlw	0
   424  039A                     STR_1:
   425  039A  3456               	retlw	86	;'V'
   426  039B  3461               	retlw	97	;'a'
   427  039C  346C               	retlw	108	;'l'
   428  039D  346F               	retlw	111	;'o'
   429  039E  3472               	retlw	114	;'r'
   430  039F  3420               	retlw	32	;' '
   431  03A0  3464               	retlw	100	;'d'
   432  03A1  3465               	retlw	101	;'e'
   433  03A2  3420               	retlw	32	;' '
   434  03A3  3463               	retlw	99	;'c'
   435  03A4  346F               	retlw	111	;'o'
   436  03A5  346E               	retlw	110	;'n'
   437  03A6  3474               	retlw	116	;'t'
   438  03A7  3461               	retlw	97	;'a'
   439  03A8  3464               	retlw	100	;'d'
   440  03A9  346F               	retlw	111	;'o'
   441  03AA  3472               	retlw	114	;'r'
   442  03AB  343A               	retlw	58	;':'
   443  03AC  340D               	retlw	13
   444  03AD  3400               	retlw	0
   445  03AE                     STR_7:
   446  03AE  3425               	retlw	37	;'%'
   447  03AF  3464               	retlw	100	;'d'
   448  03B0  3400               	retlw	0
   449  0333                     
   450                           	psect	cinit
   451  000F                     start_initialization:	
   452                           ; #config settings
   453                           
   454  000F                     __initialization:
   455                           
   456                           ; Clear objects allocated to COMMON
   457  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   458  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  0011  1283               	bcf	3,5	;RP0=0, select bank0
   462  0012  1303               	bcf	3,6	;RP1=0, select bank0
   463  0013  01E9               	clrf	__pbssBANK0& (0+127)
   464  0014  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   465  0015  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   466  0016  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469  0017  1683               	bsf	3,5	;RP0=1, select bank1
   470  0018  1303               	bcf	3,6	;RP1=0, select bank1
   471  0019  01A0               	clrf	__pbssBANK1& (0+127)
   472  001A  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   473  001B  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   474  001C  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   475  001D  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   476  001E  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   477  001F  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   478  0020  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   479  0021                     end_of_initialization:	
   480                           ;End of C runtime variable initialization code
   481                           
   482  0021                     __end_of__initialization:
   483  0021  0183               	clrf	3
   484  0022  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssCOMMON
   487  007A                     __pbssCOMMON:
   488  007A                     _residuo:
   489  007A                     	ds	1
   490  007B                     _d:
   491  007B                     	ds	1
   492                           
   493                           	psect	bssBANK0
   494  0069                     __pbssBANK0:
   495  0069                     _completo:
   496  0069                     	ds	1
   497  006A                     _cc:
   498  006A                     	ds	1
   499  006B                     _dd:
   500  006B                     	ds	1
   501  006C                     _seleccionar:
   502  006C                     	ds	1
   503                           
   504                           	psect	bssBANK1
   505  00A0                     __pbssBANK1:
   506  00A0                     _cont:
   507  00A0                     	ds	2
   508  00A2                     _con1:
   509  00A2                     	ds	1
   510  00A3                     _vv:
   511  00A3                     	ds	1
   512  00A4                     _uu:
   513  00A4                     	ds	1
   514  00A5                     _u:
   515  00A5                     	ds	1
   516  00A6                     _c:
   517  00A6                     	ds	1
   518  00A7                     _valor:
   519  00A7                     	ds	1
   520                           
   521                           	psect	cstackBANK1
   522  00A8                     __pcstackBANK1:
   523  00A8                     ??_mensaje:
   524                           
   525                           ; 1 bytes @ 0x0
   526  00A8                     	ds	5
   527                           
   528                           	psect	cstackCOMMON
   529  0070                     __pcstackCOMMON:
   530  0070                     ?_isdigit:
   531  0070                     ?_setup:	
   532                           ; 1 bit 
   533                           
   534  0070                     ?_mensaje:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_division:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_isr:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_isr:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549                           
   550                           ; 1 bytes @ 0x0
   551  0070                     	ds	2
   552  0072                     ??_setup:
   553  0072                     ?_strcat:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  0072                     ??_isdigit:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  0072                     ?_putch:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  0072                     ?___wmul:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     ?___awdiv:	
   566                           ; 2 bytes @ 0x2
   567                           
   568  0072                     ?___awmod:	
   569                           ; 2 bytes @ 0x2
   570                           
   571  0072                     ?___lwdiv:	
   572                           ; 2 bytes @ 0x2
   573                           
   574  0072                     putch@dato:	
   575                           ; 2 bytes @ 0x2
   576                           
   577  0072                     _isdigit$934:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0072                     strcat@from:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     ___wmul@multiplier:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     ___awdiv@divisor:	
   587                           ; 2 bytes @ 0x2
   588                           
   589  0072                     ___awmod@divisor:	
   590                           ; 2 bytes @ 0x2
   591                           
   592  0072                     ___lwdiv@divisor:	
   593                           ; 2 bytes @ 0x2
   594                           
   595                           
   596                           ; 2 bytes @ 0x2
   597  0072                     	ds	1
   598  0073                     ??_strcat:
   599  0073                     ??_putch:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     isdigit@c:	
   603                           ; 1 bytes @ 0x3
   604                           
   605                           
   606                           ; 1 bytes @ 0x3
   607  0073                     	ds	1
   608  0074                     strcat@to:
   609  0074                     ___wmul@multiplicand:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     ___awdiv@dividend:	
   613                           ; 2 bytes @ 0x4
   614                           
   615  0074                     ___awmod@dividend:	
   616                           ; 2 bytes @ 0x4
   617                           
   618  0074                     ___lwdiv@dividend:	
   619                           ; 2 bytes @ 0x4
   620                           
   621                           
   622                           ; 2 bytes @ 0x4
   623  0074                     	ds	1
   624  0075                     strcat@cp:
   625                           
   626                           ; 1 bytes @ 0x5
   627  0075                     	ds	1
   628  0076                     ??___wmul:
   629  0076                     ??___awdiv:	
   630                           ; 1 bytes @ 0x6
   631                           
   632  0076                     ??___awmod:	
   633                           ; 1 bytes @ 0x6
   634                           
   635  0076                     ??___lwdiv:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0076                     ___wmul@product:	
   639                           ; 1 bytes @ 0x6
   640                           
   641                           
   642                           ; 2 bytes @ 0x6
   643  0076                     	ds	1
   644  0077                     ___awmod@counter:
   645  0077                     ___lwdiv@quotient:	
   646                           ; 1 bytes @ 0x7
   647                           
   648                           
   649                           ; 2 bytes @ 0x7
   650  0077                     	ds	1
   651  0078                     ?_atoi:
   652  0078                     ___awmod@sign:	
   653                           ; 2 bytes @ 0x8
   654                           
   655                           
   656                           ; 1 bytes @ 0x8
   657  0078                     	ds	1
   658  0079                     division@valor:
   659  0079                     ___lwdiv@counter:	
   660                           ; 1 bytes @ 0x9
   661                           
   662                           
   663                           ; 1 bytes @ 0x9
   664  0079                     	ds	1
   665  007A                     ??_main:
   666                           
   667                           	psect	cstackBANK0
   668  0020                     __pcstackBANK0:	
   669                           ; 1 bytes @ 0xA
   670                           
   671  0020                     ??_atoi:
   672  0020                     ?___lwmod:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0020                     ___awdiv@counter:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0020                     ___lwmod@divisor:	
   679                           ; 1 bytes @ 0x0
   680                           
   681                           
   682                           ; 2 bytes @ 0x0
   683  0020                     	ds	1
   684  0021                     ___awdiv@sign:
   685                           
   686                           ; 1 bytes @ 0x1
   687  0021                     	ds	1
   688  0022                     atoi@sign:
   689  0022                     ___awdiv@quotient:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0022                     ___lwmod@dividend:	
   693                           ; 2 bytes @ 0x2
   694                           
   695                           
   696                           ; 2 bytes @ 0x2
   697  0022                     	ds	1
   698  0023                     atoi@a:
   699                           
   700                           ; 2 bytes @ 0x3
   701  0023                     	ds	1
   702  0024                     ??_division:
   703  0024                     ??___lwmod:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 1 bytes @ 0x4
   708  0024                     	ds	1
   709  0025                     ___lwmod@counter:
   710  0025                     atoi@s:	
   711                           ; 1 bytes @ 0x5
   712                           
   713                           
   714                           ; 1 bytes @ 0x5
   715  0025                     	ds	1
   716  0026                     ?__doprnt:
   717  0026                     __doprnt@f:	
   718                           ; 2 bytes @ 0x6
   719                           
   720                           
   721                           ; 1 bytes @ 0x6
   722  0026                     	ds	1
   723  0027                     __doprnt@ap:
   724                           
   725                           ; 1 bytes @ 0x7
   726  0027                     	ds	1
   727  0028                     ??__doprnt:
   728                           
   729                           ; 1 bytes @ 0x8
   730  0028                     	ds	3
   731  002B                     __doprnt@flag:
   732                           
   733                           ; 1 bytes @ 0xB
   734  002B                     	ds	1
   735  002C                     __doprnt@prec:
   736                           
   737                           ; 1 bytes @ 0xC
   738  002C                     	ds	1
   739  002D                     __doprnt@val:
   740                           
   741                           ; 2 bytes @ 0xD
   742  002D                     	ds	2
   743  002F                     __doprnt@c:
   744                           
   745                           ; 1 bytes @ 0xF
   746  002F                     	ds	1
   747  0030                     __doprnt@pb:
   748                           
   749                           ; 1 bytes @ 0x10
   750  0030                     	ds	1
   751  0031                     ?_printf:
   752  0031                     ?_sprintf:	
   753                           ; 2 bytes @ 0x11
   754                           
   755  0031                     sprintf@f:	
   756                           ; 2 bytes @ 0x11
   757                           
   758                           
   759                           ; 1 bytes @ 0x11
   760  0031                     	ds	2
   761  0033                     ??_printf:
   762                           
   763                           ; 1 bytes @ 0x13
   764  0033                     	ds	1
   765  0034                     ??_sprintf:
   766                           
   767                           ; 1 bytes @ 0x14
   768  0034                     	ds	1
   769  0035                     printf@ap:
   770                           
   771                           ; 1 bytes @ 0x15
   772  0035                     	ds	1
   773  0036                     printf@f:
   774  0036                     sprintf@wh:	
   775                           ; 1 bytes @ 0x16
   776                           
   777                           
   778                           ; 1 bytes @ 0x16
   779  0036                     	ds	1
   780  0037                     sprintf@ap:
   781  0037                     printf@pb:	
   782                           ; 1 bytes @ 0x17
   783                           
   784                           
   785                           ; 2 bytes @ 0x17
   786  0037                     	ds	1
   787  0038                     sprintf@pb:
   788                           
   789                           ; 2 bytes @ 0x18
   790  0038                     	ds	2
   791  003A                     ?_concatenado:
   792  003A                     concatenado@a:	
   793                           ; 2 bytes @ 0x1A
   794                           
   795                           
   796                           ; 2 bytes @ 0x1A
   797  003A                     	ds	2
   798  003C                     concatenado@b:
   799                           
   800                           ; 2 bytes @ 0x1C
   801  003C                     	ds	2
   802  003E                     ??_concatenado:
   803                           
   804                           ; 1 bytes @ 0x1E
   805  003E                     	ds	1
   806  003F                     concatenado@BFFR2:
   807                           
   808                           ; 20 bytes @ 0x1F
   809  003F                     	ds	20
   810  0053                     concatenado@BFFR1:
   811                           
   812                           ; 20 bytes @ 0x33
   813  0053                     	ds	20
   814  0067                     concatenado@c:
   815                           
   816                           ; 2 bytes @ 0x47
   817  0067                     	ds	2
   818                           
   819                           	psect	maintext
   820  070A                     __pmaintext:	
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 63 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : B00/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels required when called:    6
   846 ;; This function calls:
   847 ;;		_mensaje
   848 ;;		_setup
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _main
   856  070A                     _main:
   857  070A                     l2020:	
   858                           ;incstack = 0
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           
   861                           
   862                           ;main.c: 64:     setup();
   863  070A  120A  118A  2629  120A  118A  	fcall	_setup
   864  070F                     l2022:
   865                           
   866                           ;main.c: 66:         PORTD = cont;
   867  070F  1683               	bsf	3,5	;RP0=1, select bank1
   868  0710  1303               	bcf	3,6	;RP1=0, select bank1
   869  0711  0820               	movf	_cont^(0+128),w
   870  0712  1283               	bcf	3,5	;RP0=0, select bank0
   871  0713  1303               	bcf	3,6	;RP1=0, select bank0
   872  0714  0088               	movwf	8	;volatile
   873  0715                     l2024:
   874                           
   875                           ;main.c: 67:         PORTA = seleccionar;
   876  0715  086C               	movf	_seleccionar,w
   877  0716  0085               	movwf	5	;volatile
   878  0717                     l2026:
   879                           
   880                           ;main.c: 68:         mensaje();
   881  0717  120A  118A  202E  120A  118A  	fcall	_mensaje
   882  071C  2F0F               	goto	l2022
   883  071D  120A  118A  280C   	ljmp	start
   884  0720                     __end_of_main:
   885                           
   886                           	psect	text1
   887  0629                     __ptext1:	
   888 ;; *************** function _setup *****************
   889 ;; Defined at:
   890 ;;		line 74 in file "main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _setup
   920  0629                     _setup:
   921  0629                     l1618:	
   922                           ;incstack = 0
   923                           ; Regs used in _setup: [wreg+status,2]
   924                           
   925                           
   926                           ;main.c: 76:     ANSEL = 0;
   927  0629  1683               	bsf	3,5	;RP0=1, select bank3
   928  062A  1703               	bsf	3,6	;RP1=1, select bank3
   929  062B  0188               	clrf	8	;volatile
   930                           
   931                           ;main.c: 77:     ANSELH = 0;
   932  062C  0189               	clrf	9	;volatile
   933                           
   934                           ;main.c: 79:     TRISA = 0;
   935  062D  1683               	bsf	3,5	;RP0=1, select bank1
   936  062E  1303               	bcf	3,6	;RP1=0, select bank1
   937  062F  0185               	clrf	5	;volatile
   938  0630                     l1620:
   939                           
   940                           ;main.c: 81:     TRISBbits.TRISB0 = 1;
   941  0630  1406               	bsf	6,0	;volatile
   942  0631                     l1622:
   943                           
   944                           ;main.c: 82:     TRISBbits.TRISB1 = 1;
   945  0631  1486               	bsf	6,1	;volatile
   946                           
   947                           ;main.c: 84:     TRISD = 0;
   948  0632  0188               	clrf	8	;volatile
   949                           
   950                           ;main.c: 87:     PORTA = 0;
   951  0633  1283               	bcf	3,5	;RP0=0, select bank0
   952  0634  1303               	bcf	3,6	;RP1=0, select bank0
   953  0635  0185               	clrf	5	;volatile
   954                           
   955                           ;main.c: 88:     PORTB = 0;
   956  0636  0186               	clrf	6	;volatile
   957                           
   958                           ;main.c: 89:     PORTC = 0;
   959  0637  0187               	clrf	7	;volatile
   960                           
   961                           ;main.c: 90:     PORTD = 0;
   962  0638  0188               	clrf	8	;volatile
   963                           
   964                           ;main.c: 91:     PORTE = 0;
   965  0639  0189               	clrf	9	;volatile
   966  063A                     l1624:
   967                           
   968                           ;main.c: 93:     OSCCONbits.IRCF0 = 0;
   969  063A  1683               	bsf	3,5	;RP0=1, select bank1
   970  063B  1303               	bcf	3,6	;RP1=0, select bank1
   971  063C  120F               	bcf	15,4	;volatile
   972  063D                     l1626:
   973                           
   974                           ;main.c: 94:     OSCCONbits.IRCF1 = 1;
   975  063D  168F               	bsf	15,5	;volatile
   976  063E                     l1628:
   977                           
   978                           ;main.c: 95:     OSCCONbits.IRCF2 = 1;
   979  063E  170F               	bsf	15,6	;volatile
   980  063F                     l1630:
   981                           
   982                           ;main.c: 96:     OSCCONbits.SCS = 1;
   983  063F  140F               	bsf	15,0	;volatile
   984  0640                     l1632:
   985                           
   986                           ;main.c: 98:     OPTION_REGbits.nRBPU = 0;
   987  0640  1381               	bcf	1,7	;volatile
   988  0641                     l1634:
   989                           
   990                           ;main.c: 99:     WPUB = 0b00000011;
   991  0641  3003               	movlw	3
   992  0642  0095               	movwf	21	;volatile
   993  0643                     l1636:
   994                           
   995                           ;main.c: 100:     IOCBbits.IOCB0 = 1;
   996  0643  1416               	bsf	22,0	;volatile
   997  0644                     l1638:
   998                           
   999                           ;main.c: 101:     IOCBbits.IOCB1 = 1;
  1000  0644  1496               	bsf	22,1	;volatile
  1001  0645                     l1640:
  1002                           
  1003                           ;main.c: 103:     INTCONbits.GIE = 1;
  1004  0645  178B               	bsf	11,7	;volatile
  1005  0646                     l1642:
  1006                           
  1007                           ;main.c: 104:     INTCONbits.PEIE = 1;
  1008  0646  170B               	bsf	11,6	;volatile
  1009  0647                     l1644:
  1010                           
  1011                           ;main.c: 105:     INTCONbits.RBIE = 1;
  1012  0647  158B               	bsf	11,3	;volatile
  1013  0648                     l1646:
  1014                           
  1015                           ;main.c: 106:     INTCONbits.RBIF = 0;
  1016  0648  100B               	bcf	11,0	;volatile
  1017  0649                     l1648:
  1018                           
  1019                           ;main.c: 107:     PIE1bits.RCIE = 0;
  1020  0649  128C               	bcf	12,5	;volatile
  1021  064A                     l1650:
  1022                           
  1023                           ;main.c: 108:     PIE1bits.TXIE = 0;
  1024  064A  120C               	bcf	12,4	;volatile
  1025  064B                     l1652:
  1026                           
  1027                           ;main.c: 110:     TXSTAbits.SYNC = 0;
  1028  064B  1218               	bcf	24,4	;volatile
  1029  064C                     l1654:
  1030                           
  1031                           ;main.c: 111:     TXSTAbits.BRGH = 1;
  1032  064C  1518               	bsf	24,2	;volatile
  1033  064D                     l1656:
  1034                           
  1035                           ;main.c: 112:     BAUDCTLbits.BRG16 = 0;
  1036  064D  1683               	bsf	3,5	;RP0=1, select bank3
  1037  064E  1703               	bsf	3,6	;RP1=1, select bank3
  1038  064F  1187               	bcf	7,3	;volatile
  1039  0650                     l1658:
  1040                           
  1041                           ;main.c: 114:     SPBRG = 25;
  1042  0650  3019               	movlw	25
  1043  0651  1683               	bsf	3,5	;RP0=1, select bank1
  1044  0652  1303               	bcf	3,6	;RP1=0, select bank1
  1045  0653  0099               	movwf	25	;volatile
  1046  0654                     l1660:
  1047                           
  1048                           ;main.c: 115:     SPBRGH = 1;
  1049  0654  3001               	movlw	1
  1050  0655  009A               	movwf	26	;volatile
  1051  0656                     l1662:
  1052                           
  1053                           ;main.c: 117:     RCSTAbits.SPEN = 1;
  1054  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0658  1798               	bsf	24,7	;volatile
  1057  0659                     l1664:
  1058                           
  1059                           ;main.c: 118:     RCSTAbits.RX9 = 0;
  1060  0659  1318               	bcf	24,6	;volatile
  1061  065A                     l1666:
  1062                           
  1063                           ;main.c: 119:     RCSTAbits.CREN = 1;
  1064  065A  1618               	bsf	24,4	;volatile
  1065  065B                     l1668:
  1066                           
  1067                           ;main.c: 120:     TXSTAbits.TX9 = 0;
  1068  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1069  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1070  065D  1318               	bcf	24,6	;volatile
  1071  065E                     l1670:
  1072                           
  1073                           ;main.c: 122:     TXSTAbits.TXEN = 1;
  1074  065E  1698               	bsf	24,5	;volatile
  1075  065F                     l1672:
  1076                           
  1077                           ;main.c: 124:     PIR1bits.RCIF = 0;
  1078  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0661  128C               	bcf	12,5	;volatile
  1081  0662                     l1674:
  1082                           
  1083                           ;main.c: 125:     PIR1bits.TXIF = 0;
  1084  0662  120C               	bcf	12,4	;volatile
  1085  0663                     l119:
  1086  0663  0008               	return
  1087  0664                     __end_of_setup:
  1088                           
  1089                           	psect	text2
  1090  002E                     __ptext2:	
  1091 ;; *************** function _mensaje *****************
  1092 ;; Defined at:
  1093 ;;		line 134 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       0       5       0       0
  1110 ;;      Totals:         0       0       5       0       0
  1111 ;;Total ram usage:        5 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    5
  1114 ;; This function calls:
  1115 ;;		_concatenado
  1116 ;;		_division
  1117 ;;		_printf
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _mensaje
  1125  002E                     _mensaje:
  1126  002E                     l1968:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1129                           
  1130                           
  1131                           ;main.c: 135:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1132  002E  3002               	movlw	2
  1133  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0031  00AA               	movwf	(??_mensaje^(0+128)+2)
  1136  0032  3045               	movlw	69
  1137  0033  00A9               	movwf	(??_mensaje^(0+128)+1)
  1138  0034  30A9               	movlw	169
  1139  0035  00A8               	movwf	??_mensaje^(0+128)
  1140  0036                     u1777:
  1141  0036  0BA8               	decfsz	??_mensaje^(0+128),f
  1142  0037  2836               	goto	u1777
  1143  0038  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1144  0039  2836               	goto	u1777
  1145  003A  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1146  003B  2836               	goto	u1777
  1147  003C                     l1970:
  1148                           
  1149                           ;main.c: 136:     division(cont);
  1150  003C  1683               	bsf	3,5	;RP0=1, select bank1
  1151  003D  1303               	bcf	3,6	;RP1=0, select bank1
  1152  003E  0820               	movf	_cont^(0+128),w
  1153  003F  120A  118A  2434  120A  118A  	fcall	_division
  1154  0044                     l1972:
  1155                           
  1156                           ;main.c: 137:     printf("Valor de contador:\r");
  1157  0044  3095               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1158  0045  120A  118A  26EF  120A  118A  	fcall	_printf
  1159  004A                     l1974:
  1160                           
  1161                           ;main.c: 138:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1162  004A  3002               	movlw	2
  1163  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1164  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1165  004D  00AA               	movwf	(??_mensaje^(0+128)+2)
  1166  004E  3045               	movlw	69
  1167  004F  00A9               	movwf	(??_mensaje^(0+128)+1)
  1168  0050  30A9               	movlw	169
  1169  0051  00A8               	movwf	??_mensaje^(0+128)
  1170  0052                     u1787:
  1171  0052  0BA8               	decfsz	??_mensaje^(0+128),f
  1172  0053  2852               	goto	u1787
  1173  0054  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1174  0055  2852               	goto	u1787
  1175  0056  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1176  0057  2852               	goto	u1787
  1177  0058                     l1976:
  1178                           
  1179                           ;main.c: 139:     TXREG = d;
  1180  0058  087B               	movf	_d,w
  1181  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1182  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1183  005B  0099               	movwf	25	;volatile
  1184  005C                     l1978:
  1185                           
  1186                           ;main.c: 140:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1187  005C  3002               	movlw	2
  1188  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1189  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1190  005F  00AA               	movwf	(??_mensaje^(0+128)+2)
  1191  0060  3045               	movlw	69
  1192  0061  00A9               	movwf	(??_mensaje^(0+128)+1)
  1193  0062  30A9               	movlw	169
  1194  0063  00A8               	movwf	??_mensaje^(0+128)
  1195  0064                     u1797:
  1196  0064  0BA8               	decfsz	??_mensaje^(0+128),f
  1197  0065  2864               	goto	u1797
  1198  0066  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1199  0067  2864               	goto	u1797
  1200  0068  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1201  0069  2864               	goto	u1797
  1202  006A                     l1980:
  1203                           
  1204                           ;main.c: 141:     TXREG = c;
  1205  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1206  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1207  006C  0826               	movf	_c^(0+128),w
  1208  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1209  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1210  006F  0099               	movwf	25	;volatile
  1211  0070                     l1982:
  1212                           
  1213                           ;main.c: 142:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1214  0070  3002               	movlw	2
  1215  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0073  00AA               	movwf	(??_mensaje^(0+128)+2)
  1218  0074  3045               	movlw	69
  1219  0075  00A9               	movwf	(??_mensaje^(0+128)+1)
  1220  0076  30A9               	movlw	169
  1221  0077  00A8               	movwf	??_mensaje^(0+128)
  1222  0078                     u1807:
  1223  0078  0BA8               	decfsz	??_mensaje^(0+128),f
  1224  0079  2878               	goto	u1807
  1225  007A  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1226  007B  2878               	goto	u1807
  1227  007C  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1228  007D  2878               	goto	u1807
  1229  007E                     l1984:
  1230                           
  1231                           ;main.c: 143:     TXREG = u;
  1232  007E  1683               	bsf	3,5	;RP0=1, select bank1
  1233  007F  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0080  0825               	movf	_u^(0+128),w
  1235  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0083  0099               	movwf	25	;volatile
  1238  0084                     l1986:
  1239                           
  1240                           ;main.c: 144:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1241  0084  3002               	movlw	2
  1242  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0087  00AA               	movwf	(??_mensaje^(0+128)+2)
  1245  0088  3045               	movlw	69
  1246  0089  00A9               	movwf	(??_mensaje^(0+128)+1)
  1247  008A  30A9               	movlw	169
  1248  008B  00A8               	movwf	??_mensaje^(0+128)
  1249  008C                     u1817:
  1250  008C  0BA8               	decfsz	??_mensaje^(0+128),f
  1251  008D  288C               	goto	u1817
  1252  008E  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1253  008F  288C               	goto	u1817
  1254  0090  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1255  0091  288C               	goto	u1817
  1256  0092                     l1988:
  1257                           
  1258                           ;main.c: 145:     printf("\r");
  1259  0092  302E               	movlw	(low (((STR_3+35)-__stringbase)| (0+32768)))& (0+255)
  1260  0093  120A  118A  26EF  120A  118A  	fcall	_printf
  1261  0098                     l1990:
  1262                           
  1263                           ;main.c: 147:     printf("\rIngrese el valor de centena: (0-2)\r");
  1264  0098  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1265  0099  120A  118A  26EF  120A  118A  	fcall	_printf
  1266  009E                     l129:
  1267  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1268  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1269  00A0  1E8C               	btfss	12,5	;volatile
  1270  00A1  28A3               	goto	u1681
  1271  00A2  28A4               	goto	u1680
  1272  00A3                     u1681:
  1273  00A3  289E               	goto	l129
  1274  00A4                     u1680:
  1275  00A4                     l1992:
  1276                           
  1277                           ;main.c: 150:         cc = RCREG -48;
  1278  00A4  081A               	movf	26,w	;volatile
  1279  00A5  3ED0               	addlw	208
  1280  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1281  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1282  00A8  00A8               	movwf	??_mensaje^(0+128)
  1283  00A9  0828               	movf	??_mensaje^(0+128),w
  1284  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1285  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1286  00AC  00EA               	movwf	_cc
  1287  00AD                     l1994:	
  1288                           ;main.c: 152:        while(RCREG > '2'){
  1289                           
  1290                           
  1291                           ;main.c: 152:        while(RCREG > '2'){
  1292  00AD  3033               	movlw	51
  1293  00AE  021A               	subwf	26,w	;volatile
  1294  00AF  1803               	skipnc
  1295  00B0  28B2               	goto	u1691
  1296  00B1  28B3               	goto	u1690
  1297  00B2                     u1691:
  1298  00B2  289E               	goto	l129
  1299  00B3                     u1690:
  1300  00B3                     l1996:
  1301                           
  1302                           ;main.c: 156:     printf("Ingrese el valor de decena: (0-5)\r");
  1303  00B3  3030               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1304  00B4  120A  118A  26EF  120A  118A  	fcall	_printf
  1305  00B9                     l136:
  1306  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1307  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1308  00BB  1E8C               	btfss	12,5	;volatile
  1309  00BC  28BE               	goto	u1701
  1310  00BD  28BF               	goto	u1700
  1311  00BE                     u1701:
  1312  00BE  28B9               	goto	l136
  1313  00BF                     u1700:
  1314  00BF                     l1998:
  1315                           
  1316                           ;main.c: 159:          dd = RCREG -48;
  1317  00BF  081A               	movf	26,w	;volatile
  1318  00C0  3ED0               	addlw	208
  1319  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1320  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1321  00C3  00A8               	movwf	??_mensaje^(0+128)
  1322  00C4  0828               	movf	??_mensaje^(0+128),w
  1323  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00C7  00EB               	movwf	_dd
  1326                           
  1327                           ;main.c: 161:         if(cc == 2){
  1328  00C8  3002               	movlw	2
  1329  00C9  066A               	xorwf	_cc,w
  1330  00CA  1D03               	btfss	3,2
  1331  00CB  28CD               	goto	u1711
  1332  00CC  28CE               	goto	u1710
  1333  00CD                     u1711:
  1334  00CD  28D4               	goto	l2004
  1335  00CE                     u1710:
  1336  00CE                     l2002:
  1337                           
  1338                           ;main.c: 162:            while(RCREG > '5'){
  1339  00CE  3036               	movlw	54
  1340  00CF  021A               	subwf	26,w	;volatile
  1341  00D0  1803               	skipnc
  1342  00D1  28D3               	goto	u1721
  1343  00D2  28D4               	goto	u1720
  1344  00D3                     u1721:
  1345  00D3  28B9               	goto	l136
  1346  00D4                     u1720:
  1347  00D4                     l2004:
  1348                           
  1349                           ;main.c: 167:     printf("Ingrese el valor de unidad: (0-5)\r");
  1350  00D4  3053               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1351  00D5  120A  118A  26EF  120A  118A  	fcall	_printf
  1352  00DA                     l144:
  1353  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1354  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1355  00DC  1E8C               	btfss	12,5	;volatile
  1356  00DD  28DF               	goto	u1731
  1357  00DE  28E0               	goto	u1730
  1358  00DF                     u1731:
  1359  00DF  28DA               	goto	l144
  1360  00E0                     u1730:
  1361  00E0                     l2006:
  1362                           
  1363                           ;main.c: 170:         uu = RCREG -48;
  1364  00E0  081A               	movf	26,w	;volatile
  1365  00E1  3ED0               	addlw	208
  1366  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1367  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1368  00E4  00A8               	movwf	??_mensaje^(0+128)
  1369  00E5  0828               	movf	??_mensaje^(0+128),w
  1370  00E6  00A4               	movwf	_uu^(0+128)
  1371                           
  1372                           ;main.c: 172:        if(cc == 2 && dd == 5){
  1373  00E7  3002               	movlw	2
  1374  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1375  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1376  00EA  066A               	xorwf	_cc,w
  1377  00EB  1D03               	btfss	3,2
  1378  00EC  28EE               	goto	u1741
  1379  00ED  28EF               	goto	u1740
  1380  00EE                     u1741:
  1381  00EE  28FB               	goto	l2014
  1382  00EF                     u1740:
  1383  00EF                     l2008:
  1384  00EF  3005               	movlw	5
  1385  00F0  066B               	xorwf	_dd,w
  1386  00F1  1D03               	btfss	3,2
  1387  00F2  28F4               	goto	u1751
  1388  00F3  28F5               	goto	u1750
  1389  00F4                     u1751:
  1390  00F4  28FB               	goto	l2014
  1391  00F5                     u1750:
  1392  00F5                     l2012:
  1393                           
  1394                           ;main.c: 173:            while(RCREG > '5'){
  1395  00F5  3036               	movlw	54
  1396  00F6  021A               	subwf	26,w	;volatile
  1397  00F7  1803               	skipnc
  1398  00F8  28FA               	goto	u1761
  1399  00F9  28FB               	goto	u1760
  1400  00FA                     u1761:
  1401  00FA  28DA               	goto	l144
  1402  00FB                     u1760:
  1403  00FB                     l2014:
  1404                           
  1405                           ;main.c: 177:       con1 = concatenado(cc, dd);
  1406  00FB  086A               	movf	_cc,w
  1407  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1408  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1409  00FE  00A8               	movwf	??_mensaje^(0+128)
  1410  00FF  01A9               	clrf	(??_mensaje^(0+128)+1)
  1411  0100  0828               	movf	??_mensaje^(0+128),w
  1412  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0103  00BA               	movwf	concatenado@a
  1415  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0106  0829               	movf	(??_mensaje+1)^(0+128),w
  1418  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0109  00BB               	movwf	concatenado@a+1
  1421  010A  086B               	movf	_dd,w
  1422  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1423  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1424  010D  00AA               	movwf	(??_mensaje+2)^(0+128)
  1425  010E  01AB               	clrf	((??_mensaje+2)^(0+128)+1)
  1426  010F  082A               	movf	(??_mensaje+2)^(0+128),w
  1427  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0112  00BC               	movwf	concatenado@b
  1430  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0115  082B               	movf	(??_mensaje+3)^(0+128),w
  1433  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0118  00BD               	movwf	concatenado@b+1
  1436  0119  120A  118A  25B0  120A  118A  	fcall	_concatenado
  1437  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1438  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0120  083A               	movf	?_concatenado,w
  1440  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0123  00AC               	movwf	(??_mensaje+4)^(0+128)
  1443  0124  082C               	movf	(??_mensaje+4)^(0+128),w
  1444  0125  00A2               	movwf	_con1^(0+128)
  1445                           
  1446                           ;main.c: 178:       completo = concatenado(con1, uu);
  1447  0126  0822               	movf	_con1^(0+128),w
  1448  0127  00A8               	movwf	??_mensaje^(0+128)
  1449  0128  01A9               	clrf	(??_mensaje^(0+128)+1)
  1450  0129  0828               	movf	??_mensaje^(0+128),w
  1451  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1452  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1453  012C  00BA               	movwf	concatenado@a
  1454  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1455  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1456  012F  0829               	movf	(??_mensaje+1)^(0+128),w
  1457  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0132  00BB               	movwf	concatenado@a+1
  1460  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0135  0824               	movf	_uu^(0+128),w
  1463  0136  00AA               	movwf	(??_mensaje+2)^(0+128)
  1464  0137  01AB               	clrf	((??_mensaje+2)^(0+128)+1)
  1465  0138  082A               	movf	(??_mensaje+2)^(0+128),w
  1466  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1467  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1468  013B  00BC               	movwf	concatenado@b
  1469  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1470  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1471  013E  082B               	movf	(??_mensaje+3)^(0+128),w
  1472  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0141  00BD               	movwf	concatenado@b+1
  1475  0142  120A  118A  25B0  120A  118A  	fcall	_concatenado
  1476  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0149  083A               	movf	?_concatenado,w
  1479  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1480  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1481  014C  00AC               	movwf	(??_mensaje+4)^(0+128)
  1482  014D  082C               	movf	(??_mensaje+4)^(0+128),w
  1483  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1484  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0150  00E9               	movwf	_completo
  1486  0151                     l2016:
  1487                           
  1488                           ;main.c: 179:       _delay((unsigned long)((250)*(4000000/4000.0)));
  1489  0151  3002               	movlw	2
  1490  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1492  0154  00AA               	movwf	(??_mensaje^(0+128)+2)
  1493  0155  3045               	movlw	69
  1494  0156  00A9               	movwf	(??_mensaje^(0+128)+1)
  1495  0157  30A9               	movlw	169
  1496  0158  00A8               	movwf	??_mensaje^(0+128)
  1497  0159                     u1827:
  1498  0159  0BA8               	decfsz	??_mensaje^(0+128),f
  1499  015A  2959               	goto	u1827
  1500  015B  0BA9               	decfsz	(??_mensaje^(0+128)+1),f
  1501  015C  2959               	goto	u1827
  1502  015D  0BAA               	decfsz	(??_mensaje^(0+128)+2),f
  1503  015E  2959               	goto	u1827
  1504  015F                     l2018:
  1505                           
  1506                           ;main.c: 180:       printf("\rEl valor seleccionado es: %d\r", completo);
  1507  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0161  0869               	movf	_completo,w
  1510  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1512  0164  00A8               	movwf	??_mensaje^(0+128)
  1513  0165  01A9               	clrf	(??_mensaje^(0+128)+1)
  1514  0166  0828               	movf	??_mensaje^(0+128),w
  1515  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0169  00B1               	movwf	?_printf
  1518  016A  1683               	bsf	3,5	;RP0=1, select bank1
  1519  016B  1303               	bcf	3,6	;RP1=0, select bank1
  1520  016C  0829               	movf	(??_mensaje+1)^(0+128),w
  1521  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1522  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1523  016F  00B2               	movwf	?_printf+1
  1524  0170  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1525  0171  120A  118A  26EF  120A  118A  	fcall	_printf
  1526                           
  1527                           ;main.c: 181:       cont = completo;
  1528  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0178  0869               	movf	_completo,w
  1531  0179  1683               	bsf	3,5	;RP0=1, select bank1
  1532  017A  1303               	bcf	3,6	;RP1=0, select bank1
  1533  017B  00A8               	movwf	??_mensaje^(0+128)
  1534  017C  01A9               	clrf	(??_mensaje^(0+128)+1)
  1535  017D  0828               	movf	??_mensaje^(0+128),w
  1536  017E  00A0               	movwf	_cont^(0+128)
  1537  017F  0829               	movf	(??_mensaje+1)^(0+128),w
  1538  0180  00A1               	movwf	(_cont+1)^(0+128)
  1539                           
  1540                           ;main.c: 182:       seleccionar = completo;
  1541  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0183  0869               	movf	_completo,w
  1544  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0186  00A8               	movwf	??_mensaje^(0+128)
  1547  0187  0828               	movf	??_mensaje^(0+128),w
  1548  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1550  018A  00EC               	movwf	_seleccionar
  1551  018B                     l151:
  1552  018B  0008               	return
  1553  018C                     __end_of_mensaje:
  1554                           
  1555                           	psect	text3
  1556  06EF                     __ptext3:	
  1557 ;; *************** function _printf *****************
  1558 ;; Defined at:
  1559 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  f               1    wreg     PTR const unsigned char 
  1562 ;;		 -> STR_6(31), STR_5(35), STR_4(35), STR_3(37), 
  1563 ;;		 -> STR_2(2), STR_1(20), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1566 ;;		 -> STR_6(31), STR_5(35), STR_4(35), STR_3(37), 
  1567 ;;		 -> STR_2(2), STR_1(20), 
  1568 ;;  pb              2   23[BANK0 ] struct __prbuf
  1569 ;;  ap              1   21[BANK0 ] PTR void [1]
  1570 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2   17[BANK0 ] int 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       2       0       0       0
  1581 ;;      Locals:         0       4       0       0       0
  1582 ;;      Temps:          0       2       0       0       0
  1583 ;;      Totals:         0       8       0       0       0
  1584 ;;Total ram usage:        8 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    3
  1587 ;; This function calls:
  1588 ;;		__doprnt
  1589 ;; This function is called by:
  1590 ;;		_mensaje
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _printf
  1596  06EF                     _printf:
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1600                           ;printf@f stored from wreg
  1601  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1602  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1603  06F1  00B6               	movwf	printf@f
  1604  06F2                     l1948:
  1605  06F2  01B7               	clrf	printf@pb
  1606  06F3                     l1950:
  1607  06F3  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1608  06F4  00B3               	movwf	??_printf
  1609  06F5  0833               	movf	??_printf,w
  1610  06F6  00B8               	movwf	low ((printf@pb| 0+1))
  1611  06F7                     l1952:
  1612  06F7  3031               	movlw	(low (?_printf| 0))& (0+255)
  1613  06F8  00B3               	movwf	??_printf
  1614  06F9  0833               	movf	??_printf,w
  1615  06FA  00B5               	movwf	printf@ap
  1616  06FB                     l1954:
  1617                           
  1618                           ;	Return value of _printf is never used
  1619  06FB  0836               	movf	printf@f,w
  1620  06FC  00B3               	movwf	??_printf
  1621  06FD  0833               	movf	??_printf,w
  1622  06FE  00A6               	movwf	__doprnt@f
  1623  06FF  3035               	movlw	(low (printf@ap| 0))& (0+255)
  1624  0700  00B4               	movwf	??_printf+1
  1625  0701  0834               	movf	??_printf+1,w
  1626  0702  00A7               	movwf	__doprnt@ap
  1627  0703  3037               	movlw	(low (printf@pb| 0))& (0+255)
  1628  0704  120A  118A  218C  120A  118A  	fcall	__doprnt
  1629  0709                     l720:
  1630  0709  0008               	return
  1631  070A                     __end_of_printf:
  1632                           
  1633                           	psect	text4
  1634  0434                     __ptext4:	
  1635 ;; *************** function _division *****************
  1636 ;; Defined at:
  1637 ;;		line 199 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  valor           1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  valor           1    9[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      unsigned char 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         1       0       0       0       0
  1653 ;;      Temps:          0       3       0       0       0
  1654 ;;      Totals:         1       3       0       0       0
  1655 ;;Total ram usage:        4 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    2
  1658 ;; This function calls:
  1659 ;;		___awdiv
  1660 ;;		___awmod
  1661 ;; This function is called by:
  1662 ;;		_mensaje
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _division
  1668  0434                     _division:
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1672                           ;division@valor stored from wreg
  1673  0434  00F9               	movwf	division@valor
  1674  0435                     l1940:
  1675                           
  1676                           ;main.c: 200:     d = valor/100;
  1677  0435  3064               	movlw	100
  1678  0436  00F2               	movwf	___awdiv@divisor
  1679  0437  3000               	movlw	0
  1680  0438  00F3               	movwf	___awdiv@divisor+1
  1681  0439  0879               	movf	division@valor,w
  1682  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1683  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1684  043C  00A4               	movwf	??_division
  1685  043D  01A5               	clrf	??_division+1
  1686  043E  0824               	movf	??_division,w
  1687  043F  00F4               	movwf	___awdiv@dividend
  1688  0440  0825               	movf	??_division+1,w
  1689  0441  00F5               	movwf	___awdiv@dividend+1
  1690  0442  120A  118A  24AA  120A  118A  	fcall	___awdiv
  1691  0447  0872               	movf	?___awdiv,w
  1692  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1694  044A  00A6               	movwf	??_division+2
  1695  044B  0826               	movf	??_division+2,w
  1696  044C  00FB               	movwf	_d
  1697                           
  1698                           ;main.c: 201:     residuo = valor%100;
  1699  044D  3064               	movlw	100
  1700  044E  00F2               	movwf	___awmod@divisor
  1701  044F  3000               	movlw	0
  1702  0450  00F3               	movwf	___awmod@divisor+1
  1703  0451  0879               	movf	division@valor,w
  1704  0452  00A4               	movwf	??_division
  1705  0453  01A5               	clrf	??_division+1
  1706  0454  0824               	movf	??_division,w
  1707  0455  00F4               	movwf	___awmod@dividend
  1708  0456  0825               	movf	??_division+1,w
  1709  0457  00F5               	movwf	___awmod@dividend+1
  1710  0458  120A  118A  2513  120A  118A  	fcall	___awmod
  1711  045D  0872               	movf	?___awmod,w
  1712  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1713  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0460  00A6               	movwf	??_division+2
  1715  0461  0826               	movf	??_division+2,w
  1716  0462  00FA               	movwf	_residuo
  1717                           
  1718                           ;main.c: 202:     c = residuo/10;
  1719  0463  300A               	movlw	10
  1720  0464  00F2               	movwf	___awdiv@divisor
  1721  0465  3000               	movlw	0
  1722  0466  00F3               	movwf	___awdiv@divisor+1
  1723  0467  087A               	movf	_residuo,w
  1724  0468  00A4               	movwf	??_division
  1725  0469  01A5               	clrf	??_division+1
  1726  046A  0824               	movf	??_division,w
  1727  046B  00F4               	movwf	___awdiv@dividend
  1728  046C  0825               	movf	??_division+1,w
  1729  046D  00F5               	movwf	___awdiv@dividend+1
  1730  046E  120A  118A  24AA  120A  118A  	fcall	___awdiv
  1731  0473  0872               	movf	?___awdiv,w
  1732  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0476  00A6               	movwf	??_division+2
  1735  0477  0826               	movf	??_division+2,w
  1736  0478  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0479  1303               	bcf	3,6	;RP1=0, select bank1
  1738  047A  00A6               	movwf	_c^(0+128)
  1739                           
  1740                           ;main.c: 203:     u = residuo%10;
  1741  047B  300A               	movlw	10
  1742  047C  00F2               	movwf	___awmod@divisor
  1743  047D  3000               	movlw	0
  1744  047E  00F3               	movwf	___awmod@divisor+1
  1745  047F  087A               	movf	_residuo,w
  1746  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0482  00A4               	movwf	??_division
  1749  0483  01A5               	clrf	??_division+1
  1750  0484  0824               	movf	??_division,w
  1751  0485  00F4               	movwf	___awmod@dividend
  1752  0486  0825               	movf	??_division+1,w
  1753  0487  00F5               	movwf	___awmod@dividend+1
  1754  0488  120A  118A  2513  120A  118A  	fcall	___awmod
  1755  048D  0872               	movf	?___awmod,w
  1756  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1757  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0490  00A6               	movwf	??_division+2
  1759  0491  0826               	movf	??_division+2,w
  1760  0492  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0493  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0494  00A5               	movwf	_u^(0+128)
  1763  0495                     l1942:
  1764                           
  1765                           ;main.c: 204:     d += 48;
  1766  0495  3030               	movlw	48
  1767  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1768  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0498  00A4               	movwf	??_division
  1770  0499  0824               	movf	??_division,w
  1771  049A  07FB               	addwf	_d,f
  1772  049B                     l1944:
  1773                           
  1774                           ;main.c: 205:     c += 48;
  1775  049B  3030               	movlw	48
  1776  049C  00A4               	movwf	??_division
  1777  049D  0824               	movf	??_division,w
  1778  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1779  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1780  04A0  07A6               	addwf	_c^(0+128),f
  1781  04A1                     l1946:
  1782                           
  1783                           ;main.c: 206:     u += 48;
  1784  04A1  3030               	movlw	48
  1785  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1786  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1787  04A4  00A4               	movwf	??_division
  1788  04A5  0824               	movf	??_division,w
  1789  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1790  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1791  04A8  07A5               	addwf	_u^(0+128),f
  1792  04A9                     l157:
  1793  04A9  0008               	return
  1794  04AA                     __end_of_division:
  1795                           
  1796                           	psect	text5
  1797  0513                     __ptext5:	
  1798 ;; *************** function ___awmod *****************
  1799 ;; Defined at:
  1800 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  divisor         2    2[COMMON] int 
  1803 ;;  dividend        2    4[COMMON] int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  sign            1    8[COMMON] unsigned char 
  1806 ;;  counter         1    7[COMMON] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2    2[COMMON] int 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         4       0       0       0       0
  1817 ;;      Locals:         2       0       0       0       0
  1818 ;;      Temps:          1       0       0       0       0
  1819 ;;      Totals:         7       0       0       0       0
  1820 ;;Total ram usage:        7 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_division
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function ___awmod
  1832  0513                     ___awmod:
  1833  0513                     l1552:	
  1834                           ;incstack = 0
  1835                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1836                           
  1837  0513  01F8               	clrf	___awmod@sign
  1838  0514                     l1554:
  1839  0514  1FF5               	btfss	___awmod@dividend+1,7
  1840  0515  2D17               	goto	u1181
  1841  0516  2D18               	goto	u1180
  1842  0517                     u1181:
  1843  0517  2D1F               	goto	l1560
  1844  0518                     u1180:
  1845  0518                     l1556:
  1846  0518  09F4               	comf	___awmod@dividend,f
  1847  0519  09F5               	comf	___awmod@dividend+1,f
  1848  051A  0AF4               	incf	___awmod@dividend,f
  1849  051B  1903               	skipnz
  1850  051C  0AF5               	incf	___awmod@dividend+1,f
  1851  051D                     l1558:
  1852  051D  01F8               	clrf	___awmod@sign
  1853  051E  0AF8               	incf	___awmod@sign,f
  1854  051F                     l1560:
  1855  051F  1FF3               	btfss	___awmod@divisor+1,7
  1856  0520  2D22               	goto	u1191
  1857  0521  2D23               	goto	u1190
  1858  0522                     u1191:
  1859  0522  2D28               	goto	l1564
  1860  0523                     u1190:
  1861  0523                     l1562:
  1862  0523  09F2               	comf	___awmod@divisor,f
  1863  0524  09F3               	comf	___awmod@divisor+1,f
  1864  0525  0AF2               	incf	___awmod@divisor,f
  1865  0526  1903               	skipnz
  1866  0527  0AF3               	incf	___awmod@divisor+1,f
  1867  0528                     l1564:
  1868  0528  0872               	movf	___awmod@divisor,w
  1869  0529  0473               	iorwf	___awmod@divisor+1,w
  1870  052A  1903               	btfsc	3,2
  1871  052B  2D2D               	goto	u1201
  1872  052C  2D2E               	goto	u1200
  1873  052D                     u1201:
  1874  052D  2D5D               	goto	l1582
  1875  052E                     u1200:
  1876  052E                     l1566:
  1877  052E  01F7               	clrf	___awmod@counter
  1878  052F  0AF7               	incf	___awmod@counter,f
  1879  0530  2D3C               	goto	l1572
  1880  0531                     l1568:
  1881  0531  3001               	movlw	1
  1882  0532                     u1215:
  1883  0532  1003               	clrc
  1884  0533  0DF2               	rlf	___awmod@divisor,f
  1885  0534  0DF3               	rlf	___awmod@divisor+1,f
  1886  0535  3EFF               	addlw	-1
  1887  0536  1D03               	skipz
  1888  0537  2D32               	goto	u1215
  1889  0538                     l1570:
  1890  0538  3001               	movlw	1
  1891  0539  00F6               	movwf	??___awmod
  1892  053A  0876               	movf	??___awmod,w
  1893  053B  07F7               	addwf	___awmod@counter,f
  1894  053C                     l1572:
  1895  053C  1FF3               	btfss	___awmod@divisor+1,7
  1896  053D  2D3F               	goto	u1221
  1897  053E  2D40               	goto	u1220
  1898  053F                     u1221:
  1899  053F  2D31               	goto	l1568
  1900  0540                     u1220:
  1901  0540                     l1574:
  1902  0540  0873               	movf	___awmod@divisor+1,w
  1903  0541  0275               	subwf	___awmod@dividend+1,w
  1904  0542  1D03               	skipz
  1905  0543  2D46               	goto	u1235
  1906  0544  0872               	movf	___awmod@divisor,w
  1907  0545  0274               	subwf	___awmod@dividend,w
  1908  0546                     u1235:
  1909  0546  1C03               	skipc
  1910  0547  2D49               	goto	u1231
  1911  0548  2D4A               	goto	u1230
  1912  0549                     u1231:
  1913  0549  2D50               	goto	l1578
  1914  054A                     u1230:
  1915  054A                     l1576:
  1916  054A  0872               	movf	___awmod@divisor,w
  1917  054B  02F4               	subwf	___awmod@dividend,f
  1918  054C  0873               	movf	___awmod@divisor+1,w
  1919  054D  1C03               	skipc
  1920  054E  03F5               	decf	___awmod@dividend+1,f
  1921  054F  02F5               	subwf	___awmod@dividend+1,f
  1922  0550                     l1578:
  1923  0550  3001               	movlw	1
  1924  0551                     u1245:
  1925  0551  1003               	clrc
  1926  0552  0CF3               	rrf	___awmod@divisor+1,f
  1927  0553  0CF2               	rrf	___awmod@divisor,f
  1928  0554  3EFF               	addlw	-1
  1929  0555  1D03               	skipz
  1930  0556  2D51               	goto	u1245
  1931  0557                     l1580:
  1932  0557  3001               	movlw	1
  1933  0558  02F7               	subwf	___awmod@counter,f
  1934  0559  1D03               	btfss	3,2
  1935  055A  2D5C               	goto	u1251
  1936  055B  2D5D               	goto	u1250
  1937  055C                     u1251:
  1938  055C  2D40               	goto	l1574
  1939  055D                     u1250:
  1940  055D                     l1582:
  1941  055D  0878               	movf	___awmod@sign,w
  1942  055E  1903               	btfsc	3,2
  1943  055F  2D61               	goto	u1261
  1944  0560  2D62               	goto	u1260
  1945  0561                     u1261:
  1946  0561  2D67               	goto	l1586
  1947  0562                     u1260:
  1948  0562                     l1584:
  1949  0562  09F4               	comf	___awmod@dividend,f
  1950  0563  09F5               	comf	___awmod@dividend+1,f
  1951  0564  0AF4               	incf	___awmod@dividend,f
  1952  0565  1903               	skipnz
  1953  0566  0AF5               	incf	___awmod@dividend+1,f
  1954  0567                     l1586:
  1955  0567  0875               	movf	___awmod@dividend+1,w
  1956  0568  00F3               	movwf	?___awmod+1
  1957  0569  0874               	movf	___awmod@dividend,w
  1958  056A  00F2               	movwf	?___awmod
  1959  056B                     l409:
  1960  056B  0008               	return
  1961  056C                     __end_of___awmod:
  1962                           
  1963                           	psect	text6
  1964  04AA                     __ptext6:	
  1965 ;; *************** function ___awdiv *****************
  1966 ;; Defined at:
  1967 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  divisor         2    2[COMMON] int 
  1970 ;;  dividend        2    4[COMMON] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  quotient        2    2[BANK0 ] int 
  1973 ;;  sign            1    1[BANK0 ] unsigned char 
  1974 ;;  counter         1    0[BANK0 ] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    2[COMMON] int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         4       0       0       0       0
  1985 ;;      Locals:         0       4       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         5       4       0       0       0
  1988 ;;Total ram usage:        9 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_division
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function ___awdiv
  2000  04AA                     ___awdiv:
  2001  04AA                     l1896:	
  2002                           ;incstack = 0
  2003                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2004                           
  2005  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2006  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2007  04AC  01A1               	clrf	___awdiv@sign
  2008  04AD                     l1898:
  2009  04AD  1FF3               	btfss	___awdiv@divisor+1,7
  2010  04AE  2CB0               	goto	u1581
  2011  04AF  2CB1               	goto	u1580
  2012  04B0                     u1581:
  2013  04B0  2CB8               	goto	l1904
  2014  04B1                     u1580:
  2015  04B1                     l1900:
  2016  04B1  09F2               	comf	___awdiv@divisor,f
  2017  04B2  09F3               	comf	___awdiv@divisor+1,f
  2018  04B3  0AF2               	incf	___awdiv@divisor,f
  2019  04B4  1903               	skipnz
  2020  04B5  0AF3               	incf	___awdiv@divisor+1,f
  2021  04B6                     l1902:
  2022  04B6  01A1               	clrf	___awdiv@sign
  2023  04B7  0AA1               	incf	___awdiv@sign,f
  2024  04B8                     l1904:
  2025  04B8  1FF5               	btfss	___awdiv@dividend+1,7
  2026  04B9  2CBB               	goto	u1591
  2027  04BA  2CBC               	goto	u1590
  2028  04BB                     u1591:
  2029  04BB  2CC5               	goto	l1910
  2030  04BC                     u1590:
  2031  04BC                     l1906:
  2032  04BC  09F4               	comf	___awdiv@dividend,f
  2033  04BD  09F5               	comf	___awdiv@dividend+1,f
  2034  04BE  0AF4               	incf	___awdiv@dividend,f
  2035  04BF  1903               	skipnz
  2036  04C0  0AF5               	incf	___awdiv@dividend+1,f
  2037  04C1                     l1908:
  2038  04C1  3001               	movlw	1
  2039  04C2  00F6               	movwf	??___awdiv
  2040  04C3  0876               	movf	??___awdiv,w
  2041  04C4  06A1               	xorwf	___awdiv@sign,f
  2042  04C5                     l1910:
  2043  04C5  01A2               	clrf	___awdiv@quotient
  2044  04C6  01A3               	clrf	___awdiv@quotient+1
  2045  04C7                     l1912:
  2046  04C7  0872               	movf	___awdiv@divisor,w
  2047  04C8  0473               	iorwf	___awdiv@divisor+1,w
  2048  04C9  1903               	btfsc	3,2
  2049  04CA  2CCC               	goto	u1601
  2050  04CB  2CCD               	goto	u1600
  2051  04CC                     u1601:
  2052  04CC  2D04               	goto	l1932
  2053  04CD                     u1600:
  2054  04CD                     l1914:
  2055  04CD  01A0               	clrf	___awdiv@counter
  2056  04CE  0AA0               	incf	___awdiv@counter,f
  2057  04CF  2CDB               	goto	l1920
  2058  04D0                     l1916:
  2059  04D0  3001               	movlw	1
  2060  04D1                     u1615:
  2061  04D1  1003               	clrc
  2062  04D2  0DF2               	rlf	___awdiv@divisor,f
  2063  04D3  0DF3               	rlf	___awdiv@divisor+1,f
  2064  04D4  3EFF               	addlw	-1
  2065  04D5  1D03               	skipz
  2066  04D6  2CD1               	goto	u1615
  2067  04D7                     l1918:
  2068  04D7  3001               	movlw	1
  2069  04D8  00F6               	movwf	??___awdiv
  2070  04D9  0876               	movf	??___awdiv,w
  2071  04DA  07A0               	addwf	___awdiv@counter,f
  2072  04DB                     l1920:
  2073  04DB  1FF3               	btfss	___awdiv@divisor+1,7
  2074  04DC  2CDE               	goto	u1621
  2075  04DD  2CDF               	goto	u1620
  2076  04DE                     u1621:
  2077  04DE  2CD0               	goto	l1916
  2078  04DF                     u1620:
  2079  04DF                     l1922:
  2080  04DF  3001               	movlw	1
  2081  04E0                     u1635:
  2082  04E0  1003               	clrc
  2083  04E1  0DA2               	rlf	___awdiv@quotient,f
  2084  04E2  0DA3               	rlf	___awdiv@quotient+1,f
  2085  04E3  3EFF               	addlw	-1
  2086  04E4  1D03               	skipz
  2087  04E5  2CE0               	goto	u1635
  2088  04E6  0873               	movf	___awdiv@divisor+1,w
  2089  04E7  0275               	subwf	___awdiv@dividend+1,w
  2090  04E8  1D03               	skipz
  2091  04E9  2CEC               	goto	u1645
  2092  04EA  0872               	movf	___awdiv@divisor,w
  2093  04EB  0274               	subwf	___awdiv@dividend,w
  2094  04EC                     u1645:
  2095  04EC  1C03               	skipc
  2096  04ED  2CEF               	goto	u1641
  2097  04EE  2CF0               	goto	u1640
  2098  04EF                     u1641:
  2099  04EF  2CF7               	goto	l1928
  2100  04F0                     u1640:
  2101  04F0                     l1924:
  2102  04F0  0872               	movf	___awdiv@divisor,w
  2103  04F1  02F4               	subwf	___awdiv@dividend,f
  2104  04F2  0873               	movf	___awdiv@divisor+1,w
  2105  04F3  1C03               	skipc
  2106  04F4  03F5               	decf	___awdiv@dividend+1,f
  2107  04F5  02F5               	subwf	___awdiv@dividend+1,f
  2108  04F6                     l1926:
  2109  04F6  1422               	bsf	___awdiv@quotient,0
  2110  04F7                     l1928:
  2111  04F7  3001               	movlw	1
  2112  04F8                     u1655:
  2113  04F8  1003               	clrc
  2114  04F9  0CF3               	rrf	___awdiv@divisor+1,f
  2115  04FA  0CF2               	rrf	___awdiv@divisor,f
  2116  04FB  3EFF               	addlw	-1
  2117  04FC  1D03               	skipz
  2118  04FD  2CF8               	goto	u1655
  2119  04FE                     l1930:
  2120  04FE  3001               	movlw	1
  2121  04FF  02A0               	subwf	___awdiv@counter,f
  2122  0500  1D03               	btfss	3,2
  2123  0501  2D03               	goto	u1661
  2124  0502  2D04               	goto	u1660
  2125  0503                     u1661:
  2126  0503  2CDF               	goto	l1922
  2127  0504                     u1660:
  2128  0504                     l1932:
  2129  0504  0821               	movf	___awdiv@sign,w
  2130  0505  1903               	btfsc	3,2
  2131  0506  2D08               	goto	u1671
  2132  0507  2D09               	goto	u1670
  2133  0508                     u1671:
  2134  0508  2D0E               	goto	l1936
  2135  0509                     u1670:
  2136  0509                     l1934:
  2137  0509  09A2               	comf	___awdiv@quotient,f
  2138  050A  09A3               	comf	___awdiv@quotient+1,f
  2139  050B  0AA2               	incf	___awdiv@quotient,f
  2140  050C  1903               	skipnz
  2141  050D  0AA3               	incf	___awdiv@quotient+1,f
  2142  050E                     l1936:
  2143  050E  0823               	movf	___awdiv@quotient+1,w
  2144  050F  00F3               	movwf	?___awdiv+1
  2145  0510  0822               	movf	___awdiv@quotient,w
  2146  0511  00F2               	movwf	?___awdiv
  2147  0512                     l396:
  2148  0512  0008               	return
  2149  0513                     __end_of___awdiv:
  2150                           
  2151                           	psect	text7
  2152  05B0                     __ptext7:	
  2153 ;; *************** function _concatenado *****************
  2154 ;; Defined at:
  2155 ;;		line 185 in file "main.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  a               2   26[BANK0 ] int 
  2158 ;;  b               2   28[BANK0 ] int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  BFFR1          20   51[BANK0 ] unsigned char [20]
  2161 ;;  BFFR2          20   31[BANK0 ] unsigned char [20]
  2162 ;;  c               2   71[BANK0 ] int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2   26[BANK0 ] int 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       4       0       0       0
  2173 ;;      Locals:         0      42       0       0       0
  2174 ;;      Temps:          0       1       0       0       0
  2175 ;;      Totals:         0      47       0       0       0
  2176 ;;Total ram usage:       47 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    4
  2179 ;; This function calls:
  2180 ;;		_atoi
  2181 ;;		_sprintf
  2182 ;;		_strcat
  2183 ;; This function is called by:
  2184 ;;		_mensaje
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _concatenado
  2190  05B0                     _concatenado:
  2191  05B0                     l1958:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _concatenado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2194                           
  2195                           
  2196                           ;main.c: 185: int concatenado(int a, int b);main.c: 186: {;main.c: 187:     char BFFR1[2
      +                          0];;main.c: 188:     char BFFR2[20];;main.c: 190:     sprintf(BFFR1, "%d", a);
  2197  05B0  30A9               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2198  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2199  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2200  05B3  00BE               	movwf	??_concatenado
  2201  05B4  083E               	movf	??_concatenado,w
  2202  05B5  00B1               	movwf	sprintf@f
  2203  05B6  083B               	movf	concatenado@a+1,w
  2204  05B7  00B3               	movwf	?_sprintf+2
  2205  05B8  083A               	movf	concatenado@a,w
  2206  05B9  00B2               	movwf	?_sprintf+1
  2207  05BA  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2208  05BB  120A  118A  26B2  120A  118A  	fcall	_sprintf
  2209                           
  2210                           ;main.c: 191:     sprintf(BFFR2, "%d", b);
  2211  05C0  30A9               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2212  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2213  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2214  05C3  00BE               	movwf	??_concatenado
  2215  05C4  083E               	movf	??_concatenado,w
  2216  05C5  00B1               	movwf	sprintf@f
  2217  05C6  083D               	movf	concatenado@b+1,w
  2218  05C7  00B3               	movwf	?_sprintf+2
  2219  05C8  083C               	movf	concatenado@b,w
  2220  05C9  00B2               	movwf	?_sprintf+1
  2221  05CA  303F               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  2222  05CB  120A  118A  26B2  120A  118A  	fcall	_sprintf
  2223  05D0                     l1960:
  2224                           
  2225                           ;main.c: 193:     strcat(BFFR1, BFFR2);
  2226  05D0  303F               	movlw	(low (concatenado@BFFR2| 0))& (0+255)
  2227  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2228  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2229  05D3  00BE               	movwf	??_concatenado
  2230  05D4  083E               	movf	??_concatenado,w
  2231  05D5  00F2               	movwf	strcat@from
  2232  05D6  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2233  05D7  120A  118A  2664  120A  118A  	fcall	_strcat
  2234  05DC                     l1962:
  2235                           
  2236                           ;main.c: 195:     int c = atoi(BFFR1);
  2237  05DC  3053               	movlw	(low (concatenado@BFFR1| 0))& (0+255)
  2238  05DD  120A  118A  23B1  120A  118A  	fcall	_atoi
  2239  05E2  0879               	movf	?_atoi+1,w
  2240  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2241  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2242  05E5  00E8               	movwf	concatenado@c+1
  2243  05E6  0878               	movf	?_atoi,w
  2244  05E7  00E7               	movwf	concatenado@c
  2245  05E8                     l1964:
  2246                           
  2247                           ;main.c: 196:     return c;
  2248  05E8  0868               	movf	concatenado@c+1,w
  2249  05E9  00BB               	movwf	?_concatenado+1
  2250  05EA  0867               	movf	concatenado@c,w
  2251  05EB  00BA               	movwf	?_concatenado
  2252  05EC                     l154:
  2253  05EC  0008               	return
  2254  05ED                     __end_of_concatenado:
  2255                           
  2256                           	psect	text8
  2257  0664                     __ptext8:	
  2258 ;; *************** function _strcat *****************
  2259 ;; Defined at:
  2260 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  to              1    wreg     PTR unsigned char 
  2263 ;;		 -> concatenado@BFFR1(20), 
  2264 ;;  from            1    2[COMMON] PTR const unsigned char 
  2265 ;;		 -> concatenado@BFFR2(20), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  to              1    4[COMMON] PTR unsigned char 
  2268 ;;		 -> concatenado@BFFR1(20), 
  2269 ;;  cp              1    5[COMMON] PTR unsigned char 
  2270 ;;		 -> concatenado@BFFR1(20), 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      PTR unsigned char 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         1       0       0       0       0
  2281 ;;      Locals:         2       0       0       0       0
  2282 ;;      Temps:          1       0       0       0       0
  2283 ;;      Totals:         4       0       0       0       0
  2284 ;;Total ram usage:        4 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_concatenado
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _strcat
  2296  0664                     _strcat:
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2300                           ;strcat@to stored from wreg
  2301  0664  00F4               	movwf	strcat@to
  2302  0665                     l1464:
  2303  0665  0874               	movf	strcat@to,w
  2304  0666  00F3               	movwf	??_strcat
  2305  0667  0873               	movf	??_strcat,w
  2306  0668  00F5               	movwf	strcat@cp
  2307  0669  2E6E               	goto	l1468
  2308  066A                     l1466:
  2309  066A  3001               	movlw	1
  2310  066B  00F3               	movwf	??_strcat
  2311  066C  0873               	movf	??_strcat,w
  2312  066D  07F5               	addwf	strcat@cp,f
  2313  066E                     l1468:
  2314  066E  0875               	movf	strcat@cp,w
  2315  066F  0084               	movwf	4
  2316  0670  1383               	bcf	3,7	;select IRP bank0
  2317  0671  0800               	movf	0,w
  2318  0672  1D03               	btfss	3,2
  2319  0673  2E75               	goto	u1001
  2320  0674  2E76               	goto	u1000
  2321  0675                     u1001:
  2322  0675  2E6A               	goto	l1466
  2323  0676                     u1000:
  2324  0676  2E7F               	goto	l1472
  2325  0677                     l1470:
  2326  0677  3001               	movlw	1
  2327  0678  00F3               	movwf	??_strcat
  2328  0679  0873               	movf	??_strcat,w
  2329  067A  07F5               	addwf	strcat@cp,f
  2330  067B  3001               	movlw	1
  2331  067C  00F3               	movwf	??_strcat
  2332  067D  0873               	movf	??_strcat,w
  2333  067E  07F2               	addwf	strcat@from,f
  2334  067F                     l1472:
  2335  067F  0872               	movf	strcat@from,w
  2336  0680  0084               	movwf	4
  2337  0681  0800               	movf	0,w
  2338  0682  00F3               	movwf	??_strcat
  2339  0683  0875               	movf	strcat@cp,w
  2340  0684  0084               	movwf	4
  2341  0685  0873               	movf	??_strcat,w
  2342  0686  0080               	movwf	0
  2343  0687  0800               	movf	0,w
  2344  0688  1D03               	btfss	3,2
  2345  0689  2E8B               	goto	u1011
  2346  068A  2E8C               	goto	u1010
  2347  068B                     u1011:
  2348  068B  2E77               	goto	l1470
  2349  068C                     u1010:
  2350  068C                     l774:
  2351  068C  0008               	return
  2352  068D                     __end_of_strcat:
  2353                           
  2354                           	psect	text9
  2355  06B2                     __ptext9:	
  2356 ;; *************** function _sprintf *****************
  2357 ;; Defined at:
  2358 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  wh              1    wreg     PTR unsigned char 
  2361 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  2362 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_8(3), STR_7(3), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2366 ;;		 -> concatenado@BFFR2(20), concatenado@BFFR1(20), 
  2367 ;;  pb              2   24[BANK0 ] struct __prbuf
  2368 ;;  ap              1   23[BANK0 ] PTR void [1]
  2369 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  2   17[BANK0 ] int 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       3       0       0       0
  2380 ;;      Locals:         0       4       0       0       0
  2381 ;;      Temps:          0       2       0       0       0
  2382 ;;      Totals:         0       9       0       0       0
  2383 ;;Total ram usage:        9 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		__doprnt
  2388 ;; This function is called by:
  2389 ;;		_concatenado
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _sprintf
  2395  06B2                     _sprintf:
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2399                           ;sprintf@wh stored from wreg
  2400  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2401  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2402  06B4  00B6               	movwf	sprintf@wh
  2403  06B5                     l1850:
  2404  06B5  0836               	movf	sprintf@wh,w
  2405  06B6  00B4               	movwf	??_sprintf
  2406  06B7  0834               	movf	??_sprintf,w
  2407  06B8  00B8               	movwf	sprintf@pb
  2408  06B9                     l1852:
  2409  06B9  01B9               	clrf	low ((sprintf@pb| 0+1))
  2410  06BA                     l1854:
  2411  06BA  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2412  06BB  00B4               	movwf	??_sprintf
  2413  06BC  0834               	movf	??_sprintf,w
  2414  06BD  00B7               	movwf	sprintf@ap
  2415  06BE                     l1856:
  2416  06BE  0831               	movf	sprintf@f,w
  2417  06BF  00B4               	movwf	??_sprintf
  2418  06C0  0834               	movf	??_sprintf,w
  2419  06C1  00A6               	movwf	__doprnt@f
  2420  06C2  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2421  06C3  00B5               	movwf	??_sprintf+1
  2422  06C4  0835               	movf	??_sprintf+1,w
  2423  06C5  00A7               	movwf	__doprnt@ap
  2424  06C6  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2425  06C7  120A  118A  218C  120A  118A  	fcall	__doprnt
  2426  06CC                     l1858:
  2427  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2428  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2429  06CE  0838               	movf	sprintf@pb,w
  2430  06CF  0084               	movwf	4
  2431  06D0  1383               	bcf	3,7	;select IRP bank0
  2432  06D1  0180               	clrf	0
  2433  06D2                     l765:
  2434  06D2  0008               	return
  2435  06D3                     __end_of_sprintf:
  2436                           
  2437                           	psect	text10
  2438  018C                     __ptext10:	
  2439 ;; *************** function __doprnt *****************
  2440 ;; Defined at:
  2441 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  pb              1    wreg     PTR struct __prbuf
  2444 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2445 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2446 ;;		 -> STR_8(3), STR_7(3), STR_6(31), STR_5(35), 
  2447 ;;		 -> STR_4(35), STR_3(37), STR_2(2), STR_1(20), 
  2448 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2449 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2452 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2453 ;;  tmpval          4    0        struct .
  2454 ;;  val             2   13[BANK0 ] unsigned int 
  2455 ;;  cp              2    0        PTR const unsigned char 
  2456 ;;  len             2    0        unsigned int 
  2457 ;;  c               1   15[BANK0 ] unsigned char 
  2458 ;;  prec            1   12[BANK0 ] char 
  2459 ;;  flag            1   11[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    6[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       2       0       0       0
  2470 ;;      Locals:         0       6       0       0       0
  2471 ;;      Temps:          0       3       0       0       0
  2472 ;;      Totals:         0      11       0       0       0
  2473 ;;Total ram usage:       11 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		Absolute function
  2478 ;;		___lwdiv
  2479 ;;		___lwmod
  2480 ;;		_putch
  2481 ;; This function is called by:
  2482 ;;		_printf
  2483 ;;		_sprintf
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function __doprnt
  2489  018C                     __doprnt:
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2493                           ;__doprnt@pb stored from wreg
  2494  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2495  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2496  018E  00B0               	movwf	__doprnt@pb
  2497  018F                     l1778:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2500  018F  2AAB               	goto	l1840
  2501  0190                     l1780:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2504  0190  3025               	movlw	37
  2505  0191  062F               	xorwf	__doprnt@c,w
  2506  0192  1903               	btfsc	3,2
  2507  0193  2995               	goto	u1421
  2508  0194  2996               	goto	u1420
  2509  0195                     u1421:
  2510  0195  29BC               	goto	l1790
  2511  0196                     u1420:
  2512  0196                     l1782:
  2513  0196  0A30               	incf	__doprnt@pb,w
  2514  0197  0084               	movwf	4
  2515  0198  1383               	bcf	3,7	;select IRP bank0
  2516  0199  0800               	movf	0,w
  2517  019A  1903               	btfsc	3,2
  2518  019B  299D               	goto	u1431
  2519  019C  299E               	goto	u1430
  2520  019D                     u1431:
  2521  019D  29AD               	goto	l1786
  2522  019E                     u1430:
  2523  019E                     l1784:
  2524  019E  082F               	movf	__doprnt@c,w
  2525  019F  00A8               	movwf	??__doprnt
  2526  01A0  0828               	movf	??__doprnt,w
  2527  01A1  00F2               	movwf	putch@dato
  2528  01A2  0A30               	incf	__doprnt@pb,w
  2529  01A3  0084               	movwf	4
  2530  01A4  0800               	movf	0,w
  2531  01A5  120A  118A  2025  120A  118A  	fcall	fptable
  2532  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2533  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2534  01AC  298F               	goto	l1778
  2535  01AD                     l1786:
  2536  01AD  082F               	movf	__doprnt@c,w
  2537  01AE  00A8               	movwf	??__doprnt
  2538  01AF  0830               	movf	__doprnt@pb,w
  2539  01B0  0084               	movwf	4
  2540  01B1  0800               	movf	0,w
  2541  01B2  0084               	movwf	4
  2542  01B3  0828               	movf	??__doprnt,w
  2543  01B4  0080               	movwf	0
  2544  01B5                     l1788:
  2545  01B5  3001               	movlw	1
  2546  01B6  00A8               	movwf	??__doprnt
  2547  01B7  0830               	movf	__doprnt@pb,w
  2548  01B8  0084               	movwf	4
  2549  01B9  0828               	movf	??__doprnt,w
  2550  01BA  0780               	addwf	0,f
  2551  01BB  298F               	goto	l1778
  2552  01BC                     l1790:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2555  01BC  01AB               	clrf	__doprnt@flag
  2556  01BD                     l1794:	
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2558                           
  2559  01BD  3001               	movlw	1
  2560  01BE  07A6               	addwf	__doprnt@f,f
  2561  01BF  30FF               	movlw	-1
  2562  01C0  0726               	addwf	__doprnt@f,w
  2563  01C1  0084               	movwf	4
  2564  01C2  120A  118A  2300  120A  118A  	fcall	stringdir
  2565  01C7  00AF               	movwf	__doprnt@c
  2566  01C8  00A8               	movwf	??__doprnt
  2567  01C9  01A9               	clrf	??__doprnt+1
  2568                           
  2569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2570                           ; Switch size 1, requested type "simple"
  2571                           ; Number of cases is 1, Range of values is 0 to 0
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte            4     3 (average)
  2575                           ; direct_byte           11     8 (fixed)
  2576                           ; jumptable            260     6 (fixed)
  2577                           ;	Chosen strategy is simple_byte
  2578  01CA  0829               	movf	??__doprnt+1,w
  2579  01CB  3A00               	xorlw	0	; case 0
  2580  01CC  1903               	skipnz
  2581  01CD  29CF               	goto	l2048
  2582  01CE  2AAB               	goto	l1840
  2583  01CF                     l2048:
  2584                           
  2585                           ; Switch size 1, requested type "simple"
  2586                           ; Number of cases is 3, Range of values is 0 to 105
  2587                           ; switch strategies available:
  2588                           ; Name         Instructions Cycles
  2589                           ; simple_byte           10     6 (average)
  2590                           ; jumptable            260     6 (fixed)
  2591                           ;	Chosen strategy is simple_byte
  2592  01CF  0828               	movf	??__doprnt,w
  2593  01D0  3A00               	xorlw	0	; case 0
  2594  01D1  1903               	skipnz
  2595  01D2  2ABF               	goto	l1842
  2596  01D3  3A64               	xorlw	100	; case 100
  2597  01D4  1903               	skipnz
  2598  01D5  29DA               	goto	l1796
  2599  01D6  3A0D               	xorlw	13	; case 105
  2600  01D7  1903               	skipnz
  2601  01D8  29DA               	goto	l1796
  2602  01D9  2AAB               	goto	l1840
  2603  01DA                     l1796:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2606  01DA  0827               	movf	__doprnt@ap,w
  2607  01DB  0084               	movwf	4
  2608  01DC  1383               	bcf	3,7	;select IRP bank0
  2609  01DD  0800               	movf	0,w
  2610  01DE  00A8               	movwf	??__doprnt
  2611  01DF  3002               	movlw	2
  2612  01E0  0780               	addwf	0,f
  2613  01E1  0828               	movf	??__doprnt,w
  2614  01E2  0084               	movwf	4
  2615  01E3  0800               	movf	0,w
  2616  01E4  00AD               	movwf	__doprnt@val
  2617  01E5  0A84               	incf	4,f
  2618  01E6  0800               	movf	0,w
  2619  01E7  00AE               	movwf	__doprnt@val+1
  2620  01E8                     l1798:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2623  01E8  1FAE               	btfss	__doprnt@val+1,7
  2624  01E9  29EB               	goto	u1441
  2625  01EA  29EC               	goto	u1440
  2626  01EB                     u1441:
  2627  01EB  29F5               	goto	l1804
  2628  01EC                     u1440:
  2629  01EC                     l1800:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2632  01EC  3003               	movlw	3
  2633  01ED  00A8               	movwf	??__doprnt
  2634  01EE  0828               	movf	??__doprnt,w
  2635  01EF  04AB               	iorwf	__doprnt@flag,f
  2636  01F0                     l1802:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2639  01F0  09AD               	comf	__doprnt@val,f
  2640  01F1  09AE               	comf	__doprnt@val+1,f
  2641  01F2  0AAD               	incf	__doprnt@val,f
  2642  01F3  1903               	skipnz
  2643  01F4  0AAE               	incf	__doprnt@val+1,f
  2644  01F5                     l1804:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2647  01F5  01AF               	clrf	__doprnt@c
  2648  01F6  0AAF               	incf	__doprnt@c,f
  2649  01F7                     l1810:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2652  01F7  082F               	movf	__doprnt@c,w
  2653  01F8  00A8               	movwf	??__doprnt
  2654  01F9  0728               	addwf	??__doprnt,w
  2655  01FA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2656  01FB  0084               	movwf	4
  2657  01FC  120A  118A  2300  120A  118A  	fcall	stringdir
  2658  0201  00A9               	movwf	??__doprnt+1
  2659  0202  120A  118A  2300  120A  118A  	fcall	stringdir
  2660  0207  00AA               	movwf	??__doprnt+2
  2661  0208  082A               	movf	??__doprnt+2,w
  2662  0209  022E               	subwf	__doprnt@val+1,w
  2663  020A  1D03               	skipz
  2664  020B  2A0E               	goto	u1455
  2665  020C  0829               	movf	??__doprnt+1,w
  2666  020D  022D               	subwf	__doprnt@val,w
  2667  020E                     u1455:
  2668  020E  1803               	skipnc
  2669  020F  2A11               	goto	u1451
  2670  0210  2A12               	goto	u1450
  2671  0211                     u1451:
  2672  0211  2A13               	goto	l1814
  2673  0212                     u1450:
  2674  0212  2A1D               	goto	l1816
  2675  0213                     l1814:
  2676  0213  3001               	movlw	1
  2677  0214  00A8               	movwf	??__doprnt
  2678  0215  0828               	movf	??__doprnt,w
  2679  0216  07AF               	addwf	__doprnt@c,f
  2680  0217  3005               	movlw	5
  2681  0218  062F               	xorwf	__doprnt@c,w
  2682  0219  1D03               	btfss	3,2
  2683  021A  2A1C               	goto	u1461
  2684  021B  2A1D               	goto	u1460
  2685  021C                     u1461:
  2686  021C  29F7               	goto	l1810
  2687  021D                     u1460:
  2688  021D                     l1816:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2691  021D  082B               	movf	__doprnt@flag,w
  2692  021E  3903               	andlw	3
  2693  021F  1903               	btfsc	3,2
  2694  0220  2A22               	goto	u1471
  2695  0221  2A23               	goto	u1470
  2696  0222                     u1471:
  2697  0222  2A46               	goto	l1826
  2698  0223                     u1470:
  2699  0223                     l1818:
  2700  0223  0A30               	incf	__doprnt@pb,w
  2701  0224  0084               	movwf	4
  2702  0225  1383               	bcf	3,7	;select IRP bank0
  2703  0226  0800               	movf	0,w
  2704  0227  1903               	btfsc	3,2
  2705  0228  2A2A               	goto	u1481
  2706  0229  2A2B               	goto	u1480
  2707  022A                     u1481:
  2708  022A  2A38               	goto	l1822
  2709  022B                     u1480:
  2710  022B                     l1820:
  2711  022B  302D               	movlw	45
  2712  022C  00A8               	movwf	??__doprnt
  2713  022D  0828               	movf	??__doprnt,w
  2714  022E  00F2               	movwf	putch@dato
  2715  022F  0A30               	incf	__doprnt@pb,w
  2716  0230  0084               	movwf	4
  2717  0231  0800               	movf	0,w
  2718  0232  120A  118A  2025  120A  118A  	fcall	fptable
  2719  0237  2A46               	goto	l1826
  2720  0238                     l1822:
  2721  0238  302D               	movlw	45
  2722  0239  00A8               	movwf	??__doprnt
  2723  023A  0830               	movf	__doprnt@pb,w
  2724  023B  0084               	movwf	4
  2725  023C  0800               	movf	0,w
  2726  023D  0084               	movwf	4
  2727  023E  0828               	movf	??__doprnt,w
  2728  023F  0080               	movwf	0
  2729  0240                     l1824:
  2730  0240  3001               	movlw	1
  2731  0241  00A8               	movwf	??__doprnt
  2732  0242  0830               	movf	__doprnt@pb,w
  2733  0243  0084               	movwf	4
  2734  0244  0828               	movf	??__doprnt,w
  2735  0245  0780               	addwf	0,f
  2736  0246                     l1826:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2739  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0248  082F               	movf	__doprnt@c,w
  2742  0249  00A8               	movwf	??__doprnt
  2743  024A  0828               	movf	??__doprnt,w
  2744  024B  00AC               	movwf	__doprnt@prec
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2747  024C  2AA0               	goto	l1838
  2748  024D                     l1828:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2751  024D  300A               	movlw	10
  2752  024E  00A0               	movwf	___lwmod@divisor
  2753  024F  3000               	movlw	0
  2754  0250  00A1               	movwf	___lwmod@divisor+1
  2755  0251  082C               	movf	__doprnt@prec,w
  2756  0252  00A8               	movwf	??__doprnt
  2757  0253  0728               	addwf	??__doprnt,w
  2758  0254  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2759  0255  0084               	movwf	4
  2760  0256  120A  118A  2300  120A  118A  	fcall	stringdir
  2761  025B  00F2               	movwf	___lwdiv@divisor
  2762  025C  120A  118A  2300  120A  118A  	fcall	stringdir
  2763  0261  00F3               	movwf	___lwdiv@divisor+1
  2764  0262  082E               	movf	__doprnt@val+1,w
  2765  0263  00F5               	movwf	___lwdiv@dividend+1
  2766  0264  082D               	movf	__doprnt@val,w
  2767  0265  00F4               	movwf	___lwdiv@dividend
  2768  0266  120A  118A  256C  120A  118A  	fcall	___lwdiv
  2769  026B  0873               	movf	?___lwdiv+1,w
  2770  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2771  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2772  026E  00A3               	movwf	___lwmod@dividend+1
  2773  026F  0872               	movf	?___lwdiv,w
  2774  0270  00A2               	movwf	___lwmod@dividend
  2775  0271  120A  118A  25ED  120A  118A  	fcall	___lwmod
  2776  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0278  0820               	movf	?___lwmod,w
  2779  0279  3E30               	addlw	48
  2780  027A  00A9               	movwf	??__doprnt+1
  2781  027B  0829               	movf	??__doprnt+1,w
  2782  027C  00AF               	movwf	__doprnt@c
  2783  027D                     l1830:
  2784  027D  0A30               	incf	__doprnt@pb,w
  2785  027E  0084               	movwf	4
  2786  027F  1383               	bcf	3,7	;select IRP bank0
  2787  0280  0800               	movf	0,w
  2788  0281  1903               	btfsc	3,2
  2789  0282  2A84               	goto	u1491
  2790  0283  2A85               	goto	u1490
  2791  0284                     u1491:
  2792  0284  2A92               	goto	l1834
  2793  0285                     u1490:
  2794  0285                     l1832:
  2795  0285  082F               	movf	__doprnt@c,w
  2796  0286  00A8               	movwf	??__doprnt
  2797  0287  0828               	movf	??__doprnt,w
  2798  0288  00F2               	movwf	putch@dato
  2799  0289  0A30               	incf	__doprnt@pb,w
  2800  028A  0084               	movwf	4
  2801  028B  0800               	movf	0,w
  2802  028C  120A  118A  2025  120A  118A  	fcall	fptable
  2803  0291  2AA0               	goto	l1838
  2804  0292                     l1834:
  2805  0292  082F               	movf	__doprnt@c,w
  2806  0293  00A8               	movwf	??__doprnt
  2807  0294  0830               	movf	__doprnt@pb,w
  2808  0295  0084               	movwf	4
  2809  0296  0800               	movf	0,w
  2810  0297  0084               	movwf	4
  2811  0298  0828               	movf	??__doprnt,w
  2812  0299  0080               	movwf	0
  2813  029A                     l1836:
  2814  029A  3001               	movlw	1
  2815  029B  00A8               	movwf	??__doprnt
  2816  029C  0830               	movf	__doprnt@pb,w
  2817  029D  0084               	movwf	4
  2818  029E  0828               	movf	??__doprnt,w
  2819  029F  0780               	addwf	0,f
  2820  02A0                     l1838:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2823  02A0  30FF               	movlw	255
  2824  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2825  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2826  02A3  00A8               	movwf	??__doprnt
  2827  02A4  0828               	movf	??__doprnt,w
  2828  02A5  07AC               	addwf	__doprnt@prec,f
  2829  02A6  0A2C               	incf	__doprnt@prec,w
  2830  02A7  1D03               	btfss	3,2
  2831  02A8  2AAA               	goto	u1501
  2832  02A9  2AAB               	goto	u1500
  2833  02AA                     u1501:
  2834  02AA  2A4D               	goto	l1828
  2835  02AB                     u1500:
  2836  02AB                     l1840:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2839  02AB  3001               	movlw	1
  2840  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2841  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2842  02AE  07A6               	addwf	__doprnt@f,f
  2843  02AF  30FF               	movlw	-1
  2844  02B0  0726               	addwf	__doprnt@f,w
  2845  02B1  0084               	movwf	4
  2846  02B2  120A  118A  2300  120A  118A  	fcall	stringdir
  2847  02B7  00A8               	movwf	??__doprnt
  2848  02B8  0828               	movf	??__doprnt,w
  2849  02B9  00AF               	movwf	__doprnt@c
  2850  02BA  082F               	movf	__doprnt@c,w
  2851  02BB  1D03               	btfss	3,2
  2852  02BC  2ABE               	goto	u1511
  2853  02BD  2ABF               	goto	u1510
  2854  02BE                     u1511:
  2855  02BE  2990               	goto	l1780
  2856  02BF                     u1510:
  2857  02BF                     l1842:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2860  02BF  01A6               	clrf	?__doprnt
  2861  02C0  01A7               	clrf	?__doprnt+1
  2862  02C1                     l758:
  2863  02C1  0008               	return
  2864  02C2                     __end_of__doprnt:
  2865                           
  2866                           	psect	text11
  2867  0732                     __ptext11:	
  2868 ;; *************** function _putch *****************
  2869 ;; Defined at:
  2870 ;;		line 128 in file "main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  dato            1    2[COMMON] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         1       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_printf
  2895 ;;		__doprnt
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _putch
  2901  0732                     _putch:
  2902  0732                     l1300:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _putch: [wreg]
  2905                           
  2906  0732                     l122:	
  2907                           ;main.c: 129:     while(TXIF == 0);
  2908                           
  2909  0732  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0733  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0734  1E0C               	btfss	12,4	;volatile
  2912  0735  2F37               	goto	u701
  2913  0736  2F38               	goto	u700
  2914  0737                     u701:
  2915  0737  2F32               	goto	l122
  2916  0738                     u700:
  2917  0738                     l1302:
  2918                           
  2919                           ;main.c: 130:     TXREG = dato;
  2920  0738  0872               	movf	putch@dato,w
  2921  0739  0099               	movwf	25	;volatile
  2922  073A                     l125:
  2923  073A  0008               	return
  2924  073B                     __end_of_putch:
  2925                           
  2926                           	psect	text12
  2927  05ED                     __ptext12:	
  2928 ;; *************** function ___lwmod *****************
  2929 ;; Defined at:
  2930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  divisor         2    0[BANK0 ] unsigned int 
  2933 ;;  dividend        2    2[BANK0 ] unsigned int 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  counter         1    5[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    0[BANK0 ] unsigned int 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       4       0       0       0
  2946 ;;      Locals:         0       1       0       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       6       0       0       0
  2949 ;;Total ram usage:        6 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		__doprnt
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function ___lwmod
  2961  05ED                     ___lwmod:
  2962  05ED                     l1756:	
  2963                           ;incstack = 0
  2964                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2965                           
  2966  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2967  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2968  05EF  0820               	movf	___lwmod@divisor,w
  2969  05F0  0421               	iorwf	___lwmod@divisor+1,w
  2970  05F1  1903               	btfsc	3,2
  2971  05F2  2DF4               	goto	u1361
  2972  05F3  2DF5               	goto	u1360
  2973  05F4                     u1361:
  2974  05F4  2E24               	goto	l1774
  2975  05F5                     u1360:
  2976  05F5                     l1758:
  2977  05F5  01A5               	clrf	___lwmod@counter
  2978  05F6  0AA5               	incf	___lwmod@counter,f
  2979  05F7  2E03               	goto	l1764
  2980  05F8                     l1760:
  2981  05F8  3001               	movlw	1
  2982  05F9                     u1375:
  2983  05F9  1003               	clrc
  2984  05FA  0DA0               	rlf	___lwmod@divisor,f
  2985  05FB  0DA1               	rlf	___lwmod@divisor+1,f
  2986  05FC  3EFF               	addlw	-1
  2987  05FD  1D03               	skipz
  2988  05FE  2DF9               	goto	u1375
  2989  05FF                     l1762:
  2990  05FF  3001               	movlw	1
  2991  0600  00A4               	movwf	??___lwmod
  2992  0601  0824               	movf	??___lwmod,w
  2993  0602  07A5               	addwf	___lwmod@counter,f
  2994  0603                     l1764:
  2995  0603  1FA1               	btfss	___lwmod@divisor+1,7
  2996  0604  2E06               	goto	u1381
  2997  0605  2E07               	goto	u1380
  2998  0606                     u1381:
  2999  0606  2DF8               	goto	l1760
  3000  0607                     u1380:
  3001  0607                     l1766:
  3002  0607  0821               	movf	___lwmod@divisor+1,w
  3003  0608  0223               	subwf	___lwmod@dividend+1,w
  3004  0609  1D03               	skipz
  3005  060A  2E0D               	goto	u1395
  3006  060B  0820               	movf	___lwmod@divisor,w
  3007  060C  0222               	subwf	___lwmod@dividend,w
  3008  060D                     u1395:
  3009  060D  1C03               	skipc
  3010  060E  2E10               	goto	u1391
  3011  060F  2E11               	goto	u1390
  3012  0610                     u1391:
  3013  0610  2E17               	goto	l1770
  3014  0611                     u1390:
  3015  0611                     l1768:
  3016  0611  0820               	movf	___lwmod@divisor,w
  3017  0612  02A2               	subwf	___lwmod@dividend,f
  3018  0613  0821               	movf	___lwmod@divisor+1,w
  3019  0614  1C03               	skipc
  3020  0615  03A3               	decf	___lwmod@dividend+1,f
  3021  0616  02A3               	subwf	___lwmod@dividend+1,f
  3022  0617                     l1770:
  3023  0617  3001               	movlw	1
  3024  0618                     u1405:
  3025  0618  1003               	clrc
  3026  0619  0CA1               	rrf	___lwmod@divisor+1,f
  3027  061A  0CA0               	rrf	___lwmod@divisor,f
  3028  061B  3EFF               	addlw	-1
  3029  061C  1D03               	skipz
  3030  061D  2E18               	goto	u1405
  3031  061E                     l1772:
  3032  061E  3001               	movlw	1
  3033  061F  02A5               	subwf	___lwmod@counter,f
  3034  0620  1D03               	btfss	3,2
  3035  0621  2E23               	goto	u1411
  3036  0622  2E24               	goto	u1410
  3037  0623                     u1411:
  3038  0623  2E07               	goto	l1766
  3039  0624                     u1410:
  3040  0624                     l1774:
  3041  0624  0823               	movf	___lwmod@dividend+1,w
  3042  0625  00A1               	movwf	?___lwmod+1
  3043  0626  0822               	movf	___lwmod@dividend,w
  3044  0627  00A0               	movwf	?___lwmod
  3045  0628                     l525:
  3046  0628  0008               	return
  3047  0629                     __end_of___lwmod:
  3048                           
  3049                           	psect	text13
  3050  056C                     __ptext13:	
  3051 ;; *************** function ___lwdiv *****************
  3052 ;; Defined at:
  3053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  divisor         2    2[COMMON] unsigned int 
  3056 ;;  dividend        2    4[COMMON] unsigned int 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  quotient        2    7[COMMON] unsigned int 
  3059 ;;  counter         1    9[COMMON] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    2[COMMON] unsigned int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         4       0       0       0       0
  3070 ;;      Locals:         3       0       0       0       0
  3071 ;;      Temps:          1       0       0       0       0
  3072 ;;      Totals:         8       0       0       0       0
  3073 ;;Total ram usage:        8 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		__doprnt
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function ___lwdiv
  3085  056C                     ___lwdiv:
  3086  056C                     l1306:	
  3087                           ;incstack = 0
  3088                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3089                           
  3090  056C  01F7               	clrf	___lwdiv@quotient
  3091  056D  01F8               	clrf	___lwdiv@quotient+1
  3092  056E                     l1308:
  3093  056E  0872               	movf	___lwdiv@divisor,w
  3094  056F  0473               	iorwf	___lwdiv@divisor+1,w
  3095  0570  1903               	btfsc	3,2
  3096  0571  2D73               	goto	u711
  3097  0572  2D74               	goto	u710
  3098  0573                     u711:
  3099  0573  2DAB               	goto	l1328
  3100  0574                     u710:
  3101  0574                     l1310:
  3102  0574  01F9               	clrf	___lwdiv@counter
  3103  0575  0AF9               	incf	___lwdiv@counter,f
  3104  0576  2D82               	goto	l1316
  3105  0577                     l1312:
  3106  0577  3001               	movlw	1
  3107  0578                     u725:
  3108  0578  1003               	clrc
  3109  0579  0DF2               	rlf	___lwdiv@divisor,f
  3110  057A  0DF3               	rlf	___lwdiv@divisor+1,f
  3111  057B  3EFF               	addlw	-1
  3112  057C  1D03               	skipz
  3113  057D  2D78               	goto	u725
  3114  057E                     l1314:
  3115  057E  3001               	movlw	1
  3116  057F  00F6               	movwf	??___lwdiv
  3117  0580  0876               	movf	??___lwdiv,w
  3118  0581  07F9               	addwf	___lwdiv@counter,f
  3119  0582                     l1316:
  3120  0582  1FF3               	btfss	___lwdiv@divisor+1,7
  3121  0583  2D85               	goto	u731
  3122  0584  2D86               	goto	u730
  3123  0585                     u731:
  3124  0585  2D77               	goto	l1312
  3125  0586                     u730:
  3126  0586                     l1318:
  3127  0586  3001               	movlw	1
  3128  0587                     u745:
  3129  0587  1003               	clrc
  3130  0588  0DF7               	rlf	___lwdiv@quotient,f
  3131  0589  0DF8               	rlf	___lwdiv@quotient+1,f
  3132  058A  3EFF               	addlw	-1
  3133  058B  1D03               	skipz
  3134  058C  2D87               	goto	u745
  3135  058D  0873               	movf	___lwdiv@divisor+1,w
  3136  058E  0275               	subwf	___lwdiv@dividend+1,w
  3137  058F  1D03               	skipz
  3138  0590  2D93               	goto	u755
  3139  0591  0872               	movf	___lwdiv@divisor,w
  3140  0592  0274               	subwf	___lwdiv@dividend,w
  3141  0593                     u755:
  3142  0593  1C03               	skipc
  3143  0594  2D96               	goto	u751
  3144  0595  2D97               	goto	u750
  3145  0596                     u751:
  3146  0596  2D9E               	goto	l1324
  3147  0597                     u750:
  3148  0597                     l1320:
  3149  0597  0872               	movf	___lwdiv@divisor,w
  3150  0598  02F4               	subwf	___lwdiv@dividend,f
  3151  0599  0873               	movf	___lwdiv@divisor+1,w
  3152  059A  1C03               	skipc
  3153  059B  03F5               	decf	___lwdiv@dividend+1,f
  3154  059C  02F5               	subwf	___lwdiv@dividend+1,f
  3155  059D                     l1322:
  3156  059D  1477               	bsf	___lwdiv@quotient,0
  3157  059E                     l1324:
  3158  059E  3001               	movlw	1
  3159  059F                     u765:
  3160  059F  1003               	clrc
  3161  05A0  0CF3               	rrf	___lwdiv@divisor+1,f
  3162  05A1  0CF2               	rrf	___lwdiv@divisor,f
  3163  05A2  3EFF               	addlw	-1
  3164  05A3  1D03               	skipz
  3165  05A4  2D9F               	goto	u765
  3166  05A5                     l1326:
  3167  05A5  3001               	movlw	1
  3168  05A6  02F9               	subwf	___lwdiv@counter,f
  3169  05A7  1D03               	btfss	3,2
  3170  05A8  2DAA               	goto	u771
  3171  05A9  2DAB               	goto	u770
  3172  05AA                     u771:
  3173  05AA  2D86               	goto	l1318
  3174  05AB                     u770:
  3175  05AB                     l1328:
  3176  05AB  0878               	movf	___lwdiv@quotient+1,w
  3177  05AC  00F3               	movwf	?___lwdiv+1
  3178  05AD  0877               	movf	___lwdiv@quotient,w
  3179  05AE  00F2               	movwf	?___lwdiv
  3180  05AF                     l515:
  3181  05AF  0008               	return
  3182  05B0                     __end_of___lwdiv:
  3183                           
  3184                           	psect	text14
  3185  03B1                     __ptext14:	
  3186 ;; *************** function _atoi *****************
  3187 ;; Defined at:
  3188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  s               1    wreg     PTR const unsigned char 
  3191 ;;		 -> concatenado@BFFR1(20), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3194 ;;		 -> concatenado@BFFR1(20), 
  3195 ;;  a               2    3[BANK0 ] int 
  3196 ;;  sign            1    2[BANK0 ] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    8[COMMON] int 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         2       0       0       0       0
  3207 ;;      Locals:         0       4       0       0       0
  3208 ;;      Temps:          0       2       0       0       0
  3209 ;;      Totals:         2       6       0       0       0
  3210 ;;Total ram usage:        8 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		___wmul
  3215 ;;		_isdigit
  3216 ;; This function is called by:
  3217 ;;		_concatenado
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _atoi
  3223  03B1                     _atoi:
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3227                           ;atoi@s stored from wreg
  3228  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3229  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3230  03B3  00A5               	movwf	atoi@s
  3231  03B4                     l1862:
  3232  03B4  2BB9               	goto	l1866
  3233  03B5                     l1864:
  3234  03B5  3001               	movlw	1
  3235  03B6  00A0               	movwf	??_atoi
  3236  03B7  0820               	movf	??_atoi,w
  3237  03B8  07A5               	addwf	atoi@s,f
  3238  03B9                     l1866:
  3239  03B9  0825               	movf	atoi@s,w
  3240  03BA  0084               	movwf	4
  3241  03BB  3020               	movlw	32
  3242  03BC  1383               	bcf	3,7	;select IRP bank0
  3243  03BD  0600               	xorwf	0,w
  3244  03BE  1903               	btfsc	3,2
  3245  03BF  2BC1               	goto	u1521
  3246  03C0  2BC2               	goto	u1520
  3247  03C1                     u1521:
  3248  03C1  2BB5               	goto	l1864
  3249  03C2                     u1520:
  3250  03C2                     l1868:
  3251  03C2  0825               	movf	atoi@s,w
  3252  03C3  0084               	movwf	4
  3253  03C4  3009               	movlw	9
  3254  03C5  0600               	xorwf	0,w
  3255  03C6  1903               	btfsc	3,2
  3256  03C7  2BC9               	goto	u1531
  3257  03C8  2BCA               	goto	u1530
  3258  03C9                     u1531:
  3259  03C9  2BB5               	goto	l1864
  3260  03CA                     u1530:
  3261  03CA                     l1870:
  3262  03CA  01A3               	clrf	atoi@a
  3263  03CB  01A4               	clrf	atoi@a+1
  3264  03CC  01A2               	clrf	atoi@sign
  3265  03CD                     l1872:
  3266  03CD  0825               	movf	atoi@s,w
  3267  03CE  0084               	movwf	4
  3268  03CF  302D               	movlw	45
  3269  03D0  0600               	xorwf	0,w
  3270  03D1  1D03               	btfss	3,2
  3271  03D2  2BD4               	goto	u1541
  3272  03D3  2BD5               	goto	u1540
  3273  03D4                     u1541:
  3274  03D4  2BDE               	goto	l1876
  3275  03D5                     u1540:
  3276  03D5                     l1874:
  3277  03D5  3001               	movlw	1
  3278  03D6  00A0               	movwf	??_atoi
  3279  03D7  0820               	movf	??_atoi,w
  3280  03D8  07A2               	addwf	atoi@sign,f
  3281  03D9  3001               	movlw	1
  3282  03DA  00A0               	movwf	??_atoi
  3283  03DB  0820               	movf	??_atoi,w
  3284  03DC  07A5               	addwf	atoi@s,f
  3285  03DD  2C10               	goto	l1884
  3286  03DE                     l1876:
  3287  03DE  0825               	movf	atoi@s,w
  3288  03DF  0084               	movwf	4
  3289  03E0  302B               	movlw	43
  3290  03E1  0600               	xorwf	0,w
  3291  03E2  1D03               	btfss	3,2
  3292  03E3  2BE5               	goto	u1551
  3293  03E4  2BE6               	goto	u1550
  3294  03E5                     u1551:
  3295  03E5  2C10               	goto	l1884
  3296  03E6                     u1550:
  3297  03E6                     l1878:
  3298  03E6  3001               	movlw	1
  3299  03E7  00A0               	movwf	??_atoi
  3300  03E8  0820               	movf	??_atoi,w
  3301  03E9  07A5               	addwf	atoi@s,f
  3302  03EA  2C10               	goto	l1884
  3303  03EB                     l1880:
  3304  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3305  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3306  03ED  0825               	movf	atoi@s,w
  3307  03EE  0084               	movwf	4
  3308  03EF  0824               	movf	atoi@a+1,w
  3309  03F0  00F3               	movwf	___wmul@multiplier+1
  3310  03F1  0823               	movf	atoi@a,w
  3311  03F2  00F2               	movwf	___wmul@multiplier
  3312  03F3  300A               	movlw	10
  3313  03F4  00F4               	movwf	___wmul@multiplicand
  3314  03F5  3000               	movlw	0
  3315  03F6  00F5               	movwf	___wmul@multiplicand+1
  3316  03F7  120A  118A  268D  120A  118A  	fcall	___wmul
  3317  03FC  1383               	bcf	3,7	;select IRP bank0
  3318  03FD  0800               	movf	0,w
  3319  03FE  0772               	addwf	?___wmul,w
  3320  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0400  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0401  00A0               	movwf	??_atoi
  3323  0402  3000               	movlw	0
  3324  0403  1803               	skipnc
  3325  0404  3001               	movlw	1
  3326  0405  0773               	addwf	?___wmul+1,w
  3327  0406  00A1               	movwf	??_atoi+1
  3328  0407  0820               	movf	??_atoi,w
  3329  0408  3ED0               	addlw	208
  3330  0409  00A3               	movwf	atoi@a
  3331  040A  0821               	movf	??_atoi+1,w
  3332  040B  1803               	skipnc
  3333  040C  3E01               	addlw	1
  3334  040D  3EFF               	addlw	255
  3335  040E  00A4               	movwf	atoi@a+1
  3336  040F  2BE6               	goto	l1878
  3337  0410                     l1884:
  3338  0410  0825               	movf	atoi@s,w
  3339  0411  0084               	movwf	4
  3340  0412  0800               	movf	0,w
  3341  0413  120A  118A  2720  120A  118A  	fcall	_isdigit
  3342  0418  1803               	btfsc	3,0
  3343  0419  2C1B               	goto	u1561
  3344  041A  2C1C               	goto	u1560
  3345  041B                     u1561:
  3346  041B  2BEB               	goto	l1880
  3347  041C                     u1560:
  3348  041C                     l1886:
  3349  041C  1283               	bcf	3,5	;RP0=0, select bank0
  3350  041D  1303               	bcf	3,6	;RP1=0, select bank0
  3351  041E  0822               	movf	atoi@sign,w
  3352  041F  1903               	btfsc	3,2
  3353  0420  2C22               	goto	u1571
  3354  0421  2C23               	goto	u1570
  3355  0422                     u1571:
  3356  0422  2C2F               	goto	l1892
  3357  0423                     u1570:
  3358  0423                     l1888:
  3359  0423  0923               	comf	atoi@a,w
  3360  0424  00A0               	movwf	??_atoi
  3361  0425  0924               	comf	atoi@a+1,w
  3362  0426  00A1               	movwf	??_atoi+1
  3363  0427  0AA0               	incf	??_atoi,f
  3364  0428  1903               	skipnz
  3365  0429  0AA1               	incf	??_atoi+1,f
  3366  042A  0820               	movf	??_atoi,w
  3367  042B  00F8               	movwf	?_atoi
  3368  042C  0821               	movf	??_atoi+1,w
  3369  042D  00F9               	movwf	?_atoi+1
  3370  042E  2C33               	goto	l706
  3371  042F                     l1892:
  3372  042F  0824               	movf	atoi@a+1,w
  3373  0430  00F9               	movwf	?_atoi+1
  3374  0431  0823               	movf	atoi@a,w
  3375  0432  00F8               	movwf	?_atoi
  3376  0433                     l706:
  3377  0433  0008               	return
  3378  0434                     __end_of_atoi:
  3379                           
  3380                           	psect	text15
  3381  0720                     __ptext15:	
  3382 ;; *************** function _isdigit *****************
  3383 ;; Defined at:
  3384 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  c               1    wreg     unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  c               1    3[COMMON] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;		None               void
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       0       0       0
  3399 ;;      Locals:         2       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0
  3401 ;;      Totals:         2       0       0       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_atoi
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _isdigit
  3414  0720                     _isdigit:
  3415                           
  3416                           ;incstack = 0
  3417                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3418                           ;isdigit@c stored from wreg
  3419  0720  00F3               	movwf	isdigit@c
  3420  0721                     l1368:
  3421  0721  01F2               	clrf	_isdigit$934
  3422  0722                     l1370:
  3423  0722  303A               	movlw	58
  3424  0723  0273               	subwf	isdigit@c,w
  3425  0724  1803               	skipnc
  3426  0725  2F27               	goto	u881
  3427  0726  2F28               	goto	u880
  3428  0727                     u881:
  3429  0727  2F30               	goto	l1376
  3430  0728                     u880:
  3431  0728                     l1372:
  3432  0728  3030               	movlw	48
  3433  0729  0273               	subwf	isdigit@c,w
  3434  072A  1C03               	skipc
  3435  072B  2F2D               	goto	u891
  3436  072C  2F2E               	goto	u890
  3437  072D                     u891:
  3438  072D  2F30               	goto	l1376
  3439  072E                     u890:
  3440  072E                     l1374:
  3441  072E  01F2               	clrf	_isdigit$934
  3442  072F  0AF2               	incf	_isdigit$934,f
  3443  0730                     l1376:
  3444  0730  0C72               	rrf	_isdigit$934,w
  3445  0731                     l711:
  3446  0731  0008               	return
  3447  0732                     __end_of_isdigit:
  3448                           
  3449                           	psect	text16
  3450  068D                     __ptext16:	
  3451 ;; *************** function ___wmul *****************
  3452 ;; Defined at:
  3453 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  multiplier      2    2[COMMON] unsigned int 
  3456 ;;  multiplicand    2    4[COMMON] unsigned int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  product         2    6[COMMON] unsigned int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    2[COMMON] unsigned int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         4       0       0       0       0
  3469 ;;      Locals:         2       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0
  3471 ;;      Totals:         6       0       0       0       0
  3472 ;;Total ram usage:        6 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_atoi
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           
  3483                           ;psect for function ___wmul
  3484  068D                     ___wmul:
  3485  068D                     l1354:	
  3486                           ;incstack = 0
  3487                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3488                           
  3489  068D  01F6               	clrf	___wmul@product
  3490  068E  01F7               	clrf	___wmul@product+1
  3491  068F                     l1356:
  3492  068F  1C72               	btfss	___wmul@multiplier,0
  3493  0690  2E92               	goto	u841
  3494  0691  2E93               	goto	u840
  3495  0692                     u841:
  3496  0692  2E99               	goto	l243
  3497  0693                     u840:
  3498  0693                     l1358:
  3499  0693  0874               	movf	___wmul@multiplicand,w
  3500  0694  07F6               	addwf	___wmul@product,f
  3501  0695  1803               	skipnc
  3502  0696  0AF7               	incf	___wmul@product+1,f
  3503  0697  0875               	movf	___wmul@multiplicand+1,w
  3504  0698  07F7               	addwf	___wmul@product+1,f
  3505  0699                     l243:
  3506  0699  3001               	movlw	1
  3507  069A                     u855:
  3508  069A  1003               	clrc
  3509  069B  0DF4               	rlf	___wmul@multiplicand,f
  3510  069C  0DF5               	rlf	___wmul@multiplicand+1,f
  3511  069D  3EFF               	addlw	-1
  3512  069E  1D03               	skipz
  3513  069F  2E9A               	goto	u855
  3514  06A0                     l1360:
  3515  06A0  3001               	movlw	1
  3516  06A1                     u865:
  3517  06A1  1003               	clrc
  3518  06A2  0CF3               	rrf	___wmul@multiplier+1,f
  3519  06A3  0CF2               	rrf	___wmul@multiplier,f
  3520  06A4  3EFF               	addlw	-1
  3521  06A5  1D03               	skipz
  3522  06A6  2EA1               	goto	u865
  3523  06A7                     l1362:
  3524  06A7  0872               	movf	___wmul@multiplier,w
  3525  06A8  0473               	iorwf	___wmul@multiplier+1,w
  3526  06A9  1D03               	btfss	3,2
  3527  06AA  2EAC               	goto	u871
  3528  06AB  2EAD               	goto	u870
  3529  06AC                     u871:
  3530  06AC  2E8F               	goto	l1356
  3531  06AD                     u870:
  3532  06AD                     l1364:
  3533  06AD  0877               	movf	___wmul@product+1,w
  3534  06AE  00F3               	movwf	?___wmul+1
  3535  06AF  0876               	movf	___wmul@product,w
  3536  06B0  00F2               	movwf	?___wmul
  3537  06B1                     l245:
  3538  06B1  0008               	return
  3539  06B2                     __end_of___wmul:
  3540                           
  3541                           	psect	text17
  3542  06D3                     __ptext17:	
  3543 ;; *************** function _isr *****************
  3544 ;; Defined at:
  3545 ;;		line 46 in file "main.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0
  3561 ;;      Temps:          2       0       0       0       0
  3562 ;;      Totals:         2       0       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		Interrupt level 1
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _isr
  3574  06D3                     _isr:
  3575  06D3                     i1l1260:
  3576                           
  3577                           ;main.c: 48:     if (RBIF == 1)
  3578  06D3  1C0B               	btfss	11,0	;volatile
  3579  06D4  2ED6               	goto	u67_21
  3580  06D5  2ED7               	goto	u67_20
  3581  06D6                     u67_21:
  3582  06D6  2EE8               	goto	i1l108
  3583  06D7                     u67_20:
  3584  06D7                     i1l1262:
  3585                           
  3586                           ;main.c: 49:     {;main.c: 50:         if (PORTBbits.RB0 == 0)
  3587  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3588  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3589  06D9  1806               	btfsc	6,0	;volatile
  3590  06DA  2EDC               	goto	u68_21
  3591  06DB  2EDD               	goto	u68_20
  3592  06DC                     u68_21:
  3593  06DC  2EE0               	goto	i1l1266
  3594  06DD                     u68_20:
  3595  06DD                     i1l1264:
  3596                           
  3597                           ;main.c: 51:         {;main.c: 52:             PORTD = PORTD + 1;
  3598  06DD  0808               	movf	8,w	;volatile
  3599  06DE  3E01               	addlw	1
  3600  06DF  0088               	movwf	8	;volatile
  3601  06E0                     i1l1266:
  3602                           
  3603                           ;main.c: 54:         if (PORTBbits.RB1 == 0)
  3604  06E0  1886               	btfsc	6,1	;volatile
  3605  06E1  2EE3               	goto	u69_21
  3606  06E2  2EE4               	goto	u69_20
  3607  06E3                     u69_21:
  3608  06E3  2EE7               	goto	i1l1270
  3609  06E4                     u69_20:
  3610  06E4                     i1l1268:
  3611                           
  3612                           ;main.c: 55:         {;main.c: 56:             PORTD = PORTD - 1;
  3613  06E4  0808               	movf	8,w	;volatile
  3614  06E5  3EFF               	addlw	255
  3615  06E6  0088               	movwf	8	;volatile
  3616  06E7                     i1l1270:
  3617                           
  3618                           ;main.c: 58:         INTCONbits.RBIF = 0;
  3619  06E7  100B               	bcf	11,0	;volatile
  3620  06E8                     i1l108:
  3621  06E8  0871               	movf	??_isr+1,w
  3622  06E9  008A               	movwf	10
  3623  06EA  0E70               	swapf	??_isr,w
  3624  06EB  0083               	movwf	3
  3625  06EC  0EFE               	swapf	btemp,f
  3626  06ED  0E7E               	swapf	btemp,w
  3627  06EE  0009               	retfie
  3628  06EF                     __end_of_isr:
  3629  0002                     
  3630                           	psect	intentry
  3631  0004                     __pintentry:	
  3632                           ;incstack = 0
  3633                           ; Regs used in _isr: [wreg+status,2+status,0]
  3634                           
  3635  0004                     interrupt_function:
  3636  007E                     saved_w	set	btemp
  3637  0004  00FE               	movwf	btemp
  3638  0005  0E03               	swapf	3,w
  3639  0006  00F0               	movwf	??_isr
  3640  0007  080A               	movf	10,w
  3641  0008  00F1               	movwf	??_isr+1
  3642  0009  120A  118A  2ED3   	ljmp	_isr
  3643                           
  3644                           	psect	functab
  3645  0025                     __pfunctab:
  3646  0025                     __fptable:
  3647  0025                     fptable:
  3648  0025  00FF               	movwf	(btemp+1)& (0+127)
  3649  0026  3000               	movlw	high fptable
  3650  0027  008A               	movwf	10
  3651  0028  087F               	movf	(btemp+1)& (0+127),w
  3652  0029  0782               	addwf	2,f
  3653  002A                     fpbase:
  3654  002A  282A               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3655  002B                     fp__putch:
  3656  002B  120A  118A  2F32   	ljmp	_putch
  3657  002E                     __end_of__fptable:
  3658  007E                     btemp	set	126	;btemp
  3659  007E                     wtemp0	set	126
  3660                           
  3661                           	psect	config
  3662                           
  3663                           ;Config register CONFIG1 @ 0x2007
  3664                           ;	Oscillator Selection bits
  3665                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3666                           ;	Watchdog Timer Enable bit
  3667                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3668                           ;	Power-up Timer Enable bit
  3669                           ;	PWRTE = OFF, PWRT disabled
  3670                           ;	RE3/MCLR pin function select bit
  3671                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3672                           ;	Code Protection bit
  3673                           ;	CP = OFF, Program memory code protection is disabled
  3674                           ;	Data Code Protection bit
  3675                           ;	CPD = OFF, Data memory code protection is disabled
  3676                           ;	Brown Out Reset Selection bits
  3677                           ;	BOREN = OFF, BOR disabled
  3678                           ;	Internal External Switchover bit
  3679                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3680                           ;	Fail-Safe Clock Monitor Enabled bit
  3681                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3682                           ;	Low Voltage Programming Enable bit
  3683                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3684                           ;	In-Circuit Debugger Mode bit
  3685                           ;	DEBUG = 0x1, unprogrammed default
  3686  2007                     	org	8199
  3687  2007  20D4               	dw	8404
  3688                           
  3689                           ;Config register CONFIG2 @ 0x2008
  3690                           ;	Brown-out Reset Selection bit
  3691                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3692                           ;	Flash Program Memory Self Write Enable bits
  3693                           ;	WRT = OFF, Write protection off
  3694  2008                     	org	8200
  3695  2008  3FFF               	dw	16383

Data Sizes:
    Strings     161
    Constant    10
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      77
    BANK1            80      5      13
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[31]), STR_5(CODE[35]), 
		 -> STR_4(CODE[35]), STR_3(CODE[37]), STR_2(CODE[2]), STR_1(CODE[20]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_6(CODE[31]), STR_5(CODE[35]), STR_4(CODE[35]), STR_3(CODE[37]), 
		 -> STR_2(CODE[2]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S936__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S936__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concatenado@BFFR2(BANK0[20]), concatenado@BFFR1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concatenado@BFFR1(BANK0[20]), 


Critical Paths under _main in COMMON

    _mensaje->_division
    _division->___awmod
    _concatenado->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mensaje->_concatenado
    _printf->__doprnt
    _division->___awdiv
    _concatenado->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mensaje

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8623
                            _mensaje
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              5     5      0    8623
                                              0 BANK1      5     5      0
                        _concatenado
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2733
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concatenado                                         47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mensaje
     _concatenado
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      66       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       D       7       16.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      66      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 15 20:30:48 2021

                      _c 00A6                        _d 007B                        _u 00A5  
                      pc 0002             ___awdiv@sign 0021                       _cc 006A  
                     _dd 006B                       _uu 00A4                       _vv 00A3  
                     fsr 0004      ___wmul@multiplicand 0074                      l122 0732  
                    l125 073A                      l151 018B                      l119 0663  
                    l144 00DA                      l136 00B9                      l129 009E  
                    l154 05EC                      l243 0699                      l245 06B1  
                    l157 04A9                      l409 056B                      l515 05AF  
                    l525 0628                      l711 0731                      l720 0709  
                    l706 0433                      l396 0512                      l765 06D2  
                    l758 02C1                      l774 068C                      u700 0738  
                    u701 0737                      u710 0574                      u711 0573  
                    u730 0586                      u731 0585                      u725 0578  
                    u750 0597                      u751 0596                      u840 0693  
                    u841 0692                      u745 0587                      u770 05AB  
                    u771 05AA                      u755 0593                      u765 059F  
                    u870 06AD                      u871 06AC                      u855 069A  
                    u880 0728                      u865 06A1                      u881 0727  
                    u890 072E                      u891 072D                      _isr 06D3  
                    fsr0 0004                      indf 0000             ___awmod@sign 0078  
           concatenado@a 003A             concatenado@b 003C             concatenado@c 0067  
                   l2002 00CE                     l1300 0732                     l2012 00F5  
                   l2004 00D4                     l2020 070A                     l1310 0574  
                   l1302 0738                     l2014 00FB                     l2006 00E0  
                   l2022 070F                     l1320 0597                     l1312 0577  
                   l2016 0151                     l2008 00EF                     l2024 0715  
                   l1322 059D                     l1314 057E                     l1306 056C  
                   l2018 015F                     l2026 0717                     l1324 059E  
                   l1316 0582                     l1308 056E                     l1326 05A5  
                   l1318 0586                     l1360 06A0                     l1328 05AB  
                   l2048 01CF                     l1362 06A7                     l1354 068D  
                   l1370 0722                     l1364 06AD                     l1356 068F  
                   l1372 0728                     l1620 0630                     l1358 0693  
                   l1374 072E                     l1470 0677                     l1630 063F  
                   l1622 0631                     l1376 0730                     l1368 0721  
                   l1800 01EC                     l1472 067F                     l1464 0665  
                   l1560 051F                     l1552 0513                     l1640 0645  
                   l1632 0640                     l1624 063A                     l1810 01F7  
                   l1802 01F0                     l1466 066A                     l1570 0538  
                   l1562 0523                     l1554 0514                     l1650 064A  
                   l1642 0646                     l1634 0641                     l1626 063D  
                   l1618 0629                     l1820 022B                     l1804 01F5  
                   l1468 066E                     l1900 04B1                     l1580 0557  
                   l1572 053C                     l1564 0528                     l1556 0518  
                   l1660 0654                     l1652 064B                     l1644 0647  
                   l1636 0643                     l1628 063E                     l1830 027D  
                   l1822 0238                     l1814 0213                     l1910 04C5  
                   l1902 04B6                     l1574 0540                     l1566 052E  
                   l1582 055D                     l1558 051D                     l1670 065E  
                   l1662 0656                     l1654 064C                     l1646 0648  
                   l1638 0644                     l1760 05F8                     l1832 0285  
                   l1824 0240                     l1816 021D                     l1840 02AB  
                   l1920 04DB                     l1912 04C7                     l1904 04B8  
                   l1584 0562                     l1576 054A                     l1568 0531  
                   l1672 065F                     l1664 0659                     l1656 064D  
                   l1648 0649                     l1770 0617                     l1762 05FF  
                   l1834 0292                     l1818 0223                     l1826 0246  
                   l1842 02BF                     l1850 06B5                     l1930 04FE  
                   l1922 04DF                     l1914 04CD                     l1906 04BC  
                   l1586 0567                     l1578 0550                     l1674 0662  
                   l1666 065A                     l1658 0650                     l1772 061E  
                   l1764 0603                     l1756 05ED                     l1836 029A  
                   l1828 024D                     l1780 0190                     l1852 06B9  
                   l1924 04F0                     l1916 04D0                     l1932 0504  
                   l1908 04C1                     l1940 0435                     l1668 065B  
                   l1870 03CA                     l1862 03B4                     l1766 0607  
                   l1758 05F5                     l1774 0624                     l1838 02A0  
                   l1782 0196                     l1790 01BC                     l1854 06BA  
                   l1934 0509                     l1926 04F6                     l1918 04D7  
                   l1942 0495                     l1950 06F3                     l1880 03EB  
                   l1872 03CD                     l1864 03B5                     l1768 0611  
                   l1784 019E                     l1856 06BE                     l1960 05D0  
                   l1936 050E                     l1928 04F7                     l1944 049B  
                   l1952 06F7                     l1874 03D5                     l1866 03B9  
                   l1794 01BD                     l1786 01AD                     l1778 018F  
                   l1858 06CC                     l1962 05DC                     l1946 04A1  
                   l1954 06FB                     l1970 003C                     l1892 042F  
                   l1884 0410                     l1876 03DE                     l1868 03C2  
                   l1796 01DA                     l1788 01B5                     l1964 05E8  
                   l1948 06F2                     l1980 006A                     l1972 0044  
                   l1886 041C                     l1878 03E6                     l1798 01E8  
                   l1958 05B0                     l1990 0098                     l1982 0070  
                   l1974 004A                     l1888 0423                     l1896 04AA  
                   l1992 00A4                     l1984 007E                     l1976 0058  
                   l1968 002E                     l1898 04AD                     l1994 00AD  
                   l1986 0084                     l1978 005C                     l1996 00B3  
                   l1988 0092                     l1998 00BF                     ?_isr 0070  
                   STR_1 039A                     STR_2 0333                     STR_3 0310  
                   STR_4 0335                     STR_5 0358                     STR_6 037B  
                   STR_7 03AE                     STR_8 03AE                     u1000 0676  
                   u1001 0675                     u1010 068C                     u1011 068B  
                   u1200 052E                     u1201 052D                     u1220 0540  
                   u1221 053F                     u1230 054A                     u1231 0549  
                   u1215 0532                     u1410 0624                     u1250 055D  
                   u1411 0623                     u1251 055C                     u1235 0546  
                   u1500 02AB                     u1420 0196                     u1260 0562  
                   u1180 0518                     u1405 0618                     u1501 02AA  
                   u1421 0195                     u1261 0561                     u1245 0551  
                   u1181 0517                     u1510 02BF                     u1430 019E  
                   u1190 0523                     u1511 02BE                     u1431 019D  
                   u1191 0522                     u1520 03C2                     u1360 05F5  
                   u1440 01EC                     u1600 04CD                     u1521 03C1  
                   u1361 05F4                     u1441 01EB                     u1601 04CC  
                   u1530 03CA                     u1450 0212                     u1531 03C9  
                   u1451 0211                     u1540 03D5                     u1380 0607  
                   u1460 021D                     u1620 04DF                     u1700 00BF  
                   u1541 03D4                     u1381 0606                     u1461 021C  
                   u1621 04DE                     u1701 00BE                     u1550 03E6  
                   u1390 0611                     u1470 0223                     u1710 00CE  
                   u1551 03E5                     u1391 0610                     u1375 05F9  
                   u1471 0222                     u1455 020E                     u1615 04D1  
                   u1711 00CD                     u1560 041C                     u1480 022B  
                   u1640 04F0                     u1720 00D4                     u1561 041B  
                   u1481 022A                     u1641 04EF                     u1721 00D3  
                   u1570 0423                     u1490 0285                     u1730 00E0  
                   u1571 0422                     u1395 060D                     u1491 0284  
                   u1635 04E0                     u1731 00DF                     u1660 0504  
                   u1580 04B1                     u1740 00EF                     u1661 0503  
                   u1645 04EC                     u1581 04B0                     u1741 00EE  
                   u1670 0509                     u1590 04BC                     u1750 00F5  
                   u1671 0508                     u1655 04F8                     u1591 04BB  
                   u1751 00F4                     u1807 0078                     u1760 00FB  
                   u1680 00A4                     u1761 00FA                     u1681 00A3  
                   u1817 008C                     u1690 00B3                     u1827 0159  
                   u1691 00B2                     u1777 0036                     u1787 0052  
                   u1797 0064                     _RBIF 0058                     _RCIF 0065  
                   _TXIF 0064                     _WPUB 0095                     _con1 00A2  
                   _atoi 03B1                     _cont 00A0                     _main 070A  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 0513  
        __end_of___awmod 056C                    _ANSEL 0188          ___awdiv@divisor 0072  
        __end_of___lwdiv 05B0                    i1l108 06E8          __end_of___lwmod 0629  
        ___awdiv@counter 0020                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009          __end_of__doprnt 02C2  
                  _TRISA 0085                    _TRISD 0088                    u67_20 06D7  
                  u67_21 06D6                    u68_20 06DD                    u68_21 06DC  
                  u69_20 06E4                    u69_21 06E3                    _TXREG 0019  
        __end_of_dpowers 0310          __end_of_isdigit 0732          __end_of_mensaje 018C  
                  _valor 00A7                    atoi@a 0023                    _setup 0629  
                  atoi@s 0025                    _putch 0732                    fpbase 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 06D3          __initialization 000F             __end_of_atoi 0434  
           __end_of_main 0720                   ??_atoi 0020                   ??_main 007A  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   i1l1260 06D3                   i1l1270 06E7  
                 i1l1262 06D7                   i1l1264 06DD                   i1l1266 06E0  
                 i1l1268 06E4                   _SPBRGH 009A         __end_of__fptable 002E  
   __size_of_concatenado 003D         __end_of_division 04AA                   ___wmul 068D  
              ??___awdiv 0076                ??___awmod 0076                ??___lwdiv 0076  
              ??___lwmod 0024                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072             __doprnt@flag 002B          ___awmod@counter 0077  
                 _printf 06EF             __doprnt@prec 002C                   _strcat 0664  
                 fptable 0025                   fptotal 0002                ??_isdigit 0072  
              ??_mensaje 00A8                   saved_w 007E                ??_sprintf 0034  
__end_of__initialization 0021           __pcstackCOMMON 0070            __end_of_setup 0664  
          __end_of_putch 073B            division@valor 0079           _OPTION_REGbits 0081  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0072  
                ??_putch 0073               __pbssBANK0 0069               __pbssBANK1 00A0  
             __pmaintext 070A                  ?___wmul 0072               __pintentry 0004  
                ?_printf 0031                  ?_strcat 0072               __stringtab 0300  
              ?_division 0070                  ___awdiv 04AA                  ___awmod 0513  
        __size_of___wmul 0025                  ___lwdiv 056C                  ___lwmod 05ED  
                __doprnt 018C                  __ptext1 0629                  __ptext2 002E  
                __ptext3 06EF                  __ptext4 0434                  __ptext5 0513  
                __ptext6 04AA                  __ptext7 05B0                  __ptext8 0664  
                __ptext9 06B2          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0306                  _isdigit 0720             __size_of_isr 001C  
                _mensaje 002E         ___awmod@dividend 0074                  _residuo 007A  
                _sprintf 06B2     end_of_initialization 0021               ??_division 0024  
              _RCSTAbits 0018                  printf@f 0036                _PORTBbits 0006  
              _TRISBbits 0086            ??_concatenado 003E                _TXSTAbits 0098  
       concatenado@BFFR1 0053         concatenado@BFFR2 003F           __end_of___wmul 06B2  
            _BAUDCTLbits 0187           __end_of_printf 070A           __end_of_strcat 068D  
    start_initialization 000F              __end_of_isr 06EF                 ??___wmul 0076  
    __end_of_concatenado 05ED              __doprnt@val 002D                 ??_printf 0033  
               ??_strcat 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A8        __size_of__fptable 0009  
              __doprnt@c 002F                __doprnt@f 0026        __size_of_division 0076  
       ___lwdiv@dividend 0074                __pfunctab 0025                 ?___awdiv 0072  
               ?___awmod 0072                 ?___lwdiv 0072                 ?___lwmod 0020  
               ?__doprnt 0026                __pstrings 0300                 ?_isdigit 0070  
               ?_mensaje 0070         ___lwdiv@quotient 0077                 ?_sprintf 0031  
         __size_of_setup 003B           __size_of_putch 0009        interrupt_function 0004  
         ___wmul@product 0076                 _IOCBbits 0096              _concatenado 05B0  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0305  
      ___wmul@multiplier 0072         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003C         __size_of__doprnt 0136  
     __end_of__stringtab 0306              _isdigit$934 0072                 __fptable 0025  
             strcat@from 0072         __size_of_isdigit 0012         __size_of_mensaje 015E  
        ___lwdiv@divisor 0072          ___lwdiv@counter 0079                 __ptext10 018C  
               __ptext11 0732                 __ptext12 05ED                 __ptext13 056C  
               __ptext14 03B1                 __ptext15 0720                 __ptext16 068D  
               __ptext17 06D3                 _division 0434                 _completo 0069  
       __size_of_sprintf 0021            __size_of_atoi 0083            __size_of_main 0016  
               atoi@sign 0022                 fp__putch 002B                putch@dato 0072  
             _INTCONbits 000B              _seleccionar 006C                 isdigit@c 0073  
               intlevel1 0025                sprintf@ap 0037                sprintf@pb 0038  
              sprintf@wh 0036         ___lwmod@dividend 0022                stringcode 0300  
             _OSCCONbits 008F                 printf@ap 0035                 printf@pb 0037  
               sprintf@f 0031                 strcat@cp 0075                 strcat@to 0074  
        ___lwmod@divisor 0020          ___lwmod@counter 0025                 stringdir 0300  
               stringtab 0300             ?_concatenado 003A  
