

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 10 12:15:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0013                     _SSPBUF	set	19
   370  0014                     _SSPCON	set	20
   371  0009                     _PORTE	set	9
   372  0007                     _PORTC	set	7
   373  0008                     _PORTD	set	8
   374  0005                     _PORTA	set	5
   375  0006                     _PORTB	set	6
   376  0049                     _RE1	set	73
   377  0048                     _RE0	set	72
   378  0047                     _RD7	set	71
   379  0046                     _RD6	set	70
   380  0045                     _RD5	set	69
   381  0044                     _RD4	set	68
   382  0043                     _RD3	set	67
   383  0042                     _RD2	set	66
   384  0041                     _RD1	set	65
   385  0040                     _RD0	set	64
   386  0063                     _SSPIF	set	99
   387  005E                     _PEIE	set	94
   388  005F                     _GIE	set	95
   389  0091                     _SSPCON2bits	set	145
   390  0087                     _TRISCbits	set	135
   391  0094                     _SSPSTAT	set	148
   392  0093                     _SSPADD	set	147
   393  0091                     _SSPCON2	set	145
   394  008F                     _OSCCONbits	set	143
   395  0088                     _TRISD	set	136
   396  0086                     _TRISB	set	134
   397  0085                     _TRISA	set	133
   398  0463                     _SSPIE	set	1123
   399  043C                     _TRISC4	set	1084
   400  043B                     _TRISC3	set	1083
   401  0189                     _ANSELH	set	393
   402  0188                     _ANSEL	set	392
   403                           
   404                           	psect	cinit
   405  000F                     start_initialization:	
   406                           ; #config settings
   407                           
   408  000F                     __initialization:
   409                           
   410                           ; Clear objects allocated to BANK0
   411  000F  1383               	bcf	3,7	;select IRP bank0
   412  0010  3020               	movlw	low __pbssBANK0
   413  0011  0084               	movwf	4
   414  0012  304B               	movlw	low (__pbssBANK0+43)
   415  0013  120A  118A  2201  120A  118A  	fcall	clear_ram0
   416  0018                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  0018                     __end_of__initialization:
   420  0018  0183               	clrf	3
   421  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK0
   424  0020                     __pbssBANK0:
   425  0020                     _BFFR3:
   426  0020                     	ds	10
   427  002A                     _BFFR2:
   428  002A                     	ds	10
   429  0034                     _BFFR1:
   430  0034                     	ds	10
   431  003E                     _cc2:
   432  003E                     	ds	4
   433  0042                     _cc1:
   434  0042                     	ds	4
   435  0046                     _contador:
   436  0046                     	ds	4
   437  004A                     _prueba:
   438  004A                     	ds	1
   439                           
   440                           	psect	clrtext
   441  0201                     clear_ram0:	
   442                           ;	Called with FSR containing the base address, and
   443                           ;	W with the last address+1
   444                           
   445  0201  0064               	clrwdt	;clear the watchdog before getting into this loop
   446  0202                     clrloop0:
   447  0202  0180               	clrf	0	;clear RAM location pointed to by FSR
   448  0203  0A84               	incf	4,f	;increment pointer
   449  0204  0604               	xorwf	4,w	;XOR with final address
   450  0205  1903               	btfsc	3,2	;have we reached the end yet?
   451  0206  3400               	retlw	0	;all done for this memory range, return
   452  0207  0604               	xorwf	4,w	;XOR again to restore value
   453  0208  2A02               	goto	clrloop0	;do the next byte
   454                           
   455                           	psect	cstackCOMMON
   456  0070                     __pcstackCOMMON:
   457  0070                     ?_setup:
   458  0070                     ?_I2C_Master_Start:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_I2C_Master_Stop:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_isr:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ??_isr:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_I2C_Master_Wait:	
   474                           ; 1 bytes @ 0x0
   475                           
   476                           
   477                           ; 1 bytes @ 0x0
   478  0070                     	ds	2
   479  0072                     ??_I2C_Master_Start:
   480  0072                     ?_I2C_Master_Write:	
   481                           ; 1 bytes @ 0x2
   482                           
   483  0072                     ??_I2C_Master_Stop:	
   484                           ; 1 bytes @ 0x2
   485                           
   486  0072                     ??_I2C_Master_Wait:	
   487                           ; 1 bytes @ 0x2
   488                           
   489  0072                     ?_I2C_Master_Read:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     ?___lldiv:	
   493                           ; 2 bytes @ 0x2
   494                           
   495  0072                     I2C_Master_Write@d:	
   496                           ; 4 bytes @ 0x2
   497                           
   498  0072                     I2C_Master_Read@a:	
   499                           ; 2 bytes @ 0x2
   500                           
   501  0072                     ___lldiv@divisor:	
   502                           ; 2 bytes @ 0x2
   503                           
   504                           
   505                           ; 4 bytes @ 0x2
   506  0072                     	ds	2
   507  0074                     ??_I2C_Master_Write:
   508  0074                     ??_I2C_Master_Read:	
   509                           ; 1 bytes @ 0x4
   510                           
   511                           
   512                           ; 1 bytes @ 0x4
   513  0074                     	ds	2
   514  0076                     I2C_Master_Read@temp:
   515  0076                     ___lldiv@dividend:	
   516                           ; 2 bytes @ 0x6
   517                           
   518                           
   519                           ; 4 bytes @ 0x6
   520  0076                     	ds	4
   521  007A                     ??___lldiv:
   522                           
   523                           ; 1 bytes @ 0xA
   524  007A                     	ds	1
   525  007B                     ??_setup:
   526                           
   527                           	psect	cstackBANK0
   528  004B                     __pcstackBANK0:	
   529                           ; 1 bytes @ 0xB
   530                           
   531  004B                     ___lldiv@quotient:
   532                           
   533                           ; 4 bytes @ 0x0
   534  004B                     	ds	4
   535  004F                     ___lldiv@counter:
   536                           
   537                           ; 1 bytes @ 0x4
   538  004F                     	ds	1
   539  0050                     ?_I2C_Master_Init:
   540  0050                     I2C_Master_Init@c:	
   541                           ; 1 bytes @ 0x5
   542                           
   543                           
   544                           ; 4 bytes @ 0x5
   545  0050                     	ds	4
   546  0054                     ??_I2C_Master_Init:
   547                           
   548                           ; 1 bytes @ 0x9
   549  0054                     	ds	4
   550  0058                     ??_main:
   551                           
   552                           ; 1 bytes @ 0xD
   553  0058                     	ds	3
   554                           
   555                           	psect	maintext
   556  001C                     __pmaintext:	
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 55 in file "mainM.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : B00/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       3       0       0       0
   579 ;;      Totals:         0       3       0       0       0
   580 ;;Total ram usage:        3 bytes
   581 ;; Hardware stack levels required when called:    4
   582 ;; This function calls:
   583 ;;		_I2C_Master_Read
   584 ;;		_I2C_Master_Start
   585 ;;		_I2C_Master_Stop
   586 ;;		_I2C_Master_Write
   587 ;;		_setup
   588 ;; This function is called by:
   589 ;;		Startup code after reset
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _main
   595  001C                     _main:
   596  001C                     l1078:	
   597                           ;incstack = 0
   598                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   599                           
   600                           
   601                           ;mainM.c: 57:     setup();
   602  001C  120A  118A  21AC  120A  118A  	fcall	_setup
   603  0021                     l60:	
   604                           ;mainM.c: 60:     while (1)
   605                           
   606                           
   607                           ;mainM.c: 61:     {;mainM.c: 63:         I2C_Master_Start();
   608  0021  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Start
   609                           
   610                           ;mainM.c: 64:         I2C_Master_Write(0x51);
   611  0026  3051               	movlw	81
   612  0027  00F2               	movwf	I2C_Master_Write@d
   613  0028  3000               	movlw	0
   614  0029  00F3               	movwf	I2C_Master_Write@d+1
   615  002A  120A  118A  21E5  120A  118A  	fcall	_I2C_Master_Write
   616                           
   617                           ;mainM.c: 65:         PORTB = I2C_Master_Read(0);
   618  002F  3000               	movlw	0
   619  0030  00F2               	movwf	I2C_Master_Read@a
   620  0031  00F3               	movwf	I2C_Master_Read@a+1
   621  0032  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Read
   622  0037  0872               	movf	?_I2C_Master_Read,w
   623  0038  1283               	bcf	3,5	;RP0=0, select bank0
   624  0039  1303               	bcf	3,6	;RP1=0, select bank0
   625  003A  0086               	movwf	6	;volatile
   626  003B                     l1080:
   627                           
   628                           ;mainM.c: 66:         prueba = PORTB;
   629  003B  0806               	movf	6,w	;volatile
   630  003C  00D8               	movwf	??_main
   631  003D  0858               	movf	??_main,w
   632  003E  00CA               	movwf	_prueba
   633  003F                     l1082:
   634                           
   635                           ;mainM.c: 67:         I2C_Master_Stop();
   636  003F  120A  118A  21EF  120A  118A  	fcall	_I2C_Master_Stop
   637                           
   638                           ;mainM.c: 68:         _delay((unsigned long)((200)*(4000000/4000.0)));
   639  0044  3002               	movlw	2
   640  0045  1283               	bcf	3,5	;RP0=0, select bank0
   641  0046  1303               	bcf	3,6	;RP1=0, select bank0
   642  0047  00DA               	movwf	??_main+2
   643  0048  3004               	movlw	4
   644  0049  00D9               	movwf	??_main+1
   645  004A  30B9               	movlw	185
   646  004B  00D8               	movwf	??_main
   647  004C                     u347:
   648  004C  0BD8               	decfsz	??_main,f
   649  004D  284C               	goto	u347
   650  004E  0BD9               	decfsz	??_main+1,f
   651  004F  284C               	goto	u347
   652  0050  0BDA               	decfsz	??_main+2,f
   653  0051  284C               	goto	u347
   654  0052  2853               	nop2
   655  0053                     l1084:
   656                           
   657                           ;mainM.c: 71:         I2C_Master_Start();
   658  0053  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Start
   659  0058                     l1086:
   660                           
   661                           ;mainM.c: 72:         I2C_Master_Write(0x61);
   662  0058  3061               	movlw	97
   663  0059  00F2               	movwf	I2C_Master_Write@d
   664  005A  3000               	movlw	0
   665  005B  00F3               	movwf	I2C_Master_Write@d+1
   666  005C  120A  118A  21E5  120A  118A  	fcall	_I2C_Master_Write
   667  0061                     l1088:
   668                           
   669                           ;mainM.c: 73:         PORTA = I2C_Master_Read(0);
   670  0061  3000               	movlw	0
   671  0062  00F2               	movwf	I2C_Master_Read@a
   672  0063  00F3               	movwf	I2C_Master_Read@a+1
   673  0064  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Read
   674  0069  0872               	movf	?_I2C_Master_Read,w
   675  006A  1283               	bcf	3,5	;RP0=0, select bank0
   676  006B  1303               	bcf	3,6	;RP1=0, select bank0
   677  006C  0085               	movwf	5	;volatile
   678  006D                     l1090:
   679                           
   680                           ;mainM.c: 74:         I2C_Master_Stop();
   681  006D  120A  118A  21EF  120A  118A  	fcall	_I2C_Master_Stop
   682                           
   683                           ;mainM.c: 75:         _delay((unsigned long)((200)*(4000000/4000.0)));
   684  0072  3002               	movlw	2
   685  0073  1283               	bcf	3,5	;RP0=0, select bank0
   686  0074  1303               	bcf	3,6	;RP1=0, select bank0
   687  0075  00DA               	movwf	??_main+2
   688  0076  3004               	movlw	4
   689  0077  00D9               	movwf	??_main+1
   690  0078  30B9               	movlw	185
   691  0079  00D8               	movwf	??_main
   692  007A                     u357:
   693  007A  0BD8               	decfsz	??_main,f
   694  007B  287A               	goto	u357
   695  007C  0BD9               	decfsz	??_main+1,f
   696  007D  287A               	goto	u357
   697  007E  0BDA               	decfsz	??_main+2,f
   698  007F  287A               	goto	u357
   699  0080  2881               	nop2
   700  0081                     l1092:
   701                           
   702                           ;mainM.c: 78:         I2C_Master_Start();
   703  0081  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Start
   704  0086                     l1094:
   705                           
   706                           ;mainM.c: 79:         I2C_Master_Write(0x80);
   707  0086  3080               	movlw	128
   708  0087  00F2               	movwf	I2C_Master_Write@d
   709  0088  3000               	movlw	0
   710  0089  00F3               	movwf	I2C_Master_Write@d+1
   711  008A  120A  118A  21E5  120A  118A  	fcall	_I2C_Master_Write
   712  008F                     l1096:
   713                           
   714                           ;mainM.c: 80:         I2C_Master_Write(0xF3);
   715  008F  30F3               	movlw	243
   716  0090  00F2               	movwf	I2C_Master_Write@d
   717  0091  3000               	movlw	0
   718  0092  00F3               	movwf	I2C_Master_Write@d+1
   719  0093  120A  118A  21E5  120A  118A  	fcall	_I2C_Master_Write
   720  0098                     l1098:
   721                           
   722                           ;mainM.c: 81:         I2C_Master_Stop();
   723  0098  120A  118A  21EF  120A  118A  	fcall	_I2C_Master_Stop
   724                           
   725                           ;mainM.c: 82:         _delay((unsigned long)((200)*(4000000/4000.0)));
   726  009D  3002               	movlw	2
   727  009E  1283               	bcf	3,5	;RP0=0, select bank0
   728  009F  1303               	bcf	3,6	;RP1=0, select bank0
   729  00A0  00DA               	movwf	??_main+2
   730  00A1  3004               	movlw	4
   731  00A2  00D9               	movwf	??_main+1
   732  00A3  30B9               	movlw	185
   733  00A4  00D8               	movwf	??_main
   734  00A5                     u367:
   735  00A5  0BD8               	decfsz	??_main,f
   736  00A6  28A5               	goto	u367
   737  00A7  0BD9               	decfsz	??_main+1,f
   738  00A8  28A5               	goto	u367
   739  00A9  0BDA               	decfsz	??_main+2,f
   740  00AA  28A5               	goto	u367
   741  00AB  28AC               	nop2
   742  00AC                     l1100:
   743                           
   744                           ;mainM.c: 84:         I2C_Master_Start();
   745  00AC  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Start
   746  00B1                     l1102:
   747                           
   748                           ;mainM.c: 85:         I2C_Master_Write(0x81);
   749  00B1  3081               	movlw	129
   750  00B2  00F2               	movwf	I2C_Master_Write@d
   751  00B3  3000               	movlw	0
   752  00B4  00F3               	movwf	I2C_Master_Write@d+1
   753  00B5  120A  118A  21E5  120A  118A  	fcall	_I2C_Master_Write
   754  00BA                     l1104:
   755                           
   756                           ;mainM.c: 86:         PORTD = I2C_Master_Read(0);
   757  00BA  3000               	movlw	0
   758  00BB  00F2               	movwf	I2C_Master_Read@a
   759  00BC  00F3               	movwf	I2C_Master_Read@a+1
   760  00BD  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Read
   761  00C2  0872               	movf	?_I2C_Master_Read,w
   762  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   763  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   764  00C5  0088               	movwf	8	;volatile
   765  00C6                     l1106:
   766                           
   767                           ;mainM.c: 87:         I2C_Master_Stop();
   768  00C6  120A  118A  21EF  120A  118A  	fcall	_I2C_Master_Stop
   769                           
   770                           ;mainM.c: 88:         _delay((unsigned long)((200)*(4000000/4000.0)));
   771  00CB  3002               	movlw	2
   772  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   773  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   774  00CE  00DA               	movwf	??_main+2
   775  00CF  3004               	movlw	4
   776  00D0  00D9               	movwf	??_main+1
   777  00D1  30B9               	movlw	185
   778  00D2  00D8               	movwf	??_main
   779  00D3                     u377:
   780  00D3  0BD8               	decfsz	??_main,f
   781  00D4  28D3               	goto	u377
   782  00D5  0BD9               	decfsz	??_main+1,f
   783  00D6  28D3               	goto	u377
   784  00D7  0BDA               	decfsz	??_main+2,f
   785  00D8  28D3               	goto	u377
   786  00D9  28DA               	nop2
   787  00DA  2821               	goto	l60
   788  00DB  120A  118A  280C   	ljmp	start
   789  00DE                     __end_of_main:
   790                           
   791                           	psect	text1
   792  01AC                     __ptext1:	
   793 ;; *************** function _setup *****************
   794 ;; Defined at:
   795 ;;		line 98 in file "mainM.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    3
   816 ;; This function calls:
   817 ;;		_I2C_Master_Init
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _setup
   825  01AC                     _setup:
   826  01AC                     l1038:	
   827                           ;incstack = 0
   828                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   829                           
   830                           
   831                           ;mainM.c: 100:     ANSEL = 0;
   832  01AC  1683               	bsf	3,5	;RP0=1, select bank3
   833  01AD  1703               	bsf	3,6	;RP1=1, select bank3
   834  01AE  0188               	clrf	8	;volatile
   835                           
   836                           ;mainM.c: 101:     ANSELH = 0;
   837  01AF  0189               	clrf	9	;volatile
   838                           
   839                           ;mainM.c: 103:     TRISA = 0;
   840  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   841  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   842  01B2  0185               	clrf	5	;volatile
   843                           
   844                           ;mainM.c: 104:     TRISB = 0;
   845  01B3  0186               	clrf	6	;volatile
   846                           
   847                           ;mainM.c: 105:     PORTA = 0;
   848  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   849  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   850  01B6  0185               	clrf	5	;volatile
   851                           
   852                           ;mainM.c: 106:     PORTB = 0;
   853  01B7  0186               	clrf	6	;volatile
   854                           
   855                           ;mainM.c: 107:     TRISD = 0;
   856  01B8  1683               	bsf	3,5	;RP0=1, select bank1
   857  01B9  1303               	bcf	3,6	;RP1=0, select bank1
   858  01BA  0188               	clrf	8	;volatile
   859                           
   860                           ;mainM.c: 113:     PORTA = 0;
   861  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   862  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   863  01BD  0185               	clrf	5	;volatile
   864                           
   865                           ;mainM.c: 114:     PORTB = 0;
   866  01BE  0186               	clrf	6	;volatile
   867                           
   868                           ;mainM.c: 115:     PORTC = 0;
   869  01BF  0187               	clrf	7	;volatile
   870                           
   871                           ;mainM.c: 116:     PORTD = 0;
   872  01C0  0188               	clrf	8	;volatile
   873                           
   874                           ;mainM.c: 117:     PORTE = 0;
   875  01C1  0189               	clrf	9	;volatile
   876  01C2                     l1040:
   877                           
   878                           ;mainM.c: 119:     OSCCONbits.IRCF0 = 0;
   879  01C2  1683               	bsf	3,5	;RP0=1, select bank1
   880  01C3  1303               	bcf	3,6	;RP1=0, select bank1
   881  01C4  120F               	bcf	15,4	;volatile
   882  01C5                     l1042:
   883                           
   884                           ;mainM.c: 120:     OSCCONbits.IRCF1 = 1;
   885  01C5  168F               	bsf	15,5	;volatile
   886  01C6                     l1044:
   887                           
   888                           ;mainM.c: 121:     OSCCONbits.IRCF2 = 1;
   889  01C6  170F               	bsf	15,6	;volatile
   890  01C7                     l1046:
   891                           
   892                           ;mainM.c: 122:     OSCCONbits.SCS = 1;
   893  01C7  140F               	bsf	15,0	;volatile
   894  01C8                     l1048:
   895                           
   896                           ;mainM.c: 124:     I2C_Master_Init(100000);
   897  01C8  3000               	movlw	0
   898  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   899  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   900  01CB  00D3               	movwf	I2C_Master_Init@c+3
   901  01CC  3001               	movlw	1
   902  01CD  00D2               	movwf	I2C_Master_Init@c+2
   903  01CE  3086               	movlw	134
   904  01CF  00D1               	movwf	I2C_Master_Init@c+1
   905  01D0  30A0               	movlw	160
   906  01D1  00D0               	movwf	I2C_Master_Init@c
   907  01D2  120A  118A  2146  120A  118A  	fcall	_I2C_Master_Init
   908  01D7                     l66:
   909  01D7  0008               	return
   910  01D8                     __end_of_setup:
   911                           
   912                           	psect	text2
   913  0146                     __ptext2:	
   914 ;; *************** function _I2C_Master_Init *****************
   915 ;; Defined at:
   916 ;;		line 16 in file "I2C.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  c               4    5[BANK0 ] const unsigned long 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       4       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       4       0       0       0
   933 ;;      Totals:         0       8       0       0       0
   934 ;;Total ram usage:        8 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    2
   937 ;; This function calls:
   938 ;;		___lldiv
   939 ;; This function is called by:
   940 ;;		_setup
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _I2C_Master_Init
   946  0146                     _I2C_Master_Init:
   947  0146                     l1022:	
   948                           ;incstack = 0
   949                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   950                           
   951                           
   952                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   953  0146  3028               	movlw	40
   954  0147  1283               	bcf	3,5	;RP0=0, select bank0
   955  0148  1303               	bcf	3,6	;RP1=0, select bank0
   956  0149  0094               	movwf	20	;volatile
   957  014A                     l1024:
   958                           
   959                           ;I2C.c: 19:     SSPCON2 = 0;
   960  014A  1683               	bsf	3,5	;RP0=1, select bank1
   961  014B  1303               	bcf	3,6	;RP1=0, select bank1
   962  014C  0191               	clrf	17	;volatile
   963  014D                     l1026:
   964                           
   965                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   966  014D  1283               	bcf	3,5	;RP0=0, select bank0
   967  014E  1303               	bcf	3,6	;RP1=0, select bank0
   968  014F  0850               	movf	I2C_Master_Init@c,w
   969  0150  00D4               	movwf	??_I2C_Master_Init
   970  0151  0851               	movf	I2C_Master_Init@c+1,w
   971  0152  00D5               	movwf	??_I2C_Master_Init+1
   972  0153  0852               	movf	I2C_Master_Init@c+2,w
   973  0154  00D6               	movwf	??_I2C_Master_Init+2
   974  0155  0853               	movf	I2C_Master_Init@c+3,w
   975  0156  00D7               	movwf	??_I2C_Master_Init+3
   976  0157  3002               	movlw	2
   977  0158                     u305:
   978  0158  1003               	clrc
   979  0159  0DD4               	rlf	??_I2C_Master_Init,f
   980  015A  0DD5               	rlf	??_I2C_Master_Init+1,f
   981  015B  0DD6               	rlf	??_I2C_Master_Init+2,f
   982  015C  0DD7               	rlf	??_I2C_Master_Init+3,f
   983  015D                     u300:
   984  015D  3EFF               	addlw	-1
   985  015E  1D03               	skipz
   986  015F  2958               	goto	u305
   987  0160  0857               	movf	??_I2C_Master_Init+3,w
   988  0161  00F5               	movwf	___lldiv@divisor+3
   989  0162  0856               	movf	??_I2C_Master_Init+2,w
   990  0163  00F4               	movwf	___lldiv@divisor+2
   991  0164  0855               	movf	??_I2C_Master_Init+1,w
   992  0165  00F3               	movwf	___lldiv@divisor+1
   993  0166  0854               	movf	??_I2C_Master_Init,w
   994  0167  00F2               	movwf	___lldiv@divisor
   995  0168  3000               	movlw	0
   996  0169  00F9               	movwf	___lldiv@dividend+3
   997  016A  307A               	movlw	122
   998  016B  00F8               	movwf	___lldiv@dividend+2
   999  016C  3012               	movlw	18
  1000  016D  00F7               	movwf	___lldiv@dividend+1
  1001  016E  3000               	movlw	0
  1002  016F  00F6               	movwf	___lldiv@dividend
  1003  0170  120A  118A  20DE  120A  118A  	fcall	___lldiv
  1004  0175  0872               	movf	?___lldiv,w
  1005  0176  3EFF               	addlw	255
  1006  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1008  0179  0093               	movwf	19	;volatile
  1009  017A                     l1028:
  1010                           
  1011                           ;I2C.c: 21:     SSPSTAT = 0;
  1012  017A  0194               	clrf	20	;volatile
  1013  017B                     l1030:
  1014                           
  1015                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1016  017B  1587               	bsf	7,3	;volatile
  1017  017C                     l1032:
  1018                           
  1019                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1020  017C  1607               	bsf	7,4	;volatile
  1021  017D                     l95:
  1022  017D  0008               	return
  1023  017E                     __end_of_I2C_Master_Init:
  1024                           
  1025                           	psect	text3
  1026  00DE                     __ptext3:	
  1027 ;; *************** function ___lldiv *****************
  1028 ;; Defined at:
  1029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  divisor         4    2[COMMON] unsigned long 
  1032 ;;  dividend        4    6[COMMON] unsigned long 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  quotient        4    0[BANK0 ] unsigned long 
  1035 ;;  counter         1    4[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  4    2[COMMON] unsigned long 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         8       0       0       0       0
  1046 ;;      Locals:         0       5       0       0       0
  1047 ;;      Temps:          1       0       0       0       0
  1048 ;;      Totals:         9       5       0       0       0
  1049 ;;Total ram usage:       14 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_I2C_Master_Init
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function ___lldiv
  1061  00DE                     ___lldiv:
  1062  00DE                     l998:	
  1063                           ;incstack = 0
  1064                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1065                           
  1066  00DE  3000               	movlw	0
  1067  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1068  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1069  00E1  00CE               	movwf	___lldiv@quotient+3
  1070  00E2  3000               	movlw	0
  1071  00E3  00CD               	movwf	___lldiv@quotient+2
  1072  00E4  3000               	movlw	0
  1073  00E5  00CC               	movwf	___lldiv@quotient+1
  1074  00E6  3000               	movlw	0
  1075  00E7  00CB               	movwf	___lldiv@quotient
  1076  00E8  0875               	movf	___lldiv@divisor+3,w
  1077  00E9  0474               	iorwf	___lldiv@divisor+2,w
  1078  00EA  0473               	iorwf	___lldiv@divisor+1,w
  1079  00EB  0472               	iorwf	___lldiv@divisor,w
  1080  00EC  1903               	skipnz
  1081  00ED  28EF               	goto	u231
  1082  00EE  28F0               	goto	u230
  1083  00EF                     u231:
  1084  00EF  293D               	goto	l1018
  1085  00F0                     u230:
  1086  00F0                     l1000:
  1087  00F0  01CF               	clrf	___lldiv@counter
  1088  00F1  0ACF               	incf	___lldiv@counter,f
  1089  00F2  2900               	goto	l1004
  1090  00F3                     l1002:
  1091  00F3  3001               	movlw	1
  1092  00F4  00FA               	movwf	??___lldiv
  1093  00F5                     u245:
  1094  00F5  1003               	clrc
  1095  00F6  0DF2               	rlf	___lldiv@divisor,f
  1096  00F7  0DF3               	rlf	___lldiv@divisor+1,f
  1097  00F8  0DF4               	rlf	___lldiv@divisor+2,f
  1098  00F9  0DF5               	rlf	___lldiv@divisor+3,f
  1099  00FA  0BFA               	decfsz	??___lldiv,f
  1100  00FB  28F5               	goto	u245
  1101  00FC  3001               	movlw	1
  1102  00FD  00FA               	movwf	??___lldiv
  1103  00FE  087A               	movf	??___lldiv,w
  1104  00FF  07CF               	addwf	___lldiv@counter,f
  1105  0100                     l1004:
  1106  0100  1FF5               	btfss	___lldiv@divisor+3,7
  1107  0101  2903               	goto	u251
  1108  0102  2904               	goto	u250
  1109  0103                     u251:
  1110  0103  28F3               	goto	l1002
  1111  0104                     u250:
  1112  0104                     l1006:
  1113  0104  3001               	movlw	1
  1114  0105  00FA               	movwf	??___lldiv
  1115  0106                     u265:
  1116  0106  1003               	clrc
  1117  0107  0DCB               	rlf	___lldiv@quotient,f
  1118  0108  0DCC               	rlf	___lldiv@quotient+1,f
  1119  0109  0DCD               	rlf	___lldiv@quotient+2,f
  1120  010A  0DCE               	rlf	___lldiv@quotient+3,f
  1121  010B  0BFA               	decfsz	??___lldiv,f
  1122  010C  2906               	goto	u265
  1123  010D                     l1008:
  1124  010D  0875               	movf	___lldiv@divisor+3,w
  1125  010E  0279               	subwf	___lldiv@dividend+3,w
  1126  010F  1D03               	skipz
  1127  0110  291B               	goto	u275
  1128  0111  0874               	movf	___lldiv@divisor+2,w
  1129  0112  0278               	subwf	___lldiv@dividend+2,w
  1130  0113  1D03               	skipz
  1131  0114  291B               	goto	u275
  1132  0115  0873               	movf	___lldiv@divisor+1,w
  1133  0116  0277               	subwf	___lldiv@dividend+1,w
  1134  0117  1D03               	skipz
  1135  0118  291B               	goto	u275
  1136  0119  0872               	movf	___lldiv@divisor,w
  1137  011A  0276               	subwf	___lldiv@dividend,w
  1138  011B                     u275:
  1139  011B  1C03               	skipc
  1140  011C  291E               	goto	u271
  1141  011D  291F               	goto	u270
  1142  011E                     u271:
  1143  011E  292E               	goto	l1014
  1144  011F                     u270:
  1145  011F                     l1010:
  1146  011F  0872               	movf	___lldiv@divisor,w
  1147  0120  02F6               	subwf	___lldiv@dividend,f
  1148  0121  0873               	movf	___lldiv@divisor+1,w
  1149  0122  1C03               	skipc
  1150  0123  0F73               	incfsz	___lldiv@divisor+1,w
  1151  0124  02F7               	subwf	___lldiv@dividend+1,f
  1152  0125  0874               	movf	___lldiv@divisor+2,w
  1153  0126  1C03               	skipc
  1154  0127  0F74               	incfsz	___lldiv@divisor+2,w
  1155  0128  02F8               	subwf	___lldiv@dividend+2,f
  1156  0129  0875               	movf	___lldiv@divisor+3,w
  1157  012A  1C03               	skipc
  1158  012B  0F75               	incfsz	___lldiv@divisor+3,w
  1159  012C  02F9               	subwf	___lldiv@dividend+3,f
  1160  012D                     l1012:
  1161  012D  144B               	bsf	___lldiv@quotient,0
  1162  012E                     l1014:
  1163  012E  3001               	movlw	1
  1164  012F                     u285:
  1165  012F  1003               	clrc
  1166  0130  0CF5               	rrf	___lldiv@divisor+3,f
  1167  0131  0CF4               	rrf	___lldiv@divisor+2,f
  1168  0132  0CF3               	rrf	___lldiv@divisor+1,f
  1169  0133  0CF2               	rrf	___lldiv@divisor,f
  1170  0134  3EFF               	addlw	-1
  1171  0135  1D03               	skipz
  1172  0136  292F               	goto	u285
  1173  0137                     l1016:
  1174  0137  3001               	movlw	1
  1175  0138  02CF               	subwf	___lldiv@counter,f
  1176  0139  1D03               	btfss	3,2
  1177  013A  293C               	goto	u291
  1178  013B  293D               	goto	u290
  1179  013C                     u291:
  1180  013C  2904               	goto	l1006
  1181  013D                     u290:
  1182  013D                     l1018:
  1183  013D  084E               	movf	___lldiv@quotient+3,w
  1184  013E  00F5               	movwf	?___lldiv+3
  1185  013F  084D               	movf	___lldiv@quotient+2,w
  1186  0140  00F4               	movwf	?___lldiv+2
  1187  0141  084C               	movf	___lldiv@quotient+1,w
  1188  0142  00F3               	movwf	?___lldiv+1
  1189  0143  084B               	movf	___lldiv@quotient,w
  1190  0144  00F2               	movwf	?___lldiv
  1191  0145                     l308:
  1192  0145  0008               	return
  1193  0146                     __end_of___lldiv:
  1194                           
  1195                           	psect	text4
  1196  01E5                     __ptext4:	
  1197 ;; *************** function _I2C_Master_Write *****************
  1198 ;; Defined at:
  1199 ;;		line 65 in file "I2C.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  d               2    2[COMMON] unsigned int 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         2       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		_I2C_Master_Wait
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _I2C_Master_Write
  1229  01E5                     _I2C_Master_Write:
  1230  01E5                     l1054:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1233                           
  1234                           
  1235                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1236  01E5  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1237  01EA                     l1056:
  1238                           
  1239                           ;I2C.c: 68:     SSPBUF = d;
  1240  01EA  0872               	movf	I2C_Master_Write@d,w
  1241  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1242  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1243  01ED  0093               	movwf	19	;volatile
  1244  01EE                     l113:
  1245  01EE  0008               	return
  1246  01EF                     __end_of_I2C_Master_Write:
  1247                           
  1248                           	psect	text5
  1249  01EF                     __ptext5:	
  1250 ;; *************** function _I2C_Master_Stop *****************
  1251 ;; Defined at:
  1252 ;;		line 55 in file "I2C.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		_I2C_Master_Wait
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _I2C_Master_Stop
  1282  01EF                     _I2C_Master_Stop:
  1283  01EF                     l1074:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1286                           
  1287                           
  1288                           ;I2C.c: 57:     I2C_Master_Wait();
  1289  01EF  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1290  01F4                     l1076:
  1291                           
  1292                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1293  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1294  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1295  01F6  1511               	bsf	17,2	;volatile
  1296  01F7                     l110:
  1297  01F7  0008               	return
  1298  01F8                     __end_of_I2C_Master_Stop:
  1299                           
  1300                           	psect	text6
  1301  01F8                     __ptext6:	
  1302 ;; *************** function _I2C_Master_Start *****************
  1303 ;; Defined at:
  1304 ;;		line 39 in file "I2C.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		_I2C_Master_Wait
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _I2C_Master_Start
  1334  01F8                     _I2C_Master_Start:
  1335  01F8                     l1050:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1338                           
  1339                           
  1340                           ;I2C.c: 41:     I2C_Master_Wait();
  1341  01F8  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1342  01FD                     l1052:
  1343                           
  1344                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1345  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1346  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1347  01FF  1411               	bsf	17,0	;volatile
  1348  0200                     l104:
  1349  0200  0008               	return
  1350  0201                     __end_of_I2C_Master_Start:
  1351                           
  1352                           	psect	text7
  1353  017E                     __ptext7:	
  1354 ;; *************** function _I2C_Master_Read *****************
  1355 ;; Defined at:
  1356 ;;		line 74 in file "I2C.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  a               2    2[COMMON] unsigned short 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  temp            2    6[COMMON] unsigned short 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2    2[COMMON] unsigned short 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         2       0       0       0       0
  1371 ;;      Locals:         2       0       0       0       0
  1372 ;;      Temps:          2       0       0       0       0
  1373 ;;      Totals:         6       0       0       0       0
  1374 ;;Total ram usage:        6 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    2
  1377 ;; This function calls:
  1378 ;;		_I2C_Master_Wait
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _I2C_Master_Read
  1386  017E                     _I2C_Master_Read:
  1387  017E                     l1058:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1390                           
  1391                           
  1392                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1393  017E  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1394  0183                     l1060:
  1395                           
  1396                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1397  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0185  1591               	bsf	17,3	;volatile
  1400                           
  1401                           ;I2C.c: 79:     I2C_Master_Wait();
  1402  0186  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1403  018B                     l1062:
  1404                           
  1405                           ;I2C.c: 80:     temp = SSPBUF;
  1406  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1407  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1408  018D  0813               	movf	19,w	;volatile
  1409  018E  00F4               	movwf	??_I2C_Master_Read
  1410  018F  01F5               	clrf	??_I2C_Master_Read+1
  1411  0190  0874               	movf	??_I2C_Master_Read,w
  1412  0191  00F6               	movwf	I2C_Master_Read@temp
  1413  0192  0875               	movf	??_I2C_Master_Read+1,w
  1414  0193  00F7               	movwf	I2C_Master_Read@temp+1
  1415  0194                     l1064:
  1416                           
  1417                           ;I2C.c: 81:     I2C_Master_Wait();
  1418  0194  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Wait
  1419  0199                     l1066:
  1420                           
  1421                           ;I2C.c: 82:     if(a == 1){
  1422  0199  0372               	decf	I2C_Master_Read@a,w
  1423  019A  0473               	iorwf	I2C_Master_Read@a+1,w
  1424  019B  1D03               	btfss	3,2
  1425  019C  299E               	goto	u331
  1426  019D  299F               	goto	u330
  1427  019E                     u331:
  1428  019E  29A3               	goto	l116
  1429  019F                     u330:
  1430  019F                     l1068:
  1431                           
  1432                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1433  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1434  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1435  01A1  1291               	bcf	17,5	;volatile
  1436                           
  1437                           ;I2C.c: 84:     }else{
  1438  01A2  29A6               	goto	l117
  1439  01A3                     l116:
  1440                           
  1441                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1442  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1443  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1444  01A5  1691               	bsf	17,5	;volatile
  1445  01A6                     l117:	
  1446                           ;I2C.c: 86:     }
  1447                           
  1448                           
  1449                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1450  01A6  1611               	bsf	17,4	;volatile
  1451  01A7                     l1070:
  1452                           
  1453                           ;I2C.c: 88:     return temp;
  1454  01A7  0877               	movf	I2C_Master_Read@temp+1,w
  1455  01A8  00F3               	movwf	?_I2C_Master_Read+1
  1456  01A9  0876               	movf	I2C_Master_Read@temp,w
  1457  01AA  00F2               	movwf	?_I2C_Master_Read
  1458  01AB                     l118:
  1459  01AB  0008               	return
  1460  01AC                     __end_of_I2C_Master_Read:
  1461                           
  1462                           	psect	text8
  1463  01D8                     __ptext8:	
  1464 ;; *************** function _I2C_Master_Wait *****************
  1465 ;; Defined at:
  1466 ;;		line 32 in file "I2C.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_I2C_Master_Start
  1491 ;;		_I2C_Master_Stop
  1492 ;;		_I2C_Master_Write
  1493 ;;		_I2C_Master_Read
  1494 ;;		_I2C_Master_RepeatedStart
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _I2C_Master_Wait
  1500  01D8                     _I2C_Master_Wait:
  1501  01D8                     l1034:	
  1502                           ;incstack = 0
  1503                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1504                           
  1505  01D8                     l98:	
  1506                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1507                           
  1508  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1509  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1510  01DA  1914               	btfsc	20,2	;volatile
  1511  01DB  29DD               	goto	u311
  1512  01DC  29DE               	goto	u310
  1513  01DD                     u311:
  1514  01DD  29D8               	goto	l98
  1515  01DE                     u310:
  1516  01DE                     l1036:
  1517  01DE  0811               	movf	17,w	;volatile
  1518  01DF  391F               	andlw	31
  1519  01E0  1D03               	btfss	3,2
  1520  01E1  29E3               	goto	u321
  1521  01E2  29E4               	goto	u320
  1522  01E3                     u321:
  1523  01E3  29D8               	goto	l98
  1524  01E4                     u320:
  1525  01E4                     l101:
  1526  01E4  0008               	return
  1527  01E5                     __end_of_I2C_Master_Wait:
  1528                           
  1529                           	psect	text9
  1530  0209                     __ptext9:	
  1531 ;; *************** function _isr *****************
  1532 ;; Defined at:
  1533 ;;		line 50 in file "mainM.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		None
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          2       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		Interrupt level 1
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _isr
  1562  0209                     _isr:
  1563  0209                     i1l55:
  1564  0209  0871               	movf	??_isr+1,w
  1565  020A  008A               	movwf	10
  1566  020B  0E70               	swapf	??_isr,w
  1567  020C  0083               	movwf	3
  1568  020D  0EFE               	swapf	btemp,f
  1569  020E  0E7E               	swapf	btemp,w
  1570  020F  0009               	retfie
  1571  0210                     __end_of_isr:
  1572  007E                     btemp	set	126	;btemp
  1573  007E                     wtemp0	set	126
  1574                           
  1575                           	psect	intentry
  1576  0004                     __pintentry:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _isr: []
  1579                           
  1580  0004                     interrupt_function:
  1581  007E                     saved_w	set	btemp
  1582  0004  00FE               	movwf	btemp
  1583  0005  0E03               	swapf	3,w
  1584  0006  00F0               	movwf	??_isr
  1585  0007  080A               	movf	10,w
  1586  0008  00F1               	movwf	??_isr+1
  1587  0009  120A  118A  2A09   	ljmp	_isr
  1588                           
  1589                           	psect	config
  1590                           
  1591                           ;Config register CONFIG1 @ 0x2007
  1592                           ;	Oscillator Selection bits
  1593                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1594                           ;	Watchdog Timer Enable bit
  1595                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1596                           ;	Power-up Timer Enable bit
  1597                           ;	PWRTE = OFF, PWRT disabled
  1598                           ;	RE3/MCLR pin function select bit
  1599                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1600                           ;	Code Protection bit
  1601                           ;	CP = OFF, Program memory code protection is disabled
  1602                           ;	Data Code Protection bit
  1603                           ;	CPD = OFF, Data memory code protection is disabled
  1604                           ;	Brown Out Reset Selection bits
  1605                           ;	BOREN = OFF, BOR disabled
  1606                           ;	Internal External Switchover bit
  1607                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1608                           ;	Fail-Safe Clock Monitor Enabled bit
  1609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1610                           ;	Low Voltage Programming Enable bit
  1611                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1612                           ;	In-Circuit Debugger Mode bit
  1613                           ;	DEBUG = 0x1, unprogrammed default
  1614  2007                     	org	8199
  1615  2007  20D4               	dw	8404
  1616                           
  1617                           ;Config register CONFIG2 @ 0x2008
  1618                           ;	Brown-out Reset Selection bit
  1619                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1620                           ;	Flash Program Memory Self Write Enable bits
  1621                           ;	WRT = OFF, Write protection off
  1622  2008                     	org	8200
  1623  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     16      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1087
                                             13 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 10 12:15:50 2021

                       l60 0021                         l66 01D7                         l95 017D  
                       l98 01D8                         fsr 0004                        l101 01E4  
                      l110 01F7                        l104 0200                        l113 01EE  
                      l116 01A3                        l117 01A6                        l118 01AB  
                      l308 0145                        _GIE 005F                        l998 00DE  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RE0 0048                        _RD3 0043                        _RE1 0049  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u300 015D                        u310 01DE  
                      u230 00F0                        u311 01DD                        u231 00EF  
                      u320 01E4                        u321 01E3                        u305 0158  
                      u330 019F                        u250 0104                        u331 019E  
                      u251 0103                        u245 00F5                        u270 011F  
                      u271 011E                        u265 0106                        u290 013D  
                      u291 013C                        u275 011B                        u347 004C  
                      u285 012F                        u357 007A                        u367 00A5  
                      u377 00D3                        _cc1 0042                        _cc2 003E  
                      _isr 0209                        indf 0000                       l1000 00F0  
                     l1010 011F                       l1002 00F3                       l1012 012D  
                     l1004 0100                       l1100 00AC                       l1014 012E  
                     l1006 0104                       l1030 017B                       l1022 0146  
                     l1102 00B1                       l1016 0137                       l1008 010D  
                     l1032 017C                       l1024 014A                       l1040 01C2  
                     l1104 00BA                       l1034 01D8                       l1050 01F8  
                     l1018 013D                       l1026 014D                       l1042 01C5  
                     l1106 00C6                       l1036 01DE                       l1060 0183  
                     l1052 01FD                       l1028 017A                       l1044 01C6  
                     l1070 01A7                       l1062 018B                       l1054 01E5  
                     l1046 01C7                       l1038 01AC                       l1064 0194  
                     l1056 01EA                       l1048 01C8                       l1080 003B  
                     l1066 0199                       l1058 017E                       l1074 01EF  
                     l1090 006D                       l1082 003F                       l1068 019F  
                     l1076 01F4                       l1092 0081                       l1084 0053  
                     l1094 0086                       l1086 0058                       l1078 001C  
                     l1096 008F                       l1088 0061                       l1098 0098  
                     ?_isr 0070                       _PEIE 005E                       i1l55 0209  
                     _main 001C                       btemp 007E                       start 000C  
                    ??_isr 0070           ?_I2C_Master_Init 0050           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _BFFR1 0034                      _BFFR2 002A                      _BFFR3 0020  
                    _ANSEL 0188            __end_of___lldiv 0146                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _setup 01AC                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 00DE  
                   ??_main 0058          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074                     ?_setup 0070  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 007A                     _prueba 004A                     saved_w 007E  
  __end_of__initialization 0018             __pcstackCOMMON 0070              __end_of_setup 01D8  
                  ??_setup 007B                 __pbssBANK0 0020                 __pmaintext 001C  
               __pintentry 0004                    _SSPCON2 0091                    _SSPSTAT 0094  
                  ___lldiv 00DE                    __ptext1 01AC                    __ptext2 0146  
                  __ptext3 00DE                    __ptext4 01E5                    __ptext5 01EF  
                  __ptext6 01F8                    __ptext7 017E                    __ptext8 01D8  
                  __ptext9 0209               __size_of_isr 0007   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0202       end_of_initialization 0018  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 004F  
         I2C_Master_Init@c 0050           I2C_Master_Read@a 0072                  _TRISCbits 0087  
      start_initialization 000F                __end_of_isr 0210          ??_I2C_Master_Init 0054  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
                ___latbits 0002              __pcstackBANK0 004B           _I2C_Master_Start 01F8  
         _I2C_Master_Write 01E5                   ?___lldiv 0072             __size_of_setup 002C  
        interrupt_function 0004                  clear_ram0 0201        I2C_Master_Read@temp 0076  
         __size_of___lldiv 0068            _I2C_Master_Init 0146            _I2C_Master_Read 017E  
          _I2C_Master_Wait 01D8            _I2C_Master_Stop 01EF                   _contador 0046  
            __size_of_main 00C2   __end_of_I2C_Master_Start 0201   __end_of_I2C_Master_Write 01EF  
                 intlevel1 0000           ___lldiv@dividend 0076                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 017E    __end_of_I2C_Master_Read 01AC    __end_of_I2C_Master_Wait 01E5  
  __end_of_I2C_Master_Stop 01F8           ___lldiv@quotient 004B          I2C_Master_Write@d 0072  
              _SSPCON2bits 0091  
