

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 12:02:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.31
    61                           ; Generated 13/10/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  0107                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0185                     	;# 
   168  0187                     	;# 
   169  0188                     	;# 
   170  0189                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0107                     	;# 
   316  0108                     	;# 
   317  0109                     	;# 
   318  010C                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0185                     	;# 
   324  0187                     	;# 
   325  0188                     	;# 
   326  0189                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001B                     	;# 
   360  001C                     	;# 
   361  001D                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  0081                     	;# 
   365  0085                     	;# 
   366  0086                     	;# 
   367  0087                     	;# 
   368  0088                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0088                     	;# 
   447  0089                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  008F                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  0105                     	;# 
   471  0107                     	;# 
   472  0108                     	;# 
   473  0109                     	;# 
   474  010C                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  0185                     	;# 
   480  0187                     	;# 
   481  0188                     	;# 
   482  0189                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485                           
   486                           	psect	strings
   487  1000                     __pstrings:
   488  1000                     stringtab:
   489  1000                     __stringtab:
   490                           
   491                           ;	String table - string pointers are 1 byte each
   492  1000  1BFF               	btfsc	btemp+1,7
   493  1001  280A               	ljmp	stringcode
   494  1002  1383               	bcf	3,7
   495  1003  187F               	btfsc	btemp+1,0
   496  1004  1783               	bsf	3,7
   497  1005  0800               	movf	0,w
   498  1006  0A84               	incf	4,f
   499  1007  1903               	skipnz
   500  1008  0AFF               	incf	btemp+1,f
   501  1009  0008               	return
   502  100A                     stringcode:
   503  100A                     stringdir:
   504  100A  3010               	movlw	high stringdir
   505  100B  008A               	movwf	10
   506  100C  0804               	movf	4,w
   507  100D  0A84               	incf	4,f
   508  100E  0782               	addwf	2,f
   509  100F                     __stringbase:
   510  100F  3400               	retlw	0
   511  1010                     __end_of__stringtab:
   512  1010                     __powers_:
   513  1010  3400               	retlw	0
   514  1011  3480               	retlw	128
   515  1012  343F               	retlw	63
   516  1013  3400               	retlw	0
   517  1014  3420               	retlw	32
   518  1015  3441               	retlw	65
   519  1016  3400               	retlw	0
   520  1017  34C8               	retlw	200
   521  1018  3442               	retlw	66
   522  1019  3400               	retlw	0
   523  101A  347A               	retlw	122
   524  101B  3444               	retlw	68
   525  101C  3440               	retlw	64
   526  101D  341C               	retlw	28
   527  101E  3446               	retlw	70
   528  101F  3450               	retlw	80
   529  1020  34C3               	retlw	195
   530  1021  3447               	retlw	71
   531  1022  3424               	retlw	36
   532  1023  3474               	retlw	116
   533  1024  3449               	retlw	73
   534  1025  3497               	retlw	151
   535  1026  3418               	retlw	24
   536  1027  344B               	retlw	75
   537  1028  34BC               	retlw	188
   538  1029  34BE               	retlw	190
   539  102A  344C               	retlw	76
   540  102B  346B               	retlw	107
   541  102C  346E               	retlw	110
   542  102D  344E               	retlw	78
   543  102E  3403               	retlw	3
   544  102F  3415               	retlw	21
   545  1030  3450               	retlw	80
   546  1031  3479               	retlw	121
   547  1032  34AD               	retlw	173
   548  1033  3460               	retlw	96
   549  1034  34F3               	retlw	243
   550  1035  3449               	retlw	73
   551  1036  3471               	retlw	113
   552  1037                     __end_of__powers_:
   553  1037                     __npowers_:
   554  1037  3400               	retlw	0
   555  1038  3480               	retlw	128
   556  1039  343F               	retlw	63
   557  103A  34CD               	retlw	205
   558  103B  34CC               	retlw	204
   559  103C  343D               	retlw	61
   560  103D  34D7               	retlw	215
   561  103E  3423               	retlw	35
   562  103F  343C               	retlw	60
   563  1040  3412               	retlw	18
   564  1041  3483               	retlw	131
   565  1042  343A               	retlw	58
   566  1043  34B7               	retlw	183
   567  1044  34D1               	retlw	209
   568  1045  3438               	retlw	56
   569  1046  34C6               	retlw	198
   570  1047  3427               	retlw	39
   571  1048  3437               	retlw	55
   572  1049  3438               	retlw	56
   573  104A  3486               	retlw	134
   574  104B  3435               	retlw	53
   575  104C  34C0               	retlw	192
   576  104D  34D6               	retlw	214
   577  104E  3433               	retlw	51
   578  104F  34CC               	retlw	204
   579  1050  342B               	retlw	43
   580  1051  3432               	retlw	50
   581  1052  3470               	retlw	112
   582  1053  3489               	retlw	137
   583  1054  3430               	retlw	48
   584  1055  34E7               	retlw	231
   585  1056  34DB               	retlw	219
   586  1057  342E               	retlw	46
   587  1058  34E5               	retlw	229
   588  1059  343C               	retlw	60
   589  105A  341E               	retlw	30
   590  105B  3442               	retlw	66
   591  105C  34A2               	retlw	162
   592  105D  340D               	retlw	13
   593  105E                     __end_of__npowers_:
   594  105E                     _dpowers:
   595  105E  3401               	retlw	1
   596  105F  3400               	retlw	0
   597  1060  3400               	retlw	0
   598  1061  3400               	retlw	0
   599  1062  340A               	retlw	10
   600  1063  3400               	retlw	0
   601  1064  3400               	retlw	0
   602  1065  3400               	retlw	0
   603  1066  3464               	retlw	100
   604  1067  3400               	retlw	0
   605  1068  3400               	retlw	0
   606  1069  3400               	retlw	0
   607  106A  34E8               	retlw	232
   608  106B  3403               	retlw	3
   609  106C  3400               	retlw	0
   610  106D  3400               	retlw	0
   611  106E  3410               	retlw	16
   612  106F  3427               	retlw	39
   613  1070  3400               	retlw	0
   614  1071  3400               	retlw	0
   615  1072  34A0               	retlw	160
   616  1073  3486               	retlw	134
   617  1074  3401               	retlw	1
   618  1075  3400               	retlw	0
   619  1076  3440               	retlw	64
   620  1077  3442               	retlw	66
   621  1078  340F               	retlw	15
   622  1079  3400               	retlw	0
   623  107A  3480               	retlw	128
   624  107B  3496               	retlw	150
   625  107C  3498               	retlw	152
   626  107D  3400               	retlw	0
   627  107E  3400               	retlw	0
   628  107F  34E1               	retlw	225
   629  1080  34F5               	retlw	245
   630  1081  3405               	retlw	5
   631  1082  3400               	retlw	0
   632  1083  34CA               	retlw	202
   633  1084  349A               	retlw	154
   634  1085  343B               	retlw	59
   635  1086                     __end_of_dpowers:
   636  0018                     _RCSTAbits	set	24
   637  001E                     _ADRESH	set	30
   638  001F                     _ADCON0bits	set	31
   639  0019                     _TXREG	set	25
   640  000C                     _PIR1bits	set	12
   641  000B                     _INTCONbits	set	11
   642  0007                     _PORTC	set	7
   643  0009                     _PORTE	set	9
   644  0008                     _PORTD	set	8
   645  001A                     _RCREG	set	26
   646  0049                     _RE1	set	73
   647  0048                     _RE0	set	72
   648  0047                     _RD7	set	71
   649  0046                     _RD6	set	70
   650  0045                     _RD5	set	69
   651  0044                     _RD4	set	68
   652  0043                     _RD3	set	67
   653  0042                     _RD2	set	66
   654  0041                     _RD1	set	65
   655  0040                     _RD0	set	64
   656  0065                     _RCIF	set	101
   657  0099                     _SPBRG	set	153
   658  0086                     _TRISBbits	set	134
   659  0089                     _TRISEbits	set	137
   660  0085                     _TRISAbits	set	133
   661  009F                     _ADCON1	set	159
   662  0098                     _TXSTAbits	set	152
   663  008C                     _PIE1bits	set	140
   664  0089                     _TRISE	set	137
   665  0088                     _TRISD	set	136
   666  0085                     _TRISA	set	133
   667  04C1                     _TRMT	set	1217
   668  0189                     _ANSELHbits	set	393
   669  0188                     _ANSELbits	set	392
   670  0189                     _ANSELH	set	393
   671  0188                     _ANSEL	set	392
   672  1086                     STR_2:
   673  1086  3425               	retlw	37	;'%'
   674  1087  3432               	retlw	50	;'2'
   675  1088  342E               	retlw	46	;'.'
   676  1089  3431               	retlw	49	;'1'
   677  108A  3466               	retlw	102	;'f'
   678  108B  3420               	retlw	32	;' '
   679  108C  3420               	retlw	32	;' '
   680  108D  3425               	retlw	37	;'%'
   681  108E  3432               	retlw	50	;'2'
   682  108F  342E               	retlw	46	;'.'
   683  1090  3431               	retlw	49	;'1'
   684  1091  3466               	retlw	102	;'f'
   685  1092  3420               	retlw	32	;' '
   686  1093  3420               	retlw	32	;' '
   687  1094  3425               	retlw	37	;'%'
   688  1095  3464               	retlw	100	;'d'
   689  1096  3400               	retlw	0
   690  1097                     STR_1:
   691  1097  3456               	retlw	86	;'V'
   692  1098  3431               	retlw	49	;'1'
   693  1099  3420               	retlw	32	;' '
   694  109A  3420               	retlw	32	;' '
   695  109B  3420               	retlw	32	;' '
   696  109C  3456               	retlw	86	;'V'
   697  109D  3432               	retlw	50	;'2'
   698  109E  3420               	retlw	32	;' '
   699  109F  3420               	retlw	32	;' '
   700  10A0  3420               	retlw	32	;' '
   701  10A1  3443               	retlw	67	;'C'
   702  10A2  344F               	retlw	79	;'O'
   703  10A3  344E               	retlw	78	;'N'
   704  10A4  3454               	retlw	84	;'T'
   705  10A5  3400               	retlw	0
   706                           
   707                           	psect	cinit
   708  000F                     start_initialization:	
   709                           ; #config settings
   710                           
   711  000F                     __initialization:
   712                           
   713                           ; Clear objects allocated to COMMON
   714  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   715  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   716  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   717                           
   718                           ; Clear objects allocated to BANK0
   719  0012  1283               	bcf	3,5	;RP0=0, select bank0
   720  0013  1303               	bcf	3,6	;RP1=0, select bank0
   721  0014  01EE               	clrf	__pbssBANK0& (0+127)
   722  0015  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   723                           
   724                           ; Clear objects allocated to BANK1
   725  0016  1383               	bcf	3,7	;select IRP bank0
   726  0017  30BF               	movlw	low __pbssBANK1
   727  0018  0084               	movwf	4
   728  0019  30D9               	movlw	low (__pbssBANK1+26)
   729  001A  160A  158A  252D  120A  118A  	fcall	clear_ram0
   730  001F                     end_of_initialization:	
   731                           ;End of C runtime variable initialization code
   732                           
   733  001F                     __end_of__initialization:
   734  001F  0183               	clrf	3
   735  0020  120A  118A  2E68   	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssCOMMON
   738  0078                     __pbssCOMMON:
   739  0078                     _entregado:
   740  0078                     	ds	1
   741  0079                     _readUSART:
   742  0079                     	ds	1
   743  007A                     _contador:
   744  007A                     	ds	1
   745                           
   746                           	psect	bssBANK0
   747  006E                     __pbssBANK0:
   748  006E                     _ADC1:
   749  006E                     	ds	1
   750  006F                     _ADC0:
   751  006F                     	ds	1
   752                           
   753                           	psect	bssBANK1
   754  00BF                     __pbssBANK1:
   755  00BF                     _V2:
   756  00BF                     	ds	3
   757  00C2                     _V1:
   758  00C2                     	ds	3
   759  00C5                     _BUFFER:
   760  00C5                     	ds	20
   761                           
   762                           	psect	clrtext
   763  1D2D                     clear_ram0:	
   764                           ;	Called with FSR containing the base address, and
   765                           ;	W with the last address+1
   766                           
   767  1D2D  0064               	clrwdt	;clear the watchdog before getting into this loop
   768  1D2E                     clrloop0:
   769  1D2E  0180               	clrf	0	;clear RAM location pointed to by FSR
   770  1D2F  0A84               	incf	4,f	;increment pointer
   771  1D30  0604               	xorwf	4,w	;XOR with final address
   772  1D31  1903               	btfsc	3,2	;have we reached the end yet?
   773  1D32  3400               	retlw	0	;all done for this memory range, return
   774  1D33  0604               	xorwf	4,w	;XOR again to restore value
   775  1D34  2D2E               	goto	clrloop0	;do the next byte
   776                           
   777                           	psect	cstackBANK1
   778  00A0                     __pcstackBANK1:
   779  00A0                     ??_sprintf:
   780                           
   781                           ; 1 bytes @ 0x0
   782  00A0                     	ds	6
   783  00A6                     _sprintf$1187:
   784                           
   785                           ; 3 bytes @ 0x6
   786  00A6                     	ds	3
   787  00A9                     sprintf@ap:
   788                           
   789                           ; 1 bytes @ 0x9
   790  00A9                     	ds	1
   791  00AA                     sprintf@flag:
   792                           
   793                           ; 2 bytes @ 0xA
   794  00AA                     	ds	2
   795  00AC                     sprintf@width:
   796                           
   797                           ; 2 bytes @ 0xC
   798  00AC                     	ds	2
   799  00AE                     sprintf@tmpval:
   800                           
   801                           ; 4 bytes @ 0xE
   802  00AE                     	ds	4
   803  00B2                     sprintf@val:
   804                           
   805                           ; 4 bytes @ 0x12
   806  00B2                     	ds	4
   807  00B6                     sprintf@eexp:
   808                           
   809                           ; 2 bytes @ 0x16
   810  00B6                     	ds	2
   811  00B8                     sprintf@fval:
   812                           
   813                           ; 3 bytes @ 0x18
   814  00B8                     	ds	3
   815  00BB                     sprintf@sp:
   816                           
   817                           ; 1 bytes @ 0x1B
   818  00BB                     	ds	1
   819  00BC                     sprintf@prec:
   820                           
   821                           ; 2 bytes @ 0x1C
   822  00BC                     	ds	2
   823  00BE                     sprintf@c:
   824                           
   825                           ; 1 bytes @ 0x1E
   826  00BE                     	ds	1
   827                           
   828                           	psect	cstackCOMMON
   829  0070                     __pcstackCOMMON:
   830  0070                     ?_isdigit:
   831  0070                     ?_Read_USART:	
   832                           ; 1 bit 
   833                           
   834  0070                     ??_Read_USART:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_setup:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?__baudios:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_config_tx:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_config_rc:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_configLCD:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_clear_LCD:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_configADC:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_Write_USART_String:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_Write_USART:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_Enviar_1:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_Enviar_2:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_ISR:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ??_ISR:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_main:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_pin:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_CMDs:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_write_char:	
   886                           ; 1 bytes @ 0x0
   887                           
   888                           
   889                           ; 1 bytes @ 0x0
   890  0070                     	ds	3
   891  0073                     ??_setup:
   892  0073                     ??__baudios:	
   893                           ; 1 bytes @ 0x3
   894                           
   895  0073                     ??_config_tx:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     ??_config_rc:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0073                     ??_configADC:	
   902                           ; 1 bytes @ 0x3
   903                           
   904  0073                     ??_Write_USART:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     ??_isdigit:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     ??__tdiv_to_l_:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     ??_pin:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     ??___lldiv:	
   917                           ; 1 bytes @ 0x3
   918                           
   919  0073                     ??___ftge:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     ?___wmul:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0073                     ?___awmod:	
   926                           ; 2 bytes @ 0x3
   927                           
   928  0073                     ?___lwmod:	
   929                           ; 2 bytes @ 0x3
   930                           
   931  0073                     ?___ftpack:	
   932                           ; 2 bytes @ 0x3
   933                           
   934  0073                     ?___ftneg:	
   935                           ; 3 bytes @ 0x3
   936                           
   937  0073                     pin@a:	
   938                           ; 3 bytes @ 0x3
   939                           
   940  0073                     Write_USART@a:	
   941                           ; 1 bytes @ 0x3
   942                           
   943  0073                     _isdigit$994:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ___wmul@multiplier:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ___awmod@divisor:	
   950                           ; 2 bytes @ 0x3
   951                           
   952  0073                     ___lwmod@divisor:	
   953                           ; 2 bytes @ 0x3
   954                           
   955  0073                     ___ftpack@arg:	
   956                           ; 2 bytes @ 0x3
   957                           
   958  0073                     ___ftneg@f1:	
   959                           ; 3 bytes @ 0x3
   960                           
   961                           
   962                           ; 3 bytes @ 0x3
   963  0073                     	ds	1
   964  0074                     ??_Write_USART_String:
   965  0074                     ??_CMDs:	
   966                           ; 1 bytes @ 0x4
   967                           
   968  0074                     ??_write_char:	
   969                           ; 1 bytes @ 0x4
   970                           
   971  0074                     ??___llmod:	
   972                           ; 1 bytes @ 0x4
   973                           
   974  0074                     isdigit@c:	
   975                           ; 1 bytes @ 0x4
   976                           
   977                           
   978                           ; 1 bytes @ 0x4
   979  0074                     	ds	1
   980  0075                     write_char@a:
   981  0075                     configADC@ch:	
   982                           ; 1 bytes @ 0x5
   983                           
   984  0075                     Write_USART_String@a:	
   985                           ; 1 bytes @ 0x5
   986                           
   987  0075                     ___llmod@counter:	
   988                           ; 1 bytes @ 0x5
   989                           
   990  0075                     ___wmul@multiplicand:	
   991                           ; 1 bytes @ 0x5
   992                           
   993  0075                     ___awmod@dividend:	
   994                           ; 2 bytes @ 0x5
   995                           
   996  0075                     ___lwmod@dividend:	
   997                           ; 2 bytes @ 0x5
   998                           
   999                           
  1000                           ; 2 bytes @ 0x5
  1001  0075                     	ds	1
  1002  0076                     ?_write_string:
  1003  0076                     ??___ftneg:	
  1004                           ; 1 bytes @ 0x6
  1005                           
  1006  0076                     CMDs@a:	
  1007                           ; 1 bytes @ 0x6
  1008                           
  1009  0076                     Write_USART_String@i:	
  1010                           ; 1 bytes @ 0x6
  1011                           
  1012  0076                     ___ftpack@exp:	
  1013                           ; 1 bytes @ 0x6
  1014                           
  1015  0076                     write_string@a:	
  1016                           ; 1 bytes @ 0x6
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0x6
  1020  0076                     	ds	1
  1021  0077                     ??_clear_LCD:
  1022  0077                     ?_cursor:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025  0077                     ??___wmul:	
  1026                           ; 1 bytes @ 0x7
  1027                           
  1028  0077                     ??___awmod:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031  0077                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x7
  1033                           
  1034  0077                     cursor@b:	
  1035                           ; 1 bytes @ 0x7
  1036                           
  1037  0077                     ___ftpack@sign:	
  1038                           ; 1 bytes @ 0x7
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x7
  1042  0077                     	ds	1
  1043  0078                     ??_Enviar_1:
  1044  0078                     ??_Enviar_2:	
  1045                           ; 1 bytes @ 0x8
  1046                           
  1047  0078                     ??___ftsub:	
  1048                           ; 1 bytes @ 0x8
  1049                           
  1050                           
  1051                           	psect	cstackBANK0
  1052  0020                     __pcstackBANK0:	
  1053                           ; 1 bytes @ 0x8
  1054                           
  1055  0020                     ?___ftge:
  1056  0020                     ??_configLCD:	
  1057                           ; 1 bit 
  1058                           
  1059  0020                     ??_cursor:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0020                     ??_write_string:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0020                     ??___ftpack:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0020                     ?__tdiv_to_l_:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0020                     ?__div_to_l_:	
  1072                           ; 4 bytes @ 0x0
  1073                           
  1074  0020                     ?___lldiv:	
  1075                           ; 4 bytes @ 0x0
  1076                           
  1077  0020                     ___awmod@counter:	
  1078                           ; 4 bytes @ 0x0
  1079                           
  1080  0020                     ___lwmod@counter:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0020                     ___wmul@product:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0020                     __div_to_l_@f1:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089  0020                     __tdiv_to_l_@f1:	
  1090                           ; 3 bytes @ 0x0
  1091                           
  1092  0020                     ___ftge@ff1:	
  1093                           ; 3 bytes @ 0x0
  1094                           
  1095  0020                     ___lldiv@divisor:	
  1096                           ; 3 bytes @ 0x0
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x0
  1100  0020                     	ds	1
  1101  0021                     ?___lwdiv:
  1102  0021                     cursor@a:	
  1103                           ; 2 bytes @ 0x1
  1104                           
  1105  0021                     ___awmod@sign:	
  1106                           ; 1 bytes @ 0x1
  1107                           
  1108  0021                     ___lwdiv@divisor:	
  1109                           ; 1 bytes @ 0x1
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x1
  1113  0021                     	ds	1
  1114  0022                     ?___awdiv:
  1115  0022                     cursor@x:	
  1116                           ; 2 bytes @ 0x2
  1117                           
  1118  0022                     ___awdiv@divisor:	
  1119                           ; 1 bytes @ 0x2
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x2
  1123  0022                     	ds	1
  1124  0023                     ?___awtoft:
  1125  0023                     ?___lltoft:	
  1126                           ; 3 bytes @ 0x3
  1127                           
  1128  0023                     write_string@i:	
  1129                           ; 3 bytes @ 0x3
  1130                           
  1131  0023                     ___awtoft@c:	
  1132                           ; 2 bytes @ 0x3
  1133                           
  1134  0023                     ___lwdiv@dividend:	
  1135                           ; 2 bytes @ 0x3
  1136                           
  1137  0023                     __div_to_l_@f2:	
  1138                           ; 2 bytes @ 0x3
  1139                           
  1140  0023                     __tdiv_to_l_@f2:	
  1141                           ; 3 bytes @ 0x3
  1142                           
  1143  0023                     ___ftge@ff2:	
  1144                           ; 3 bytes @ 0x3
  1145                           
  1146  0023                     ___lltoft@c:	
  1147                           ; 3 bytes @ 0x3
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x3
  1151  0023                     	ds	1
  1152  0024                     ___awdiv@dividend:
  1153  0024                     ___lldiv@dividend:	
  1154                           ; 2 bytes @ 0x4
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0x4
  1158  0024                     	ds	1
  1159  0025                     ??___lwdiv:
  1160                           
  1161                           ; 1 bytes @ 0x5
  1162  0025                     	ds	1
  1163  0026                     ??__div_to_l_:
  1164  0026                     ??___awdiv:	
  1165                           ; 1 bytes @ 0x6
  1166                           
  1167  0026                     ??___awtoft:	
  1168                           ; 1 bytes @ 0x6
  1169                           
  1170  0026                     ___lwdiv@counter:	
  1171                           ; 1 bytes @ 0x6
  1172                           
  1173  0026                     __tdiv_to_l_@quot:	
  1174                           ; 1 bytes @ 0x6
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x6
  1178  0026                     	ds	1
  1179  0027                     ??___lltoft:
  1180  0027                     ___awdiv@counter:	
  1181                           ; 1 bytes @ 0x7
  1182                           
  1183  0027                     ___lwdiv@quotient:	
  1184                           ; 1 bytes @ 0x7
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x7
  1188  0027                     	ds	1
  1189  0028                     ___awdiv@sign:
  1190  0028                     ___awtoft@sign:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  0028                     ___lltoft@exp:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  0028                     ___lldiv@quotient:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x8
  1201  0028                     	ds	1
  1202  0029                     ___awdiv@quotient:
  1203                           
  1204                           ; 2 bytes @ 0x9
  1205  0029                     	ds	1
  1206  002A                     __tdiv_to_l_@cntr:
  1207                           
  1208                           ; 1 bytes @ 0xA
  1209  002A                     	ds	1
  1210  002B                     ?___bmul:
  1211  002B                     ___bmul@multiplicand:	
  1212                           ; 1 bytes @ 0xB
  1213                           
  1214  002B                     __tdiv_to_l_@exp1:	
  1215                           ; 1 bytes @ 0xB
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0xB
  1219  002B                     	ds	1
  1220  002C                     ??___bmul:
  1221  002C                     ___lldiv@counter:	
  1222                           ; 1 bytes @ 0xC
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226  002C                     	ds	1
  1227  002D                     ?___llmod:
  1228  002D                     ___bmul@product:	
  1229                           ; 4 bytes @ 0xD
  1230                           
  1231  002D                     ___llmod@divisor:	
  1232                           ; 1 bytes @ 0xD
  1233                           
  1234                           
  1235                           ; 4 bytes @ 0xD
  1236  002D                     	ds	1
  1237  002E                     ___bmul@multiplier:
  1238  002E                     __div_to_l_@quot:	
  1239                           ; 1 bytes @ 0xE
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0xE
  1243  002E                     	ds	1
  1244  002F                     ?___ftmul:
  1245  002F                     ___ftmul@f1:	
  1246                           ; 3 bytes @ 0xF
  1247                           
  1248                           
  1249                           ; 3 bytes @ 0xF
  1250  002F                     	ds	2
  1251  0031                     ___llmod@dividend:
  1252                           
  1253                           ; 4 bytes @ 0x11
  1254  0031                     	ds	1
  1255  0032                     __div_to_l_@cntr:
  1256  0032                     ___ftmul@f2:	
  1257                           ; 1 bytes @ 0x12
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x12
  1261  0032                     	ds	1
  1262  0033                     __div_to_l_@exp1:
  1263                           
  1264                           ; 1 bytes @ 0x13
  1265  0033                     	ds	2
  1266  0035                     ??___ftmul:
  1267                           
  1268                           ; 1 bytes @ 0x15
  1269  0035                     	ds	4
  1270  0039                     ___ftmul@exp:
  1271                           
  1272                           ; 1 bytes @ 0x19
  1273  0039                     	ds	1
  1274  003A                     ___ftmul@f3_as_product:
  1275                           
  1276                           ; 3 bytes @ 0x1A
  1277  003A                     	ds	3
  1278  003D                     ___ftmul@cntr:
  1279                           
  1280                           ; 1 bytes @ 0x1D
  1281  003D                     	ds	1
  1282  003E                     ___ftmul@sign:
  1283                           
  1284                           ; 1 bytes @ 0x1E
  1285  003E                     	ds	1
  1286  003F                     ?_fround:
  1287  003F                     ?_scale:	
  1288                           ; 3 bytes @ 0x1F
  1289                           
  1290                           
  1291                           ; 3 bytes @ 0x1F
  1292  003F                     	ds	3
  1293  0042                     ??_fround:
  1294  0042                     ??_scale:	
  1295                           ; 1 bytes @ 0x22
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x22
  1299  0042                     	ds	2
  1300  0044                     _scale$1186:
  1301                           
  1302                           ; 3 bytes @ 0x24
  1303  0044                     	ds	3
  1304  0047                     scale@scl:
  1305                           
  1306                           ; 1 bytes @ 0x27
  1307  0047                     	ds	1
  1308  0048                     ?___fttol:
  1309  0048                     ___fttol@f1:	
  1310                           ; 4 bytes @ 0x28
  1311                           
  1312  0048                     _fround$1185:	
  1313                           ; 3 bytes @ 0x28
  1314                           
  1315                           
  1316                           ; 3 bytes @ 0x28
  1317  0048                     	ds	3
  1318  004B                     _fround$1184:
  1319                           
  1320                           ; 3 bytes @ 0x2B
  1321  004B                     	ds	1
  1322  004C                     ??___fttol:
  1323                           
  1324                           ; 1 bytes @ 0x2C
  1325  004C                     	ds	2
  1326  004E                     fround@prec:
  1327                           
  1328                           ; 1 bytes @ 0x2E
  1329  004E                     	ds	1
  1330  004F                     ?___ftadd:
  1331  004F                     ___ftadd@f1:	
  1332                           ; 3 bytes @ 0x2F
  1333                           
  1334                           
  1335                           ; 3 bytes @ 0x2F
  1336  004F                     	ds	1
  1337  0050                     ___fttol@sign1:
  1338                           
  1339                           ; 1 bytes @ 0x30
  1340  0050                     	ds	1
  1341  0051                     ___fttol@lval:
  1342                           
  1343                           ; 4 bytes @ 0x31
  1344  0051                     	ds	1
  1345  0052                     ___ftadd@f2:
  1346                           
  1347                           ; 3 bytes @ 0x32
  1348  0052                     	ds	3
  1349  0055                     ??___ftadd:
  1350  0055                     ___fttol@exp1:	
  1351                           ; 1 bytes @ 0x35
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x35
  1355  0055                     	ds	4
  1356  0059                     ___ftadd@sign:
  1357                           
  1358                           ; 1 bytes @ 0x39
  1359  0059                     	ds	1
  1360  005A                     ___ftadd@exp2:
  1361                           
  1362                           ; 1 bytes @ 0x3A
  1363  005A                     	ds	1
  1364  005B                     ___ftadd@exp1:
  1365                           
  1366                           ; 1 bytes @ 0x3B
  1367  005B                     	ds	1
  1368  005C                     ?___ftsub:
  1369  005C                     ___ftsub@f2:	
  1370                           ; 3 bytes @ 0x3C
  1371                           
  1372                           
  1373                           ; 3 bytes @ 0x3C
  1374  005C                     	ds	3
  1375  005F                     ___ftsub@f1:
  1376                           
  1377                           ; 3 bytes @ 0x3F
  1378  005F                     	ds	3
  1379  0062                     ?_sprintf:
  1380  0062                     sprintf@f:	
  1381                           ; 2 bytes @ 0x42
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x42
  1385  0062                     	ds	9
  1386  006B                     ??_main:
  1387                           
  1388                           ; 1 bytes @ 0x4B
  1389  006B                     	ds	3
  1390                           
  1391                           	psect	maintext
  1392  0668                     __pmaintext:	
  1393 ;;
  1394 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1395 ;;
  1396 ;; *************** function _main *****************
  1397 ;; Defined at:
  1398 ;;		line 76 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : B00/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       3       0       0       0
  1415 ;;      Totals:         0       3       0       0       0
  1416 ;;Total ram usage:        3 bytes
  1417 ;; Hardware stack levels required when called:    6
  1418 ;; This function calls:
  1419 ;;		_Enviar_1
  1420 ;;		_Enviar_2
  1421 ;;		_Write_USART
  1422 ;;		_Write_USART_String
  1423 ;;		___awtoft
  1424 ;;		___ftmul
  1425 ;;		__baudios
  1426 ;;		_clear_LCD
  1427 ;;		_configADC
  1428 ;;		_configLCD
  1429 ;;		_config_rc
  1430 ;;		_config_tx
  1431 ;;		_cursor
  1432 ;;		_setup
  1433 ;;		_sprintf
  1434 ;;		_write_string
  1435 ;; This function is called by:
  1436 ;;		Startup code after reset
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _main
  1442  0668                     _main:
  1443  0668                     l4381:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1446                           
  1447                           
  1448                           ;main.c: 77:     setup();
  1449  0668  160A  158A  2567  120A  118A  	fcall	_setup
  1450  066D                     l4383:
  1451                           
  1452                           ;main.c: 78:     _baudios();
  1453  066D  120A  158A  2002  120A  118A  	fcall	__baudios
  1454  0672                     l4385:
  1455                           
  1456                           ;main.c: 79:     config_tx();
  1457  0672  160A  158A  2535  120A  118A  	fcall	_config_tx
  1458  0677                     l4387:
  1459                           
  1460                           ;main.c: 80:     config_rc();
  1461  0677  160A  158A  2525  120A  118A  	fcall	_config_rc
  1462  067C                     l4389:
  1463                           
  1464                           ;main.c: 81:     configLCD();
  1465  067C  160A  118A  2249  120A  118A  	fcall	_configLCD
  1466  0681                     l4391:
  1467                           
  1468                           ;main.c: 82:     clear_LCD();
  1469  0681  120A  118A  27F2  120A  118A  	fcall	_clear_LCD
  1470  0686                     l4393:
  1471                           
  1472                           ;main.c: 84:         clear_LCD();
  1473  0686  120A  118A  27F2  120A  118A  	fcall	_clear_LCD
  1474  068B                     l4395:
  1475                           
  1476                           ;main.c: 85:         cursor(1,1);
  1477  068B  01F7               	clrf	cursor@b
  1478  068C  0AF7               	incf	cursor@b,f
  1479  068D  3001               	movlw	1
  1480  068E  160A  158A  2630  120A  118A  	fcall	_cursor
  1481  0693                     l4397:
  1482                           
  1483                           ;main.c: 86:         write_string("V1   V2   CONT");
  1484  0693  3088               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1485  0694  00F6               	movwf	write_string@a
  1486  0695  3080               	movlw	128
  1487  0696  00F7               	movwf	write_string@a+1
  1488  0697  120A  118A  27AC  120A  118A  	fcall	_write_string
  1489  069C                     l4399:
  1490                           
  1491                           ;main.c: 88:         ADC0 = configADC(0);
  1492  069C  3000               	movlw	0
  1493  069D  160A  118A  24B4  120A  118A  	fcall	_configADC
  1494  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1495  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1496  06A4  00EB               	movwf	??_main
  1497  06A5  086B               	movf	??_main,w
  1498  06A6  00EF               	movwf	_ADC0
  1499  06A7                     l4401:
  1500                           
  1501                           ;main.c: 89:         ADC1 = configADC(1);
  1502  06A7  3001               	movlw	1
  1503  06A8  160A  118A  24B4  120A  118A  	fcall	_configADC
  1504  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1505  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1506  06AF  00EB               	movwf	??_main
  1507  06B0  086B               	movf	??_main,w
  1508  06B1  00EE               	movwf	_ADC1
  1509  06B2                     l4403:
  1510                           
  1511                           ;main.c: 91:         V1 = ADC0*0.0196;
  1512  06B2  3090               	movlw	144
  1513  06B3  00AF               	movwf	___ftmul@f1
  1514  06B4  30A0               	movlw	160
  1515  06B5  00B0               	movwf	___ftmul@f1+1
  1516  06B6  303C               	movlw	60
  1517  06B7  00B1               	movwf	___ftmul@f1+2
  1518  06B8  086F               	movf	_ADC0,w
  1519  06B9  00EB               	movwf	??_main
  1520  06BA  01EC               	clrf	??_main+1
  1521  06BB  086B               	movf	??_main,w
  1522  06BC  00A3               	movwf	___awtoft@c
  1523  06BD  086C               	movf	??_main+1,w
  1524  06BE  00A4               	movwf	___awtoft@c+1
  1525  06BF  160A  158A  267F  120A  118A  	fcall	___awtoft
  1526  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1527  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1528  06C6  0823               	movf	?___awtoft,w
  1529  06C7  00B2               	movwf	___ftmul@f2
  1530  06C8  0824               	movf	?___awtoft+1,w
  1531  06C9  00B3               	movwf	___ftmul@f2+1
  1532  06CA  0825               	movf	?___awtoft+2,w
  1533  06CB  00B4               	movwf	___ftmul@f2+2
  1534  06CC  160A  118A  23CF  120A  118A  	fcall	___ftmul
  1535  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1536  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1537  06D3  082F               	movf	?___ftmul,w
  1538  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  1539  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  1540  06D6  00C2               	movwf	_V1^(0+128)
  1541  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1542  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1543  06D9  0830               	movf	?___ftmul+1,w
  1544  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  1545  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  1546  06DC  00C3               	movwf	(_V1+1)^(0+128)
  1547  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1548  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1549  06DF  0831               	movf	?___ftmul+2,w
  1550  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  1551  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  1552  06E2  00C4               	movwf	(_V1+2)^(0+128)
  1553  06E3                     l4405:
  1554                           
  1555                           ;main.c: 92:         V2 = ADC1*0.0196;
  1556  06E3  3090               	movlw	144
  1557  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1558  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1559  06E6  00AF               	movwf	___ftmul@f1
  1560  06E7  30A0               	movlw	160
  1561  06E8  00B0               	movwf	___ftmul@f1+1
  1562  06E9  303C               	movlw	60
  1563  06EA  00B1               	movwf	___ftmul@f1+2
  1564  06EB  086E               	movf	_ADC1,w
  1565  06EC  00EB               	movwf	??_main
  1566  06ED  01EC               	clrf	??_main+1
  1567  06EE  086B               	movf	??_main,w
  1568  06EF  00A3               	movwf	___awtoft@c
  1569  06F0  086C               	movf	??_main+1,w
  1570  06F1  00A4               	movwf	___awtoft@c+1
  1571  06F2  160A  158A  267F  120A  118A  	fcall	___awtoft
  1572  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1573  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1574  06F9  0823               	movf	?___awtoft,w
  1575  06FA  00B2               	movwf	___ftmul@f2
  1576  06FB  0824               	movf	?___awtoft+1,w
  1577  06FC  00B3               	movwf	___ftmul@f2+1
  1578  06FD  0825               	movf	?___awtoft+2,w
  1579  06FE  00B4               	movwf	___ftmul@f2+2
  1580  06FF  160A  118A  23CF  120A  118A  	fcall	___ftmul
  1581  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0706  082F               	movf	?___ftmul,w
  1584  0707  1683               	bsf	3,5	;RP0=1, select bank1
  1585  0708  1303               	bcf	3,6	;RP1=0, select bank1
  1586  0709  00BF               	movwf	_V2^(0+128)
  1587  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1588  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1589  070C  0830               	movf	?___ftmul+1,w
  1590  070D  1683               	bsf	3,5	;RP0=1, select bank1
  1591  070E  1303               	bcf	3,6	;RP1=0, select bank1
  1592  070F  00C0               	movwf	(_V2+1)^(0+128)
  1593  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0712  0831               	movf	?___ftmul+2,w
  1596  0713  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0714  1303               	bcf	3,6	;RP1=0, select bank1
  1598  0715  00C1               	movwf	(_V2+2)^(0+128)
  1599  0716                     l4407:
  1600                           
  1601                           ;main.c: 94:         sprintf(BUFFER, "%2.1f  %2.1f  %d" , V1,V2, contador);
  1602  0716  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1603  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0719  00EB               	movwf	??_main
  1606  071A  086B               	movf	??_main,w
  1607  071B  00E2               	movwf	sprintf@f
  1608  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1609  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1610  071E  0842               	movf	_V1^(0+128),w
  1611  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0721  00E3               	movwf	?_sprintf+1
  1614  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0724  0843               	movf	(_V1+1)^(0+128),w
  1617  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0727  00E4               	movwf	?_sprintf+2
  1620  0728  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0729  1303               	bcf	3,6	;RP1=0, select bank1
  1622  072A  0844               	movf	(_V1+2)^(0+128),w
  1623  072B  1283               	bcf	3,5	;RP0=0, select bank0
  1624  072C  1303               	bcf	3,6	;RP1=0, select bank0
  1625  072D  00E5               	movwf	?_sprintf+3
  1626  072E  1683               	bsf	3,5	;RP0=1, select bank1
  1627  072F  1303               	bcf	3,6	;RP1=0, select bank1
  1628  0730  083F               	movf	_V2^(0+128),w
  1629  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0733  00E6               	movwf	?_sprintf+4
  1632  0734  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0735  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0736  0840               	movf	(_V2+1)^(0+128),w
  1635  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0739  00E7               	movwf	?_sprintf+5
  1638  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1639  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1640  073C  0841               	movf	(_V2+2)^(0+128),w
  1641  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1642  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1643  073F  00E8               	movwf	?_sprintf+6
  1644  0740  087A               	movf	_contador,w
  1645  0741  00EC               	movwf	??_main+1
  1646  0742  01ED               	clrf	??_main+2
  1647  0743  086C               	movf	??_main+1,w
  1648  0744  00E9               	movwf	?_sprintf+7
  1649  0745  086D               	movf	??_main+2,w
  1650  0746  00EA               	movwf	?_sprintf+8
  1651  0747  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1652  0748  120A  158A  2528  120A  118A  	fcall	_sprintf
  1653  074D                     l4409:
  1654                           
  1655                           ;main.c: 97:         cursor(2,1);
  1656  074D  01F7               	clrf	cursor@b
  1657  074E  0AF7               	incf	cursor@b,f
  1658  074F  3002               	movlw	2
  1659  0750  160A  158A  2630  120A  118A  	fcall	_cursor
  1660  0755                     l4411:
  1661                           
  1662                           ;main.c: 98:         write_string(BUFFER);
  1663  0755  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1664  0756  00F6               	movwf	write_string@a
  1665  0757  3000               	movlw	0
  1666  0758  00F7               	movwf	write_string@a+1
  1667  0759  120A  118A  27AC  120A  118A  	fcall	_write_string
  1668  075E                     l4413:
  1669                           
  1670                           ;main.c: 100:         Write_USART_String(BUFFER);
  1671  075E  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1672  075F  160A  158A  25AF  120A  118A  	fcall	_Write_USART_String
  1673  0764                     l4415:
  1674                           
  1675                           ;main.c: 101:         Write_USART(13);
  1676  0764  300D               	movlw	13
  1677  0765  160A  158A  2549  120A  118A  	fcall	_Write_USART
  1678  076A                     l4417:
  1679                           
  1680                           ;main.c: 102:         Write_USART(10);
  1681  076A  300A               	movlw	10
  1682  076B  160A  158A  2549  120A  118A  	fcall	_Write_USART
  1683  0770                     l4419:
  1684                           
  1685                           ;main.c: 103:         Enviar_1();
  1686  0770  160A  158A  25CD  120A  118A  	fcall	_Enviar_1
  1687  0775                     l4421:
  1688                           
  1689                           ;main.c: 104:         Enviar_2();
  1690  0775  160A  158A  25EC  120A  118A  	fcall	_Enviar_2
  1691  077A                     l4423:
  1692                           
  1693                           ;main.c: 106:         if (RCIF == 1){
  1694  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1695  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1696  077C  1E8C               	btfss	12,5	;volatile
  1697  077D  2F7F               	goto	u6621
  1698  077E  2F80               	goto	u6620
  1699  077F                     u6621:
  1700  077F  2F9A               	goto	l4433
  1701  0780                     u6620:
  1702  0780                     l4425:
  1703                           
  1704                           ;main.c: 107:             entregado = RCREG;
  1705  0780  081A               	movf	26,w	;volatile
  1706  0781  00EB               	movwf	??_main
  1707  0782  086B               	movf	??_main,w
  1708  0783  00F8               	movwf	_entregado
  1709  0784                     l4427:
  1710                           
  1711                           ;main.c: 108:             if(entregado == '+'){contador = contador +1;}
  1712  0784  302B               	movlw	43
  1713  0785  0678               	xorwf	_entregado,w
  1714  0786  1D03               	btfss	3,2
  1715  0787  2F89               	goto	u6631
  1716  0788  2F8A               	goto	u6630
  1717  0789                     u6631:
  1718  0789  2F8F               	goto	l94
  1719  078A                     u6630:
  1720  078A                     l4429:
  1721  078A  087A               	movf	_contador,w
  1722  078B  3E01               	addlw	1
  1723  078C  00EB               	movwf	??_main
  1724  078D  086B               	movf	??_main,w
  1725  078E  00FA               	movwf	_contador
  1726  078F                     l94:
  1727                           
  1728                           ;main.c: 109:             if(entregado == '-'){contador = contador -1;}
  1729  078F  302D               	movlw	45
  1730  0790  0678               	xorwf	_entregado,w
  1731  0791  1D03               	btfss	3,2
  1732  0792  2F94               	goto	u6641
  1733  0793  2F95               	goto	u6640
  1734  0794                     u6641:
  1735  0794  2F9A               	goto	l4433
  1736  0795                     u6640:
  1737  0795                     l4431:
  1738  0795  087A               	movf	_contador,w
  1739  0796  3EFF               	addlw	255
  1740  0797  00EB               	movwf	??_main
  1741  0798  086B               	movf	??_main,w
  1742  0799  00FA               	movwf	_contador
  1743  079A                     l4433:
  1744                           
  1745                           ;main.c: 111:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1746  079A  3003               	movlw	3
  1747  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1748  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1749  079D  00ED               	movwf	??_main+2
  1750  079E  308A               	movlw	138
  1751  079F  00EC               	movwf	??_main+1
  1752  07A0  3055               	movlw	85
  1753  07A1  00EB               	movwf	??_main
  1754  07A2                     u6657:
  1755  07A2  0BEB               	decfsz	??_main,f
  1756  07A3  2FA2               	goto	u6657
  1757  07A4  0BEC               	decfsz	??_main+1,f
  1758  07A5  2FA2               	goto	u6657
  1759  07A6  0BED               	decfsz	??_main+2,f
  1760  07A7  2FA2               	goto	u6657
  1761  07A8  2E86               	goto	l4393
  1762  07A9  120A  118A  280C   	ljmp	start
  1763  07AC                     __end_of_main:
  1764                           
  1765                           	psect	text1
  1766  07AC                     __ptext1:	
  1767 ;; *************** function _write_string *****************
  1768 ;; Defined at:
  1769 ;;		line 99 in file "LCD.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  a               2    6[COMMON] PTR unsigned char 
  1772 ;;		 -> BUFFER(20), STR_1(15), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  i               2    3[BANK0 ] int 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         2       0       0       0       0
  1785 ;;      Locals:         0       2       0       0       0
  1786 ;;      Temps:          0       3       0       0       0
  1787 ;;      Totals:         2       5       0       0       0
  1788 ;;Total ram usage:        7 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    4
  1791 ;; This function calls:
  1792 ;;		_write_char
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _write_string
  1800  07AC                     _write_string:
  1801  07AC                     l4069:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1804                           
  1805                           
  1806                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++){
  1807  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1808  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1809  07AE  01A3               	clrf	write_string@i
  1810  07AF  01A4               	clrf	write_string@i+1
  1811  07B0  2FD5               	goto	l4075
  1812  07B1                     l4071:
  1813                           
  1814                           ;LCD.c: 102:        write_char(a[i]);
  1815  07B1  0823               	movf	write_string@i,w
  1816  07B2  0776               	addwf	write_string@a,w
  1817  07B3  00A1               	movwf	??_write_string+1
  1818  07B4  0877               	movf	write_string@a+1,w
  1819  07B5  00A0               	movwf	??_write_string
  1820  07B6  1803               	skipnc
  1821  07B7  0AA0               	incf	??_write_string,f
  1822  07B8  1FA3               	btfss	write_string@i,7
  1823  07B9  2FBB               	goto	u6040
  1824  07BA  03A0               	decf	??_write_string,f
  1825  07BB                     u6040:
  1826  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1827  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1828  07BD  0820               	movf	??_write_string,w
  1829  07BE  00A2               	movwf	??_write_string+2
  1830  07BF  0822               	movf	??_write_string+2,w
  1831  07C0  00FF               	movwf	btemp+1
  1832  07C1  0821               	movf	??_write_string+1,w
  1833  07C2  0084               	movwf	4
  1834  07C3  160A  118A  2000  120A  118A  	fcall	stringtab
  1835  07C8  160A  158A  2593  120A  118A  	fcall	_write_char
  1836  07CD                     l4073:
  1837                           
  1838                           ;LCD.c: 103:     }
  1839  07CD  3001               	movlw	1
  1840  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1841  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1842  07D0  07A3               	addwf	write_string@i,f
  1843  07D1  1803               	skipnc
  1844  07D2  0AA4               	incf	write_string@i+1,f
  1845  07D3  3000               	movlw	0
  1846  07D4  07A4               	addwf	write_string@i+1,f
  1847  07D5                     l4075:
  1848  07D5  0823               	movf	write_string@i,w
  1849  07D6  0776               	addwf	write_string@a,w
  1850  07D7  00A1               	movwf	??_write_string+1
  1851  07D8  0877               	movf	write_string@a+1,w
  1852  07D9  00A0               	movwf	??_write_string
  1853  07DA  1803               	skipnc
  1854  07DB  0AA0               	incf	??_write_string,f
  1855  07DC  1FA3               	btfss	write_string@i,7
  1856  07DD  2FDF               	goto	u6050
  1857  07DE  03A0               	decf	??_write_string,f
  1858  07DF                     u6050:
  1859  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1860  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1861  07E1  0820               	movf	??_write_string,w
  1862  07E2  00A2               	movwf	??_write_string+2
  1863  07E3  0822               	movf	??_write_string+2,w
  1864  07E4  00FF               	movwf	btemp+1
  1865  07E5  0821               	movf	??_write_string+1,w
  1866  07E6  0084               	movwf	4
  1867  07E7  160A  118A  2000  120A  118A  	fcall	stringtab
  1868  07EC  3A00               	xorlw	0
  1869  07ED  1D03               	skipz
  1870  07EE  2FF0               	goto	u6061
  1871  07EF  2FF1               	goto	u6060
  1872  07F0                     u6061:
  1873  07F0  2FB1               	goto	l4071
  1874  07F1                     u6060:
  1875  07F1                     l178:
  1876  07F1  0008               	return
  1877  07F2                     __end_of_write_string:
  1878                           
  1879                           	psect	text2
  1880  1D93                     __ptext2:	
  1881 ;; *************** function _write_char *****************
  1882 ;; Defined at:
  1883 ;;		line 89 in file "LCD.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  a               1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  a               1    5[COMMON] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       0       0       0
  1898 ;;      Locals:         1       0       0       0       0
  1899 ;;      Temps:          1       0       0       0       0
  1900 ;;      Totals:         2       0       0       0       0
  1901 ;;Total ram usage:        2 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		_pin
  1906 ;; This function is called by:
  1907 ;;		_write_string
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _write_char
  1913  1D93                     _write_char:
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1917                           ;write_char@a stored from wreg
  1918  1D93  00F5               	movwf	write_char@a
  1919  1D94                     l3755:
  1920                           
  1921                           ;LCD.c: 90:     RE0 = 1;
  1922  1D94  1283               	bcf	3,5	;RP0=0, select bank0
  1923  1D95  1303               	bcf	3,6	;RP1=0, select bank0
  1924  1D96  1409               	bsf	9,0	;volatile
  1925  1D97                     l3757:
  1926                           
  1927                           ;LCD.c: 91:     pin(a);
  1928  1D97  0875               	movf	write_char@a,w
  1929  1D98  160A  158A  277C  160A  158A  	fcall	_pin
  1930  1D9D                     l3759:
  1931                           
  1932                           ;LCD.c: 92:     RE1 = 1;
  1933  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  1934  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  1935  1D9F  1489               	bsf	9,1	;volatile
  1936  1DA0                     l3761:
  1937                           
  1938                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1939  1DA0  2DA1               	nop2	;2 cycle nop
  1940  1DA1  2DA2               	nop2	;2 cycle nop
  1941  1DA2  0000               	nop
  1942  1DA3                     l3763:
  1943                           
  1944                           ;LCD.c: 94:     RE1 = 0;
  1945  1DA3  1283               	bcf	3,5	;RP0=0, select bank0
  1946  1DA4  1303               	bcf	3,6	;RP1=0, select bank0
  1947  1DA5  1089               	bcf	9,1	;volatile
  1948  1DA6                     l3765:
  1949                           
  1950                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1951  1DA6  2DA7               	nop2	;2 cycle nop
  1952  1DA7  2DA8               	nop2	;2 cycle nop
  1953  1DA8  0000               	nop
  1954  1DA9                     l3767:
  1955                           
  1956                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1957  1DA9  3010               	movlw	16
  1958  1DAA  00F4               	movwf	??_write_char
  1959  1DAB                     u6667:
  1960  1DAB  0BF4               	decfsz	??_write_char,f
  1961  1DAC  2DAB               	goto	u6667
  1962  1DAD  0000               	nop
  1963  1DAE                     l172:
  1964  1DAE  0008               	return
  1965  1DAF                     __end_of_write_char:
  1966                           
  1967                           	psect	text3
  1968  0D28                     __ptext3:	
  1969 ;; *************** function _sprintf *****************
  1970 ;; Defined at:
  1971 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  sp              1    wreg     PTR unsigned char 
  1974 ;;		 -> BUFFER(20), 
  1975 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1976 ;;		 -> STR_2(17), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1979 ;;		 -> BUFFER(20), 
  1980 ;;  val             4   18[BANK1 ] unsigned long 
  1981 ;;  tmpval          4   14[BANK1 ] struct .
  1982 ;;  fval            3   24[BANK1 ] struct .
  1983 ;;  prec            2   28[BANK1 ] int 
  1984 ;;  eexp            2   22[BANK1 ] int 
  1985 ;;  width           2   12[BANK1 ] int 
  1986 ;;  flag            2   10[BANK1 ] unsigned short 
  1987 ;;  cp              2    0        PTR const unsigned char 
  1988 ;;  len             2    0        unsigned int 
  1989 ;;  c               1   30[BANK1 ] unsigned char 
  1990 ;;  ap              1    9[BANK1 ] PTR void [1]
  1991 ;;		 -> ?_sprintf(2), 
  1992 ;;  d               1    0        unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2   66[BANK0 ] int 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       9       0       0       0
  2003 ;;      Locals:         0       0      25       0       0
  2004 ;;      Temps:          0       0       6       0       0
  2005 ;;      Totals:         0       9      31       0       0
  2006 ;;Total ram usage:       40 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    5
  2009 ;; This function calls:
  2010 ;;		___awdiv
  2011 ;;		___ftadd
  2012 ;;		___ftge
  2013 ;;		___ftmul
  2014 ;;		___ftneg
  2015 ;;		___ftsub
  2016 ;;		___fttol
  2017 ;;		___lldiv
  2018 ;;		___llmod
  2019 ;;		___lltoft
  2020 ;;		___wmul
  2021 ;;		__div_to_l_
  2022 ;;		__tdiv_to_l_
  2023 ;;		_fround
  2024 ;;		_isdigit
  2025 ;;		_scale
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _sprintf
  2033  0D28                     _sprintf:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2037                           ;sprintf@sp stored from wreg
  2038  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0D2A  00BB               	movwf	sprintf@sp^(0+128)
  2041  0D2B                     l4077:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2044  0D2B  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2045  0D2C  00A0               	movwf	??_sprintf^(0+128)
  2046  0D2D  0820               	movf	??_sprintf^(0+128),w
  2047  0D2E  00A9               	movwf	sprintf@ap^(0+128)
  2048  0D2F                     L1:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2051  0D2F  120A  118A  2E4B   	goto	l4357
  2052  0D32                     l4079:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2055  0D32  3025               	movlw	37
  2056  0D33  063E               	xorwf	sprintf@c^(0+128),w
  2057  0D34  1903               	btfsc	3,2
  2058  0D35  2D37               	goto	u6071
  2059  0D36  2D38               	goto	u6070
  2060  0D37                     u6071:
  2061  0D37  2D44               	goto	l4085
  2062  0D38                     u6070:
  2063  0D38                     l4081:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2066  0D38  083E               	movf	sprintf@c^(0+128),w
  2067  0D39  00A0               	movwf	??_sprintf^(0+128)
  2068  0D3A  083B               	movf	sprintf@sp^(0+128),w
  2069  0D3B  0084               	movwf	4
  2070  0D3C  0820               	movf	??_sprintf^(0+128),w
  2071  0D3D  1383               	bcf	3,7	;select IRP bank0
  2072  0D3E  0080               	movwf	0
  2073  0D3F                     l4083:
  2074  0D3F  3001               	movlw	1
  2075  0D40  00A0               	movwf	??_sprintf^(0+128)
  2076  0D41  0820               	movf	??_sprintf^(0+128),w
  2077  0D42  07BB               	addwf	sprintf@sp^(0+128),f
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2080  0D43  2D2F               	goto	L1
  2081  0D44                     l4085:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2084  0D44  01AC               	clrf	sprintf@width^(0+128)
  2085  0D45  01AD               	clrf	(sprintf@width+1)^(0+128)
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2088  0D46  01AA               	clrf	sprintf@flag^(0+128)
  2089  0D47  01AB               	clrf	(sprintf@flag+1)^(0+128)
  2090  0D48                     l4087:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2093  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0D4A  0862               	movf	sprintf@f,w
  2096  0D4B  0084               	movwf	4
  2097  0D4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2098  0D51  160A  158A  2555  120A  158A  	fcall	_isdigit
  2099  0D56  1C03               	btfss	3,0
  2100  0D57  2D59               	goto	u6081
  2101  0D58  2D5A               	goto	u6080
  2102  0D59                     u6081:
  2103  0D59  2DA0               	goto	l4099
  2104  0D5A                     u6080:
  2105  0D5A                     l4089:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2108  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0D5C  01AC               	clrf	sprintf@width^(0+128)
  2111  0D5D  01AD               	clrf	(sprintf@width+1)^(0+128)
  2112  0D5E                     l4091:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2115  0D5E  300A               	movlw	10
  2116  0D5F  00F3               	movwf	___wmul@multiplier
  2117  0D60  3000               	movlw	0
  2118  0D61  00F4               	movwf	___wmul@multiplier+1
  2119  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  2121  0D64  082D               	movf	(sprintf@width+1)^(0+128),w
  2122  0D65  00F6               	movwf	___wmul@multiplicand+1
  2123  0D66  082C               	movf	sprintf@width^(0+128),w
  2124  0D67  00F5               	movwf	___wmul@multiplicand
  2125  0D68  160A  158A  26A8  120A  158A  	fcall	___wmul
  2126  0D6D  0874               	movf	?___wmul+1,w
  2127  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2128  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0D70  00AD               	movwf	(sprintf@width+1)^(0+128)
  2130  0D71  0873               	movf	?___wmul,w
  2131  0D72  00AC               	movwf	sprintf@width^(0+128)
  2132  0D73                     l4093:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2135  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0D75  0862               	movf	sprintf@f,w
  2138  0D76  0084               	movwf	4
  2139  0D77  160A  118A  200A  120A  158A  	fcall	stringdir
  2140  0D7C  3ED0               	addlw	208
  2141  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  2142  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  2143  0D7F  00A0               	movwf	??_sprintf^(0+128)
  2144  0D80  30FF               	movlw	255
  2145  0D81  1803               	skipnc
  2146  0D82  3000               	movlw	0
  2147  0D83  00A1               	movwf	(??_sprintf^(0+128)+1)
  2148  0D84  0820               	movf	??_sprintf^(0+128),w
  2149  0D85  07AC               	addwf	sprintf@width^(0+128),f
  2150  0D86  1803               	skipnc
  2151  0D87  0AAD               	incf	(sprintf@width+1)^(0+128),f
  2152  0D88  0821               	movf	(??_sprintf+1)^(0+128),w
  2153  0D89  07AD               	addwf	(sprintf@width+1)^(0+128),f
  2154  0D8A                     l4095:
  2155  0D8A  3001               	movlw	1
  2156  0D8B  00A0               	movwf	??_sprintf^(0+128)
  2157  0D8C  0820               	movf	??_sprintf^(0+128),w
  2158  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0D8F  07E2               	addwf	sprintf@f,f
  2161  0D90                     l4097:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2164  0D90  0862               	movf	sprintf@f,w
  2165  0D91  0084               	movwf	4
  2166  0D92  160A  118A  200A  120A  158A  	fcall	stringdir
  2167  0D97  160A  158A  2555  120A  158A  	fcall	_isdigit
  2168  0D9C  1803               	btfsc	3,0
  2169  0D9D  2D9F               	goto	u6091
  2170  0D9E  2DA0               	goto	u6090
  2171  0D9F                     u6091:
  2172  0D9F  2D5E               	goto	l4091
  2173  0DA0                     u6090:
  2174  0DA0                     l4099:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2177  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0DA2  0862               	movf	sprintf@f,w
  2180  0DA3  0084               	movwf	4
  2181  0DA4  160A  118A  200A  120A  158A  	fcall	stringdir
  2182  0DA9  3A2E               	xorlw	46
  2183  0DAA  1D03               	skipz
  2184  0DAB  2DAD               	goto	u6101
  2185  0DAC  2DAE               	goto	u6100
  2186  0DAD                     u6101:
  2187  0DAD  2E00               	goto	l4115
  2188  0DAE                     u6100:
  2189  0DAE                     l4101:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2192  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  2193  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  2194  0DB0  172B               	bsf	(sprintf@flag^(0+128)+1),6
  2195  0DB1                     l4103:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2198  0DB1  3001               	movlw	1
  2199  0DB2  00A0               	movwf	??_sprintf^(0+128)
  2200  0DB3  0820               	movf	??_sprintf^(0+128),w
  2201  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0DB6  07E2               	addwf	sprintf@f,f
  2204  0DB7                     l4105:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2207  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0DB9  01BC               	clrf	sprintf@prec^(0+128)
  2210  0DBA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2213  0DBB  2DEE               	goto	l4113
  2214  0DBC                     l4107:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2217  0DBC  300A               	movlw	10
  2218  0DBD  00F3               	movwf	___wmul@multiplier
  2219  0DBE  3000               	movlw	0
  2220  0DBF  00F4               	movwf	___wmul@multiplier+1
  2221  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0DC2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2224  0DC3  00F6               	movwf	___wmul@multiplicand+1
  2225  0DC4  083C               	movf	sprintf@prec^(0+128),w
  2226  0DC5  00F5               	movwf	___wmul@multiplicand
  2227  0DC6  160A  158A  26A8  120A  158A  	fcall	___wmul
  2228  0DCB  0874               	movf	?___wmul+1,w
  2229  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0DCE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2232  0DCF  0873               	movf	?___wmul,w
  2233  0DD0  00BC               	movwf	sprintf@prec^(0+128)
  2234  0DD1                     l4109:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2237  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0DD3  0862               	movf	sprintf@f,w
  2240  0DD4  0084               	movwf	4
  2241  0DD5  160A  118A  200A  120A  158A  	fcall	stringdir
  2242  0DDA  3ED0               	addlw	208
  2243  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0DDD  00A0               	movwf	??_sprintf^(0+128)
  2246  0DDE  30FF               	movlw	255
  2247  0DDF  1803               	skipnc
  2248  0DE0  3000               	movlw	0
  2249  0DE1  00A1               	movwf	(??_sprintf^(0+128)+1)
  2250  0DE2  0820               	movf	??_sprintf^(0+128),w
  2251  0DE3  07BC               	addwf	sprintf@prec^(0+128),f
  2252  0DE4  1803               	skipnc
  2253  0DE5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2254  0DE6  0821               	movf	(??_sprintf+1)^(0+128),w
  2255  0DE7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2256  0DE8                     l4111:
  2257  0DE8  3001               	movlw	1
  2258  0DE9  00A0               	movwf	??_sprintf^(0+128)
  2259  0DEA  0820               	movf	??_sprintf^(0+128),w
  2260  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0DED  07E2               	addwf	sprintf@f,f
  2263  0DEE                     l4113:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2266  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0DEF  0862               	movf	sprintf@f,w
  2268  0DF0  0084               	movwf	4
  2269  0DF1  160A  118A  200A  120A  158A  	fcall	stringdir
  2270  0DF6  160A  158A  2555  120A  158A  	fcall	_isdigit
  2271  0DFB  1803               	btfsc	3,0
  2272  0DFC  2DFE               	goto	u6111
  2273  0DFD  2DFF               	goto	u6110
  2274  0DFE                     u6111:
  2275  0DFE  2DBC               	goto	l4107
  2276  0DFF                     u6110:
  2277  0DFF  2E08               	goto	l4121
  2278  0E00                     l4115:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2281  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0E02  01BC               	clrf	sprintf@prec^(0+128)
  2284  0E03  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2285  0E04                     l4117:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2288  0E04  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2289  0E05  2E08               	goto	l4121
  2290  0E06                     l391:	
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2292                           
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2295  0E06  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2298  0E07  2E2C               	goto	l4123
  2299  0E08                     l4121:
  2300  0E08  3001               	movlw	1
  2301  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0E0B  07E2               	addwf	sprintf@f,f
  2304  0E0C  30FF               	movlw	-1
  2305  0E0D  0762               	addwf	sprintf@f,w
  2306  0E0E  0084               	movwf	4
  2307  0E0F  160A  118A  200A  120A  158A  	fcall	stringdir
  2308  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0E16  00BE               	movwf	sprintf@c^(0+128)
  2311  0E17  00A0               	movwf	??_sprintf^(0+128)
  2312  0E18  01A1               	clrf	(??_sprintf^(0+128)+1)
  2313                           
  2314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2315                           ; Switch size 1, requested type "simple"
  2316                           ; Number of cases is 1, Range of values is 0 to 0
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; simple_byte            4     3 (average)
  2320                           ; direct_byte           11     8 (fixed)
  2321                           ; jumptable            260     6 (fixed)
  2322                           ;	Chosen strategy is simple_byte
  2323  0E19  0821               	movf	(??_sprintf+1)^(0+128),w
  2324  0E1A  3A00               	xorlw	0	; case 0
  2325  0E1B  1903               	skipnz
  2326  0E1C  2E1E               	goto	l4495
  2327  0E1D  2D2F               	goto	L1
  2328  0E1E                     l4495:
  2329                           
  2330                           ; Switch size 1, requested type "simple"
  2331                           ; Number of cases is 4, Range of values is 0 to 105
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte           13     7 (average)
  2335                           ; jumptable            260     6 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  0E1E  0820               	movf	??_sprintf^(0+128),w
  2338  0E1F  3A00               	xorlw	0	; case 0
  2339  0E20  1903               	skipnz
  2340  0E21  2FFD               	goto	L3
  2341  0E22  3A64               	xorlw	100	; case 100
  2342  0E23  1903               	skipnz
  2343  0E24  2E2C               	goto	l4123
  2344  0E25  3A02               	xorlw	2	; case 102
  2345  0E26  1903               	skipnz
  2346  0E27  2E06               	goto	l391
  2347  0E28  3A0F               	xorlw	15	; case 105
  2348  0E29  1903               	skipnz
  2349  0E2A  2E2C               	goto	l4123
  2350  0E2B  2D2F               	goto	L1
  2351  0E2C                     l4123:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2354  0E2C  3000               	movlw	0
  2355  0E2D  052A               	andwf	sprintf@flag^(0+128),w
  2356  0E2E  00A0               	movwf	??_sprintf^(0+128)
  2357  0E2F  3007               	movlw	7
  2358  0E30  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2359  0E31  00A1               	movwf	(??_sprintf+1)^(0+128)
  2360  0E32  0820               	movf	??_sprintf^(0+128),w
  2361  0E33  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2362  0E34  1903               	btfsc	3,2
  2363  0E35  2E37               	goto	u6121
  2364  0E36  2E3A               	goto	u6120
  2365  0E37                     u6121:
  2366  0E37  120A  118A  2C9C   	goto	l4279
  2367  0E3A                     u6120:
  2368  0E3A                     l4125:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2371  0E3A  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2372  0E3B  2E3D               	goto	u6131
  2373  0E3C  2E3E               	goto	u6130
  2374  0E3D                     u6131:
  2375  0E3D  2E42               	goto	l4129
  2376  0E3E                     u6130:
  2377  0E3E                     l4127:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2380  0E3E  3006               	movlw	6
  2381  0E3F  00BC               	movwf	sprintf@prec^(0+128)
  2382  0E40  3000               	movlw	0
  2383  0E41  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2384  0E42                     l4129:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2387  0E42  0829               	movf	sprintf@ap^(0+128),w
  2388  0E43  0084               	movwf	4
  2389  0E44  1383               	bcf	3,7	;select IRP bank0
  2390  0E45  0800               	movf	0,w
  2391  0E46  00B8               	movwf	sprintf@fval^(0+128)
  2392  0E47  0A84               	incf	4,f
  2393  0E48  0800               	movf	0,w
  2394  0E49  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2395  0E4A  0A84               	incf	4,f
  2396  0E4B  0800               	movf	0,w
  2397  0E4C  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2398  0E4D                     l4131:
  2399  0E4D  3003               	movlw	3
  2400  0E4E  00A0               	movwf	??_sprintf^(0+128)
  2401  0E4F  0820               	movf	??_sprintf^(0+128),w
  2402  0E50  07A9               	addwf	sprintf@ap^(0+128),f
  2403  0E51                     l4133:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2406  0E51  0838               	movf	sprintf@fval^(0+128),w
  2407  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0E54  00A0               	movwf	___ftge@ff1
  2410  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0E57  0839               	movf	(sprintf@fval+1)^(0+128),w
  2413  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0E5A  00A1               	movwf	___ftge@ff1+1
  2416  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0E5D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2419  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0E60  00A2               	movwf	___ftge@ff1+2
  2422  0E61  3000               	movlw	0
  2423  0E62  00A3               	movwf	___ftge@ff2
  2424  0E63  3000               	movlw	0
  2425  0E64  00A4               	movwf	___ftge@ff2+1
  2426  0E65  3000               	movlw	0
  2427  0E66  00A5               	movwf	___ftge@ff2+2
  2428  0E67  160A  158A  2706  120A  158A  	fcall	___ftge
  2429  0E6C  1803               	btfsc	3,0
  2430  0E6D  2E6F               	goto	u6141
  2431  0E6E  2E70               	goto	u6140
  2432  0E6F                     u6141:
  2433  0E6F  2E89               	goto	l4139
  2434  0E70                     u6140:
  2435  0E70                     l4135:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2438  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0E72  0838               	movf	sprintf@fval^(0+128),w
  2441  0E73  00F3               	movwf	___ftneg@f1
  2442  0E74  0839               	movf	(sprintf@fval+1)^(0+128),w
  2443  0E75  00F4               	movwf	___ftneg@f1+1
  2444  0E76  083A               	movf	(sprintf@fval+2)^(0+128),w
  2445  0E77  00F5               	movwf	___ftneg@f1+2
  2446  0E78  160A  158A  253F  120A  158A  	fcall	___ftneg
  2447  0E7D  0873               	movf	?___ftneg,w
  2448  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0E80  00B8               	movwf	sprintf@fval^(0+128)
  2451  0E81  0874               	movf	?___ftneg+1,w
  2452  0E82  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2453  0E83  0875               	movf	?___ftneg+2,w
  2454  0E84  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2455  0E85                     l4137:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2458  0E85  3003               	movlw	3
  2459  0E86  04AA               	iorwf	sprintf@flag^(0+128),f
  2460  0E87  3000               	movlw	0
  2461  0E88  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2462  0E89                     l4139:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2465  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  2467  0E8B  01B6               	clrf	sprintf@eexp^(0+128)
  2468  0E8C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2469  0E8D                     l4141:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2472  0E8D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2473  0E8E  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2474  0E8F  0438               	iorwf	sprintf@fval^(0+128),w
  2475  0E90  1903               	skipnz
  2476  0E91  2E93               	goto	u6151
  2477  0E92  2E94               	goto	u6150
  2478  0E93                     u6151:
  2479  0E93  2FA2               	goto	l4167
  2480  0E94                     u6150:
  2481  0E94                     l4143:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2484  0E94  30B8               	movlw	low (sprintf@fval| 0)
  2485  0E95  0084               	movwf	4
  2486  0E96  1383               	bcf	3,7	;select IRP bank1
  2487  0E97  0800               	movf	0,w
  2488  0E98  00A0               	movwf	??_sprintf^(0+128)
  2489  0E99  0A84               	incf	4,f
  2490  0E9A  0800               	movf	0,w
  2491  0E9B  00A1               	movwf	(??_sprintf^(0+128)+1)
  2492  0E9C  0A84               	incf	4,f
  2493  0E9D  0800               	movf	0,w
  2494  0E9E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2495  0E9F  0A84               	incf	4,f
  2496  0EA0  0800               	movf	0,w
  2497  0EA1  00A3               	movwf	(??_sprintf^(0+128)+3)
  2498  0EA2  300F               	movlw	15
  2499  0EA3                     u6165:
  2500  0EA3  1003               	clrc
  2501  0EA4  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2502  0EA5  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2503  0EA6  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2504  0EA7  0CA0               	rrf	??_sprintf^(0+128),f
  2505  0EA8                     u6160:
  2506  0EA8  3EFF               	addlw	-1
  2507  0EA9  1D03               	skipz
  2508  0EAA  2EA3               	goto	u6165
  2509  0EAB  30FF               	movlw	255
  2510  0EAC  0520               	andwf	??_sprintf^(0+128),w
  2511  0EAD  00A4               	movwf	(??_sprintf+4)^(0+128)
  2512  0EAE  3000               	movlw	0
  2513  0EAF  0521               	andwf	(??_sprintf+1)^(0+128),w
  2514  0EB0  00A5               	movwf	(??_sprintf+5)^(0+128)
  2515  0EB1  0824               	movf	(??_sprintf+4)^(0+128),w
  2516  0EB2  3E82               	addlw	130
  2517  0EB3  00B6               	movwf	sprintf@eexp^(0+128)
  2518  0EB4  0825               	movf	(??_sprintf+5)^(0+128),w
  2519  0EB5  1803               	skipnc
  2520  0EB6  3E01               	addlw	1
  2521  0EB7  3EFF               	addlw	255
  2522  0EB8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2523  0EB9                     l4145:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2526  0EB9  30FF               	movlw	255
  2527  0EBA  07B6               	addwf	sprintf@eexp^(0+128),f
  2528  0EBB  1803               	skipnc
  2529  0EBC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2530  0EBD  30FF               	movlw	255
  2531  0EBE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2532  0EBF                     l4147:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2535  0EBF  3003               	movlw	3
  2536  0EC0  00F3               	movwf	___wmul@multiplier
  2537  0EC1  3000               	movlw	0
  2538  0EC2  00F4               	movwf	___wmul@multiplier+1
  2539  0EC3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2540  0EC4  00F6               	movwf	___wmul@multiplicand+1
  2541  0EC5  0836               	movf	sprintf@eexp^(0+128),w
  2542  0EC6  00F5               	movwf	___wmul@multiplicand
  2543  0EC7  160A  158A  26A8  120A  158A  	fcall	___wmul
  2544  0ECC  0874               	movf	?___wmul+1,w
  2545  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2547  0ECF  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2548  0ED0  0873               	movf	?___wmul,w
  2549  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  2550  0ED2                     l4149:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2553  0ED2  300A               	movlw	10
  2554  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0ED5  00A2               	movwf	___awdiv@divisor
  2557  0ED6  3000               	movlw	0
  2558  0ED7  00A3               	movwf	___awdiv@divisor+1
  2559  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2560  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2561  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2562  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0EDD  00A5               	movwf	___awdiv@dividend+1
  2565  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  2568  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0EE3  00A4               	movwf	___awdiv@dividend
  2571  0EE4  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2572  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0EEB  0823               	movf	?___awdiv+1,w
  2575  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2576  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2577  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2578  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0EF1  0822               	movf	?___awdiv,w
  2581  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2583  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  2584  0EF5                     l4151:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2587  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2588  0EF6  2EF8               	goto	u6171
  2589  0EF7  2EF9               	goto	u6170
  2590  0EF8                     u6171:
  2591  0EF8  2EFF               	goto	l4155
  2592  0EF9                     u6170:
  2593  0EF9                     l4153:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2596  0EF9  30FF               	movlw	255
  2597  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  2598  0EFB  1803               	skipnc
  2599  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2600  0EFD  30FF               	movlw	255
  2601  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2602  0EFF                     l4155:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2605  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  2606  0F00  3AFF               	xorlw	255
  2607  0F01  120A  158A  226D  120A  158A  	fcall	_scale
  2608  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0F08  083F               	movf	?_scale,w
  2611  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0F0B  00AE               	movwf	sprintf@tmpval^(0+128)
  2614  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0F0E  0840               	movf	?_scale+1,w
  2617  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0F11  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2620  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0F14  0841               	movf	?_scale+2,w
  2623  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2624  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2625  0F17  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2626  0F18                     l4157:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2629  0F18  0838               	movf	sprintf@fval^(0+128),w
  2630  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0F1B  00AF               	movwf	___ftmul@f1
  2633  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0F1E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2636  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0F21  00B0               	movwf	___ftmul@f1+1
  2639  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0F24  083A               	movf	(sprintf@fval+2)^(0+128),w
  2642  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0F27  00B1               	movwf	___ftmul@f1+2
  2645  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2647  0F2A  082E               	movf	sprintf@tmpval^(0+128),w
  2648  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0F2D  00B2               	movwf	___ftmul@f2
  2651  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0F30  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2654  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0F33  00B3               	movwf	___ftmul@f2+1
  2657  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2659  0F36  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2660  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0F39  00B4               	movwf	___ftmul@f2+2
  2663  0F3A  160A  118A  23CF  120A  158A  	fcall	___ftmul
  2664  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0F41  082F               	movf	?___ftmul,w
  2667  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2669  0F44  00AE               	movwf	sprintf@tmpval^(0+128)
  2670  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0F47  0830               	movf	?___ftmul+1,w
  2673  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2674  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2675  0F4A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2676  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0F4D  0831               	movf	?___ftmul+2,w
  2679  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0F50  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2682  0F51                     l4159:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2685  0F51  082E               	movf	sprintf@tmpval^(0+128),w
  2686  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0F54  00A0               	movwf	___ftge@ff1
  2689  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2691  0F57  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2692  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0F5A  00A1               	movwf	___ftge@ff1+1
  2695  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2696  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2697  0F5D  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2698  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0F60  00A2               	movwf	___ftge@ff1+2
  2701  0F61  3000               	movlw	0
  2702  0F62  00A3               	movwf	___ftge@ff2
  2703  0F63  3080               	movlw	128
  2704  0F64  00A4               	movwf	___ftge@ff2+1
  2705  0F65  303F               	movlw	63
  2706  0F66  00A5               	movwf	___ftge@ff2+2
  2707  0F67  160A  158A  2706  120A  158A  	fcall	___ftge
  2708  0F6C  1803               	btfsc	3,0
  2709  0F6D  2F6F               	goto	u6181
  2710  0F6E  2F70               	goto	u6180
  2711  0F6F                     u6181:
  2712  0F6F  2F79               	goto	l4163
  2713  0F70                     u6180:
  2714  0F70                     l4161:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2717  0F70  30FF               	movlw	255
  2718  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  2721  0F74  1803               	skipnc
  2722  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2723  0F76  30FF               	movlw	255
  2724  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2725  0F78  2FA2               	goto	l4167
  2726  0F79                     l4163:
  2727  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0F7B  082E               	movf	sprintf@tmpval^(0+128),w
  2730  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0F7E  00A0               	movwf	___ftge@ff1
  2733  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0F81  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2736  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0F84  00A1               	movwf	___ftge@ff1+1
  2739  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0F87  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2742  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0F8A  00A2               	movwf	___ftge@ff1+2
  2745  0F8B  3000               	movlw	0
  2746  0F8C  00A3               	movwf	___ftge@ff2
  2747  0F8D  3020               	movlw	32
  2748  0F8E  00A4               	movwf	___ftge@ff2+1
  2749  0F8F  3041               	movlw	65
  2750  0F90  00A5               	movwf	___ftge@ff2+2
  2751  0F91  160A  158A  2706  120A  158A  	fcall	___ftge
  2752  0F96  1C03               	btfss	3,0
  2753  0F97  2F99               	goto	u6191
  2754  0F98  2F9A               	goto	u6190
  2755  0F99                     u6191:
  2756  0F99  2FA2               	goto	l4167
  2757  0F9A                     u6190:
  2758  0F9A                     l4165:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2761  0F9A  3001               	movlw	1
  2762  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  2765  0F9E  1803               	skipnc
  2766  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2767  0FA0  3000               	movlw	0
  2768  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2769  0FA2                     l4167:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2772  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2775  0FA5  3A80               	xorlw	128
  2776  0FA6  00FF               	movwf	btemp+1
  2777  0FA7  3080               	movlw	128
  2778  0FA8  027F               	subwf	btemp+1,w
  2779  0FA9  1D03               	skipz
  2780  0FAA  2FAD               	goto	u6205
  2781  0FAB  300D               	movlw	13
  2782  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  2783  0FAD                     u6205:
  2784  0FAD  1803               	skipnc
  2785  0FAE  2FB0               	goto	u6201
  2786  0FAF  2FB1               	goto	u6200
  2787  0FB0                     u6201:
  2788  0FB0  2FEA               	goto	l4171
  2789  0FB1                     u6200:
  2790  0FB1                     l4169:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2793  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0FB3  083C               	movf	sprintf@prec^(0+128),w
  2796  0FB4  120A  158A  20C4  120A  158A  	fcall	_fround
  2797  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0FBB  083F               	movf	?_fround,w
  2800  0FBC  00CF               	movwf	___ftadd@f1
  2801  0FBD  0840               	movf	?_fround+1,w
  2802  0FBE  00D0               	movwf	___ftadd@f1+1
  2803  0FBF  0841               	movf	?_fround+2,w
  2804  0FC0  00D1               	movwf	___ftadd@f1+2
  2805  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0FC3  0838               	movf	sprintf@fval^(0+128),w
  2808  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0FC6  00D2               	movwf	___ftadd@f2
  2811  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0FC9  0839               	movf	(sprintf@fval+1)^(0+128),w
  2814  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0FCC  00D3               	movwf	___ftadd@f2+1
  2817  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0FCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2820  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0FD2  00D4               	movwf	___ftadd@f2+2
  2823  0FD3  160A  118A  26CA  120A  158A  	fcall	___ftadd
  2824  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0FDA  084F               	movf	?___ftadd,w
  2827  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2828  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2829  0FDD  00B8               	movwf	sprintf@fval^(0+128)
  2830  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0FE0  0850               	movf	?___ftadd+1,w
  2833  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2834  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2835  0FE3  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2836  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0FE6  0851               	movf	?___ftadd+2,w
  2839  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2840  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2841  0FE9  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2842  0FEA                     l4171:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2845  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2848  0FED  3A80               	xorlw	128
  2849  0FEE  00FF               	movwf	btemp+1
  2850  0FEF  3080               	movlw	128
  2851  0FF0  027F               	subwf	btemp+1,w
  2852  0FF1  1D03               	skipz
  2853  0FF2  2FF5               	goto	u6215
  2854  0FF3  300A               	movlw	10
  2855  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  2856  0FF5                     u6215:
  2857  0FF5  1803               	skipnc
  2858  0FF6  2FFA               	goto	u6211
  2859  0FF7  120A  118A  2823   	goto	u6210
  2860  0FFA                     u6211:
  2861  0FFA  120A  118A  285A   	goto	l4179
  2862  0FFD                     L3:
  2863  0FFD                     L2:
  2864  0FFD  120A  118A  2E63   	ljmp	l4359
  2865                           
  2866                           	psect	text4
  2867  0A6D                     __ptext4:	
  2868 ;; *************** function _scale *****************
  2869 ;; Defined at:
  2870 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  scl             1    wreg     char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  scl             1   39[BANK0 ] char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  3   31[BANK0 ] char 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       3       0       0       0
  2885 ;;      Locals:         0       4       0       0       0
  2886 ;;      Temps:          0       2       0       0       0
  2887 ;;      Totals:         0       9       0       0       0
  2888 ;;Total ram usage:        9 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    4
  2891 ;; This function calls:
  2892 ;;		___awdiv
  2893 ;;		___awmod
  2894 ;;		___bmul
  2895 ;;		___ftmul
  2896 ;; This function is called by:
  2897 ;;		_sprintf
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _scale
  2903  0A6D                     _scale:
  2904                           
  2905                           ;incstack = 0
  2906                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2907                           ;scale@scl stored from wreg
  2908  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0A6F  00C7               	movwf	scale@scl
  2911  0A70                     l3791:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2914  0A70  1FC7               	btfss	scale@scl,7
  2915  0A71  2A73               	goto	u5491
  2916  0A72  2A74               	goto	u5490
  2917  0A73                     u5491:
  2918  0A73  2BCF               	goto	l3813
  2919  0A74                     u5490:
  2920  0A74                     l3793:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2923  0A74  09C7               	comf	scale@scl,f
  2924  0A75  0AC7               	incf	scale@scl,f
  2925  0A76                     l3795:
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2928  0A76  0847               	movf	scale@scl,w
  2929  0A77  3A80               	xorlw	128
  2930  0A78  3E12               	addlw	-238
  2931  0A79  1C03               	skipc
  2932  0A7A  2A7C               	goto	u5501
  2933  0A7B  2A7D               	goto	u5500
  2934  0A7C                     u5501:
  2935  0A7C  2B3B               	goto	l3803
  2936  0A7D                     u5500:
  2937  0A7D                     l3797:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2940  0A7D  3003               	movlw	3
  2941  0A7E  00C2               	movwf	??_scale
  2942  0A7F  0842               	movf	??_scale,w
  2943  0A80  00AB               	movwf	___bmul@multiplicand
  2944  0A81  0847               	movf	scale@scl,w
  2945  0A82  00F5               	movwf	___awmod@dividend
  2946  0A83  01F6               	clrf	___awmod@dividend+1
  2947  0A84  1BF5               	btfsc	___awmod@dividend,7
  2948  0A85  03F6               	decf	___awmod@dividend+1,f
  2949  0A86  3064               	movlw	100
  2950  0A87  00F3               	movwf	___awmod@divisor
  2951  0A88  3000               	movlw	0
  2952  0A89  00F4               	movwf	___awmod@divisor+1
  2953  0A8A  160A  118A  211D  120A  158A  	fcall	___awmod
  2954  0A8F  0874               	movf	?___awmod+1,w
  2955  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0A92  00A5               	movwf	___awdiv@dividend+1
  2958  0A93  0873               	movf	?___awmod,w
  2959  0A94  00A4               	movwf	___awdiv@dividend
  2960  0A95  300A               	movlw	10
  2961  0A96  00A2               	movwf	___awdiv@divisor
  2962  0A97  3000               	movlw	0
  2963  0A98  00A3               	movwf	___awdiv@divisor+1
  2964  0A99  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2965  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0AA0  0822               	movf	?___awdiv,w
  2968  0AA1  160A  158A  257C  120A  158A  	fcall	___bmul
  2969  0AA6  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2970  0AA7  0084               	movwf	4
  2971  0AA8  160A  118A  200A  120A  158A  	fcall	stringdir
  2972  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0AAF  00AF               	movwf	___ftmul@f1
  2975  0AB0  160A  118A  200A  120A  158A  	fcall	stringdir
  2976  0AB5  00B0               	movwf	___ftmul@f1+1
  2977  0AB6  160A  118A  200A  120A  158A  	fcall	stringdir
  2978  0ABB  00B1               	movwf	___ftmul@f1+2
  2979  0ABC  3003               	movlw	3
  2980  0ABD  00C3               	movwf	??_scale+1
  2981  0ABE  0843               	movf	??_scale+1,w
  2982  0ABF  00AB               	movwf	___bmul@multiplicand
  2983  0AC0  0847               	movf	scale@scl,w
  2984  0AC1  00A4               	movwf	___awdiv@dividend
  2985  0AC2  01A5               	clrf	___awdiv@dividend+1
  2986  0AC3  1BA4               	btfsc	___awdiv@dividend,7
  2987  0AC4  03A5               	decf	___awdiv@dividend+1,f
  2988  0AC5  3064               	movlw	100
  2989  0AC6  00A2               	movwf	___awdiv@divisor
  2990  0AC7  3000               	movlw	0
  2991  0AC8  00A3               	movwf	___awdiv@divisor+1
  2992  0AC9  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2993  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0AD0  0822               	movf	?___awdiv,w
  2996  0AD1  160A  158A  257C  120A  158A  	fcall	___bmul
  2997  0AD6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2998  0AD7  0084               	movwf	4
  2999  0AD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3000  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0ADF  00B2               	movwf	___ftmul@f2
  3003  0AE0  160A  118A  200A  120A  158A  	fcall	stringdir
  3004  0AE5  00B3               	movwf	___ftmul@f2+1
  3005  0AE6  160A  118A  200A  120A  158A  	fcall	stringdir
  3006  0AEB  00B4               	movwf	___ftmul@f2+2
  3007  0AEC  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3008  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0AF3  082F               	movf	?___ftmul,w
  3011  0AF4  00C4               	movwf	_scale$1186
  3012  0AF5  0830               	movf	?___ftmul+1,w
  3013  0AF6  00C5               	movwf	_scale$1186+1
  3014  0AF7  0831               	movf	?___ftmul+2,w
  3015  0AF8  00C6               	movwf	_scale$1186+2
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3018  0AF9  3003               	movlw	3
  3019  0AFA  00C2               	movwf	??_scale
  3020  0AFB  0842               	movf	??_scale,w
  3021  0AFC  00AB               	movwf	___bmul@multiplicand
  3022  0AFD  0847               	movf	scale@scl,w
  3023  0AFE  00F5               	movwf	___awmod@dividend
  3024  0AFF  01F6               	clrf	___awmod@dividend+1
  3025  0B00  1BF5               	btfsc	___awmod@dividend,7
  3026  0B01  03F6               	decf	___awmod@dividend+1,f
  3027  0B02  300A               	movlw	10
  3028  0B03  00F3               	movwf	___awmod@divisor
  3029  0B04  3000               	movlw	0
  3030  0B05  00F4               	movwf	___awmod@divisor+1
  3031  0B06  160A  118A  211D  120A  158A  	fcall	___awmod
  3032  0B0B  0873               	movf	?___awmod,w
  3033  0B0C  160A  158A  257C  120A  158A  	fcall	___bmul
  3034  0B11  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3035  0B12  0084               	movwf	4
  3036  0B13  160A  118A  200A  120A  158A  	fcall	stringdir
  3037  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0B1A  00AF               	movwf	___ftmul@f1
  3040  0B1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3041  0B20  00B0               	movwf	___ftmul@f1+1
  3042  0B21  160A  118A  200A  120A  158A  	fcall	stringdir
  3043  0B26  00B1               	movwf	___ftmul@f1+2
  3044  0B27  0844               	movf	_scale$1186,w
  3045  0B28  00B2               	movwf	___ftmul@f2
  3046  0B29  0845               	movf	_scale$1186+1,w
  3047  0B2A  00B3               	movwf	___ftmul@f2+1
  3048  0B2B  0846               	movf	_scale$1186+2,w
  3049  0B2C  00B4               	movwf	___ftmul@f2+2
  3050  0B2D  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3051  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0B34  082F               	movf	?___ftmul,w
  3054  0B35  00BF               	movwf	?_scale
  3055  0B36  0830               	movf	?___ftmul+1,w
  3056  0B37  00C0               	movwf	?_scale+1
  3057  0B38  0831               	movf	?___ftmul+2,w
  3058  0B39  00C1               	movwf	?_scale+2
  3059  0B3A  2D27               	goto	l369
  3060  0B3B                     l3803:
  3061  0B3B  0847               	movf	scale@scl,w
  3062  0B3C  3A80               	xorlw	128
  3063  0B3D  3E75               	addlw	-139
  3064  0B3E  1C03               	skipc
  3065  0B3F  2B41               	goto	u5511
  3066  0B40  2B42               	goto	u5510
  3067  0B41                     u5511:
  3068  0B41  2BAE               	goto	l3809
  3069  0B42                     u5510:
  3070  0B42                     l3805:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3073  0B42  3003               	movlw	3
  3074  0B43  00C2               	movwf	??_scale
  3075  0B44  0842               	movf	??_scale,w
  3076  0B45  00AB               	movwf	___bmul@multiplicand
  3077  0B46  0847               	movf	scale@scl,w
  3078  0B47  00F5               	movwf	___awmod@dividend
  3079  0B48  01F6               	clrf	___awmod@dividend+1
  3080  0B49  1BF5               	btfsc	___awmod@dividend,7
  3081  0B4A  03F6               	decf	___awmod@dividend+1,f
  3082  0B4B  300A               	movlw	10
  3083  0B4C  00F3               	movwf	___awmod@divisor
  3084  0B4D  3000               	movlw	0
  3085  0B4E  00F4               	movwf	___awmod@divisor+1
  3086  0B4F  160A  118A  211D  120A  158A  	fcall	___awmod
  3087  0B54  0873               	movf	?___awmod,w
  3088  0B55  160A  158A  257C  120A  158A  	fcall	___bmul
  3089  0B5A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3090  0B5B  0084               	movwf	4
  3091  0B5C  160A  118A  200A  120A  158A  	fcall	stringdir
  3092  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0B63  00AF               	movwf	___ftmul@f1
  3095  0B64  160A  118A  200A  120A  158A  	fcall	stringdir
  3096  0B69  00B0               	movwf	___ftmul@f1+1
  3097  0B6A  160A  118A  200A  120A  158A  	fcall	stringdir
  3098  0B6F  00B1               	movwf	___ftmul@f1+2
  3099  0B70  3003               	movlw	3
  3100  0B71  00C3               	movwf	??_scale+1
  3101  0B72  0843               	movf	??_scale+1,w
  3102  0B73  00AB               	movwf	___bmul@multiplicand
  3103  0B74  0847               	movf	scale@scl,w
  3104  0B75  00A4               	movwf	___awdiv@dividend
  3105  0B76  01A5               	clrf	___awdiv@dividend+1
  3106  0B77  1BA4               	btfsc	___awdiv@dividend,7
  3107  0B78  03A5               	decf	___awdiv@dividend+1,f
  3108  0B79  300A               	movlw	10
  3109  0B7A  00A2               	movwf	___awdiv@divisor
  3110  0B7B  3000               	movlw	0
  3111  0B7C  00A3               	movwf	___awdiv@divisor+1
  3112  0B7D  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3113  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0B84  0822               	movf	?___awdiv,w
  3116  0B85  160A  158A  257C  120A  158A  	fcall	___bmul
  3117  0B8A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3118  0B8B  0084               	movwf	4
  3119  0B8C  160A  118A  200A  120A  158A  	fcall	stringdir
  3120  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0B93  00B2               	movwf	___ftmul@f2
  3123  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  3124  0B99  00B3               	movwf	___ftmul@f2+1
  3125  0B9A  160A  118A  200A  120A  158A  	fcall	stringdir
  3126  0B9F  00B4               	movwf	___ftmul@f2+2
  3127  0BA0  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3128  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0BA7  082F               	movf	?___ftmul,w
  3131  0BA8  00BF               	movwf	?_scale
  3132  0BA9  0830               	movf	?___ftmul+1,w
  3133  0BAA  00C0               	movwf	?_scale+1
  3134  0BAB  0831               	movf	?___ftmul+2,w
  3135  0BAC  00C1               	movwf	?_scale+2
  3136  0BAD  2D27               	goto	l369
  3137  0BAE                     l3809:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3140  0BAE  3003               	movlw	3
  3141  0BAF  00C2               	movwf	??_scale
  3142  0BB0  0842               	movf	??_scale,w
  3143  0BB1  00AB               	movwf	___bmul@multiplicand
  3144  0BB2  0847               	movf	scale@scl,w
  3145  0BB3  160A  158A  257C  120A  158A  	fcall	___bmul
  3146  0BB8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3147  0BB9  0084               	movwf	4
  3148  0BBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3149  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0BC1  00BF               	movwf	?_scale
  3152  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3153  0BC7  00C0               	movwf	?_scale+1
  3154  0BC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3155  0BCD  00C1               	movwf	?_scale+2
  3156  0BCE  2D27               	goto	l369
  3157  0BCF                     l3813:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3160  0BCF  0847               	movf	scale@scl,w
  3161  0BD0  3A80               	xorlw	128
  3162  0BD1  3E12               	addlw	-238
  3163  0BD2  1C03               	skipc
  3164  0BD3  2BD5               	goto	u5521
  3165  0BD4  2BD6               	goto	u5520
  3166  0BD5                     u5521:
  3167  0BD5  2C94               	goto	l3821
  3168  0BD6                     u5520:
  3169  0BD6                     l3815:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3172  0BD6  3003               	movlw	3
  3173  0BD7  00C2               	movwf	??_scale
  3174  0BD8  0842               	movf	??_scale,w
  3175  0BD9  00AB               	movwf	___bmul@multiplicand
  3176  0BDA  0847               	movf	scale@scl,w
  3177  0BDB  00F5               	movwf	___awmod@dividend
  3178  0BDC  01F6               	clrf	___awmod@dividend+1
  3179  0BDD  1BF5               	btfsc	___awmod@dividend,7
  3180  0BDE  03F6               	decf	___awmod@dividend+1,f
  3181  0BDF  3064               	movlw	100
  3182  0BE0  00F3               	movwf	___awmod@divisor
  3183  0BE1  3000               	movlw	0
  3184  0BE2  00F4               	movwf	___awmod@divisor+1
  3185  0BE3  160A  118A  211D  120A  158A  	fcall	___awmod
  3186  0BE8  0874               	movf	?___awmod+1,w
  3187  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0BEB  00A5               	movwf	___awdiv@dividend+1
  3190  0BEC  0873               	movf	?___awmod,w
  3191  0BED  00A4               	movwf	___awdiv@dividend
  3192  0BEE  300A               	movlw	10
  3193  0BEF  00A2               	movwf	___awdiv@divisor
  3194  0BF0  3000               	movlw	0
  3195  0BF1  00A3               	movwf	___awdiv@divisor+1
  3196  0BF2  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3197  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0BF9  0822               	movf	?___awdiv,w
  3200  0BFA  160A  158A  257C  120A  158A  	fcall	___bmul
  3201  0BFF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3202  0C00  0084               	movwf	4
  3203  0C01  160A  118A  200A  120A  158A  	fcall	stringdir
  3204  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0C08  00AF               	movwf	___ftmul@f1
  3207  0C09  160A  118A  200A  120A  158A  	fcall	stringdir
  3208  0C0E  00B0               	movwf	___ftmul@f1+1
  3209  0C0F  160A  118A  200A  120A  158A  	fcall	stringdir
  3210  0C14  00B1               	movwf	___ftmul@f1+2
  3211  0C15  3003               	movlw	3
  3212  0C16  00C3               	movwf	??_scale+1
  3213  0C17  0843               	movf	??_scale+1,w
  3214  0C18  00AB               	movwf	___bmul@multiplicand
  3215  0C19  0847               	movf	scale@scl,w
  3216  0C1A  00A4               	movwf	___awdiv@dividend
  3217  0C1B  01A5               	clrf	___awdiv@dividend+1
  3218  0C1C  1BA4               	btfsc	___awdiv@dividend,7
  3219  0C1D  03A5               	decf	___awdiv@dividend+1,f
  3220  0C1E  3064               	movlw	100
  3221  0C1F  00A2               	movwf	___awdiv@divisor
  3222  0C20  3000               	movlw	0
  3223  0C21  00A3               	movwf	___awdiv@divisor+1
  3224  0C22  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3225  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0C29  0822               	movf	?___awdiv,w
  3228  0C2A  160A  158A  257C  120A  158A  	fcall	___bmul
  3229  0C2F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3230  0C30  0084               	movwf	4
  3231  0C31  160A  118A  200A  120A  158A  	fcall	stringdir
  3232  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0C38  00B2               	movwf	___ftmul@f2
  3235  0C39  160A  118A  200A  120A  158A  	fcall	stringdir
  3236  0C3E  00B3               	movwf	___ftmul@f2+1
  3237  0C3F  160A  118A  200A  120A  158A  	fcall	stringdir
  3238  0C44  00B4               	movwf	___ftmul@f2+2
  3239  0C45  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3240  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0C4C  082F               	movf	?___ftmul,w
  3243  0C4D  00C4               	movwf	_scale$1186
  3244  0C4E  0830               	movf	?___ftmul+1,w
  3245  0C4F  00C5               	movwf	_scale$1186+1
  3246  0C50  0831               	movf	?___ftmul+2,w
  3247  0C51  00C6               	movwf	_scale$1186+2
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3250  0C52  3003               	movlw	3
  3251  0C53  00C2               	movwf	??_scale
  3252  0C54  0842               	movf	??_scale,w
  3253  0C55  00AB               	movwf	___bmul@multiplicand
  3254  0C56  0847               	movf	scale@scl,w
  3255  0C57  00F5               	movwf	___awmod@dividend
  3256  0C58  01F6               	clrf	___awmod@dividend+1
  3257  0C59  1BF5               	btfsc	___awmod@dividend,7
  3258  0C5A  03F6               	decf	___awmod@dividend+1,f
  3259  0C5B  300A               	movlw	10
  3260  0C5C  00F3               	movwf	___awmod@divisor
  3261  0C5D  3000               	movlw	0
  3262  0C5E  00F4               	movwf	___awmod@divisor+1
  3263  0C5F  160A  118A  211D  120A  158A  	fcall	___awmod
  3264  0C64  0873               	movf	?___awmod,w
  3265  0C65  160A  158A  257C  120A  158A  	fcall	___bmul
  3266  0C6A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3267  0C6B  0084               	movwf	4
  3268  0C6C  160A  118A  200A  120A  158A  	fcall	stringdir
  3269  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0C73  00AF               	movwf	___ftmul@f1
  3272  0C74  160A  118A  200A  120A  158A  	fcall	stringdir
  3273  0C79  00B0               	movwf	___ftmul@f1+1
  3274  0C7A  160A  118A  200A  120A  158A  	fcall	stringdir
  3275  0C7F  00B1               	movwf	___ftmul@f1+2
  3276  0C80  0844               	movf	_scale$1186,w
  3277  0C81  00B2               	movwf	___ftmul@f2
  3278  0C82  0845               	movf	_scale$1186+1,w
  3279  0C83  00B3               	movwf	___ftmul@f2+1
  3280  0C84  0846               	movf	_scale$1186+2,w
  3281  0C85  00B4               	movwf	___ftmul@f2+2
  3282  0C86  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3283  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0C8D  082F               	movf	?___ftmul,w
  3286  0C8E  00BF               	movwf	?_scale
  3287  0C8F  0830               	movf	?___ftmul+1,w
  3288  0C90  00C0               	movwf	?_scale+1
  3289  0C91  0831               	movf	?___ftmul+2,w
  3290  0C92  00C1               	movwf	?_scale+2
  3291  0C93  2D27               	goto	l369
  3292  0C94                     l3821:
  3293  0C94  0847               	movf	scale@scl,w
  3294  0C95  3A80               	xorlw	128
  3295  0C96  3E75               	addlw	-139
  3296  0C97  1C03               	skipc
  3297  0C98  2C9A               	goto	u5531
  3298  0C99  2C9B               	goto	u5530
  3299  0C9A                     u5531:
  3300  0C9A  2D07               	goto	l3827
  3301  0C9B                     u5530:
  3302  0C9B                     l3823:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3305  0C9B  3003               	movlw	3
  3306  0C9C  00C2               	movwf	??_scale
  3307  0C9D  0842               	movf	??_scale,w
  3308  0C9E  00AB               	movwf	___bmul@multiplicand
  3309  0C9F  0847               	movf	scale@scl,w
  3310  0CA0  00F5               	movwf	___awmod@dividend
  3311  0CA1  01F6               	clrf	___awmod@dividend+1
  3312  0CA2  1BF5               	btfsc	___awmod@dividend,7
  3313  0CA3  03F6               	decf	___awmod@dividend+1,f
  3314  0CA4  300A               	movlw	10
  3315  0CA5  00F3               	movwf	___awmod@divisor
  3316  0CA6  3000               	movlw	0
  3317  0CA7  00F4               	movwf	___awmod@divisor+1
  3318  0CA8  160A  118A  211D  120A  158A  	fcall	___awmod
  3319  0CAD  0873               	movf	?___awmod,w
  3320  0CAE  160A  158A  257C  120A  158A  	fcall	___bmul
  3321  0CB3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3322  0CB4  0084               	movwf	4
  3323  0CB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3324  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0CBC  00AF               	movwf	___ftmul@f1
  3327  0CBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3328  0CC2  00B0               	movwf	___ftmul@f1+1
  3329  0CC3  160A  118A  200A  120A  158A  	fcall	stringdir
  3330  0CC8  00B1               	movwf	___ftmul@f1+2
  3331  0CC9  3003               	movlw	3
  3332  0CCA  00C3               	movwf	??_scale+1
  3333  0CCB  0843               	movf	??_scale+1,w
  3334  0CCC  00AB               	movwf	___bmul@multiplicand
  3335  0CCD  0847               	movf	scale@scl,w
  3336  0CCE  00A4               	movwf	___awdiv@dividend
  3337  0CCF  01A5               	clrf	___awdiv@dividend+1
  3338  0CD0  1BA4               	btfsc	___awdiv@dividend,7
  3339  0CD1  03A5               	decf	___awdiv@dividend+1,f
  3340  0CD2  300A               	movlw	10
  3341  0CD3  00A2               	movwf	___awdiv@divisor
  3342  0CD4  3000               	movlw	0
  3343  0CD5  00A3               	movwf	___awdiv@divisor+1
  3344  0CD6  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3345  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0CDD  0822               	movf	?___awdiv,w
  3348  0CDE  160A  158A  257C  120A  158A  	fcall	___bmul
  3349  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3350  0CE4  0084               	movwf	4
  3351  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3352  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0CEC  00B2               	movwf	___ftmul@f2
  3355  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3356  0CF2  00B3               	movwf	___ftmul@f2+1
  3357  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3358  0CF8  00B4               	movwf	___ftmul@f2+2
  3359  0CF9  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3360  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0D00  082F               	movf	?___ftmul,w
  3363  0D01  00BF               	movwf	?_scale
  3364  0D02  0830               	movf	?___ftmul+1,w
  3365  0D03  00C0               	movwf	?_scale+1
  3366  0D04  0831               	movf	?___ftmul+2,w
  3367  0D05  00C1               	movwf	?_scale+2
  3368  0D06  2D27               	goto	l369
  3369  0D07                     l3827:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3372  0D07  3003               	movlw	3
  3373  0D08  00C2               	movwf	??_scale
  3374  0D09  0842               	movf	??_scale,w
  3375  0D0A  00AB               	movwf	___bmul@multiplicand
  3376  0D0B  0847               	movf	scale@scl,w
  3377  0D0C  160A  158A  257C  120A  158A  	fcall	___bmul
  3378  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3379  0D12  0084               	movwf	4
  3380  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3381  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0D1A  00BF               	movwf	?_scale
  3384  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3385  0D20  00C0               	movwf	?_scale+1
  3386  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  3387  0D26  00C1               	movwf	?_scale+2
  3388  0D27                     l369:
  3389  0D27  0008               	return
  3390  0D28                     __end_of_scale:
  3391                           
  3392                           	psect	text5
  3393  111D                     __ptext5:	
  3394 ;; *************** function ___awmod *****************
  3395 ;; Defined at:
  3396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  divisor         2    3[COMMON] int 
  3399 ;;  dividend        2    5[COMMON] int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  sign            1    1[BANK0 ] unsigned char 
  3402 ;;  counter         1    0[BANK0 ] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  2    3[COMMON] int 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         4       0       0       0       0
  3413 ;;      Locals:         0       2       0       0       0
  3414 ;;      Temps:          1       0       0       0       0
  3415 ;;      Totals:         5       2       0       0       0
  3416 ;;Total ram usage:        7 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    2
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_scale
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function ___awmod
  3428  111D                     ___awmod:
  3429  111D                     l3535:	
  3430                           ;incstack = 0
  3431                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3432                           
  3433  111D  1283               	bcf	3,5	;RP0=0, select bank0
  3434  111E  1303               	bcf	3,6	;RP1=0, select bank0
  3435  111F  01A1               	clrf	___awmod@sign
  3436  1120                     l3537:
  3437  1120  1FF6               	btfss	___awmod@dividend+1,7
  3438  1121  2923               	goto	u4871
  3439  1122  2924               	goto	u4870
  3440  1123                     u4871:
  3441  1123  292B               	goto	l3543
  3442  1124                     u4870:
  3443  1124                     l3539:
  3444  1124  09F5               	comf	___awmod@dividend,f
  3445  1125  09F6               	comf	___awmod@dividend+1,f
  3446  1126  0AF5               	incf	___awmod@dividend,f
  3447  1127  1903               	skipnz
  3448  1128  0AF6               	incf	___awmod@dividend+1,f
  3449  1129                     l3541:
  3450  1129  01A1               	clrf	___awmod@sign
  3451  112A  0AA1               	incf	___awmod@sign,f
  3452  112B                     l3543:
  3453  112B  1FF4               	btfss	___awmod@divisor+1,7
  3454  112C  292E               	goto	u4881
  3455  112D  292F               	goto	u4880
  3456  112E                     u4881:
  3457  112E  2934               	goto	l3547
  3458  112F                     u4880:
  3459  112F                     l3545:
  3460  112F  09F3               	comf	___awmod@divisor,f
  3461  1130  09F4               	comf	___awmod@divisor+1,f
  3462  1131  0AF3               	incf	___awmod@divisor,f
  3463  1132  1903               	skipnz
  3464  1133  0AF4               	incf	___awmod@divisor+1,f
  3465  1134                     l3547:
  3466  1134  0873               	movf	___awmod@divisor,w
  3467  1135  0474               	iorwf	___awmod@divisor+1,w
  3468  1136  1903               	btfsc	3,2
  3469  1137  2939               	goto	u4891
  3470  1138  293A               	goto	u4890
  3471  1139                     u4891:
  3472  1139  2969               	goto	l3565
  3473  113A                     u4890:
  3474  113A                     l3549:
  3475  113A  01A0               	clrf	___awmod@counter
  3476  113B  0AA0               	incf	___awmod@counter,f
  3477  113C  2948               	goto	l3555
  3478  113D                     l3551:
  3479  113D  3001               	movlw	1
  3480  113E                     u4905:
  3481  113E  1003               	clrc
  3482  113F  0DF3               	rlf	___awmod@divisor,f
  3483  1140  0DF4               	rlf	___awmod@divisor+1,f
  3484  1141  3EFF               	addlw	-1
  3485  1142  1D03               	skipz
  3486  1143  293E               	goto	u4905
  3487  1144                     l3553:
  3488  1144  3001               	movlw	1
  3489  1145  00F7               	movwf	??___awmod
  3490  1146  0877               	movf	??___awmod,w
  3491  1147  07A0               	addwf	___awmod@counter,f
  3492  1148                     l3555:
  3493  1148  1FF4               	btfss	___awmod@divisor+1,7
  3494  1149  294B               	goto	u4911
  3495  114A  294C               	goto	u4910
  3496  114B                     u4911:
  3497  114B  293D               	goto	l3551
  3498  114C                     u4910:
  3499  114C                     l3557:
  3500  114C  0874               	movf	___awmod@divisor+1,w
  3501  114D  0276               	subwf	___awmod@dividend+1,w
  3502  114E  1D03               	skipz
  3503  114F  2952               	goto	u4925
  3504  1150  0873               	movf	___awmod@divisor,w
  3505  1151  0275               	subwf	___awmod@dividend,w
  3506  1152                     u4925:
  3507  1152  1C03               	skipc
  3508  1153  2955               	goto	u4921
  3509  1154  2956               	goto	u4920
  3510  1155                     u4921:
  3511  1155  295C               	goto	l3561
  3512  1156                     u4920:
  3513  1156                     l3559:
  3514  1156  0873               	movf	___awmod@divisor,w
  3515  1157  02F5               	subwf	___awmod@dividend,f
  3516  1158  0874               	movf	___awmod@divisor+1,w
  3517  1159  1C03               	skipc
  3518  115A  03F6               	decf	___awmod@dividend+1,f
  3519  115B  02F6               	subwf	___awmod@dividend+1,f
  3520  115C                     l3561:
  3521  115C  3001               	movlw	1
  3522  115D                     u4935:
  3523  115D  1003               	clrc
  3524  115E  0CF4               	rrf	___awmod@divisor+1,f
  3525  115F  0CF3               	rrf	___awmod@divisor,f
  3526  1160  3EFF               	addlw	-1
  3527  1161  1D03               	skipz
  3528  1162  295D               	goto	u4935
  3529  1163                     l3563:
  3530  1163  3001               	movlw	1
  3531  1164  02A0               	subwf	___awmod@counter,f
  3532  1165  1D03               	btfss	3,2
  3533  1166  2968               	goto	u4941
  3534  1167  2969               	goto	u4940
  3535  1168                     u4941:
  3536  1168  294C               	goto	l3557
  3537  1169                     u4940:
  3538  1169                     l3565:
  3539  1169  0821               	movf	___awmod@sign,w
  3540  116A  1903               	btfsc	3,2
  3541  116B  296D               	goto	u4951
  3542  116C  296E               	goto	u4950
  3543  116D                     u4951:
  3544  116D  2973               	goto	l3569
  3545  116E                     u4950:
  3546  116E                     l3567:
  3547  116E  09F5               	comf	___awmod@dividend,f
  3548  116F  09F6               	comf	___awmod@dividend+1,f
  3549  1170  0AF5               	incf	___awmod@dividend,f
  3550  1171  1903               	skipnz
  3551  1172  0AF6               	incf	___awmod@dividend+1,f
  3552  1173                     l3569:
  3553  1173  0876               	movf	___awmod@dividend+1,w
  3554  1174  00F4               	movwf	?___awmod+1
  3555  1175  0875               	movf	___awmod@dividend,w
  3556  1176  00F3               	movwf	?___awmod
  3557  1177                     l661:
  3558  1177  0008               	return
  3559  1178                     __end_of___awmod:
  3560                           
  3561                           	psect	text6
  3562  11E0                     __ptext6:	
  3563 ;; *************** function ___awdiv *****************
  3564 ;; Defined at:
  3565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  divisor         2    2[BANK0 ] int 
  3568 ;;  dividend        2    4[BANK0 ] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  quotient        2    9[BANK0 ] int 
  3571 ;;  sign            1    8[BANK0 ] unsigned char 
  3572 ;;  counter         1    7[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2    2[BANK0 ] int 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       4       0       0       0
  3583 ;;      Locals:         0       4       0       0       0
  3584 ;;      Temps:          0       1       0       0       0
  3585 ;;      Totals:         0       9       0       0       0
  3586 ;;Total ram usage:        9 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    2
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_scale
  3593 ;;		_sprintf
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function ___awdiv
  3599  11E0                     ___awdiv:
  3600  11E0                     l3491:	
  3601                           ;incstack = 0
  3602                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3603                           
  3604  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3605  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3606  11E2  01A8               	clrf	___awdiv@sign
  3607  11E3                     l3493:
  3608  11E3  1FA3               	btfss	___awdiv@divisor+1,7
  3609  11E4  29E6               	goto	u4771
  3610  11E5  29E7               	goto	u4770
  3611  11E6                     u4771:
  3612  11E6  29EE               	goto	l3499
  3613  11E7                     u4770:
  3614  11E7                     l3495:
  3615  11E7  09A2               	comf	___awdiv@divisor,f
  3616  11E8  09A3               	comf	___awdiv@divisor+1,f
  3617  11E9  0AA2               	incf	___awdiv@divisor,f
  3618  11EA  1903               	skipnz
  3619  11EB  0AA3               	incf	___awdiv@divisor+1,f
  3620  11EC                     l3497:
  3621  11EC  01A8               	clrf	___awdiv@sign
  3622  11ED  0AA8               	incf	___awdiv@sign,f
  3623  11EE                     l3499:
  3624  11EE  1FA5               	btfss	___awdiv@dividend+1,7
  3625  11EF  29F1               	goto	u4781
  3626  11F0  29F2               	goto	u4780
  3627  11F1                     u4781:
  3628  11F1  29FB               	goto	l3505
  3629  11F2                     u4780:
  3630  11F2                     l3501:
  3631  11F2  09A4               	comf	___awdiv@dividend,f
  3632  11F3  09A5               	comf	___awdiv@dividend+1,f
  3633  11F4  0AA4               	incf	___awdiv@dividend,f
  3634  11F5  1903               	skipnz
  3635  11F6  0AA5               	incf	___awdiv@dividend+1,f
  3636  11F7                     l3503:
  3637  11F7  3001               	movlw	1
  3638  11F8  00A6               	movwf	??___awdiv
  3639  11F9  0826               	movf	??___awdiv,w
  3640  11FA  06A8               	xorwf	___awdiv@sign,f
  3641  11FB                     l3505:
  3642  11FB  01A9               	clrf	___awdiv@quotient
  3643  11FC  01AA               	clrf	___awdiv@quotient+1
  3644  11FD                     l3507:
  3645  11FD  0822               	movf	___awdiv@divisor,w
  3646  11FE  0423               	iorwf	___awdiv@divisor+1,w
  3647  11FF  1903               	btfsc	3,2
  3648  1200  2A02               	goto	u4791
  3649  1201  2A03               	goto	u4790
  3650  1202                     u4791:
  3651  1202  2A3A               	goto	l3527
  3652  1203                     u4790:
  3653  1203                     l3509:
  3654  1203  01A7               	clrf	___awdiv@counter
  3655  1204  0AA7               	incf	___awdiv@counter,f
  3656  1205  2A11               	goto	l3515
  3657  1206                     l3511:
  3658  1206  3001               	movlw	1
  3659  1207                     u4805:
  3660  1207  1003               	clrc
  3661  1208  0DA2               	rlf	___awdiv@divisor,f
  3662  1209  0DA3               	rlf	___awdiv@divisor+1,f
  3663  120A  3EFF               	addlw	-1
  3664  120B  1D03               	skipz
  3665  120C  2A07               	goto	u4805
  3666  120D                     l3513:
  3667  120D  3001               	movlw	1
  3668  120E  00A6               	movwf	??___awdiv
  3669  120F  0826               	movf	??___awdiv,w
  3670  1210  07A7               	addwf	___awdiv@counter,f
  3671  1211                     l3515:
  3672  1211  1FA3               	btfss	___awdiv@divisor+1,7
  3673  1212  2A14               	goto	u4811
  3674  1213  2A15               	goto	u4810
  3675  1214                     u4811:
  3676  1214  2A06               	goto	l3511
  3677  1215                     u4810:
  3678  1215                     l3517:
  3679  1215  3001               	movlw	1
  3680  1216                     u4825:
  3681  1216  1003               	clrc
  3682  1217  0DA9               	rlf	___awdiv@quotient,f
  3683  1218  0DAA               	rlf	___awdiv@quotient+1,f
  3684  1219  3EFF               	addlw	-1
  3685  121A  1D03               	skipz
  3686  121B  2A16               	goto	u4825
  3687  121C  0823               	movf	___awdiv@divisor+1,w
  3688  121D  0225               	subwf	___awdiv@dividend+1,w
  3689  121E  1D03               	skipz
  3690  121F  2A22               	goto	u4835
  3691  1220  0822               	movf	___awdiv@divisor,w
  3692  1221  0224               	subwf	___awdiv@dividend,w
  3693  1222                     u4835:
  3694  1222  1C03               	skipc
  3695  1223  2A25               	goto	u4831
  3696  1224  2A26               	goto	u4830
  3697  1225                     u4831:
  3698  1225  2A2D               	goto	l3523
  3699  1226                     u4830:
  3700  1226                     l3519:
  3701  1226  0822               	movf	___awdiv@divisor,w
  3702  1227  02A4               	subwf	___awdiv@dividend,f
  3703  1228  0823               	movf	___awdiv@divisor+1,w
  3704  1229  1C03               	skipc
  3705  122A  03A5               	decf	___awdiv@dividend+1,f
  3706  122B  02A5               	subwf	___awdiv@dividend+1,f
  3707  122C                     l3521:
  3708  122C  1429               	bsf	___awdiv@quotient,0
  3709  122D                     l3523:
  3710  122D  3001               	movlw	1
  3711  122E                     u4845:
  3712  122E  1003               	clrc
  3713  122F  0CA3               	rrf	___awdiv@divisor+1,f
  3714  1230  0CA2               	rrf	___awdiv@divisor,f
  3715  1231  3EFF               	addlw	-1
  3716  1232  1D03               	skipz
  3717  1233  2A2E               	goto	u4845
  3718  1234                     l3525:
  3719  1234  3001               	movlw	1
  3720  1235  02A7               	subwf	___awdiv@counter,f
  3721  1236  1D03               	btfss	3,2
  3722  1237  2A39               	goto	u4851
  3723  1238  2A3A               	goto	u4850
  3724  1239                     u4851:
  3725  1239  2A15               	goto	l3517
  3726  123A                     u4850:
  3727  123A                     l3527:
  3728  123A  0828               	movf	___awdiv@sign,w
  3729  123B  1903               	btfsc	3,2
  3730  123C  2A3E               	goto	u4861
  3731  123D  2A3F               	goto	u4860
  3732  123E                     u4861:
  3733  123E  2A44               	goto	l3531
  3734  123F                     u4860:
  3735  123F                     l3529:
  3736  123F  09A9               	comf	___awdiv@quotient,f
  3737  1240  09AA               	comf	___awdiv@quotient+1,f
  3738  1241  0AA9               	incf	___awdiv@quotient,f
  3739  1242  1903               	skipnz
  3740  1243  0AAA               	incf	___awdiv@quotient+1,f
  3741  1244                     l3531:
  3742  1244  082A               	movf	___awdiv@quotient+1,w
  3743  1245  00A3               	movwf	?___awdiv+1
  3744  1246  0829               	movf	___awdiv@quotient,w
  3745  1247  00A2               	movwf	?___awdiv
  3746  1248                     l648:
  3747  1248  0008               	return
  3748  1249                     __end_of___awdiv:
  3749                           
  3750                           	psect	text7
  3751  1D55                     __ptext7:	
  3752 ;; *************** function _isdigit *****************
  3753 ;; Defined at:
  3754 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  c               1    wreg     unsigned char 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  c               1    4[COMMON] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;		None               void
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       0       0       0       0
  3769 ;;      Locals:         2       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         2       0       0       0       0
  3772 ;;Total ram usage:        2 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    2
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_sprintf
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _isdigit
  3784  1D55                     _isdigit:
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3788                           ;isdigit@c stored from wreg
  3789  1D55  00F4               	movwf	isdigit@c
  3790  1D56                     l2621:
  3791  1D56  01F3               	clrf	_isdigit$994
  3792  1D57                     l2623:
  3793  1D57  303A               	movlw	58
  3794  1D58  0274               	subwf	isdigit@c,w
  3795  1D59  1803               	skipnc
  3796  1D5A  2D5C               	goto	u3311
  3797  1D5B  2D5D               	goto	u3310
  3798  1D5C                     u3311:
  3799  1D5C  2D65               	goto	l2629
  3800  1D5D                     u3310:
  3801  1D5D                     l2625:
  3802  1D5D  3030               	movlw	48
  3803  1D5E  0274               	subwf	isdigit@c,w
  3804  1D5F  1C03               	skipc
  3805  1D60  2D62               	goto	u3321
  3806  1D61  2D63               	goto	u3320
  3807  1D62                     u3321:
  3808  1D62  2D65               	goto	l2629
  3809  1D63                     u3320:
  3810  1D63                     l2627:
  3811  1D63  01F3               	clrf	_isdigit$994
  3812  1D64  0AF3               	incf	_isdigit$994,f
  3813  1D65                     l2629:
  3814  1D65  0C73               	rrf	_isdigit$994,w
  3815  1D66                     l927:
  3816  1D66  0008               	return
  3817  1D67                     __end_of_isdigit:
  3818                           
  3819                           	psect	text8
  3820  08C4                     __ptext8:	
  3821 ;; *************** function _fround *****************
  3822 ;; Defined at:
  3823 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  prec            1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  prec            1   46[BANK0 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  3   31[BANK0 ] unsigned char 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       3       0       0       0
  3838 ;;      Locals:         0       7       0       0       0
  3839 ;;      Temps:          0       6       0       0       0
  3840 ;;      Totals:         0      16       0       0       0
  3841 ;;Total ram usage:       16 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    4
  3844 ;; This function calls:
  3845 ;;		___bmul
  3846 ;;		___ftmul
  3847 ;;		___lwdiv
  3848 ;;		___lwmod
  3849 ;; This function is called by:
  3850 ;;		_sprintf
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _fround
  3856  08C4                     _fround:
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3860                           ;fround@prec stored from wreg
  3861  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  3862  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  3863  08C6  00CE               	movwf	fround@prec
  3864  08C7                     l3769:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3867  08C7  306E               	movlw	110
  3868  08C8  024E               	subwf	fround@prec,w
  3869  08C9  1C03               	skipc
  3870  08CA  28CC               	goto	u5471
  3871  08CB  28CD               	goto	u5470
  3872  08CC                     u5471:
  3873  08CC  29AA               	goto	l3779
  3874  08CD                     u5470:
  3875  08CD                     l3771:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3878  08CD  3003               	movlw	3
  3879  08CE  00C2               	movwf	??_fround
  3880  08CF  0842               	movf	??_fround,w
  3881  08D0  00AB               	movwf	___bmul@multiplicand
  3882  08D1  084E               	movf	fround@prec,w
  3883  08D2  00C3               	movwf	??_fround+1
  3884  08D3  01C4               	clrf	??_fround+2
  3885  08D4  0843               	movf	??_fround+1,w
  3886  08D5  00F5               	movwf	___lwmod@dividend
  3887  08D6  0844               	movf	??_fround+2,w
  3888  08D7  00F6               	movwf	___lwmod@dividend+1
  3889  08D8  3064               	movlw	100
  3890  08D9  00F3               	movwf	___lwmod@divisor
  3891  08DA  3000               	movlw	0
  3892  08DB  00F4               	movwf	___lwmod@divisor+1
  3893  08DC  160A  158A  2740  120A  158A  	fcall	___lwmod
  3894  08E1  0874               	movf	?___lwmod+1,w
  3895  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  3896  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  3897  08E4  00A4               	movwf	___lwdiv@dividend+1
  3898  08E5  0873               	movf	?___lwmod,w
  3899  08E6  00A3               	movwf	___lwdiv@dividend
  3900  08E7  300A               	movlw	10
  3901  08E8  00A1               	movwf	___lwdiv@divisor
  3902  08E9  3000               	movlw	0
  3903  08EA  00A2               	movwf	___lwdiv@divisor+1
  3904  08EB  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3905  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  3906  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  3907  08F2  0821               	movf	?___lwdiv,w
  3908  08F3  160A  158A  257C  120A  158A  	fcall	___bmul
  3909  08F8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3910  08F9  0084               	movwf	4
  3911  08FA  160A  118A  200A  120A  158A  	fcall	stringdir
  3912  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0900  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0901  00AF               	movwf	___ftmul@f1
  3915  0902  160A  118A  200A  120A  158A  	fcall	stringdir
  3916  0907  00B0               	movwf	___ftmul@f1+1
  3917  0908  160A  118A  200A  120A  158A  	fcall	stringdir
  3918  090D  00B1               	movwf	___ftmul@f1+2
  3919  090E  3003               	movlw	3
  3920  090F  00C5               	movwf	??_fround+3
  3921  0910  0845               	movf	??_fround+3,w
  3922  0911  00AB               	movwf	___bmul@multiplicand
  3923  0912  084E               	movf	fround@prec,w
  3924  0913  00C6               	movwf	??_fround+4
  3925  0914  01C7               	clrf	??_fround+5
  3926  0915  0846               	movf	??_fround+4,w
  3927  0916  00A3               	movwf	___lwdiv@dividend
  3928  0917  0847               	movf	??_fround+5,w
  3929  0918  00A4               	movwf	___lwdiv@dividend+1
  3930  0919  3064               	movlw	100
  3931  091A  00A1               	movwf	___lwdiv@divisor
  3932  091B  3000               	movlw	0
  3933  091C  00A2               	movwf	___lwdiv@divisor+1
  3934  091D  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3935  0922  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0923  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0924  0821               	movf	?___lwdiv,w
  3938  0925  160A  158A  257C  120A  158A  	fcall	___bmul
  3939  092A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3940  092B  0084               	movwf	4
  3941  092C  160A  118A  200A  120A  158A  	fcall	stringdir
  3942  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0933  00B2               	movwf	___ftmul@f2
  3945  0934  160A  118A  200A  120A  158A  	fcall	stringdir
  3946  0939  00B3               	movwf	___ftmul@f2+1
  3947  093A  160A  118A  200A  120A  158A  	fcall	stringdir
  3948  093F  00B4               	movwf	___ftmul@f2+2
  3949  0940  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3950  0945  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0946  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0947  082F               	movf	?___ftmul,w
  3953  0948  00CB               	movwf	_fround$1184
  3954  0949  0830               	movf	?___ftmul+1,w
  3955  094A  00CC               	movwf	_fround$1184+1
  3956  094B  0831               	movf	?___ftmul+2,w
  3957  094C  00CD               	movwf	_fround$1184+2
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3960  094D  3003               	movlw	3
  3961  094E  00C2               	movwf	??_fround
  3962  094F  0842               	movf	??_fround,w
  3963  0950  00AB               	movwf	___bmul@multiplicand
  3964  0951  084E               	movf	fround@prec,w
  3965  0952  00C3               	movwf	??_fround+1
  3966  0953  01C4               	clrf	??_fround+2
  3967  0954  0843               	movf	??_fround+1,w
  3968  0955  00F5               	movwf	___lwmod@dividend
  3969  0956  0844               	movf	??_fround+2,w
  3970  0957  00F6               	movwf	___lwmod@dividend+1
  3971  0958  300A               	movlw	10
  3972  0959  00F3               	movwf	___lwmod@divisor
  3973  095A  3000               	movlw	0
  3974  095B  00F4               	movwf	___lwmod@divisor+1
  3975  095C  160A  158A  2740  120A  158A  	fcall	___lwmod
  3976  0961  0873               	movf	?___lwmod,w
  3977  0962  160A  158A  257C  120A  158A  	fcall	___bmul
  3978  0967  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3979  0968  0084               	movwf	4
  3980  0969  160A  118A  200A  120A  158A  	fcall	stringdir
  3981  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3982  096F  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0970  00AF               	movwf	___ftmul@f1
  3984  0971  160A  118A  200A  120A  158A  	fcall	stringdir
  3985  0976  00B0               	movwf	___ftmul@f1+1
  3986  0977  160A  118A  200A  120A  158A  	fcall	stringdir
  3987  097C  00B1               	movwf	___ftmul@f1+2
  3988  097D  084B               	movf	_fround$1184,w
  3989  097E  00B2               	movwf	___ftmul@f2
  3990  097F  084C               	movf	_fround$1184+1,w
  3991  0980  00B3               	movwf	___ftmul@f2+1
  3992  0981  084D               	movf	_fround$1184+2,w
  3993  0982  00B4               	movwf	___ftmul@f2+2
  3994  0983  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3995  0988  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0989  1303               	bcf	3,6	;RP1=0, select bank0
  3997  098A  082F               	movf	?___ftmul,w
  3998  098B  00C8               	movwf	_fround$1185
  3999  098C  0830               	movf	?___ftmul+1,w
  4000  098D  00C9               	movwf	_fround$1185+1
  4001  098E  0831               	movf	?___ftmul+2,w
  4002  098F  00CA               	movwf	_fround$1185+2
  4003  0990                     l3773:
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4006  0990  3000               	movlw	0
  4007  0991  00AF               	movwf	___ftmul@f1
  4008  0992  3000               	movlw	0
  4009  0993  00B0               	movwf	___ftmul@f1+1
  4010  0994  303F               	movlw	63
  4011  0995  00B1               	movwf	___ftmul@f1+2
  4012  0996  0848               	movf	_fround$1185,w
  4013  0997  00B2               	movwf	___ftmul@f2
  4014  0998  0849               	movf	_fround$1185+1,w
  4015  0999  00B3               	movwf	___ftmul@f2+1
  4016  099A  084A               	movf	_fround$1185+2,w
  4017  099B  00B4               	movwf	___ftmul@f2+2
  4018  099C  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4019  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  4020  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  4021  09A3  082F               	movf	?___ftmul,w
  4022  09A4  00BF               	movwf	?_fround
  4023  09A5  0830               	movf	?___ftmul+1,w
  4024  09A6  00C0               	movwf	?_fround+1
  4025  09A7  0831               	movf	?___ftmul+2,w
  4026  09A8  00C1               	movwf	?_fround+2
  4027  09A9  2A6C               	goto	l362
  4028  09AA                     l3779:
  4029  09AA  300B               	movlw	11
  4030  09AB  024E               	subwf	fround@prec,w
  4031  09AC  1C03               	skipc
  4032  09AD  29AF               	goto	u5481
  4033  09AE  29B0               	goto	u5480
  4034  09AF                     u5481:
  4035  09AF  2A39               	goto	l3787
  4036  09B0                     u5480:
  4037  09B0                     l3781:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4040  09B0  3003               	movlw	3
  4041  09B1  00C2               	movwf	??_fround
  4042  09B2  0842               	movf	??_fround,w
  4043  09B3  00AB               	movwf	___bmul@multiplicand
  4044  09B4  084E               	movf	fround@prec,w
  4045  09B5  00C3               	movwf	??_fround+1
  4046  09B6  01C4               	clrf	??_fround+2
  4047  09B7  0843               	movf	??_fround+1,w
  4048  09B8  00F5               	movwf	___lwmod@dividend
  4049  09B9  0844               	movf	??_fround+2,w
  4050  09BA  00F6               	movwf	___lwmod@dividend+1
  4051  09BB  300A               	movlw	10
  4052  09BC  00F3               	movwf	___lwmod@divisor
  4053  09BD  3000               	movlw	0
  4054  09BE  00F4               	movwf	___lwmod@divisor+1
  4055  09BF  160A  158A  2740  120A  158A  	fcall	___lwmod
  4056  09C4  0873               	movf	?___lwmod,w
  4057  09C5  160A  158A  257C  120A  158A  	fcall	___bmul
  4058  09CA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4059  09CB  0084               	movwf	4
  4060  09CC  160A  118A  200A  120A  158A  	fcall	stringdir
  4061  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  4062  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  4063  09D3  00AF               	movwf	___ftmul@f1
  4064  09D4  160A  118A  200A  120A  158A  	fcall	stringdir
  4065  09D9  00B0               	movwf	___ftmul@f1+1
  4066  09DA  160A  118A  200A  120A  158A  	fcall	stringdir
  4067  09DF  00B1               	movwf	___ftmul@f1+2
  4068  09E0  3003               	movlw	3
  4069  09E1  00C5               	movwf	??_fround+3
  4070  09E2  0845               	movf	??_fround+3,w
  4071  09E3  00AB               	movwf	___bmul@multiplicand
  4072  09E4  084E               	movf	fround@prec,w
  4073  09E5  00C6               	movwf	??_fround+4
  4074  09E6  01C7               	clrf	??_fround+5
  4075  09E7  0846               	movf	??_fround+4,w
  4076  09E8  00A3               	movwf	___lwdiv@dividend
  4077  09E9  0847               	movf	??_fround+5,w
  4078  09EA  00A4               	movwf	___lwdiv@dividend+1
  4079  09EB  300A               	movlw	10
  4080  09EC  00A1               	movwf	___lwdiv@divisor
  4081  09ED  3000               	movlw	0
  4082  09EE  00A2               	movwf	___lwdiv@divisor+1
  4083  09EF  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  4084  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  4085  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  4086  09F6  0821               	movf	?___lwdiv,w
  4087  09F7  160A  158A  257C  120A  158A  	fcall	___bmul
  4088  09FC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4089  09FD  0084               	movwf	4
  4090  09FE  160A  118A  200A  120A  158A  	fcall	stringdir
  4091  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0A05  00B2               	movwf	___ftmul@f2
  4094  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  4095  0A0B  00B3               	movwf	___ftmul@f2+1
  4096  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4097  0A11  00B4               	movwf	___ftmul@f2+2
  4098  0A12  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4099  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0A19  082F               	movf	?___ftmul,w
  4102  0A1A  00CB               	movwf	_fround$1184
  4103  0A1B  0830               	movf	?___ftmul+1,w
  4104  0A1C  00CC               	movwf	_fround$1184+1
  4105  0A1D  0831               	movf	?___ftmul+2,w
  4106  0A1E  00CD               	movwf	_fround$1184+2
  4107  0A1F                     l3783:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4110  0A1F  3000               	movlw	0
  4111  0A20  00AF               	movwf	___ftmul@f1
  4112  0A21  3000               	movlw	0
  4113  0A22  00B0               	movwf	___ftmul@f1+1
  4114  0A23  303F               	movlw	63
  4115  0A24  00B1               	movwf	___ftmul@f1+2
  4116  0A25  084B               	movf	_fround$1184,w
  4117  0A26  00B2               	movwf	___ftmul@f2
  4118  0A27  084C               	movf	_fround$1184+1,w
  4119  0A28  00B3               	movwf	___ftmul@f2+1
  4120  0A29  084D               	movf	_fround$1184+2,w
  4121  0A2A  00B4               	movwf	___ftmul@f2+2
  4122  0A2B  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4123  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0A32  082F               	movf	?___ftmul,w
  4126  0A33  00BF               	movwf	?_fround
  4127  0A34  0830               	movf	?___ftmul+1,w
  4128  0A35  00C0               	movwf	?_fround+1
  4129  0A36  0831               	movf	?___ftmul+2,w
  4130  0A37  00C1               	movwf	?_fround+2
  4131  0A38  2A6C               	goto	l362
  4132  0A39                     l3787:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4135  0A39  3000               	movlw	0
  4136  0A3A  00AF               	movwf	___ftmul@f1
  4137  0A3B  3000               	movlw	0
  4138  0A3C  00B0               	movwf	___ftmul@f1+1
  4139  0A3D  303F               	movlw	63
  4140  0A3E  00B1               	movwf	___ftmul@f1+2
  4141  0A3F  3003               	movlw	3
  4142  0A40  00C2               	movwf	??_fround
  4143  0A41  0842               	movf	??_fround,w
  4144  0A42  00AB               	movwf	___bmul@multiplicand
  4145  0A43  084E               	movf	fround@prec,w
  4146  0A44  160A  158A  257C  120A  158A  	fcall	___bmul
  4147  0A49  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4148  0A4A  0084               	movwf	4
  4149  0A4B  160A  118A  200A  120A  158A  	fcall	stringdir
  4150  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0A52  00B2               	movwf	___ftmul@f2
  4153  0A53  160A  118A  200A  120A  158A  	fcall	stringdir
  4154  0A58  00B3               	movwf	___ftmul@f2+1
  4155  0A59  160A  118A  200A  120A  158A  	fcall	stringdir
  4156  0A5E  00B4               	movwf	___ftmul@f2+2
  4157  0A5F  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4158  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0A66  082F               	movf	?___ftmul,w
  4161  0A67  00BF               	movwf	?_fround
  4162  0A68  0830               	movf	?___ftmul+1,w
  4163  0A69  00C0               	movwf	?_fround+1
  4164  0A6A  0831               	movf	?___ftmul+2,w
  4165  0A6B  00C1               	movwf	?_fround+2
  4166  0A6C                     l362:
  4167  0A6C  0008               	return
  4168  0A6D                     __end_of_fround:
  4169                           
  4170                           	psect	text9
  4171  1F40                     __ptext9:	
  4172 ;; *************** function ___lwmod *****************
  4173 ;; Defined at:
  4174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  divisor         2    3[COMMON] unsigned int 
  4177 ;;  dividend        2    5[COMMON] unsigned int 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  counter         1    0[BANK0 ] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2    3[COMMON] unsigned int 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4189 ;;      Params:         4       0       0       0       0
  4190 ;;      Locals:         0       1       0       0       0
  4191 ;;      Temps:          1       0       0       0       0
  4192 ;;      Totals:         5       1       0       0       0
  4193 ;;Total ram usage:        6 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_fround
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function ___lwmod
  4205  1F40                     ___lwmod:
  4206  1F40                     l3719:	
  4207                           ;incstack = 0
  4208                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4209                           
  4210  1F40  0873               	movf	___lwmod@divisor,w
  4211  1F41  0474               	iorwf	___lwmod@divisor+1,w
  4212  1F42  1903               	btfsc	3,2
  4213  1F43  2F45               	goto	u5411
  4214  1F44  2F46               	goto	u5410
  4215  1F45                     u5411:
  4216  1F45  2F77               	goto	l3737
  4217  1F46                     u5410:
  4218  1F46                     l3721:
  4219  1F46  1283               	bcf	3,5	;RP0=0, select bank0
  4220  1F47  1303               	bcf	3,6	;RP1=0, select bank0
  4221  1F48  01A0               	clrf	___lwmod@counter
  4222  1F49  0AA0               	incf	___lwmod@counter,f
  4223  1F4A  2F56               	goto	l3727
  4224  1F4B                     l3723:
  4225  1F4B  3001               	movlw	1
  4226  1F4C                     u5425:
  4227  1F4C  1003               	clrc
  4228  1F4D  0DF3               	rlf	___lwmod@divisor,f
  4229  1F4E  0DF4               	rlf	___lwmod@divisor+1,f
  4230  1F4F  3EFF               	addlw	-1
  4231  1F50  1D03               	skipz
  4232  1F51  2F4C               	goto	u5425
  4233  1F52                     l3725:
  4234  1F52  3001               	movlw	1
  4235  1F53  00F7               	movwf	??___lwmod
  4236  1F54  0877               	movf	??___lwmod,w
  4237  1F55  07A0               	addwf	___lwmod@counter,f
  4238  1F56                     l3727:
  4239  1F56  1FF4               	btfss	___lwmod@divisor+1,7
  4240  1F57  2F59               	goto	u5431
  4241  1F58  2F5A               	goto	u5430
  4242  1F59                     u5431:
  4243  1F59  2F4B               	goto	l3723
  4244  1F5A                     u5430:
  4245  1F5A                     l3729:
  4246  1F5A  0874               	movf	___lwmod@divisor+1,w
  4247  1F5B  0276               	subwf	___lwmod@dividend+1,w
  4248  1F5C  1D03               	skipz
  4249  1F5D  2F60               	goto	u5445
  4250  1F5E  0873               	movf	___lwmod@divisor,w
  4251  1F5F  0275               	subwf	___lwmod@dividend,w
  4252  1F60                     u5445:
  4253  1F60  1C03               	skipc
  4254  1F61  2F63               	goto	u5441
  4255  1F62  2F64               	goto	u5440
  4256  1F63                     u5441:
  4257  1F63  2F6A               	goto	l3733
  4258  1F64                     u5440:
  4259  1F64                     l3731:
  4260  1F64  0873               	movf	___lwmod@divisor,w
  4261  1F65  02F5               	subwf	___lwmod@dividend,f
  4262  1F66  0874               	movf	___lwmod@divisor+1,w
  4263  1F67  1C03               	skipc
  4264  1F68  03F6               	decf	___lwmod@dividend+1,f
  4265  1F69  02F6               	subwf	___lwmod@dividend+1,f
  4266  1F6A                     l3733:
  4267  1F6A  3001               	movlw	1
  4268  1F6B                     u5455:
  4269  1F6B  1003               	clrc
  4270  1F6C  0CF4               	rrf	___lwmod@divisor+1,f
  4271  1F6D  0CF3               	rrf	___lwmod@divisor,f
  4272  1F6E  3EFF               	addlw	-1
  4273  1F6F  1D03               	skipz
  4274  1F70  2F6B               	goto	u5455
  4275  1F71                     l3735:
  4276  1F71  3001               	movlw	1
  4277  1F72  02A0               	subwf	___lwmod@counter,f
  4278  1F73  1D03               	btfss	3,2
  4279  1F74  2F76               	goto	u5461
  4280  1F75  2F77               	goto	u5460
  4281  1F76                     u5461:
  4282  1F76  2F5A               	goto	l3729
  4283  1F77                     u5460:
  4284  1F77                     l3737:
  4285  1F77  0876               	movf	___lwmod@dividend+1,w
  4286  1F78  00F4               	movwf	?___lwmod+1
  4287  1F79  0875               	movf	___lwmod@dividend,w
  4288  1F7A  00F3               	movwf	?___lwmod
  4289  1F7B                     l917:
  4290  1F7B  0008               	return
  4291  1F7C                     __end_of___lwmod:
  4292                           
  4293                           	psect	text10
  4294  1FBA                     __ptext10:	
  4295 ;; *************** function ___lwdiv *****************
  4296 ;; Defined at:
  4297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  divisor         2    1[BANK0 ] unsigned int 
  4300 ;;  dividend        2    3[BANK0 ] unsigned int 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  quotient        2    7[BANK0 ] unsigned int 
  4303 ;;  counter         1    6[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    1[BANK0 ] unsigned int 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       4       0       0       0
  4314 ;;      Locals:         0       3       0       0       0
  4315 ;;      Temps:          0       1       0       0       0
  4316 ;;      Totals:         0       8       0       0       0
  4317 ;;Total ram usage:        8 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    2
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_fround
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function ___lwdiv
  4329  1FBA                     ___lwdiv:
  4330  1FBA                     l3693:	
  4331                           ;incstack = 0
  4332                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4333                           
  4334  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4335  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  4336  1FBC  01A7               	clrf	___lwdiv@quotient
  4337  1FBD  01A8               	clrf	___lwdiv@quotient+1
  4338  1FBE                     l3695:
  4339  1FBE  0821               	movf	___lwdiv@divisor,w
  4340  1FBF  0422               	iorwf	___lwdiv@divisor+1,w
  4341  1FC0  1903               	btfsc	3,2
  4342  1FC1  2FC3               	goto	u5341
  4343  1FC2  2FC4               	goto	u5340
  4344  1FC3                     u5341:
  4345  1FC3  2FFB               	goto	l3715
  4346  1FC4                     u5340:
  4347  1FC4                     l3697:
  4348  1FC4  01A6               	clrf	___lwdiv@counter
  4349  1FC5  0AA6               	incf	___lwdiv@counter,f
  4350  1FC6  2FD2               	goto	l3703
  4351  1FC7                     l3699:
  4352  1FC7  3001               	movlw	1
  4353  1FC8                     u5355:
  4354  1FC8  1003               	clrc
  4355  1FC9  0DA1               	rlf	___lwdiv@divisor,f
  4356  1FCA  0DA2               	rlf	___lwdiv@divisor+1,f
  4357  1FCB  3EFF               	addlw	-1
  4358  1FCC  1D03               	skipz
  4359  1FCD  2FC8               	goto	u5355
  4360  1FCE                     l3701:
  4361  1FCE  3001               	movlw	1
  4362  1FCF  00A5               	movwf	??___lwdiv
  4363  1FD0  0825               	movf	??___lwdiv,w
  4364  1FD1  07A6               	addwf	___lwdiv@counter,f
  4365  1FD2                     l3703:
  4366  1FD2  1FA2               	btfss	___lwdiv@divisor+1,7
  4367  1FD3  2FD5               	goto	u5361
  4368  1FD4  2FD6               	goto	u5360
  4369  1FD5                     u5361:
  4370  1FD5  2FC7               	goto	l3699
  4371  1FD6                     u5360:
  4372  1FD6                     l3705:
  4373  1FD6  3001               	movlw	1
  4374  1FD7                     u5375:
  4375  1FD7  1003               	clrc
  4376  1FD8  0DA7               	rlf	___lwdiv@quotient,f
  4377  1FD9  0DA8               	rlf	___lwdiv@quotient+1,f
  4378  1FDA  3EFF               	addlw	-1
  4379  1FDB  1D03               	skipz
  4380  1FDC  2FD7               	goto	u5375
  4381  1FDD  0822               	movf	___lwdiv@divisor+1,w
  4382  1FDE  0224               	subwf	___lwdiv@dividend+1,w
  4383  1FDF  1D03               	skipz
  4384  1FE0  2FE3               	goto	u5385
  4385  1FE1  0821               	movf	___lwdiv@divisor,w
  4386  1FE2  0223               	subwf	___lwdiv@dividend,w
  4387  1FE3                     u5385:
  4388  1FE3  1C03               	skipc
  4389  1FE4  2FE6               	goto	u5381
  4390  1FE5  2FE7               	goto	u5380
  4391  1FE6                     u5381:
  4392  1FE6  2FEE               	goto	l3711
  4393  1FE7                     u5380:
  4394  1FE7                     l3707:
  4395  1FE7  0821               	movf	___lwdiv@divisor,w
  4396  1FE8  02A3               	subwf	___lwdiv@dividend,f
  4397  1FE9  0822               	movf	___lwdiv@divisor+1,w
  4398  1FEA  1C03               	skipc
  4399  1FEB  03A4               	decf	___lwdiv@dividend+1,f
  4400  1FEC  02A4               	subwf	___lwdiv@dividend+1,f
  4401  1FED                     l3709:
  4402  1FED  1427               	bsf	___lwdiv@quotient,0
  4403  1FEE                     l3711:
  4404  1FEE  3001               	movlw	1
  4405  1FEF                     u5395:
  4406  1FEF  1003               	clrc
  4407  1FF0  0CA2               	rrf	___lwdiv@divisor+1,f
  4408  1FF1  0CA1               	rrf	___lwdiv@divisor,f
  4409  1FF2  3EFF               	addlw	-1
  4410  1FF3  1D03               	skipz
  4411  1FF4  2FEF               	goto	u5395
  4412  1FF5                     l3713:
  4413  1FF5  3001               	movlw	1
  4414  1FF6  02A6               	subwf	___lwdiv@counter,f
  4415  1FF7  1D03               	btfss	3,2
  4416  1FF8  2FFA               	goto	u5401
  4417  1FF9  2FFB               	goto	u5400
  4418  1FFA                     u5401:
  4419  1FFA  2FD6               	goto	l3705
  4420  1FFB                     u5400:
  4421  1FFB                     l3715:
  4422  1FFB  0828               	movf	___lwdiv@quotient+1,w
  4423  1FFC  00A2               	movwf	?___lwdiv+1
  4424  1FFD  0827               	movf	___lwdiv@quotient,w
  4425  1FFE  00A1               	movwf	?___lwdiv
  4426  1FFF                     l907:
  4427  1FFF  0008               	return
  4428  2000                     __end_of___lwdiv:
  4429                           
  4430                           	psect	text11
  4431  13CF                     __ptext11:	
  4432 ;; *************** function ___ftmul *****************
  4433 ;; Defined at:
  4434 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  f1              3   15[BANK0 ] float 
  4437 ;;  f2              3   18[BANK0 ] float 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  4440 ;;  sign            1   30[BANK0 ] unsigned char 
  4441 ;;  cntr            1   29[BANK0 ] unsigned char 
  4442 ;;  exp             1   25[BANK0 ] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  3   15[BANK0 ] float 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, pclath, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         0       6       0       0       0
  4453 ;;      Locals:         0       6       0       0       0
  4454 ;;      Temps:          0       4       0       0       0
  4455 ;;      Totals:         0      16       0       0       0
  4456 ;;Total ram usage:       16 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    3
  4459 ;; This function calls:
  4460 ;;		___ftpack
  4461 ;; This function is called by:
  4462 ;;		_main
  4463 ;;		_fround
  4464 ;;		_scale
  4465 ;;		_sprintf
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           
  4470                           ;psect for function ___ftmul
  4471  13CF                     ___ftmul:
  4472  13CF                     l3643:	
  4473                           ;incstack = 0
  4474                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4475                           
  4476  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  4477  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  4478  13D1  082F               	movf	___ftmul@f1,w
  4479  13D2  00B5               	movwf	??___ftmul
  4480  13D3  0830               	movf	___ftmul@f1+1,w
  4481  13D4  00B6               	movwf	??___ftmul+1
  4482  13D5  0831               	movf	___ftmul@f1+2,w
  4483  13D6  00B7               	movwf	??___ftmul+2
  4484  13D7  1003               	clrc
  4485  13D8  0D36               	rlf	??___ftmul+1,w
  4486  13D9  0D37               	rlf	??___ftmul+2,w
  4487  13DA  00B8               	movwf	??___ftmul+3
  4488  13DB  0838               	movf	??___ftmul+3,w
  4489  13DC  00B9               	movwf	___ftmul@exp
  4490  13DD  0839               	movf	___ftmul@exp,w
  4491  13DE  1D03               	btfss	3,2
  4492  13DF  2BE1               	goto	u5201
  4493  13E0  2BE2               	goto	u5200
  4494  13E1                     u5201:
  4495  13E1  2BE9               	goto	l3649
  4496  13E2                     u5200:
  4497  13E2                     l3645:
  4498  13E2  3000               	movlw	0
  4499  13E3  00AF               	movwf	?___ftmul
  4500  13E4  3000               	movlw	0
  4501  13E5  00B0               	movwf	?___ftmul+1
  4502  13E6  3000               	movlw	0
  4503  13E7  00B1               	movwf	?___ftmul+2
  4504  13E8  2CB3               	goto	l774
  4505  13E9                     l3649:
  4506  13E9  0832               	movf	___ftmul@f2,w
  4507  13EA  00B5               	movwf	??___ftmul
  4508  13EB  0833               	movf	___ftmul@f2+1,w
  4509  13EC  00B6               	movwf	??___ftmul+1
  4510  13ED  0834               	movf	___ftmul@f2+2,w
  4511  13EE  00B7               	movwf	??___ftmul+2
  4512  13EF  1003               	clrc
  4513  13F0  0D36               	rlf	??___ftmul+1,w
  4514  13F1  0D37               	rlf	??___ftmul+2,w
  4515  13F2  00B8               	movwf	??___ftmul+3
  4516  13F3  0838               	movf	??___ftmul+3,w
  4517  13F4  00BE               	movwf	___ftmul@sign
  4518  13F5  083E               	movf	___ftmul@sign,w
  4519  13F6  1D03               	btfss	3,2
  4520  13F7  2BF9               	goto	u5211
  4521  13F8  2BFA               	goto	u5210
  4522  13F9                     u5211:
  4523  13F9  2C01               	goto	l3655
  4524  13FA                     u5210:
  4525  13FA                     l3651:
  4526  13FA  3000               	movlw	0
  4527  13FB  00AF               	movwf	?___ftmul
  4528  13FC  3000               	movlw	0
  4529  13FD  00B0               	movwf	?___ftmul+1
  4530  13FE  3000               	movlw	0
  4531  13FF  00B1               	movwf	?___ftmul+2
  4532  1400  2CB3               	goto	l774
  4533  1401                     l3655:
  4534  1401  083E               	movf	___ftmul@sign,w
  4535  1402  3E7B               	addlw	123
  4536  1403  00B5               	movwf	??___ftmul
  4537  1404  0835               	movf	??___ftmul,w
  4538  1405  07B9               	addwf	___ftmul@exp,f
  4539  1406  082F               	movf	___ftmul@f1,w
  4540  1407  00B5               	movwf	??___ftmul
  4541  1408  0830               	movf	___ftmul@f1+1,w
  4542  1409  00B6               	movwf	??___ftmul+1
  4543  140A  0831               	movf	___ftmul@f1+2,w
  4544  140B  00B7               	movwf	??___ftmul+2
  4545  140C  3010               	movlw	16
  4546  140D                     u5225:
  4547  140D  1003               	clrc
  4548  140E  0CB7               	rrf	??___ftmul+2,f
  4549  140F  0CB6               	rrf	??___ftmul+1,f
  4550  1410  0CB5               	rrf	??___ftmul,f
  4551  1411                     u5220:
  4552  1411  3EFF               	addlw	-1
  4553  1412  1D03               	skipz
  4554  1413  2C0D               	goto	u5225
  4555  1414  0835               	movf	??___ftmul,w
  4556  1415  00B8               	movwf	??___ftmul+3
  4557  1416  0838               	movf	??___ftmul+3,w
  4558  1417  00BE               	movwf	___ftmul@sign
  4559  1418  0832               	movf	___ftmul@f2,w
  4560  1419  00B5               	movwf	??___ftmul
  4561  141A  0833               	movf	___ftmul@f2+1,w
  4562  141B  00B6               	movwf	??___ftmul+1
  4563  141C  0834               	movf	___ftmul@f2+2,w
  4564  141D  00B7               	movwf	??___ftmul+2
  4565  141E  3010               	movlw	16
  4566  141F                     u5235:
  4567  141F  1003               	clrc
  4568  1420  0CB7               	rrf	??___ftmul+2,f
  4569  1421  0CB6               	rrf	??___ftmul+1,f
  4570  1422  0CB5               	rrf	??___ftmul,f
  4571  1423                     u5230:
  4572  1423  3EFF               	addlw	-1
  4573  1424  1D03               	skipz
  4574  1425  2C1F               	goto	u5235
  4575  1426  0835               	movf	??___ftmul,w
  4576  1427  00B8               	movwf	??___ftmul+3
  4577  1428  0838               	movf	??___ftmul+3,w
  4578  1429  06BE               	xorwf	___ftmul@sign,f
  4579  142A  3080               	movlw	128
  4580  142B  00B5               	movwf	??___ftmul
  4581  142C  0835               	movf	??___ftmul,w
  4582  142D  05BE               	andwf	___ftmul@sign,f
  4583  142E                     l3657:
  4584  142E  17B0               	bsf	___ftmul@f1+1,7
  4585  142F                     l3659:
  4586  142F  17B3               	bsf	___ftmul@f2+1,7
  4587  1430                     l3661:
  4588  1430  30FF               	movlw	255
  4589  1431  05B2               	andwf	___ftmul@f2,f
  4590  1432  30FF               	movlw	255
  4591  1433  05B3               	andwf	___ftmul@f2+1,f
  4592  1434  3000               	movlw	0
  4593  1435  05B4               	andwf	___ftmul@f2+2,f
  4594  1436                     l3663:
  4595  1436  3000               	movlw	0
  4596  1437  00BA               	movwf	___ftmul@f3_as_product
  4597  1438  3000               	movlw	0
  4598  1439  00BB               	movwf	___ftmul@f3_as_product+1
  4599  143A  3000               	movlw	0
  4600  143B  00BC               	movwf	___ftmul@f3_as_product+2
  4601  143C                     l3665:
  4602  143C  3007               	movlw	7
  4603  143D  00B5               	movwf	??___ftmul
  4604  143E  0835               	movf	??___ftmul,w
  4605  143F  00BD               	movwf	___ftmul@cntr
  4606  1440                     l3667:
  4607  1440  1C2F               	btfss	___ftmul@f1,0
  4608  1441  2C43               	goto	u5241
  4609  1442  2C44               	goto	u5240
  4610  1443                     u5241:
  4611  1443  2C54               	goto	l3671
  4612  1444                     u5240:
  4613  1444                     l3669:
  4614  1444  0832               	movf	___ftmul@f2,w
  4615  1445  07BA               	addwf	___ftmul@f3_as_product,f
  4616  1446  0833               	movf	___ftmul@f2+1,w
  4617  1447  1103               	clrz
  4618  1448  1803               	skipnc
  4619  1449  0A33               	incf	___ftmul@f2+1,w
  4620  144A  1903               	skipnz
  4621  144B  2C4D               	goto	u5251
  4622  144C  07BB               	addwf	___ftmul@f3_as_product+1,f
  4623  144D                     u5251:
  4624  144D  0834               	movf	___ftmul@f2+2,w
  4625  144E  1103               	clrz
  4626  144F  1803               	skipnc
  4627  1450  0A34               	incf	___ftmul@f2+2,w
  4628  1451  1903               	skipnz
  4629  1452  2C54               	goto	u5252
  4630  1453  07BC               	addwf	___ftmul@f3_as_product+2,f
  4631  1454                     u5252:
  4632  1454                     l3671:
  4633  1454  3001               	movlw	1
  4634  1455                     u5265:
  4635  1455  1003               	clrc
  4636  1456  0CB1               	rrf	___ftmul@f1+2,f
  4637  1457  0CB0               	rrf	___ftmul@f1+1,f
  4638  1458  0CAF               	rrf	___ftmul@f1,f
  4639  1459  3EFF               	addlw	-1
  4640  145A  1D03               	skipz
  4641  145B  2C55               	goto	u5265
  4642  145C                     l3673:
  4643  145C  3001               	movlw	1
  4644  145D                     u5275:
  4645  145D  1003               	clrc
  4646  145E  0DB2               	rlf	___ftmul@f2,f
  4647  145F  0DB3               	rlf	___ftmul@f2+1,f
  4648  1460  0DB4               	rlf	___ftmul@f2+2,f
  4649  1461  3EFF               	addlw	-1
  4650  1462  1D03               	skipz
  4651  1463  2C5D               	goto	u5275
  4652  1464                     l3675:
  4653  1464  3001               	movlw	1
  4654  1465  02BD               	subwf	___ftmul@cntr,f
  4655  1466  1D03               	btfss	3,2
  4656  1467  2C69               	goto	u5281
  4657  1468  2C6A               	goto	u5280
  4658  1469                     u5281:
  4659  1469  2C40               	goto	l3667
  4660  146A                     u5280:
  4661  146A                     l3677:
  4662  146A  3009               	movlw	9
  4663  146B  00B5               	movwf	??___ftmul
  4664  146C  0835               	movf	??___ftmul,w
  4665  146D  00BD               	movwf	___ftmul@cntr
  4666  146E                     l3679:
  4667  146E  1C2F               	btfss	___ftmul@f1,0
  4668  146F  2C71               	goto	u5291
  4669  1470  2C72               	goto	u5290
  4670  1471                     u5291:
  4671  1471  2C82               	goto	l3683
  4672  1472                     u5290:
  4673  1472                     l3681:
  4674  1472  0832               	movf	___ftmul@f2,w
  4675  1473  07BA               	addwf	___ftmul@f3_as_product,f
  4676  1474  0833               	movf	___ftmul@f2+1,w
  4677  1475  1103               	clrz
  4678  1476  1803               	skipnc
  4679  1477  0A33               	incf	___ftmul@f2+1,w
  4680  1478  1903               	skipnz
  4681  1479  2C7B               	goto	u5301
  4682  147A  07BB               	addwf	___ftmul@f3_as_product+1,f
  4683  147B                     u5301:
  4684  147B  0834               	movf	___ftmul@f2+2,w
  4685  147C  1103               	clrz
  4686  147D  1803               	skipnc
  4687  147E  0A34               	incf	___ftmul@f2+2,w
  4688  147F  1903               	skipnz
  4689  1480  2C82               	goto	u5302
  4690  1481  07BC               	addwf	___ftmul@f3_as_product+2,f
  4691  1482                     u5302:
  4692  1482                     l3683:
  4693  1482  3001               	movlw	1
  4694  1483                     u5315:
  4695  1483  1003               	clrc
  4696  1484  0CB1               	rrf	___ftmul@f1+2,f
  4697  1485  0CB0               	rrf	___ftmul@f1+1,f
  4698  1486  0CAF               	rrf	___ftmul@f1,f
  4699  1487  3EFF               	addlw	-1
  4700  1488  1D03               	skipz
  4701  1489  2C83               	goto	u5315
  4702  148A                     l3685:
  4703  148A  3001               	movlw	1
  4704  148B                     u5325:
  4705  148B  1003               	clrc
  4706  148C  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4707  148D  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4708  148E  0CBA               	rrf	___ftmul@f3_as_product,f
  4709  148F  3EFF               	addlw	-1
  4710  1490  1D03               	skipz
  4711  1491  2C8B               	goto	u5325
  4712  1492                     l3687:
  4713  1492  3001               	movlw	1
  4714  1493  02BD               	subwf	___ftmul@cntr,f
  4715  1494  1D03               	btfss	3,2
  4716  1495  2C97               	goto	u5331
  4717  1496  2C98               	goto	u5330
  4718  1497                     u5331:
  4719  1497  2C6E               	goto	l3679
  4720  1498                     u5330:
  4721  1498                     l3689:
  4722  1498  083A               	movf	___ftmul@f3_as_product,w
  4723  1499  00F3               	movwf	___ftpack@arg
  4724  149A  083B               	movf	___ftmul@f3_as_product+1,w
  4725  149B  00F4               	movwf	___ftpack@arg+1
  4726  149C  083C               	movf	___ftmul@f3_as_product+2,w
  4727  149D  00F5               	movwf	___ftpack@arg+2
  4728  149E  0839               	movf	___ftmul@exp,w
  4729  149F  00B5               	movwf	??___ftmul
  4730  14A0  0835               	movf	??___ftmul,w
  4731  14A1  00F6               	movwf	___ftpack@exp
  4732  14A2  083E               	movf	___ftmul@sign,w
  4733  14A3  00B6               	movwf	??___ftmul+1
  4734  14A4  0836               	movf	??___ftmul+1,w
  4735  14A5  00F7               	movwf	___ftpack@sign
  4736  14A6  160A  118A  22C1  160A  118A  	fcall	___ftpack
  4737  14AB  0873               	movf	?___ftpack,w
  4738  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  4739  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  4740  14AE  00AF               	movwf	?___ftmul
  4741  14AF  0874               	movf	?___ftpack+1,w
  4742  14B0  00B0               	movwf	?___ftmul+1
  4743  14B1  0875               	movf	?___ftpack+2,w
  4744  14B2  00B1               	movwf	?___ftmul+2
  4745  14B3                     l774:
  4746  14B3  0008               	return
  4747  14B4                     __end_of___ftmul:
  4748                           
  4749                           	psect	text12
  4750  1D7C                     __ptext12:	
  4751 ;; *************** function ___bmul *****************
  4752 ;; Defined at:
  4753 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  multiplier      1    wreg     unsigned char 
  4756 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4759 ;;  product         1   13[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      unsigned char 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       1       0       0       0
  4770 ;;      Locals:         0       2       0       0       0
  4771 ;;      Temps:          0       1       0       0       0
  4772 ;;      Totals:         0       4       0       0       0
  4773 ;;Total ram usage:        4 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    2
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_fround
  4780 ;;		_scale
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function ___bmul
  4786  1D7C                     ___bmul:
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4790                           ;___bmul@multiplier stored from wreg
  4791  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  4792  1D7D  1303               	bcf	3,6	;RP1=0, select bank0
  4793  1D7E  00AE               	movwf	___bmul@multiplier
  4794  1D7F                     l2263:
  4795  1D7F  01AD               	clrf	___bmul@product
  4796  1D80                     l2265:
  4797  1D80  1C2E               	btfss	___bmul@multiplier,0
  4798  1D81  2D83               	goto	u2511
  4799  1D82  2D84               	goto	u2510
  4800  1D83                     u2511:
  4801  1D83  2D88               	goto	l2269
  4802  1D84                     u2510:
  4803  1D84                     l2267:
  4804  1D84  082B               	movf	___bmul@multiplicand,w
  4805  1D85  00AC               	movwf	??___bmul
  4806  1D86  082C               	movf	??___bmul,w
  4807  1D87  07AD               	addwf	___bmul@product,f
  4808  1D88                     l2269:
  4809  1D88  1003               	clrc
  4810  1D89  0DAB               	rlf	___bmul@multiplicand,f
  4811  1D8A                     l2271:
  4812  1D8A  1003               	clrc
  4813  1D8B  0CAE               	rrf	___bmul@multiplier,f
  4814  1D8C  082E               	movf	___bmul@multiplier,w
  4815  1D8D  1D03               	btfss	3,2
  4816  1D8E  2D90               	goto	u2521
  4817  1D8F  2D91               	goto	u2520
  4818  1D90                     u2521:
  4819  1D90  2D80               	goto	l2265
  4820  1D91                     u2520:
  4821  1D91                     l2273:
  4822  1D91  082D               	movf	___bmul@product,w
  4823  1D92                     l491:
  4824  1D92  0008               	return
  4825  1D93                     __end_of___bmul:
  4826                           
  4827                           	psect	text13
  4828  0807                     __ptext13:	
  4829 ;; *************** function __tdiv_to_l_ *****************
  4830 ;; Defined at:
  4831 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  f1              3    0[BANK0 ] float 
  4834 ;;  f2              3    3[BANK0 ] float 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  quot            4    6[BANK0 ] unsigned long 
  4837 ;;  exp1            1   11[BANK0 ] unsigned char 
  4838 ;;  cntr            1   10[BANK0 ] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  4    0[BANK0 ] unsigned long 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4848 ;;      Params:         0       6       0       0       0
  4849 ;;      Locals:         0       6       0       0       0
  4850 ;;      Temps:          4       0       0       0       0
  4851 ;;      Totals:         4      12       0       0       0
  4852 ;;Total ram usage:       16 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    2
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_sprintf
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function __tdiv_to_l_
  4864  0807                     __tdiv_to_l_:
  4865  0807                     l3831:	
  4866                           ;incstack = 0
  4867                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4868                           
  4869  0807  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0808  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0809  0820               	movf	__tdiv_to_l_@f1,w
  4872  080A  00F3               	movwf	??__tdiv_to_l_
  4873  080B  0821               	movf	__tdiv_to_l_@f1+1,w
  4874  080C  00F4               	movwf	??__tdiv_to_l_+1
  4875  080D  0822               	movf	__tdiv_to_l_@f1+2,w
  4876  080E  00F5               	movwf	??__tdiv_to_l_+2
  4877  080F  1003               	clrc
  4878  0810  0D74               	rlf	??__tdiv_to_l_+1,w
  4879  0811  0D75               	rlf	??__tdiv_to_l_+2,w
  4880  0812  00F6               	movwf	??__tdiv_to_l_+3
  4881  0813  0876               	movf	??__tdiv_to_l_+3,w
  4882  0814  00AB               	movwf	__tdiv_to_l_@exp1
  4883  0815  082B               	movf	__tdiv_to_l_@exp1,w
  4884  0816  1D03               	btfss	3,2
  4885  0817  2819               	goto	u5541
  4886  0818  281A               	goto	u5540
  4887  0819                     u5541:
  4888  0819  2823               	goto	l3837
  4889  081A                     u5540:
  4890  081A                     l3833:
  4891  081A  3000               	movlw	0
  4892  081B  00A3               	movwf	?__tdiv_to_l_+3
  4893  081C  3000               	movlw	0
  4894  081D  00A2               	movwf	?__tdiv_to_l_+2
  4895  081E  3000               	movlw	0
  4896  081F  00A1               	movwf	?__tdiv_to_l_+1
  4897  0820  3000               	movlw	0
  4898  0821  00A0               	movwf	?__tdiv_to_l_
  4899  0822  28C3               	goto	l750
  4900  0823                     l3837:
  4901  0823  0823               	movf	__tdiv_to_l_@f2,w
  4902  0824  00F3               	movwf	??__tdiv_to_l_
  4903  0825  0824               	movf	__tdiv_to_l_@f2+1,w
  4904  0826  00F4               	movwf	??__tdiv_to_l_+1
  4905  0827  0825               	movf	__tdiv_to_l_@f2+2,w
  4906  0828  00F5               	movwf	??__tdiv_to_l_+2
  4907  0829  1003               	clrc
  4908  082A  0D74               	rlf	??__tdiv_to_l_+1,w
  4909  082B  0D75               	rlf	??__tdiv_to_l_+2,w
  4910  082C  00F6               	movwf	??__tdiv_to_l_+3
  4911  082D  0876               	movf	??__tdiv_to_l_+3,w
  4912  082E  00AA               	movwf	__tdiv_to_l_@cntr
  4913  082F  082A               	movf	__tdiv_to_l_@cntr,w
  4914  0830  1D03               	btfss	3,2
  4915  0831  2833               	goto	u5551
  4916  0832  2834               	goto	u5550
  4917  0833                     u5551:
  4918  0833  2835               	goto	l751
  4919  0834                     u5550:
  4920  0834  281A               	goto	l3833
  4921  0835                     l751:
  4922  0835  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4923  0836                     l3843:
  4924  0836  30FF               	movlw	255
  4925  0837  05A0               	andwf	__tdiv_to_l_@f1,f
  4926  0838  30FF               	movlw	255
  4927  0839  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4928  083A  3000               	movlw	0
  4929  083B  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4930  083C                     l3845:
  4931  083C  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4932  083D  30FF               	movlw	255
  4933  083E  05A3               	andwf	__tdiv_to_l_@f2,f
  4934  083F  30FF               	movlw	255
  4935  0840  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4936  0841  3000               	movlw	0
  4937  0842  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4938  0843  3000               	movlw	0
  4939  0844  00A9               	movwf	__tdiv_to_l_@quot+3
  4940  0845  3000               	movlw	0
  4941  0846  00A8               	movwf	__tdiv_to_l_@quot+2
  4942  0847  3000               	movlw	0
  4943  0848  00A7               	movwf	__tdiv_to_l_@quot+1
  4944  0849  3000               	movlw	0
  4945  084A  00A6               	movwf	__tdiv_to_l_@quot
  4946  084B                     l3847:
  4947  084B  307F               	movlw	127
  4948  084C  02AB               	subwf	__tdiv_to_l_@exp1,f
  4949  084D                     l3849:
  4950  084D  3098               	movlw	152
  4951  084E  072A               	addwf	__tdiv_to_l_@cntr,w
  4952  084F  00F3               	movwf	??__tdiv_to_l_
  4953  0850  0873               	movf	??__tdiv_to_l_,w
  4954  0851  02AB               	subwf	__tdiv_to_l_@exp1,f
  4955  0852  3018               	movlw	24
  4956  0853  00F3               	movwf	??__tdiv_to_l_
  4957  0854  0873               	movf	??__tdiv_to_l_,w
  4958  0855  00AA               	movwf	__tdiv_to_l_@cntr
  4959  0856                     l3851:
  4960  0856  3001               	movlw	1
  4961  0857  00F3               	movwf	??__tdiv_to_l_
  4962  0858                     u5565:
  4963  0858  1003               	clrc
  4964  0859  0DA6               	rlf	__tdiv_to_l_@quot,f
  4965  085A  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4966  085B  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4967  085C  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4968  085D  0BF3               	decfsz	??__tdiv_to_l_,f
  4969  085E  2858               	goto	u5565
  4970  085F                     l3853:
  4971  085F  0825               	movf	__tdiv_to_l_@f2+2,w
  4972  0860  0222               	subwf	__tdiv_to_l_@f1+2,w
  4973  0861  1D03               	skipz
  4974  0862  2869               	goto	u5575
  4975  0863  0824               	movf	__tdiv_to_l_@f2+1,w
  4976  0864  0221               	subwf	__tdiv_to_l_@f1+1,w
  4977  0865  1D03               	skipz
  4978  0866  2869               	goto	u5575
  4979  0867  0823               	movf	__tdiv_to_l_@f2,w
  4980  0868  0220               	subwf	__tdiv_to_l_@f1,w
  4981  0869                     u5575:
  4982  0869  1C03               	skipc
  4983  086A  286C               	goto	u5571
  4984  086B  286D               	goto	u5570
  4985  086C                     u5571:
  4986  086C  2878               	goto	l3859
  4987  086D                     u5570:
  4988  086D                     l3855:
  4989  086D  0823               	movf	__tdiv_to_l_@f2,w
  4990  086E  02A0               	subwf	__tdiv_to_l_@f1,f
  4991  086F  0824               	movf	__tdiv_to_l_@f2+1,w
  4992  0870  1C03               	skipc
  4993  0871  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4994  0872  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4995  0873  0825               	movf	__tdiv_to_l_@f2+2,w
  4996  0874  1C03               	skipc
  4997  0875  0A25               	incf	__tdiv_to_l_@f2+2,w
  4998  0876  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4999  0877                     l3857:
  5000  0877  1426               	bsf	__tdiv_to_l_@quot,0
  5001  0878                     l3859:
  5002  0878  3001               	movlw	1
  5003  0879                     u5585:
  5004  0879  1003               	clrc
  5005  087A  0DA0               	rlf	__tdiv_to_l_@f1,f
  5006  087B  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5007  087C  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5008  087D  3EFF               	addlw	-1
  5009  087E  1D03               	skipz
  5010  087F  2879               	goto	u5585
  5011  0880                     l3861:
  5012  0880  3001               	movlw	1
  5013  0881  02AA               	subwf	__tdiv_to_l_@cntr,f
  5014  0882  1D03               	btfss	3,2
  5015  0883  2885               	goto	u5591
  5016  0884  2886               	goto	u5590
  5017  0885                     u5591:
  5018  0885  2856               	goto	l3851
  5019  0886                     u5590:
  5020  0886                     l754:
  5021  0886  1FAB               	btfss	__tdiv_to_l_@exp1,7
  5022  0887  2889               	goto	u5601
  5023  0888  288A               	goto	u5600
  5024  0889                     u5601:
  5025  0889  28A4               	goto	l3871
  5026  088A                     u5600:
  5027  088A                     l3863:
  5028  088A  082B               	movf	__tdiv_to_l_@exp1,w
  5029  088B  3A80               	xorlw	128
  5030  088C  3E97               	addlw	151
  5031  088D  1803               	skipnc
  5032  088E  2890               	goto	u5611
  5033  088F  2891               	goto	u5610
  5034  0890                     u5611:
  5035  0890  2892               	goto	l3869
  5036  0891                     u5610:
  5037  0891  281A               	goto	l3833
  5038  0892                     l3869:
  5039  0892  3001               	movlw	1
  5040  0893                     u5625:
  5041  0893  1003               	clrc
  5042  0894  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  5043  0895  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  5044  0896  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  5045  0897  0CA6               	rrf	__tdiv_to_l_@quot,f
  5046  0898  3EFF               	addlw	-1
  5047  0899  1D03               	skipz
  5048  089A  2893               	goto	u5625
  5049  089B  3001               	movlw	1
  5050  089C  00F3               	movwf	??__tdiv_to_l_
  5051  089D  0873               	movf	??__tdiv_to_l_,w
  5052  089E  07AB               	addwf	__tdiv_to_l_@exp1,f
  5053  089F  1D03               	btfss	3,2
  5054  08A0  28A2               	goto	u5631
  5055  08A1  28A3               	goto	u5630
  5056  08A2                     u5631:
  5057  08A2  2892               	goto	l3869
  5058  08A3                     u5630:
  5059  08A3  28BB               	goto	l3879
  5060  08A4                     l3871:
  5061  08A4  3018               	movlw	24
  5062  08A5  022B               	subwf	__tdiv_to_l_@exp1,w
  5063  08A6  1C03               	skipc
  5064  08A7  28A9               	goto	u5641
  5065  08A8  28AA               	goto	u5640
  5066  08A9                     u5641:
  5067  08A9  28B6               	goto	l761
  5068  08AA                     u5640:
  5069  08AA  281A               	goto	l3833
  5070  08AB                     l3877:
  5071  08AB  3001               	movlw	1
  5072  08AC  00F3               	movwf	??__tdiv_to_l_
  5073  08AD                     u5655:
  5074  08AD  1003               	clrc
  5075  08AE  0DA6               	rlf	__tdiv_to_l_@quot,f
  5076  08AF  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  5077  08B0  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  5078  08B1  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  5079  08B2  0BF3               	decfsz	??__tdiv_to_l_,f
  5080  08B3  28AD               	goto	u5655
  5081  08B4  3001               	movlw	1
  5082  08B5  02AB               	subwf	__tdiv_to_l_@exp1,f
  5083  08B6                     l761:
  5084  08B6  082B               	movf	__tdiv_to_l_@exp1,w
  5085  08B7  1D03               	btfss	3,2
  5086  08B8  28BA               	goto	u5661
  5087  08B9  28BB               	goto	u5660
  5088  08BA                     u5661:
  5089  08BA  28AB               	goto	l3877
  5090  08BB                     u5660:
  5091  08BB                     l3879:
  5092  08BB  0829               	movf	__tdiv_to_l_@quot+3,w
  5093  08BC  00A3               	movwf	?__tdiv_to_l_+3
  5094  08BD  0828               	movf	__tdiv_to_l_@quot+2,w
  5095  08BE  00A2               	movwf	?__tdiv_to_l_+2
  5096  08BF  0827               	movf	__tdiv_to_l_@quot+1,w
  5097  08C0  00A1               	movwf	?__tdiv_to_l_+1
  5098  08C1  0826               	movf	__tdiv_to_l_@quot,w
  5099  08C2  00A0               	movwf	?__tdiv_to_l_
  5100  08C3                     l750:
  5101  08C3  0008               	return
  5102  08C4                     __end_of__tdiv_to_l_:
  5103                           
  5104                           	psect	text14
  5105  159D                     __ptext14:	
  5106 ;; *************** function __div_to_l_ *****************
  5107 ;; Defined at:
  5108 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  f1              3    0[BANK0 ] unsigned long 
  5111 ;;  f2              3    3[BANK0 ] unsigned long 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  quot            4   14[BANK0 ] unsigned long 
  5114 ;;  exp1            1   19[BANK0 ] unsigned char 
  5115 ;;  cntr            1   18[BANK0 ] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  4    0[BANK0 ] unsigned long 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         0       6       0       0       0
  5126 ;;      Locals:         0       6       0       0       0
  5127 ;;      Temps:          0       8       0       0       0
  5128 ;;      Totals:         0      20       0       0       0
  5129 ;;Total ram usage:       20 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_sprintf
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function __div_to_l_
  5141  159D                     __div_to_l_:
  5142  159D                     l3883:	
  5143                           ;incstack = 0
  5144                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5145                           
  5146  159D  3020               	movlw	low (__div_to_l_@f1| 0)
  5147  159E  0084               	movwf	4
  5148  159F  1383               	bcf	3,7	;select IRP bank0
  5149  15A0  0800               	movf	0,w
  5150  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  5151  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  5152  15A3  00A6               	movwf	??__div_to_l_
  5153  15A4  0A84               	incf	4,f
  5154  15A5  0800               	movf	0,w
  5155  15A6  00A7               	movwf	??__div_to_l_+1
  5156  15A7  0A84               	incf	4,f
  5157  15A8  0800               	movf	0,w
  5158  15A9  00A8               	movwf	??__div_to_l_+2
  5159  15AA  0A84               	incf	4,f
  5160  15AB  0800               	movf	0,w
  5161  15AC  00A9               	movwf	??__div_to_l_+3
  5162  15AD  1003               	clrc
  5163  15AE  0D28               	rlf	??__div_to_l_+2,w
  5164  15AF  0D29               	rlf	??__div_to_l_+3,w
  5165  15B0  00AA               	movwf	??__div_to_l_+4
  5166  15B1  082A               	movf	??__div_to_l_+4,w
  5167  15B2  00B3               	movwf	__div_to_l_@exp1
  5168  15B3  0833               	movf	__div_to_l_@exp1,w
  5169  15B4  1D03               	btfss	3,2
  5170  15B5  2DB7               	goto	u5671
  5171  15B6  2DB8               	goto	u5670
  5172  15B7                     u5671:
  5173  15B7  2DC1               	goto	l3889
  5174  15B8                     u5670:
  5175  15B8                     l3885:
  5176  15B8  3000               	movlw	0
  5177  15B9  00A3               	movwf	?__div_to_l_+3
  5178  15BA  3000               	movlw	0
  5179  15BB  00A2               	movwf	?__div_to_l_+2
  5180  15BC  3000               	movlw	0
  5181  15BD  00A1               	movwf	?__div_to_l_+1
  5182  15BE  3000               	movlw	0
  5183  15BF  00A0               	movwf	?__div_to_l_
  5184  15C0  2EC9               	goto	l671
  5185  15C1                     l3889:
  5186  15C1  3023               	movlw	low (__div_to_l_@f2| 0)
  5187  15C2  0084               	movwf	4
  5188  15C3  0800               	movf	0,w
  5189  15C4  00A6               	movwf	??__div_to_l_
  5190  15C5  0A84               	incf	4,f
  5191  15C6  0800               	movf	0,w
  5192  15C7  00A7               	movwf	??__div_to_l_+1
  5193  15C8  0A84               	incf	4,f
  5194  15C9  0800               	movf	0,w
  5195  15CA  00A8               	movwf	??__div_to_l_+2
  5196  15CB  0A84               	incf	4,f
  5197  15CC  0800               	movf	0,w
  5198  15CD  00A9               	movwf	??__div_to_l_+3
  5199  15CE  1003               	clrc
  5200  15CF  0D28               	rlf	??__div_to_l_+2,w
  5201  15D0  0D29               	rlf	??__div_to_l_+3,w
  5202  15D1  00AA               	movwf	??__div_to_l_+4
  5203  15D2  082A               	movf	??__div_to_l_+4,w
  5204  15D3  00B2               	movwf	__div_to_l_@cntr
  5205  15D4  0832               	movf	__div_to_l_@cntr,w
  5206  15D5  1D03               	btfss	3,2
  5207  15D6  2DD8               	goto	u5681
  5208  15D7  2DD9               	goto	u5680
  5209  15D8                     u5681:
  5210  15D8  2DDA               	goto	l3895
  5211  15D9                     u5680:
  5212  15D9  2DB8               	goto	l3885
  5213  15DA                     l3895:
  5214  15DA  3020               	movlw	low (__div_to_l_@f1| 0)
  5215  15DB  0084               	movwf	4
  5216  15DC  3000               	movlw	0
  5217  15DD  0480               	iorwf	0,f
  5218  15DE  0A84               	incf	4,f
  5219  15DF  3000               	movlw	0
  5220  15E0  0480               	iorwf	0,f
  5221  15E1  0A84               	incf	4,f
  5222  15E2  3080               	movlw	128
  5223  15E3  0480               	iorwf	0,f
  5224  15E4  0A84               	incf	4,f
  5225  15E5  3000               	movlw	0
  5226  15E6  0480               	iorwf	0,f
  5227  15E7  3020               	movlw	low (__div_to_l_@f1| 0)
  5228  15E8  0084               	movwf	4
  5229  15E9  30FF               	movlw	255
  5230  15EA  0580               	andwf	0,f
  5231  15EB  0A84               	incf	4,f
  5232  15EC  30FF               	movlw	255
  5233  15ED  0580               	andwf	0,f
  5234  15EE  0A84               	incf	4,f
  5235  15EF  30FF               	movlw	255
  5236  15F0  0580               	andwf	0,f
  5237  15F1  0A84               	incf	4,f
  5238  15F2  3000               	movlw	0
  5239  15F3  0580               	andwf	0,f
  5240  15F4  3023               	movlw	low (__div_to_l_@f2| 0)
  5241  15F5  0084               	movwf	4
  5242  15F6  3000               	movlw	0
  5243  15F7  0480               	iorwf	0,f
  5244  15F8  0A84               	incf	4,f
  5245  15F9  3000               	movlw	0
  5246  15FA  0480               	iorwf	0,f
  5247  15FB  0A84               	incf	4,f
  5248  15FC  3080               	movlw	128
  5249  15FD  0480               	iorwf	0,f
  5250  15FE  0A84               	incf	4,f
  5251  15FF  3000               	movlw	0
  5252  1600  0480               	iorwf	0,f
  5253  1601  3023               	movlw	low (__div_to_l_@f2| 0)
  5254  1602  0084               	movwf	4
  5255  1603  30FF               	movlw	255
  5256  1604  0580               	andwf	0,f
  5257  1605  0A84               	incf	4,f
  5258  1606  30FF               	movlw	255
  5259  1607  0580               	andwf	0,f
  5260  1608  0A84               	incf	4,f
  5261  1609  30FF               	movlw	255
  5262  160A  0580               	andwf	0,f
  5263  160B  0A84               	incf	4,f
  5264  160C  3000               	movlw	0
  5265  160D  0580               	andwf	0,f
  5266  160E                     l3897:
  5267  160E  3000               	movlw	0
  5268  160F  00B1               	movwf	__div_to_l_@quot+3
  5269  1610  3000               	movlw	0
  5270  1611  00B0               	movwf	__div_to_l_@quot+2
  5271  1612  3000               	movlw	0
  5272  1613  00AF               	movwf	__div_to_l_@quot+1
  5273  1614  3000               	movlw	0
  5274  1615  00AE               	movwf	__div_to_l_@quot
  5275  1616                     l3899:
  5276  1616  307F               	movlw	127
  5277  1617  02B3               	subwf	__div_to_l_@exp1,f
  5278  1618                     l3901:
  5279  1618  30A0               	movlw	160
  5280  1619  0732               	addwf	__div_to_l_@cntr,w
  5281  161A  00A6               	movwf	??__div_to_l_
  5282  161B  0826               	movf	??__div_to_l_,w
  5283  161C  02B3               	subwf	__div_to_l_@exp1,f
  5284  161D                     l3903:
  5285  161D  3020               	movlw	32
  5286  161E  00A6               	movwf	??__div_to_l_
  5287  161F  0826               	movf	??__div_to_l_,w
  5288  1620  00B2               	movwf	__div_to_l_@cntr
  5289  1621                     l3905:
  5290  1621  3001               	movlw	1
  5291  1622  00A6               	movwf	??__div_to_l_
  5292  1623                     u5695:
  5293  1623  1003               	clrc
  5294  1624  0DAE               	rlf	__div_to_l_@quot,f
  5295  1625  0DAF               	rlf	__div_to_l_@quot+1,f
  5296  1626  0DB0               	rlf	__div_to_l_@quot+2,f
  5297  1627  0DB1               	rlf	__div_to_l_@quot+3,f
  5298  1628  0BA6               	decfsz	??__div_to_l_,f
  5299  1629  2E23               	goto	u5695
  5300  162A                     l3907:
  5301  162A  3023               	movlw	low (__div_to_l_@f2| 0)
  5302  162B  0084               	movwf	4
  5303  162C  0800               	movf	0,w
  5304  162D  00A6               	movwf	??__div_to_l_
  5305  162E  0A84               	incf	4,f
  5306  162F  0800               	movf	0,w
  5307  1630  00A7               	movwf	??__div_to_l_+1
  5308  1631  0A84               	incf	4,f
  5309  1632  0800               	movf	0,w
  5310  1633  00A8               	movwf	??__div_to_l_+2
  5311  1634  0A84               	incf	4,f
  5312  1635  0800               	movf	0,w
  5313  1636  00A9               	movwf	??__div_to_l_+3
  5314  1637  3020               	movlw	low (__div_to_l_@f1| 0)
  5315  1638  0084               	movwf	4
  5316  1639  0800               	movf	0,w
  5317  163A  00AA               	movwf	??__div_to_l_+4
  5318  163B  0A84               	incf	4,f
  5319  163C  0800               	movf	0,w
  5320  163D  00AB               	movwf	??__div_to_l_+5
  5321  163E  0A84               	incf	4,f
  5322  163F  0800               	movf	0,w
  5323  1640  00AC               	movwf	??__div_to_l_+6
  5324  1641  0A84               	incf	4,f
  5325  1642  0800               	movf	0,w
  5326  1643  00AD               	movwf	??__div_to_l_+7
  5327  1644  0829               	movf	??__div_to_l_+3,w
  5328  1645  022D               	subwf	??__div_to_l_+7,w
  5329  1646  1D03               	skipz
  5330  1647  2E52               	goto	u5705
  5331  1648  0828               	movf	??__div_to_l_+2,w
  5332  1649  022C               	subwf	??__div_to_l_+6,w
  5333  164A  1D03               	skipz
  5334  164B  2E52               	goto	u5705
  5335  164C  0827               	movf	??__div_to_l_+1,w
  5336  164D  022B               	subwf	??__div_to_l_+5,w
  5337  164E  1D03               	skipz
  5338  164F  2E52               	goto	u5705
  5339  1650  0826               	movf	??__div_to_l_,w
  5340  1651  022A               	subwf	??__div_to_l_+4,w
  5341  1652                     u5705:
  5342  1652  1C03               	skipc
  5343  1653  2E55               	goto	u5701
  5344  1654  2E56               	goto	u5700
  5345  1655                     u5701:
  5346  1655  2E79               	goto	l674
  5347  1656                     u5700:
  5348  1656                     l3909:
  5349  1656  3023               	movlw	low (__div_to_l_@f2| 0)
  5350  1657  0084               	movwf	4
  5351  1658  0800               	movf	0,w
  5352  1659  00A6               	movwf	??__div_to_l_
  5353  165A  0A84               	incf	4,f
  5354  165B  0800               	movf	0,w
  5355  165C  00A7               	movwf	??__div_to_l_+1
  5356  165D  0A84               	incf	4,f
  5357  165E  0800               	movf	0,w
  5358  165F  00A8               	movwf	??__div_to_l_+2
  5359  1660  0A84               	incf	4,f
  5360  1661  0800               	movf	0,w
  5361  1662  00A9               	movwf	??__div_to_l_+3
  5362  1663  3020               	movlw	low (__div_to_l_@f1| 0)
  5363  1664  0084               	movwf	4
  5364  1665  0826               	movf	??__div_to_l_,w
  5365  1666  0280               	subwf	0,f
  5366  1667  0A84               	incf	4,f
  5367  1668  0827               	movf	??__div_to_l_+1,w
  5368  1669  1C03               	skipc
  5369  166A  0F27               	incfsz	??__div_to_l_+1,w
  5370  166B  0280               	subwf	0,f
  5371  166C  0A84               	incf	4,f
  5372  166D  0828               	movf	??__div_to_l_+2,w
  5373  166E  1C03               	skipc
  5374  166F  0F28               	incfsz	??__div_to_l_+2,w
  5375  1670  0280               	subwf	0,f
  5376  1671  0A84               	incf	4,f
  5377  1672  0829               	movf	??__div_to_l_+3,w
  5378  1673  1C03               	skipc
  5379  1674  0A29               	incf	??__div_to_l_+3,w
  5380  1675  0280               	subwf	0,f
  5381  1676  3003               	movlw	3
  5382  1677  0284               	subwf	4,f
  5383  1678                     l3911:
  5384  1678  142E               	bsf	__div_to_l_@quot,0
  5385  1679                     l674:
  5386  1679  3020               	movlw	low (__div_to_l_@f1| 0)
  5387  167A  0084               	movwf	4
  5388  167B  1003               	clrc
  5389  167C  0D80               	rlf	0,f
  5390  167D  0A84               	incf	4,f
  5391  167E  0D80               	rlf	0,f
  5392  167F  0A84               	incf	4,f
  5393  1680  0D80               	rlf	0,f
  5394  1681  0A84               	incf	4,f
  5395  1682  0D80               	rlf	0,f
  5396  1683  0384               	decf	4,f
  5397  1684  0384               	decf	4,f
  5398  1685  0384               	decf	4,f
  5399  1686                     l3913:
  5400  1686  3001               	movlw	1
  5401  1687  02B2               	subwf	__div_to_l_@cntr,f
  5402  1688  1D03               	btfss	3,2
  5403  1689  2E8B               	goto	u5711
  5404  168A  2E8C               	goto	u5710
  5405  168B                     u5711:
  5406  168B  2E21               	goto	l3905
  5407  168C                     u5710:
  5408  168C                     l675:
  5409  168C  1FB3               	btfss	__div_to_l_@exp1,7
  5410  168D  2E8F               	goto	u5721
  5411  168E  2E90               	goto	u5720
  5412  168F                     u5721:
  5413  168F  2EAA               	goto	l3923
  5414  1690                     u5720:
  5415  1690                     l3915:
  5416  1690  0833               	movf	__div_to_l_@exp1,w
  5417  1691  3A80               	xorlw	128
  5418  1692  3E9F               	addlw	159
  5419  1693  1803               	skipnc
  5420  1694  2E96               	goto	u5731
  5421  1695  2E97               	goto	u5730
  5422  1696                     u5731:
  5423  1696  2E98               	goto	l3921
  5424  1697                     u5730:
  5425  1697  2DB8               	goto	l3885
  5426  1698                     l3921:
  5427  1698  3001               	movlw	1
  5428  1699                     u5745:
  5429  1699  1003               	clrc
  5430  169A  0CB1               	rrf	__div_to_l_@quot+3,f
  5431  169B  0CB0               	rrf	__div_to_l_@quot+2,f
  5432  169C  0CAF               	rrf	__div_to_l_@quot+1,f
  5433  169D  0CAE               	rrf	__div_to_l_@quot,f
  5434  169E  3EFF               	addlw	-1
  5435  169F  1D03               	skipz
  5436  16A0  2E99               	goto	u5745
  5437  16A1  3001               	movlw	1
  5438  16A2  00A6               	movwf	??__div_to_l_
  5439  16A3  0826               	movf	??__div_to_l_,w
  5440  16A4  07B3               	addwf	__div_to_l_@exp1,f
  5441  16A5  1D03               	btfss	3,2
  5442  16A6  2EA8               	goto	u5751
  5443  16A7  2EA9               	goto	u5750
  5444  16A8                     u5751:
  5445  16A8  2E98               	goto	l3921
  5446  16A9                     u5750:
  5447  16A9  2EC1               	goto	l3931
  5448  16AA                     l3923:
  5449  16AA  3020               	movlw	32
  5450  16AB  0233               	subwf	__div_to_l_@exp1,w
  5451  16AC  1C03               	skipc
  5452  16AD  2EAF               	goto	u5761
  5453  16AE  2EB0               	goto	u5760
  5454  16AF                     u5761:
  5455  16AF  2EBC               	goto	l682
  5456  16B0                     u5760:
  5457  16B0  2DB8               	goto	l3885
  5458  16B1                     l3929:
  5459  16B1  3001               	movlw	1
  5460  16B2  00A6               	movwf	??__div_to_l_
  5461  16B3                     u5775:
  5462  16B3  1003               	clrc
  5463  16B4  0DAE               	rlf	__div_to_l_@quot,f
  5464  16B5  0DAF               	rlf	__div_to_l_@quot+1,f
  5465  16B6  0DB0               	rlf	__div_to_l_@quot+2,f
  5466  16B7  0DB1               	rlf	__div_to_l_@quot+3,f
  5467  16B8  0BA6               	decfsz	??__div_to_l_,f
  5468  16B9  2EB3               	goto	u5775
  5469  16BA  3001               	movlw	1
  5470  16BB  02B3               	subwf	__div_to_l_@exp1,f
  5471  16BC                     l682:
  5472  16BC  0833               	movf	__div_to_l_@exp1,w
  5473  16BD  1D03               	btfss	3,2
  5474  16BE  2EC0               	goto	u5781
  5475  16BF  2EC1               	goto	u5780
  5476  16C0                     u5781:
  5477  16C0  2EB1               	goto	l3929
  5478  16C1                     u5780:
  5479  16C1                     l3931:
  5480  16C1  0831               	movf	__div_to_l_@quot+3,w
  5481  16C2  00A3               	movwf	?__div_to_l_+3
  5482  16C3  0830               	movf	__div_to_l_@quot+2,w
  5483  16C4  00A2               	movwf	?__div_to_l_+2
  5484  16C5  082F               	movf	__div_to_l_@quot+1,w
  5485  16C6  00A1               	movwf	?__div_to_l_+1
  5486  16C7  082E               	movf	__div_to_l_@quot,w
  5487  16C8  00A0               	movwf	?__div_to_l_
  5488  16C9                     l671:
  5489  16C9  0008               	return
  5490  16CA                     __end_of__div_to_l_:
  5491                           
  5492                           	psect	text15
  5493  1EA8                     __ptext15:	
  5494 ;; *************** function ___wmul *****************
  5495 ;; Defined at:
  5496 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  multiplier      2    3[COMMON] unsigned int 
  5499 ;;  multiplicand    2    5[COMMON] unsigned int 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  product         2    0[BANK0 ] unsigned int 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  2    3[COMMON] unsigned int 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5511 ;;      Params:         4       0       0       0       0
  5512 ;;      Locals:         0       2       0       0       0
  5513 ;;      Temps:          0       0       0       0       0
  5514 ;;      Totals:         4       2       0       0       0
  5515 ;;Total ram usage:        6 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    2
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_sprintf
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function ___wmul
  5527  1EA8                     ___wmul:
  5528  1EA8                     l3935:	
  5529                           ;incstack = 0
  5530                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5531                           
  5532  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
  5533  1EA9  1303               	bcf	3,6	;RP1=0, select bank0
  5534  1EAA  01A0               	clrf	___wmul@product
  5535  1EAB  01A1               	clrf	___wmul@product+1
  5536  1EAC                     l3937:
  5537  1EAC  1C73               	btfss	___wmul@multiplier,0
  5538  1EAD  2EAF               	goto	u5791
  5539  1EAE  2EB0               	goto	u5790
  5540  1EAF                     u5791:
  5541  1EAF  2EB8               	goto	l465
  5542  1EB0                     u5790:
  5543  1EB0                     l3939:
  5544  1EB0  0875               	movf	___wmul@multiplicand,w
  5545  1EB1  1283               	bcf	3,5	;RP0=0, select bank0
  5546  1EB2  1303               	bcf	3,6	;RP1=0, select bank0
  5547  1EB3  07A0               	addwf	___wmul@product,f
  5548  1EB4  1803               	skipnc
  5549  1EB5  0AA1               	incf	___wmul@product+1,f
  5550  1EB6  0876               	movf	___wmul@multiplicand+1,w
  5551  1EB7  07A1               	addwf	___wmul@product+1,f
  5552  1EB8                     l465:
  5553  1EB8  3001               	movlw	1
  5554  1EB9                     u5805:
  5555  1EB9  1003               	clrc
  5556  1EBA  0DF5               	rlf	___wmul@multiplicand,f
  5557  1EBB  0DF6               	rlf	___wmul@multiplicand+1,f
  5558  1EBC  3EFF               	addlw	-1
  5559  1EBD  1D03               	skipz
  5560  1EBE  2EB9               	goto	u5805
  5561  1EBF                     l3941:
  5562  1EBF  3001               	movlw	1
  5563  1EC0                     u5815:
  5564  1EC0  1003               	clrc
  5565  1EC1  0CF4               	rrf	___wmul@multiplier+1,f
  5566  1EC2  0CF3               	rrf	___wmul@multiplier,f
  5567  1EC3  3EFF               	addlw	-1
  5568  1EC4  1D03               	skipz
  5569  1EC5  2EC0               	goto	u5815
  5570  1EC6                     l3943:
  5571  1EC6  0873               	movf	___wmul@multiplier,w
  5572  1EC7  0474               	iorwf	___wmul@multiplier+1,w
  5573  1EC8  1D03               	btfss	3,2
  5574  1EC9  2ECB               	goto	u5821
  5575  1ECA  2ECC               	goto	u5820
  5576  1ECB                     u5821:
  5577  1ECB  2EAC               	goto	l3937
  5578  1ECC                     u5820:
  5579  1ECC                     l3945:
  5580  1ECC  1283               	bcf	3,5	;RP0=0, select bank0
  5581  1ECD  1303               	bcf	3,6	;RP1=0, select bank0
  5582  1ECE  0821               	movf	___wmul@product+1,w
  5583  1ECF  00F4               	movwf	?___wmul+1
  5584  1ED0  0820               	movf	___wmul@product,w
  5585  1ED1  00F3               	movwf	?___wmul
  5586  1ED2                     l467:
  5587  1ED2  0008               	return
  5588  1ED3                     __end_of___wmul:
  5589                           
  5590                           	psect	text16
  5591  1ED3                     __ptext16:	
  5592 ;; *************** function ___lltoft *****************
  5593 ;; Defined at:
  5594 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  c               4    3[BANK0 ] unsigned long 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  exp             1    8[BANK0 ] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  3    3[BANK0 ] float 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, pclath, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5608 ;;      Params:         0       4       0       0       0
  5609 ;;      Locals:         0       1       0       0       0
  5610 ;;      Temps:          0       1       0       0       0
  5611 ;;      Totals:         0       6       0       0       0
  5612 ;;Total ram usage:        6 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    3
  5615 ;; This function calls:
  5616 ;;		___ftpack
  5617 ;; This function is called by:
  5618 ;;		_sprintf
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function ___lltoft
  5624  1ED3                     ___lltoft:
  5625  1ED3                     l4021:	
  5626                           ;incstack = 0
  5627                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5628                           
  5629  1ED3  308E               	movlw	142
  5630  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  5631  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  5632  1ED6  00A7               	movwf	??___lltoft
  5633  1ED7  0827               	movf	??___lltoft,w
  5634  1ED8  00A8               	movwf	___lltoft@exp
  5635  1ED9  2EE7               	goto	l4025
  5636  1EDA                     l4023:
  5637  1EDA  3001               	movlw	1
  5638  1EDB                     u6005:
  5639  1EDB  1003               	clrc
  5640  1EDC  0CA6               	rrf	___lltoft@c+3,f
  5641  1EDD  0CA5               	rrf	___lltoft@c+2,f
  5642  1EDE  0CA4               	rrf	___lltoft@c+1,f
  5643  1EDF  0CA3               	rrf	___lltoft@c,f
  5644  1EE0  3EFF               	addlw	-1
  5645  1EE1  1D03               	skipz
  5646  1EE2  2EDB               	goto	u6005
  5647  1EE3  3001               	movlw	1
  5648  1EE4  00A7               	movwf	??___lltoft
  5649  1EE5  0827               	movf	??___lltoft,w
  5650  1EE6  07A8               	addwf	___lltoft@exp,f
  5651  1EE7                     l4025:
  5652  1EE7  30FF               	movlw	255
  5653  1EE8  0526               	andwf	___lltoft@c+3,w
  5654  1EE9  1D03               	btfss	3,2
  5655  1EEA  2EEC               	goto	u6011
  5656  1EEB  2EED               	goto	u6010
  5657  1EEC                     u6011:
  5658  1EEC  2EDA               	goto	l4023
  5659  1EED                     u6010:
  5660  1EED                     l4027:
  5661  1EED  0823               	movf	___lltoft@c,w
  5662  1EEE  00F3               	movwf	___ftpack@arg
  5663  1EEF  0824               	movf	___lltoft@c+1,w
  5664  1EF0  00F4               	movwf	___ftpack@arg+1
  5665  1EF1  0825               	movf	___lltoft@c+2,w
  5666  1EF2  00F5               	movwf	___ftpack@arg+2
  5667  1EF3  0828               	movf	___lltoft@exp,w
  5668  1EF4  00A7               	movwf	??___lltoft
  5669  1EF5  0827               	movf	??___lltoft,w
  5670  1EF6  00F6               	movwf	___ftpack@exp
  5671  1EF7  01F7               	clrf	___ftpack@sign
  5672  1EF8  160A  118A  22C1  160A  158A  	fcall	___ftpack
  5673  1EFD  0873               	movf	?___ftpack,w
  5674  1EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5675  1EFF  1303               	bcf	3,6	;RP1=0, select bank0
  5676  1F00  00A3               	movwf	?___lltoft
  5677  1F01  0874               	movf	?___ftpack+1,w
  5678  1F02  00A4               	movwf	?___lltoft+1
  5679  1F03  0875               	movf	?___ftpack+2,w
  5680  1F04  00A5               	movwf	?___lltoft+2
  5681  1F05                     l844:
  5682  1F05  0008               	return
  5683  1F06                     __end_of___lltoft:
  5684                           
  5685                           	psect	text17
  5686  10C7                     __ptext17:	
  5687 ;; *************** function ___llmod *****************
  5688 ;; Defined at:
  5689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  divisor         4   13[BANK0 ] unsigned long 
  5692 ;;  dividend        4   17[BANK0 ] unsigned long 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  counter         1    5[COMMON] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4   13[BANK0 ] unsigned long 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       8       0       0       0
  5705 ;;      Locals:         1       0       0       0       0
  5706 ;;      Temps:          1       0       0       0       0
  5707 ;;      Totals:         2       8       0       0       0
  5708 ;;Total ram usage:       10 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    2
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_sprintf
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function ___llmod
  5720  10C7                     ___llmod:
  5721  10C7                     l4001:	
  5722                           ;incstack = 0
  5723                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5724                           
  5725  10C7  1283               	bcf	3,5	;RP0=0, select bank0
  5726  10C8  1303               	bcf	3,6	;RP1=0, select bank0
  5727  10C9  0830               	movf	___llmod@divisor+3,w
  5728  10CA  042F               	iorwf	___llmod@divisor+2,w
  5729  10CB  042E               	iorwf	___llmod@divisor+1,w
  5730  10CC  042D               	iorwf	___llmod@divisor,w
  5731  10CD  1903               	skipnz
  5732  10CE  28D0               	goto	u5941
  5733  10CF  28D1               	goto	u5940
  5734  10D0                     u5941:
  5735  10D0  2914               	goto	l4017
  5736  10D1                     u5940:
  5737  10D1                     l4003:
  5738  10D1  01F5               	clrf	___llmod@counter
  5739  10D2  0AF5               	incf	___llmod@counter,f
  5740  10D3  28E1               	goto	l4007
  5741  10D4                     l4005:
  5742  10D4  3001               	movlw	1
  5743  10D5  00F4               	movwf	??___llmod
  5744  10D6                     u5955:
  5745  10D6  1003               	clrc
  5746  10D7  0DAD               	rlf	___llmod@divisor,f
  5747  10D8  0DAE               	rlf	___llmod@divisor+1,f
  5748  10D9  0DAF               	rlf	___llmod@divisor+2,f
  5749  10DA  0DB0               	rlf	___llmod@divisor+3,f
  5750  10DB  0BF4               	decfsz	??___llmod,f
  5751  10DC  28D6               	goto	u5955
  5752  10DD  3001               	movlw	1
  5753  10DE  00F4               	movwf	??___llmod
  5754  10DF  0874               	movf	??___llmod,w
  5755  10E0  07F5               	addwf	___llmod@counter,f
  5756  10E1                     l4007:
  5757  10E1  1FB0               	btfss	___llmod@divisor+3,7
  5758  10E2  28E4               	goto	u5961
  5759  10E3  28E5               	goto	u5960
  5760  10E4                     u5961:
  5761  10E4  28D4               	goto	l4005
  5762  10E5                     u5960:
  5763  10E5                     l4009:
  5764  10E5  0830               	movf	___llmod@divisor+3,w
  5765  10E6  0234               	subwf	___llmod@dividend+3,w
  5766  10E7  1D03               	skipz
  5767  10E8  28F3               	goto	u5975
  5768  10E9  082F               	movf	___llmod@divisor+2,w
  5769  10EA  0233               	subwf	___llmod@dividend+2,w
  5770  10EB  1D03               	skipz
  5771  10EC  28F3               	goto	u5975
  5772  10ED  082E               	movf	___llmod@divisor+1,w
  5773  10EE  0232               	subwf	___llmod@dividend+1,w
  5774  10EF  1D03               	skipz
  5775  10F0  28F3               	goto	u5975
  5776  10F1  082D               	movf	___llmod@divisor,w
  5777  10F2  0231               	subwf	___llmod@dividend,w
  5778  10F3                     u5975:
  5779  10F3  1C03               	skipc
  5780  10F4  28F6               	goto	u5971
  5781  10F5  28F7               	goto	u5970
  5782  10F6                     u5971:
  5783  10F6  2905               	goto	l4013
  5784  10F7                     u5970:
  5785  10F7                     l4011:
  5786  10F7  082D               	movf	___llmod@divisor,w
  5787  10F8  02B1               	subwf	___llmod@dividend,f
  5788  10F9  082E               	movf	___llmod@divisor+1,w
  5789  10FA  1C03               	skipc
  5790  10FB  0F2E               	incfsz	___llmod@divisor+1,w
  5791  10FC  02B2               	subwf	___llmod@dividend+1,f
  5792  10FD  082F               	movf	___llmod@divisor+2,w
  5793  10FE  1C03               	skipc
  5794  10FF  0F2F               	incfsz	___llmod@divisor+2,w
  5795  1100  02B3               	subwf	___llmod@dividend+2,f
  5796  1101  0830               	movf	___llmod@divisor+3,w
  5797  1102  1C03               	skipc
  5798  1103  0F30               	incfsz	___llmod@divisor+3,w
  5799  1104  02B4               	subwf	___llmod@dividend+3,f
  5800  1105                     l4013:
  5801  1105  3001               	movlw	1
  5802  1106                     u5985:
  5803  1106  1003               	clrc
  5804  1107  0CB0               	rrf	___llmod@divisor+3,f
  5805  1108  0CAF               	rrf	___llmod@divisor+2,f
  5806  1109  0CAE               	rrf	___llmod@divisor+1,f
  5807  110A  0CAD               	rrf	___llmod@divisor,f
  5808  110B  3EFF               	addlw	-1
  5809  110C  1D03               	skipz
  5810  110D  2906               	goto	u5985
  5811  110E                     l4015:
  5812  110E  3001               	movlw	1
  5813  110F  02F5               	subwf	___llmod@counter,f
  5814  1110  1D03               	btfss	3,2
  5815  1111  2913               	goto	u5991
  5816  1112  2914               	goto	u5990
  5817  1113                     u5991:
  5818  1113  28E5               	goto	l4009
  5819  1114                     u5990:
  5820  1114                     l4017:
  5821  1114  0834               	movf	___llmod@dividend+3,w
  5822  1115  00B0               	movwf	?___llmod+3
  5823  1116  0833               	movf	___llmod@dividend+2,w
  5824  1117  00AF               	movwf	?___llmod+2
  5825  1118  0832               	movf	___llmod@dividend+1,w
  5826  1119  00AE               	movwf	?___llmod+1
  5827  111A  0831               	movf	___llmod@dividend,w
  5828  111B  00AD               	movwf	?___llmod
  5829  111C                     l836:
  5830  111C  0008               	return
  5831  111D                     __end_of___llmod:
  5832                           
  5833                           	psect	text18
  5834  1178                     __ptext18:	
  5835 ;; *************** function ___lldiv *****************
  5836 ;; Defined at:
  5837 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  divisor         4    0[BANK0 ] unsigned long 
  5840 ;;  dividend        4    4[BANK0 ] unsigned long 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  quotient        4    8[BANK0 ] unsigned long 
  5843 ;;  counter         1   12[BANK0 ] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  4    0[BANK0 ] unsigned long 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         0       8       0       0       0
  5854 ;;      Locals:         0       5       0       0       0
  5855 ;;      Temps:          1       0       0       0       0
  5856 ;;      Totals:         1      13       0       0       0
  5857 ;;Total ram usage:       14 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    2
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_sprintf
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function ___lldiv
  5869  1178                     ___lldiv:
  5870  1178                     l3949:	
  5871                           ;incstack = 0
  5872                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5873                           
  5874  1178  3000               	movlw	0
  5875  1179  1283               	bcf	3,5	;RP0=0, select bank0
  5876  117A  1303               	bcf	3,6	;RP1=0, select bank0
  5877  117B  00AB               	movwf	___lldiv@quotient+3
  5878  117C  3000               	movlw	0
  5879  117D  00AA               	movwf	___lldiv@quotient+2
  5880  117E  3000               	movlw	0
  5881  117F  00A9               	movwf	___lldiv@quotient+1
  5882  1180  3000               	movlw	0
  5883  1181  00A8               	movwf	___lldiv@quotient
  5884  1182  0823               	movf	___lldiv@divisor+3,w
  5885  1183  0422               	iorwf	___lldiv@divisor+2,w
  5886  1184  0421               	iorwf	___lldiv@divisor+1,w
  5887  1185  0420               	iorwf	___lldiv@divisor,w
  5888  1186  1903               	skipnz
  5889  1187  2989               	goto	u5831
  5890  1188  298A               	goto	u5830
  5891  1189                     u5831:
  5892  1189  29D7               	goto	l3969
  5893  118A                     u5830:
  5894  118A                     l3951:
  5895  118A  01AC               	clrf	___lldiv@counter
  5896  118B  0AAC               	incf	___lldiv@counter,f
  5897  118C  299A               	goto	l3955
  5898  118D                     l3953:
  5899  118D  3001               	movlw	1
  5900  118E  00F3               	movwf	??___lldiv
  5901  118F                     u5845:
  5902  118F  1003               	clrc
  5903  1190  0DA0               	rlf	___lldiv@divisor,f
  5904  1191  0DA1               	rlf	___lldiv@divisor+1,f
  5905  1192  0DA2               	rlf	___lldiv@divisor+2,f
  5906  1193  0DA3               	rlf	___lldiv@divisor+3,f
  5907  1194  0BF3               	decfsz	??___lldiv,f
  5908  1195  298F               	goto	u5845
  5909  1196  3001               	movlw	1
  5910  1197  00F3               	movwf	??___lldiv
  5911  1198  0873               	movf	??___lldiv,w
  5912  1199  07AC               	addwf	___lldiv@counter,f
  5913  119A                     l3955:
  5914  119A  1FA3               	btfss	___lldiv@divisor+3,7
  5915  119B  299D               	goto	u5851
  5916  119C  299E               	goto	u5850
  5917  119D                     u5851:
  5918  119D  298D               	goto	l3953
  5919  119E                     u5850:
  5920  119E                     l3957:
  5921  119E  3001               	movlw	1
  5922  119F  00F3               	movwf	??___lldiv
  5923  11A0                     u5865:
  5924  11A0  1003               	clrc
  5925  11A1  0DA8               	rlf	___lldiv@quotient,f
  5926  11A2  0DA9               	rlf	___lldiv@quotient+1,f
  5927  11A3  0DAA               	rlf	___lldiv@quotient+2,f
  5928  11A4  0DAB               	rlf	___lldiv@quotient+3,f
  5929  11A5  0BF3               	decfsz	??___lldiv,f
  5930  11A6  29A0               	goto	u5865
  5931  11A7                     l3959:
  5932  11A7  0823               	movf	___lldiv@divisor+3,w
  5933  11A8  0227               	subwf	___lldiv@dividend+3,w
  5934  11A9  1D03               	skipz
  5935  11AA  29B5               	goto	u5875
  5936  11AB  0822               	movf	___lldiv@divisor+2,w
  5937  11AC  0226               	subwf	___lldiv@dividend+2,w
  5938  11AD  1D03               	skipz
  5939  11AE  29B5               	goto	u5875
  5940  11AF  0821               	movf	___lldiv@divisor+1,w
  5941  11B0  0225               	subwf	___lldiv@dividend+1,w
  5942  11B1  1D03               	skipz
  5943  11B2  29B5               	goto	u5875
  5944  11B3  0820               	movf	___lldiv@divisor,w
  5945  11B4  0224               	subwf	___lldiv@dividend,w
  5946  11B5                     u5875:
  5947  11B5  1C03               	skipc
  5948  11B6  29B8               	goto	u5871
  5949  11B7  29B9               	goto	u5870
  5950  11B8                     u5871:
  5951  11B8  29C8               	goto	l3965
  5952  11B9                     u5870:
  5953  11B9                     l3961:
  5954  11B9  0820               	movf	___lldiv@divisor,w
  5955  11BA  02A4               	subwf	___lldiv@dividend,f
  5956  11BB  0821               	movf	___lldiv@divisor+1,w
  5957  11BC  1C03               	skipc
  5958  11BD  0F21               	incfsz	___lldiv@divisor+1,w
  5959  11BE  02A5               	subwf	___lldiv@dividend+1,f
  5960  11BF  0822               	movf	___lldiv@divisor+2,w
  5961  11C0  1C03               	skipc
  5962  11C1  0F22               	incfsz	___lldiv@divisor+2,w
  5963  11C2  02A6               	subwf	___lldiv@dividend+2,f
  5964  11C3  0823               	movf	___lldiv@divisor+3,w
  5965  11C4  1C03               	skipc
  5966  11C5  0F23               	incfsz	___lldiv@divisor+3,w
  5967  11C6  02A7               	subwf	___lldiv@dividend+3,f
  5968  11C7                     l3963:
  5969  11C7  1428               	bsf	___lldiv@quotient,0
  5970  11C8                     l3965:
  5971  11C8  3001               	movlw	1
  5972  11C9                     u5885:
  5973  11C9  1003               	clrc
  5974  11CA  0CA3               	rrf	___lldiv@divisor+3,f
  5975  11CB  0CA2               	rrf	___lldiv@divisor+2,f
  5976  11CC  0CA1               	rrf	___lldiv@divisor+1,f
  5977  11CD  0CA0               	rrf	___lldiv@divisor,f
  5978  11CE  3EFF               	addlw	-1
  5979  11CF  1D03               	skipz
  5980  11D0  29C9               	goto	u5885
  5981  11D1                     l3967:
  5982  11D1  3001               	movlw	1
  5983  11D2  02AC               	subwf	___lldiv@counter,f
  5984  11D3  1D03               	btfss	3,2
  5985  11D4  29D6               	goto	u5891
  5986  11D5  29D7               	goto	u5890
  5987  11D6                     u5891:
  5988  11D6  299E               	goto	l3957
  5989  11D7                     u5890:
  5990  11D7                     l3969:
  5991  11D7  082B               	movf	___lldiv@quotient+3,w
  5992  11D8  00A3               	movwf	?___lldiv+3
  5993  11D9  082A               	movf	___lldiv@quotient+2,w
  5994  11DA  00A2               	movwf	?___lldiv+2
  5995  11DB  0829               	movf	___lldiv@quotient+1,w
  5996  11DC  00A1               	movwf	?___lldiv+1
  5997  11DD  0828               	movf	___lldiv@quotient,w
  5998  11DE  00A0               	movwf	?___lldiv
  5999  11DF                     l501:
  6000  11DF  0008               	return
  6001  11E0                     __end_of___lldiv:
  6002                           
  6003                           	psect	text19
  6004  1E0B                     __ptext19:	
  6005 ;; *************** function ___ftsub *****************
  6006 ;; Defined at:
  6007 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  f2              3   60[BANK0 ] float 
  6010 ;;  f1              3   63[BANK0 ] float 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  3   60[BANK0 ] float 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0, pclath, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6022 ;;      Params:         0       6       0       0       0
  6023 ;;      Locals:         0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0
  6025 ;;      Totals:         0       6       0       0       0
  6026 ;;Total ram usage:        6 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    4
  6029 ;; This function calls:
  6030 ;;		___ftadd
  6031 ;; This function is called by:
  6032 ;;		_sprintf
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           
  6037                           ;psect for function ___ftsub
  6038  1E0B                     ___ftsub:
  6039  1E0B                     l3993:	
  6040                           ;incstack = 0
  6041                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6042                           
  6043  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
  6044  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
  6045  1E0D  085E               	movf	___ftsub@f2+2,w
  6046  1E0E  045D               	iorwf	___ftsub@f2+1,w
  6047  1E0F  045C               	iorwf	___ftsub@f2,w
  6048  1E10  1903               	skipnz
  6049  1E11  2E13               	goto	u5931
  6050  1E12  2E14               	goto	u5930
  6051  1E13                     u5931:
  6052  1E13  2E16               	goto	l3997
  6053  1E14                     u5930:
  6054  1E14                     l3995:
  6055  1E14  3080               	movlw	128
  6056  1E15  06DE               	xorwf	___ftsub@f2+2,f
  6057  1E16                     l3997:
  6058  1E16  085F               	movf	___ftsub@f1,w
  6059  1E17  00CF               	movwf	___ftadd@f1
  6060  1E18  0860               	movf	___ftsub@f1+1,w
  6061  1E19  00D0               	movwf	___ftadd@f1+1
  6062  1E1A  0861               	movf	___ftsub@f1+2,w
  6063  1E1B  00D1               	movwf	___ftadd@f1+2
  6064  1E1C  085C               	movf	___ftsub@f2,w
  6065  1E1D  00D2               	movwf	___ftadd@f2
  6066  1E1E  085D               	movf	___ftsub@f2+1,w
  6067  1E1F  00D3               	movwf	___ftadd@f2+1
  6068  1E20  085E               	movf	___ftsub@f2+2,w
  6069  1E21  00D4               	movwf	___ftadd@f2+2
  6070  1E22  160A  118A  26CA  160A  158A  	fcall	___ftadd
  6071  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  6072  1E28  1303               	bcf	3,6	;RP1=0, select bank0
  6073  1E29  084F               	movf	?___ftadd,w
  6074  1E2A  00DC               	movwf	?___ftsub
  6075  1E2B  0850               	movf	?___ftadd+1,w
  6076  1E2C  00DD               	movwf	?___ftsub+1
  6077  1E2D  0851               	movf	?___ftadd+2,w
  6078  1E2E  00DE               	movwf	?___ftsub+2
  6079  1E2F                     l791:
  6080  1E2F  0008               	return
  6081  1E30                     __end_of___ftsub:
  6082                           
  6083                           	psect	text20
  6084  16CA                     __ptext20:	
  6085 ;; *************** function ___ftadd *****************
  6086 ;; Defined at:
  6087 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  f1              3   47[BANK0 ] float 
  6090 ;;  f2              3   50[BANK0 ] float 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  exp1            1   59[BANK0 ] unsigned char 
  6093 ;;  exp2            1   58[BANK0 ] unsigned char 
  6094 ;;  sign            1   57[BANK0 ] unsigned char 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  3   47[BANK0 ] float 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       6       0       0       0
  6105 ;;      Locals:         0       3       0       0       0
  6106 ;;      Temps:          0       4       0       0       0
  6107 ;;      Totals:         0      13       0       0       0
  6108 ;;Total ram usage:       13 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    3
  6111 ;; This function calls:
  6112 ;;		___ftpack
  6113 ;; This function is called by:
  6114 ;;		_sprintf
  6115 ;;		___ftsub
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           
  6120                           ;psect for function ___ftadd
  6121  16CA                     ___ftadd:
  6122  16CA                     l3573:	
  6123                           ;incstack = 0
  6124                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6125                           
  6126  16CA  1283               	bcf	3,5	;RP0=0, select bank0
  6127  16CB  1303               	bcf	3,6	;RP1=0, select bank0
  6128  16CC  084F               	movf	___ftadd@f1,w
  6129  16CD  00D5               	movwf	??___ftadd
  6130  16CE  0850               	movf	___ftadd@f1+1,w
  6131  16CF  00D6               	movwf	??___ftadd+1
  6132  16D0  0851               	movf	___ftadd@f1+2,w
  6133  16D1  00D7               	movwf	??___ftadd+2
  6134  16D2  1003               	clrc
  6135  16D3  0D56               	rlf	??___ftadd+1,w
  6136  16D4  0D57               	rlf	??___ftadd+2,w
  6137  16D5  00D8               	movwf	??___ftadd+3
  6138  16D6  0858               	movf	??___ftadd+3,w
  6139  16D7  00DB               	movwf	___ftadd@exp1
  6140  16D8  0852               	movf	___ftadd@f2,w
  6141  16D9  00D5               	movwf	??___ftadd
  6142  16DA  0853               	movf	___ftadd@f2+1,w
  6143  16DB  00D6               	movwf	??___ftadd+1
  6144  16DC  0854               	movf	___ftadd@f2+2,w
  6145  16DD  00D7               	movwf	??___ftadd+2
  6146  16DE  1003               	clrc
  6147  16DF  0D56               	rlf	??___ftadd+1,w
  6148  16E0  0D57               	rlf	??___ftadd+2,w
  6149  16E1  00D8               	movwf	??___ftadd+3
  6150  16E2  0858               	movf	??___ftadd+3,w
  6151  16E3  00DA               	movwf	___ftadd@exp2
  6152  16E4  085B               	movf	___ftadd@exp1,w
  6153  16E5  1903               	btfsc	3,2
  6154  16E6  2EE8               	goto	u4961
  6155  16E7  2EE9               	goto	u4960
  6156  16E8                     u4961:
  6157  16E8  2EF9               	goto	l3579
  6158  16E9                     u4960:
  6159  16E9                     l3575:
  6160  16E9  085A               	movf	___ftadd@exp2,w
  6161  16EA  025B               	subwf	___ftadd@exp1,w
  6162  16EB  1803               	skipnc
  6163  16EC  2EEE               	goto	u4971
  6164  16ED  2EEF               	goto	u4970
  6165  16EE                     u4971:
  6166  16EE  2F00               	goto	l3583
  6167  16EF                     u4970:
  6168  16EF                     l3577:
  6169  16EF  085A               	movf	___ftadd@exp2,w
  6170  16F0  00D5               	movwf	??___ftadd
  6171  16F1  085B               	movf	___ftadd@exp1,w
  6172  16F2  02D5               	subwf	??___ftadd,f
  6173  16F3  3019               	movlw	25
  6174  16F4  0255               	subwf	??___ftadd,w
  6175  16F5  1C03               	skipc
  6176  16F6  2EF8               	goto	u4981
  6177  16F7  2EF9               	goto	u4980
  6178  16F8                     u4981:
  6179  16F8  2F00               	goto	l3583
  6180  16F9                     u4980:
  6181  16F9                     l3579:
  6182  16F9  0852               	movf	___ftadd@f2,w
  6183  16FA  00CF               	movwf	?___ftadd
  6184  16FB  0853               	movf	___ftadd@f2+1,w
  6185  16FC  00D0               	movwf	?___ftadd+1
  6186  16FD  0854               	movf	___ftadd@f2+2,w
  6187  16FE  00D1               	movwf	?___ftadd+2
  6188  16FF  2FFF               	goto	l711
  6189  1700                     l3583:
  6190  1700  085A               	movf	___ftadd@exp2,w
  6191  1701  1903               	btfsc	3,2
  6192  1702  2F04               	goto	u4991
  6193  1703  2F05               	goto	u4990
  6194  1704                     u4991:
  6195  1704  2F15               	goto	l714
  6196  1705                     u4990:
  6197  1705                     l3585:
  6198  1705  085B               	movf	___ftadd@exp1,w
  6199  1706  025A               	subwf	___ftadd@exp2,w
  6200  1707  1803               	skipnc
  6201  1708  2F0A               	goto	u5001
  6202  1709  2F0B               	goto	u5000
  6203  170A                     u5001:
  6204  170A  2F16               	goto	l3589
  6205  170B                     u5000:
  6206  170B                     l3587:
  6207  170B  085B               	movf	___ftadd@exp1,w
  6208  170C  00D5               	movwf	??___ftadd
  6209  170D  085A               	movf	___ftadd@exp2,w
  6210  170E  02D5               	subwf	??___ftadd,f
  6211  170F  3019               	movlw	25
  6212  1710  0255               	subwf	??___ftadd,w
  6213  1711  1C03               	skipc
  6214  1712  2F14               	goto	u5011
  6215  1713  2F15               	goto	u5010
  6216  1714                     u5011:
  6217  1714  2F16               	goto	l3589
  6218  1715                     u5010:
  6219  1715                     l714:
  6220  1715  2FFF               	goto	l711
  6221  1716                     l3589:
  6222  1716  3006               	movlw	6
  6223  1717  00D5               	movwf	??___ftadd
  6224  1718  0855               	movf	??___ftadd,w
  6225  1719  00D9               	movwf	___ftadd@sign
  6226  171A                     l3591:
  6227  171A  1FD1               	btfss	___ftadd@f1+2,7
  6228  171B  2F1D               	goto	u5021
  6229  171C  2F1E               	goto	u5020
  6230  171D                     u5021:
  6231  171D  2F1F               	goto	l715
  6232  171E                     u5020:
  6233  171E                     l3593:
  6234  171E  17D9               	bsf	___ftadd@sign,7
  6235  171F                     l715:
  6236  171F  1FD4               	btfss	___ftadd@f2+2,7
  6237  1720  2F22               	goto	u5031
  6238  1721  2F23               	goto	u5030
  6239  1722                     u5031:
  6240  1722  2F24               	goto	l716
  6241  1723                     u5030:
  6242  1723                     l3595:
  6243  1723  1759               	bsf	___ftadd@sign,6
  6244  1724                     l716:
  6245  1724  17D0               	bsf	___ftadd@f1+1,7
  6246  1725                     l3597:
  6247  1725  30FF               	movlw	255
  6248  1726  05CF               	andwf	___ftadd@f1,f
  6249  1727  30FF               	movlw	255
  6250  1728  05D0               	andwf	___ftadd@f1+1,f
  6251  1729  3000               	movlw	0
  6252  172A  05D1               	andwf	___ftadd@f1+2,f
  6253  172B                     l3599:
  6254  172B  17D3               	bsf	___ftadd@f2+1,7
  6255  172C  30FF               	movlw	255
  6256  172D  05D2               	andwf	___ftadd@f2,f
  6257  172E  30FF               	movlw	255
  6258  172F  05D3               	andwf	___ftadd@f2+1,f
  6259  1730  3000               	movlw	0
  6260  1731  05D4               	andwf	___ftadd@f2+2,f
  6261  1732  085A               	movf	___ftadd@exp2,w
  6262  1733  025B               	subwf	___ftadd@exp1,w
  6263  1734  1803               	skipnc
  6264  1735  2F37               	goto	u5041
  6265  1736  2F38               	goto	u5040
  6266  1737                     u5041:
  6267  1737  2F64               	goto	l3611
  6268  1738                     u5040:
  6269  1738                     l3601:
  6270  1738  3001               	movlw	1
  6271  1739                     u5055:
  6272  1739  1003               	clrc
  6273  173A  0DD2               	rlf	___ftadd@f2,f
  6274  173B  0DD3               	rlf	___ftadd@f2+1,f
  6275  173C  0DD4               	rlf	___ftadd@f2+2,f
  6276  173D  3EFF               	addlw	-1
  6277  173E  1D03               	skipz
  6278  173F  2F39               	goto	u5055
  6279  1740  3001               	movlw	1
  6280  1741  02DA               	subwf	___ftadd@exp2,f
  6281  1742                     l3603:
  6282  1742  085A               	movf	___ftadd@exp2,w
  6283  1743  065B               	xorwf	___ftadd@exp1,w
  6284  1744  1903               	skipnz
  6285  1745  2F47               	goto	u5061
  6286  1746  2F48               	goto	u5060
  6287  1747                     u5061:
  6288  1747  2F5D               	goto	l3609
  6289  1748                     u5060:
  6290  1748                     l3605:
  6291  1748  3001               	movlw	1
  6292  1749  02D9               	subwf	___ftadd@sign,f
  6293  174A  0859               	movf	___ftadd@sign,w
  6294  174B  3907               	andlw	7
  6295  174C  1D03               	btfss	3,2
  6296  174D  2F4F               	goto	u5071
  6297  174E  2F50               	goto	u5070
  6298  174F                     u5071:
  6299  174F  2F38               	goto	l3601
  6300  1750                     u5070:
  6301  1750  2F5D               	goto	l3609
  6302  1751                     l3607:
  6303  1751  3001               	movlw	1
  6304  1752                     u5085:
  6305  1752  1003               	clrc
  6306  1753  0CD1               	rrf	___ftadd@f1+2,f
  6307  1754  0CD0               	rrf	___ftadd@f1+1,f
  6308  1755  0CCF               	rrf	___ftadd@f1,f
  6309  1756  3EFF               	addlw	-1
  6310  1757  1D03               	skipz
  6311  1758  2F52               	goto	u5085
  6312  1759  3001               	movlw	1
  6313  175A  00D5               	movwf	??___ftadd
  6314  175B  0855               	movf	??___ftadd,w
  6315  175C  07DB               	addwf	___ftadd@exp1,f
  6316  175D                     l3609:
  6317  175D  085B               	movf	___ftadd@exp1,w
  6318  175E  065A               	xorwf	___ftadd@exp2,w
  6319  175F  1D03               	skipz
  6320  1760  2F62               	goto	u5091
  6321  1761  2F63               	goto	u5090
  6322  1762                     u5091:
  6323  1762  2F51               	goto	l3607
  6324  1763                     u5090:
  6325  1763  2F95               	goto	l725
  6326  1764                     l3611:
  6327  1764  085B               	movf	___ftadd@exp1,w
  6328  1765  025A               	subwf	___ftadd@exp2,w
  6329  1766  1803               	skipnc
  6330  1767  2F69               	goto	u5101
  6331  1768  2F6A               	goto	u5100
  6332  1769                     u5101:
  6333  1769  2F95               	goto	l725
  6334  176A                     u5100:
  6335  176A                     l3613:
  6336  176A  3001               	movlw	1
  6337  176B                     u5115:
  6338  176B  1003               	clrc
  6339  176C  0DCF               	rlf	___ftadd@f1,f
  6340  176D  0DD0               	rlf	___ftadd@f1+1,f
  6341  176E  0DD1               	rlf	___ftadd@f1+2,f
  6342  176F  3EFF               	addlw	-1
  6343  1770  1D03               	skipz
  6344  1771  2F6B               	goto	u5115
  6345  1772  3001               	movlw	1
  6346  1773  02DB               	subwf	___ftadd@exp1,f
  6347  1774                     l3615:
  6348  1774  085A               	movf	___ftadd@exp2,w
  6349  1775  065B               	xorwf	___ftadd@exp1,w
  6350  1776  1903               	skipnz
  6351  1777  2F79               	goto	u5121
  6352  1778  2F7A               	goto	u5120
  6353  1779                     u5121:
  6354  1779  2F8F               	goto	l3621
  6355  177A                     u5120:
  6356  177A                     l3617:
  6357  177A  3001               	movlw	1
  6358  177B  02D9               	subwf	___ftadd@sign,f
  6359  177C  0859               	movf	___ftadd@sign,w
  6360  177D  3907               	andlw	7
  6361  177E  1D03               	btfss	3,2
  6362  177F  2F81               	goto	u5131
  6363  1780  2F82               	goto	u5130
  6364  1781                     u5131:
  6365  1781  2F6A               	goto	l3613
  6366  1782                     u5130:
  6367  1782  2F8F               	goto	l3621
  6368  1783                     l3619:
  6369  1783  3001               	movlw	1
  6370  1784                     u5145:
  6371  1784  1003               	clrc
  6372  1785  0CD4               	rrf	___ftadd@f2+2,f
  6373  1786  0CD3               	rrf	___ftadd@f2+1,f
  6374  1787  0CD2               	rrf	___ftadd@f2,f
  6375  1788  3EFF               	addlw	-1
  6376  1789  1D03               	skipz
  6377  178A  2F84               	goto	u5145
  6378  178B  3001               	movlw	1
  6379  178C  00D5               	movwf	??___ftadd
  6380  178D  0855               	movf	??___ftadd,w
  6381  178E  07DA               	addwf	___ftadd@exp2,f
  6382  178F                     l3621:
  6383  178F  085B               	movf	___ftadd@exp1,w
  6384  1790  065A               	xorwf	___ftadd@exp2,w
  6385  1791  1D03               	skipz
  6386  1792  2F94               	goto	u5151
  6387  1793  2F95               	goto	u5150
  6388  1794                     u5151:
  6389  1794  2F83               	goto	l3619
  6390  1795                     u5150:
  6391  1795                     l725:
  6392  1795  1FD9               	btfss	___ftadd@sign,7
  6393  1796  2F98               	goto	u5161
  6394  1797  2F99               	goto	u5160
  6395  1798                     u5161:
  6396  1798  2FA9               	goto	l3625
  6397  1799                     u5160:
  6398  1799                     l3623:
  6399  1799  30FF               	movlw	255
  6400  179A  06CF               	xorwf	___ftadd@f1,f
  6401  179B  30FF               	movlw	255
  6402  179C  06D0               	xorwf	___ftadd@f1+1,f
  6403  179D  30FF               	movlw	255
  6404  179E  06D1               	xorwf	___ftadd@f1+2,f
  6405  179F  3001               	movlw	1
  6406  17A0  07CF               	addwf	___ftadd@f1,f
  6407  17A1  3000               	movlw	0
  6408  17A2  1803               	skipnc
  6409  17A3  3001               	movlw	1
  6410  17A4  07D0               	addwf	___ftadd@f1+1,f
  6411  17A5  3000               	movlw	0
  6412  17A6  1803               	skipnc
  6413  17A7  3001               	movlw	1
  6414  17A8  07D1               	addwf	___ftadd@f1+2,f
  6415  17A9                     l3625:
  6416  17A9  1F59               	btfss	___ftadd@sign,6
  6417  17AA  2FAC               	goto	u5171
  6418  17AB  2FAD               	goto	u5170
  6419  17AC                     u5171:
  6420  17AC  2FBD               	goto	l3629
  6421  17AD                     u5170:
  6422  17AD                     l3627:
  6423  17AD  30FF               	movlw	255
  6424  17AE  06D2               	xorwf	___ftadd@f2,f
  6425  17AF  30FF               	movlw	255
  6426  17B0  06D3               	xorwf	___ftadd@f2+1,f
  6427  17B1  30FF               	movlw	255
  6428  17B2  06D4               	xorwf	___ftadd@f2+2,f
  6429  17B3  3001               	movlw	1
  6430  17B4  07D2               	addwf	___ftadd@f2,f
  6431  17B5  3000               	movlw	0
  6432  17B6  1803               	skipnc
  6433  17B7  3001               	movlw	1
  6434  17B8  07D3               	addwf	___ftadd@f2+1,f
  6435  17B9  3000               	movlw	0
  6436  17BA  1803               	skipnc
  6437  17BB  3001               	movlw	1
  6438  17BC  07D4               	addwf	___ftadd@f2+2,f
  6439  17BD                     l3629:
  6440  17BD  01D9               	clrf	___ftadd@sign
  6441  17BE                     l3631:
  6442  17BE  084F               	movf	___ftadd@f1,w
  6443  17BF  07D2               	addwf	___ftadd@f2,f
  6444  17C0  0850               	movf	___ftadd@f1+1,w
  6445  17C1  1103               	clrz
  6446  17C2  1803               	skipnc
  6447  17C3  0A50               	incf	___ftadd@f1+1,w
  6448  17C4  1903               	skipnz
  6449  17C5  2FC7               	goto	u5181
  6450  17C6  07D3               	addwf	___ftadd@f2+1,f
  6451  17C7                     u5181:
  6452  17C7  0851               	movf	___ftadd@f1+2,w
  6453  17C8  1103               	clrz
  6454  17C9  1803               	skipnc
  6455  17CA  0A51               	incf	___ftadd@f1+2,w
  6456  17CB  1903               	skipnz
  6457  17CC  2FCE               	goto	u5182
  6458  17CD  07D4               	addwf	___ftadd@f2+2,f
  6459  17CE                     u5182:
  6460  17CE                     l3633:
  6461  17CE  1FD4               	btfss	___ftadd@f2+2,7
  6462  17CF  2FD1               	goto	u5191
  6463  17D0  2FD2               	goto	u5190
  6464  17D1                     u5191:
  6465  17D1  2FE4               	goto	l3639
  6466  17D2                     u5190:
  6467  17D2                     l3635:
  6468  17D2  30FF               	movlw	255
  6469  17D3  06D2               	xorwf	___ftadd@f2,f
  6470  17D4  30FF               	movlw	255
  6471  17D5  06D3               	xorwf	___ftadd@f2+1,f
  6472  17D6  30FF               	movlw	255
  6473  17D7  06D4               	xorwf	___ftadd@f2+2,f
  6474  17D8  3001               	movlw	1
  6475  17D9  07D2               	addwf	___ftadd@f2,f
  6476  17DA  3000               	movlw	0
  6477  17DB  1803               	skipnc
  6478  17DC  3001               	movlw	1
  6479  17DD  07D3               	addwf	___ftadd@f2+1,f
  6480  17DE  3000               	movlw	0
  6481  17DF  1803               	skipnc
  6482  17E0  3001               	movlw	1
  6483  17E1  07D4               	addwf	___ftadd@f2+2,f
  6484  17E2                     l3637:
  6485  17E2  01D9               	clrf	___ftadd@sign
  6486  17E3  0AD9               	incf	___ftadd@sign,f
  6487  17E4                     l3639:
  6488  17E4  0852               	movf	___ftadd@f2,w
  6489  17E5  00F3               	movwf	___ftpack@arg
  6490  17E6  0853               	movf	___ftadd@f2+1,w
  6491  17E7  00F4               	movwf	___ftpack@arg+1
  6492  17E8  0854               	movf	___ftadd@f2+2,w
  6493  17E9  00F5               	movwf	___ftpack@arg+2
  6494  17EA  085B               	movf	___ftadd@exp1,w
  6495  17EB  00D5               	movwf	??___ftadd
  6496  17EC  0855               	movf	??___ftadd,w
  6497  17ED  00F6               	movwf	___ftpack@exp
  6498  17EE  0859               	movf	___ftadd@sign,w
  6499  17EF  00D6               	movwf	??___ftadd+1
  6500  17F0  0856               	movf	??___ftadd+1,w
  6501  17F1  00F7               	movwf	___ftpack@sign
  6502  17F2  160A  118A  22C1  160A  118A  	fcall	___ftpack
  6503  17F7  0873               	movf	?___ftpack,w
  6504  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  6505  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  6506  17FA  00CF               	movwf	?___ftadd
  6507  17FB  0874               	movf	?___ftpack+1,w
  6508  17FC  00D0               	movwf	?___ftadd+1
  6509  17FD  0875               	movf	?___ftpack+2,w
  6510  17FE  00D1               	movwf	?___ftadd+2
  6511  17FF                     l711:
  6512  17FF  0008               	return
  6513  1800                     __end_of___ftadd:
  6514                           
  6515                           	psect	text21
  6516  1D3F                     __ptext21:	
  6517 ;; *************** function ___ftneg *****************
  6518 ;; Defined at:
  6519 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  f1              3    3[COMMON] float 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  3    3[COMMON] float 
  6526 ;; Registers used:
  6527 ;;		wreg
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         3       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         3       0       0       0       0
  6537 ;;Total ram usage:        3 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    2
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_sprintf
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function ___ftneg
  6549  1D3F                     ___ftneg:
  6550  1D3F                     l2795:	
  6551                           ;incstack = 0
  6552                           ; Regs used in ___ftneg: [wreg]
  6553                           
  6554  1D3F  0875               	movf	___ftneg@f1+2,w
  6555  1D40  0474               	iorwf	___ftneg@f1+1,w
  6556  1D41  0473               	iorwf	___ftneg@f1,w
  6557  1D42  1903               	skipnz
  6558  1D43  2D45               	goto	u3721
  6559  1D44  2D46               	goto	u3720
  6560  1D45                     u3721:
  6561  1D45  2D48               	goto	l2799
  6562  1D46                     u3720:
  6563  1D46                     l2797:
  6564  1D46  3080               	movlw	128
  6565  1D47  06F5               	xorwf	___ftneg@f1+2,f
  6566  1D48                     l2799:
  6567  1D48                     l785:
  6568  1D48  0008               	return
  6569  1D49                     __end_of___ftneg:
  6570                           
  6571                           	psect	text22
  6572  1F06                     __ptext22:	
  6573 ;; *************** function ___ftge *****************
  6574 ;; Defined at:
  6575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  ff1             3    0[BANK0 ] float 
  6578 ;;  ff2             3    3[BANK0 ] float 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       6       0       0       0
  6591 ;;      Locals:         0       0       0       0       0
  6592 ;;      Temps:          0       0       0       0       0
  6593 ;;      Totals:         0       6       0       0       0
  6594 ;;Total ram usage:        6 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    2
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_sprintf
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function ___ftge
  6606  1F06                     ___ftge:
  6607  1F06                     l3973:	
  6608                           ;incstack = 0
  6609                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6610                           
  6611  1F06  1283               	bcf	3,5	;RP0=0, select bank0
  6612  1F07  1303               	bcf	3,6	;RP1=0, select bank0
  6613  1F08  1FA2               	btfss	___ftge@ff1+2,7
  6614  1F09  2F0B               	goto	u5901
  6615  1F0A  2F0C               	goto	u5900
  6616  1F0B                     u5901:
  6617  1F0B  2F19               	goto	l3977
  6618  1F0C                     u5900:
  6619  1F0C                     l3975:
  6620  1F0C  0820               	movf	___ftge@ff1,w
  6621  1F0D  3C00               	sublw	0
  6622  1F0E  00A0               	movwf	___ftge@ff1
  6623  1F0F  0821               	movf	___ftge@ff1+1,w
  6624  1F10  1C03               	skipc
  6625  1F11  0F21               	incfsz	___ftge@ff1+1,w
  6626  1F12  3C00               	sublw	0
  6627  1F13  00A1               	movwf	___ftge@ff1+1
  6628  1F14  0822               	movf	___ftge@ff1+2,w
  6629  1F15  1C03               	skipc
  6630  1F16  0F22               	incfsz	___ftge@ff1+2,w
  6631  1F17  3C80               	sublw	128
  6632  1F18  00A2               	movwf	___ftge@ff1+2
  6633  1F19                     l3977:
  6634  1F19  1FA5               	btfss	___ftge@ff2+2,7
  6635  1F1A  2F1C               	goto	u5911
  6636  1F1B  2F1D               	goto	u5910
  6637  1F1C                     u5911:
  6638  1F1C  2F2A               	goto	l3981
  6639  1F1D                     u5910:
  6640  1F1D                     l3979:
  6641  1F1D  0823               	movf	___ftge@ff2,w
  6642  1F1E  3C00               	sublw	0
  6643  1F1F  00A3               	movwf	___ftge@ff2
  6644  1F20  0824               	movf	___ftge@ff2+1,w
  6645  1F21  1C03               	skipc
  6646  1F22  0F24               	incfsz	___ftge@ff2+1,w
  6647  1F23  3C00               	sublw	0
  6648  1F24  00A4               	movwf	___ftge@ff2+1
  6649  1F25  0825               	movf	___ftge@ff2+2,w
  6650  1F26  1C03               	skipc
  6651  1F27  0F25               	incfsz	___ftge@ff2+2,w
  6652  1F28  3C80               	sublw	128
  6653  1F29  00A5               	movwf	___ftge@ff2+2
  6654  1F2A                     l3981:
  6655  1F2A  3080               	movlw	128
  6656  1F2B  06A2               	xorwf	___ftge@ff1+2,f
  6657  1F2C                     l3983:
  6658  1F2C  3080               	movlw	128
  6659  1F2D  06A5               	xorwf	___ftge@ff2+2,f
  6660  1F2E                     l3985:
  6661  1F2E  0825               	movf	___ftge@ff2+2,w
  6662  1F2F  0222               	subwf	___ftge@ff1+2,w
  6663  1F30  1D03               	skipz
  6664  1F31  2F38               	goto	u5925
  6665  1F32  0824               	movf	___ftge@ff2+1,w
  6666  1F33  0221               	subwf	___ftge@ff1+1,w
  6667  1F34  1D03               	skipz
  6668  1F35  2F38               	goto	u5925
  6669  1F36  0823               	movf	___ftge@ff2,w
  6670  1F37  0220               	subwf	___ftge@ff1,w
  6671  1F38                     u5925:
  6672  1F38  1803               	skipnc
  6673  1F39  2F3B               	goto	u5921
  6674  1F3A  2F3C               	goto	u5920
  6675  1F3B                     u5921:
  6676  1F3B  2F3E               	goto	l3989
  6677  1F3C                     u5920:
  6678  1F3C                     l3987:
  6679  1F3C  1003               	clrc
  6680  1F3D  2F3F               	goto	l768
  6681  1F3E                     l3989:
  6682  1F3E  1403               	setc
  6683  1F3F                     l768:
  6684  1F3F  0008               	return
  6685  1F40                     __end_of___ftge:
  6686                           
  6687                           	psect	text23
  6688  1D67                     __ptext23:	
  6689 ;; *************** function _setup *****************
  6690 ;; Defined at:
  6691 ;;		line 119 in file "main.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;		None
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		status,2
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         0       0       0       0       0
  6706 ;;      Locals:         0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0
  6708 ;;      Totals:         0       0       0       0       0
  6709 ;;Total ram usage:        0 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    2
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _setup
  6721  1D67                     _setup:
  6722  1D67                     l2883:	
  6723                           ;incstack = 0
  6724                           ; Regs used in _setup: [status,2]
  6725                           
  6726                           
  6727                           ;main.c: 120:     ANSEL = 0;
  6728  1D67  1683               	bsf	3,5	;RP0=1, select bank3
  6729  1D68  1703               	bsf	3,6	;RP1=1, select bank3
  6730  1D69  0188               	clrf	8	;volatile
  6731                           
  6732                           ;main.c: 121:     ANSELH = 0;
  6733  1D6A  0189               	clrf	9	;volatile
  6734                           
  6735                           ;main.c: 122:     PORTD = 0;
  6736  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
  6737  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
  6738  1D6D  0188               	clrf	8	;volatile
  6739                           
  6740                           ;main.c: 123:     PORTE = 0;
  6741  1D6E  0189               	clrf	9	;volatile
  6742                           
  6743                           ;main.c: 124:     PORTC = 0;
  6744  1D6F  0187               	clrf	7	;volatile
  6745                           
  6746                           ;main.c: 125:     TRISA = 0;
  6747  1D70  1683               	bsf	3,5	;RP0=1, select bank1
  6748  1D71  1303               	bcf	3,6	;RP1=0, select bank1
  6749  1D72  0185               	clrf	5	;volatile
  6750                           
  6751                           ;main.c: 127:     TRISD = 0;
  6752  1D73  0188               	clrf	8	;volatile
  6753                           
  6754                           ;main.c: 128:     TRISE = 0;
  6755  1D74  0189               	clrf	9	;volatile
  6756  1D75                     l2885:
  6757                           
  6758                           ;main.c: 130:     INTCONbits.PEIE = 1;
  6759  1D75  170B               	bsf	11,6	;volatile
  6760  1D76                     l2887:
  6761                           
  6762                           ;main.c: 131:     PIE1bits.RCIE = 1;
  6763  1D76  168C               	bsf	12,5	;volatile
  6764  1D77                     l2889:
  6765                           
  6766                           ;main.c: 132:     PIR1bits.RCIF = 0;
  6767  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  6769  1D79  128C               	bcf	12,5	;volatile
  6770  1D7A                     l2891:
  6771                           
  6772                           ;main.c: 133:     INTCONbits.GIE = 1;
  6773  1D7A  178B               	bsf	11,7	;volatile
  6774  1D7B                     l101:
  6775  1D7B  0008               	return
  6776  1D7C                     __end_of_setup:
  6777                           
  6778                           	psect	text24
  6779  1E30                     __ptext24:	
  6780 ;; *************** function _cursor *****************
  6781 ;; Defined at:
  6782 ;;		line 57 in file "LCD.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  a               1    wreg     unsigned char 
  6785 ;;  b               1    7[COMMON] unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  a               1    1[BANK0 ] unsigned char 
  6788 ;;  x               1    2[BANK0 ] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         1       0       0       0       0
  6799 ;;      Locals:         0       2       0       0       0
  6800 ;;      Temps:          0       1       0       0       0
  6801 ;;      Totals:         1       3       0       0       0
  6802 ;;Total ram usage:        4 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    4
  6805 ;; This function calls:
  6806 ;;		_CMDs
  6807 ;; This function is called by:
  6808 ;;		_main
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function _cursor
  6814  1E30                     _cursor:
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
  6818                           ;cursor@a stored from wreg
  6819  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  6820  1E31  1303               	bcf	3,6	;RP1=0, select bank0
  6821  1E32  00A1               	movwf	cursor@a
  6822  1E33                     l4057:
  6823                           
  6824                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  6825  1E33  0321               	decf	cursor@a,w
  6826  1E34  1D03               	btfss	3,2
  6827  1E35  2E37               	goto	u6021
  6828  1E36  2E38               	goto	u6020
  6829  1E37                     u6021:
  6830  1E37  2E44               	goto	l4063
  6831  1E38                     u6020:
  6832  1E38                     l4059:
  6833                           
  6834                           ;LCD.c: 60:        x = 0x80 + b;
  6835  1E38  0877               	movf	cursor@b,w
  6836  1E39  3E80               	addlw	128
  6837  1E3A  00A0               	movwf	??_cursor
  6838  1E3B  0820               	movf	??_cursor,w
  6839  1E3C  00A2               	movwf	cursor@x
  6840  1E3D                     l4061:
  6841                           
  6842                           ;LCD.c: 61:        CMDs(x);
  6843  1E3D  0822               	movf	cursor@x,w
  6844  1E3E  160A  118A  20A7  160A  158A  	fcall	_CMDs
  6845                           
  6846                           ;LCD.c: 62:     }
  6847  1E43  2E55               	goto	l166
  6848  1E44                     l4063:
  6849  1E44  3002               	movlw	2
  6850  1E45  0621               	xorwf	cursor@a,w
  6851  1E46  1D03               	btfss	3,2
  6852  1E47  2E49               	goto	u6031
  6853  1E48  2E4A               	goto	u6030
  6854  1E49                     u6031:
  6855  1E49  2E55               	goto	l166
  6856  1E4A                     u6030:
  6857  1E4A                     l4065:
  6858                           
  6859                           ;LCD.c: 64:         x = 0xC0 + b;
  6860  1E4A  0877               	movf	cursor@b,w
  6861  1E4B  3EC0               	addlw	192
  6862  1E4C  00A0               	movwf	??_cursor
  6863  1E4D  0820               	movf	??_cursor,w
  6864  1E4E  00A2               	movwf	cursor@x
  6865  1E4F                     l4067:
  6866                           
  6867                           ;LCD.c: 65:         CMDs(x);
  6868  1E4F  0822               	movf	cursor@x,w
  6869  1E50  160A  118A  20A7  160A  158A  	fcall	_CMDs
  6870  1E55                     l166:
  6871  1E55  0008               	return
  6872  1E56                     __end_of_cursor:
  6873                           
  6874                           	psect	text25
  6875  1D35                     __ptext25:	
  6876 ;; *************** function _config_tx *****************
  6877 ;; Defined at:
  6878 ;;		line 9 in file "USART.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		None
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6892 ;;      Params:         0       0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0
  6894 ;;      Temps:          0       0       0       0       0
  6895 ;;      Totals:         0       0       0       0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    2
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _config_tx
  6908  1D35                     _config_tx:
  6909  1D35                     l2895:	
  6910                           ;incstack = 0
  6911                           ; Regs used in _config_tx: []
  6912                           
  6913                           
  6914                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  6915  1D35  1683               	bsf	3,5	;RP0=1, select bank1
  6916  1D36  1303               	bcf	3,6	;RP1=0, select bank1
  6917  1D37  1398               	bcf	24,7	;volatile
  6918                           
  6919                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  6920  1D38  1318               	bcf	24,6	;volatile
  6921                           
  6922                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  6923  1D39  1698               	bsf	24,5	;volatile
  6924                           
  6925                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  6926  1D3A  1218               	bcf	24,4	;volatile
  6927                           
  6928                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  6929  1D3B  1118               	bcf	24,2	;volatile
  6930                           
  6931                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  6932  1D3C  1098               	bcf	24,1	;volatile
  6933                           
  6934                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  6935  1D3D  1018               	bcf	24,0	;volatile
  6936  1D3E                     l239:
  6937  1D3E  0008               	return
  6938  1D3F                     __end_of_config_tx:
  6939                           
  6940                           	psect	text26
  6941  1D25                     __ptext26:	
  6942 ;; *************** function _config_rc *****************
  6943 ;; Defined at:
  6944 ;;		line 19 in file "USART.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		status,2
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    2
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_main
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _config_rc
  6974  1D25                     _config_rc:
  6975  1D25                     l2897:	
  6976                           ;incstack = 0
  6977                           ; Regs used in _config_rc: [status,2]
  6978                           
  6979                           
  6980                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  6981  1D25  1283               	bcf	3,5	;RP0=0, select bank0
  6982  1D26  1303               	bcf	3,6	;RP1=0, select bank0
  6983  1D27  1798               	bsf	24,7	;volatile
  6984                           
  6985                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  6986  1D28  1318               	bcf	24,6	;volatile
  6987                           
  6988                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  6989  1D29  1298               	bcf	24,5	;volatile
  6990                           
  6991                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  6992  1D2A  1618               	bsf	24,4	;volatile
  6993  1D2B                     l2899:
  6994                           
  6995                           ;USART.c: 24:     RCREG = 0;
  6996  1D2B  019A               	clrf	26	;volatile
  6997  1D2C                     l242:
  6998  1D2C  0008               	return
  6999  1D2D                     __end_of_config_rc:
  7000                           
  7001                           	psect	text27
  7002  1249                     __ptext27:	
  7003 ;; *************** function _configLCD *****************
  7004 ;; Defined at:
  7005 ;;		line 69 in file "LCD.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7019 ;;      Params:         0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0
  7021 ;;      Temps:          0       2       0       0       0
  7022 ;;      Totals:         0       2       0       0       0
  7023 ;;Total ram usage:        2 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    4
  7026 ;; This function calls:
  7027 ;;		_CMDs
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _configLCD
  7035  1249                     _configLCD:
  7036  1249                     l4031:	
  7037                           ;incstack = 0
  7038                           ; Regs used in _configLCD: [wreg+status,2+status,0+pclath+cstack]
  7039                           
  7040                           
  7041                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7042  1249  301A               	movlw	26
  7043  124A  1283               	bcf	3,5	;RP0=0, select bank0
  7044  124B  1303               	bcf	3,6	;RP1=0, select bank0
  7045  124C  00A1               	movwf	??_configLCD+1
  7046  124D  30F7               	movlw	247
  7047  124E  00A0               	movwf	??_configLCD
  7048  124F                     u6677:
  7049  124F  0BA0               	decfsz	??_configLCD,f
  7050  1250  2A4F               	goto	u6677
  7051  1251  0BA1               	decfsz	??_configLCD+1,f
  7052  1252  2A4F               	goto	u6677
  7053  1253  2A54               	nop2
  7054  1254                     l4033:
  7055                           
  7056                           ;LCD.c: 71:     CMDs (0x30);
  7057  1254  3030               	movlw	48
  7058  1255  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7059  125A                     l4035:
  7060                           
  7061                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7062  125A  3007               	movlw	7
  7063  125B  1283               	bcf	3,5	;RP0=0, select bank0
  7064  125C  1303               	bcf	3,6	;RP1=0, select bank0
  7065  125D  00A1               	movwf	??_configLCD+1
  7066  125E  307C               	movlw	124
  7067  125F  00A0               	movwf	??_configLCD
  7068  1260                     u6687:
  7069  1260  0BA0               	decfsz	??_configLCD,f
  7070  1261  2A60               	goto	u6687
  7071  1262  0BA1               	decfsz	??_configLCD+1,f
  7072  1263  2A60               	goto	u6687
  7073  1264  0000               	nop
  7074                           
  7075                           ;LCD.c: 73:     CMDs (0x30);
  7076  1265  3030               	movlw	48
  7077  1266  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7078  126B                     l4037:
  7079                           
  7080                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7081  126B  3020               	movlw	32
  7082  126C  1283               	bcf	3,5	;RP0=0, select bank0
  7083  126D  1303               	bcf	3,6	;RP1=0, select bank0
  7084  126E  00A0               	movwf	??_configLCD
  7085  126F                     u6697:
  7086  126F  0BA0               	decfsz	??_configLCD,f
  7087  1270  2A6F               	goto	u6697
  7088  1271  0000               	nop
  7089  1272                     l4039:
  7090                           
  7091                           ;LCD.c: 75:     CMDs (0x30);
  7092  1272  3030               	movlw	48
  7093  1273  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7094                           
  7095                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7096  1278  3020               	movlw	32
  7097  1279  1283               	bcf	3,5	;RP0=0, select bank0
  7098  127A  1303               	bcf	3,6	;RP1=0, select bank0
  7099  127B  00A0               	movwf	??_configLCD
  7100  127C                     u6707:
  7101  127C  0BA0               	decfsz	??_configLCD,f
  7102  127D  2A7C               	goto	u6707
  7103  127E  0000               	nop
  7104  127F                     l4041:
  7105                           
  7106                           ;LCD.c: 77:     CMDs (0x38);
  7107  127F  3038               	movlw	56
  7108  1280  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7109  1285                     l4043:
  7110                           
  7111                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7112  1285  3013               	movlw	19
  7113  1286  1283               	bcf	3,5	;RP0=0, select bank0
  7114  1287  1303               	bcf	3,6	;RP1=0, select bank0
  7115  1288  00A0               	movwf	??_configLCD
  7116  1289                     u6717:
  7117  1289  0BA0               	decfsz	??_configLCD,f
  7118  128A  2A89               	goto	u6717
  7119                           
  7120                           ;LCD.c: 79:     CMDs (0x08);
  7121  128B  3008               	movlw	8
  7122  128C  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7123  1291                     l4045:
  7124                           
  7125                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7126  1291  3013               	movlw	19
  7127  1292  1283               	bcf	3,5	;RP0=0, select bank0
  7128  1293  1303               	bcf	3,6	;RP1=0, select bank0
  7129  1294  00A0               	movwf	??_configLCD
  7130  1295                     u6727:
  7131  1295  0BA0               	decfsz	??_configLCD,f
  7132  1296  2A95               	goto	u6727
  7133  1297                     l4047:
  7134                           
  7135                           ;LCD.c: 81:     CMDs (0x01);
  7136  1297  3001               	movlw	1
  7137  1298  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7138                           
  7139                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7140  129D  3007               	movlw	7
  7141  129E  1283               	bcf	3,5	;RP0=0, select bank0
  7142  129F  1303               	bcf	3,6	;RP1=0, select bank0
  7143  12A0  00A1               	movwf	??_configLCD+1
  7144  12A1  307C               	movlw	124
  7145  12A2  00A0               	movwf	??_configLCD
  7146  12A3                     u6737:
  7147  12A3  0BA0               	decfsz	??_configLCD,f
  7148  12A4  2AA3               	goto	u6737
  7149  12A5  0BA1               	decfsz	??_configLCD+1,f
  7150  12A6  2AA3               	goto	u6737
  7151  12A7  0000               	nop
  7152  12A8                     l4049:
  7153                           
  7154                           ;LCD.c: 83:     CMDs (0x06);
  7155  12A8  3006               	movlw	6
  7156  12A9  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7157  12AE                     l4051:
  7158                           
  7159                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7160  12AE  3013               	movlw	19
  7161  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  7162  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  7163  12B1  00A0               	movwf	??_configLCD
  7164  12B2                     u6747:
  7165  12B2  0BA0               	decfsz	??_configLCD,f
  7166  12B3  2AB2               	goto	u6747
  7167                           
  7168                           ;LCD.c: 85:     CMDs (0x0C);
  7169  12B4  300C               	movlw	12
  7170  12B5  160A  118A  20A7  160A  118A  	fcall	_CMDs
  7171  12BA                     l4053:
  7172                           
  7173                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7174  12BA  3013               	movlw	19
  7175  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  7176  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  7177  12BD  00A0               	movwf	??_configLCD
  7178  12BE                     u6757:
  7179  12BE  0BA0               	decfsz	??_configLCD,f
  7180  12BF  2ABE               	goto	u6757
  7181  12C0                     l169:
  7182  12C0  0008               	return
  7183  12C1                     __end_of_configLCD:
  7184                           
  7185                           	psect	text28
  7186  14B4                     __ptext28:	
  7187 ;; *************** function _configADC *****************
  7188 ;; Defined at:
  7189 ;;		line 7 in file "ADC.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  ch              1    wreg     unsigned char 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  ch              1    5[COMMON] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      unsigned char 
  7196 ;; Registers used:
  7197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         1       0       0       0       0
  7205 ;;      Temps:          2       0       0       0       0
  7206 ;;      Totals:         3       0       0       0       0
  7207 ;;Total ram usage:        3 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    2
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _configADC
  7219  14B4                     _configADC:
  7220                           
  7221                           ;incstack = 0
  7222                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  7223                           ;configADC@ch stored from wreg
  7224  14B4  00F5               	movwf	configADC@ch
  7225  14B5                     l2947:
  7226                           
  7227                           ;ADC.c: 8:     ADCON0bits.ADCS = 1;
  7228  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  7229  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  7230  14B7  081F               	movf	31,w	;volatile
  7231  14B8  393F               	andlw	-193
  7232  14B9  3840               	iorlw	64
  7233  14BA  009F               	movwf	31	;volatile
  7234  14BB                     l2949:
  7235                           
  7236                           ;ADC.c: 9:     ADCON1 = 0;
  7237  14BB  1683               	bsf	3,5	;RP0=1, select bank1
  7238  14BC  1303               	bcf	3,6	;RP1=0, select bank1
  7239  14BD  019F               	clrf	31	;volatile
  7240                           
  7241                           ;ADC.c: 11:     switch (ch) {
  7242  14BE  2D59               	goto	l2985
  7243  14BF                     l200:	
  7244                           ;ADC.c: 12:         case 0:
  7245                           
  7246                           
  7247                           ;ADC.c: 13:             TRISAbits.TRISA0 = 1;
  7248  14BF  1405               	bsf	5,0	;volatile
  7249                           
  7250                           ;ADC.c: 14:             ANSELbits.ANS0 = 1;
  7251  14C0  1683               	bsf	3,5	;RP0=1, select bank3
  7252  14C1  1703               	bsf	3,6	;RP1=1, select bank3
  7253  14C2  1408               	bsf	8,0	;volatile
  7254  14C3                     l2951:
  7255                           
  7256                           ;ADC.c: 15:             ADCON0bits.CHS = 0;
  7257  14C3  30C3               	movlw	-61
  7258  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  7259  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  7260  14C6  059F               	andwf	31,f	;volatile
  7261                           
  7262                           ;ADC.c: 16:             break;
  7263  14C7  2D8D               	goto	l201
  7264  14C8                     l202:	
  7265                           ;ADC.c: 17:         case 1:
  7266                           
  7267                           
  7268                           ;ADC.c: 18:             TRISAbits.TRISA1=1;
  7269  14C8  1485               	bsf	5,1	;volatile
  7270                           
  7271                           ;ADC.c: 19:             ANSELbits.ANS1=1;
  7272  14C9  1683               	bsf	3,5	;RP0=1, select bank3
  7273  14CA  1703               	bsf	3,6	;RP1=1, select bank3
  7274  14CB  1488               	bsf	8,1	;volatile
  7275  14CC                     l2953:
  7276                           
  7277                           ;ADC.c: 20:             ADCON0bits.CHS=1;
  7278  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  7279  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  7280  14CE  081F               	movf	31,w	;volatile
  7281  14CF  39C3               	andlw	-61
  7282  14D0  3804               	iorlw	4
  7283  14D1  009F               	movwf	31	;volatile
  7284                           
  7285                           ;ADC.c: 21:             break;
  7286  14D2  2D8D               	goto	l201
  7287  14D3                     l203:	
  7288                           ;ADC.c: 22:         case 2:
  7289                           
  7290                           
  7291                           ;ADC.c: 23:             TRISAbits.TRISA2=1;
  7292  14D3  1505               	bsf	5,2	;volatile
  7293                           
  7294                           ;ADC.c: 24:             ANSELbits.ANS2=1;
  7295  14D4  1683               	bsf	3,5	;RP0=1, select bank3
  7296  14D5  1703               	bsf	3,6	;RP1=1, select bank3
  7297  14D6  1508               	bsf	8,2	;volatile
  7298  14D7                     l2955:
  7299                           
  7300                           ;ADC.c: 25:             ADCON0bits.CHS=2;
  7301  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  7302  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  7303  14D9  081F               	movf	31,w	;volatile
  7304  14DA  39C3               	andlw	-61
  7305  14DB  3808               	iorlw	8
  7306  14DC  009F               	movwf	31	;volatile
  7307                           
  7308                           ;ADC.c: 26:             break;
  7309  14DD  2D8D               	goto	l201
  7310  14DE                     l204:	
  7311                           ;ADC.c: 27:         case 3:
  7312                           
  7313                           
  7314                           ;ADC.c: 28:             TRISAbits.TRISA3=1;
  7315  14DE  1585               	bsf	5,3	;volatile
  7316                           
  7317                           ;ADC.c: 29:             ANSELbits.ANS3=1;
  7318  14DF  1683               	bsf	3,5	;RP0=1, select bank3
  7319  14E0  1703               	bsf	3,6	;RP1=1, select bank3
  7320  14E1  1588               	bsf	8,3	;volatile
  7321  14E2                     l2957:
  7322                           
  7323                           ;ADC.c: 30:             ADCON0bits.CHS=3;
  7324  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  7325  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  7326  14E4  081F               	movf	31,w	;volatile
  7327  14E5  39C3               	andlw	-61
  7328  14E6  380C               	iorlw	12
  7329  14E7  009F               	movwf	31	;volatile
  7330                           
  7331                           ;ADC.c: 31:             break;
  7332  14E8  2D8D               	goto	l201
  7333  14E9                     l205:	
  7334                           ;ADC.c: 32:         case 4:
  7335                           
  7336                           
  7337                           ;ADC.c: 33:             TRISAbits.TRISA5=1;
  7338  14E9  1685               	bsf	5,5	;volatile
  7339                           
  7340                           ;ADC.c: 34:             ANSELbits.ANS4=1;
  7341  14EA  1683               	bsf	3,5	;RP0=1, select bank3
  7342  14EB  1703               	bsf	3,6	;RP1=1, select bank3
  7343  14EC  1608               	bsf	8,4	;volatile
  7344  14ED                     l2959:
  7345                           
  7346                           ;ADC.c: 35:             ADCON0bits.CHS=4;
  7347  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  7348  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  7349  14EF  081F               	movf	31,w	;volatile
  7350  14F0  39C3               	andlw	-61
  7351  14F1  3810               	iorlw	16
  7352  14F2  009F               	movwf	31	;volatile
  7353                           
  7354                           ;ADC.c: 36:             break;
  7355  14F3  2D8D               	goto	l201
  7356  14F4                     l206:	
  7357                           ;ADC.c: 37:         case 5:
  7358                           
  7359                           
  7360                           ;ADC.c: 38:             TRISEbits.TRISE0=1;
  7361  14F4  1409               	bsf	9,0	;volatile
  7362                           
  7363                           ;ADC.c: 39:             ANSELbits.ANS5=1;
  7364  14F5  1683               	bsf	3,5	;RP0=1, select bank3
  7365  14F6  1703               	bsf	3,6	;RP1=1, select bank3
  7366  14F7  1688               	bsf	8,5	;volatile
  7367  14F8                     l2961:
  7368                           
  7369                           ;ADC.c: 40:             ADCON0bits.CHS=5;
  7370  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  7371  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  7372  14FA  081F               	movf	31,w	;volatile
  7373  14FB  39C3               	andlw	-61
  7374  14FC  3814               	iorlw	20
  7375  14FD  009F               	movwf	31	;volatile
  7376                           
  7377                           ;ADC.c: 41:             break;
  7378  14FE  2D8D               	goto	l201
  7379  14FF                     l207:	
  7380                           ;ADC.c: 42:         case 6:
  7381                           
  7382                           
  7383                           ;ADC.c: 43:             TRISEbits.TRISE1=1;
  7384  14FF  1489               	bsf	9,1	;volatile
  7385                           
  7386                           ;ADC.c: 44:             ANSELbits.ANS6=1;
  7387  1500  1683               	bsf	3,5	;RP0=1, select bank3
  7388  1501  1703               	bsf	3,6	;RP1=1, select bank3
  7389  1502  1708               	bsf	8,6	;volatile
  7390  1503                     l2963:
  7391                           
  7392                           ;ADC.c: 45:             ADCON0bits.CHS=6;
  7393  1503  1283               	bcf	3,5	;RP0=0, select bank0
  7394  1504  1303               	bcf	3,6	;RP1=0, select bank0
  7395  1505  081F               	movf	31,w	;volatile
  7396  1506  39C3               	andlw	-61
  7397  1507  3818               	iorlw	24
  7398  1508  009F               	movwf	31	;volatile
  7399                           
  7400                           ;ADC.c: 46:             break;
  7401  1509  2D8D               	goto	l201
  7402  150A                     l208:	
  7403                           ;ADC.c: 47:         case 7:
  7404                           
  7405                           
  7406                           ;ADC.c: 48:             TRISEbits.TRISE2=1;
  7407  150A  1509               	bsf	9,2	;volatile
  7408                           
  7409                           ;ADC.c: 49:             ANSELbits.ANS7=1;
  7410  150B  1683               	bsf	3,5	;RP0=1, select bank3
  7411  150C  1703               	bsf	3,6	;RP1=1, select bank3
  7412  150D  1788               	bsf	8,7	;volatile
  7413  150E                     l2965:
  7414                           
  7415                           ;ADC.c: 50:             ADCON0bits.CHS=7;
  7416  150E  1283               	bcf	3,5	;RP0=0, select bank0
  7417  150F  1303               	bcf	3,6	;RP1=0, select bank0
  7418  1510  081F               	movf	31,w	;volatile
  7419  1511  39C3               	andlw	-61
  7420  1512  381C               	iorlw	28
  7421  1513  009F               	movwf	31	;volatile
  7422                           
  7423                           ;ADC.c: 51:             break;
  7424  1514  2D8D               	goto	l201
  7425  1515                     l209:	
  7426                           ;ADC.c: 52:         case 8:
  7427                           
  7428                           
  7429                           ;ADC.c: 53:             TRISBbits.TRISB2=1;
  7430  1515  1506               	bsf	6,2	;volatile
  7431                           
  7432                           ;ADC.c: 54:             ANSELHbits.ANS8=1;
  7433  1516  1683               	bsf	3,5	;RP0=1, select bank3
  7434  1517  1703               	bsf	3,6	;RP1=1, select bank3
  7435  1518  1409               	bsf	9,0	;volatile
  7436  1519                     l2967:
  7437                           
  7438                           ;ADC.c: 55:             ADCON0bits.CHS=8;
  7439  1519  1283               	bcf	3,5	;RP0=0, select bank0
  7440  151A  1303               	bcf	3,6	;RP1=0, select bank0
  7441  151B  081F               	movf	31,w	;volatile
  7442  151C  39C3               	andlw	-61
  7443  151D  3820               	iorlw	32
  7444  151E  009F               	movwf	31	;volatile
  7445                           
  7446                           ;ADC.c: 56:             break;
  7447  151F  2D8D               	goto	l201
  7448  1520                     l210:	
  7449                           ;ADC.c: 57:         case 9:
  7450                           
  7451                           
  7452                           ;ADC.c: 58:             TRISBbits.TRISB3=1;
  7453  1520  1586               	bsf	6,3	;volatile
  7454                           
  7455                           ;ADC.c: 59:             ANSELHbits.ANS9=1;
  7456  1521  1683               	bsf	3,5	;RP0=1, select bank3
  7457  1522  1703               	bsf	3,6	;RP1=1, select bank3
  7458  1523  1489               	bsf	9,1	;volatile
  7459  1524                     l2969:
  7460                           
  7461                           ;ADC.c: 60:             ADCON0bits.CHS=9;
  7462  1524  1283               	bcf	3,5	;RP0=0, select bank0
  7463  1525  1303               	bcf	3,6	;RP1=0, select bank0
  7464  1526  081F               	movf	31,w	;volatile
  7465  1527  39C3               	andlw	-61
  7466  1528  3824               	iorlw	36
  7467  1529  009F               	movwf	31	;volatile
  7468                           
  7469                           ;ADC.c: 61:             break;
  7470  152A  2D8D               	goto	l201
  7471  152B                     l211:	
  7472                           ;ADC.c: 62:         case 10:
  7473                           
  7474                           
  7475                           ;ADC.c: 63:             TRISBbits.TRISB1=1;
  7476  152B  1486               	bsf	6,1	;volatile
  7477                           
  7478                           ;ADC.c: 64:             ANSELHbits.ANS10=1;
  7479  152C  1683               	bsf	3,5	;RP0=1, select bank3
  7480  152D  1703               	bsf	3,6	;RP1=1, select bank3
  7481  152E  1509               	bsf	9,2	;volatile
  7482  152F                     l2971:
  7483                           
  7484                           ;ADC.c: 65:             ADCON0bits.CHS=10;
  7485  152F  1283               	bcf	3,5	;RP0=0, select bank0
  7486  1530  1303               	bcf	3,6	;RP1=0, select bank0
  7487  1531  081F               	movf	31,w	;volatile
  7488  1532  39C3               	andlw	-61
  7489  1533  3828               	iorlw	40
  7490  1534  009F               	movwf	31	;volatile
  7491                           
  7492                           ;ADC.c: 66:             break;
  7493  1535  2D8D               	goto	l201
  7494  1536                     l212:	
  7495                           ;ADC.c: 67:         case 11:
  7496                           
  7497                           
  7498                           ;ADC.c: 68:             TRISBbits.TRISB4=1;
  7499  1536  1606               	bsf	6,4	;volatile
  7500                           
  7501                           ;ADC.c: 69:             ANSELHbits.ANS11=1;
  7502  1537  1683               	bsf	3,5	;RP0=1, select bank3
  7503  1538  1703               	bsf	3,6	;RP1=1, select bank3
  7504  1539  1589               	bsf	9,3	;volatile
  7505  153A                     l2973:
  7506                           
  7507                           ;ADC.c: 70:             ADCON0bits.CHS=11;
  7508  153A  1283               	bcf	3,5	;RP0=0, select bank0
  7509  153B  1303               	bcf	3,6	;RP1=0, select bank0
  7510  153C  081F               	movf	31,w	;volatile
  7511  153D  39C3               	andlw	-61
  7512  153E  382C               	iorlw	44
  7513  153F  009F               	movwf	31	;volatile
  7514                           
  7515                           ;ADC.c: 71:             break;
  7516  1540  2D8D               	goto	l201
  7517  1541                     l213:	
  7518                           ;ADC.c: 72:         case 12:
  7519                           
  7520                           
  7521                           ;ADC.c: 73:             TRISBbits.TRISB0=1;
  7522  1541  1406               	bsf	6,0	;volatile
  7523                           
  7524                           ;ADC.c: 74:             ANSELHbits.ANS12=1;
  7525  1542  1683               	bsf	3,5	;RP0=1, select bank3
  7526  1543  1703               	bsf	3,6	;RP1=1, select bank3
  7527  1544  1609               	bsf	9,4	;volatile
  7528  1545                     l2975:
  7529                           
  7530                           ;ADC.c: 75:             ADCON0bits.CHS=12;
  7531  1545  1283               	bcf	3,5	;RP0=0, select bank0
  7532  1546  1303               	bcf	3,6	;RP1=0, select bank0
  7533  1547  081F               	movf	31,w	;volatile
  7534  1548  39C3               	andlw	-61
  7535  1549  3830               	iorlw	48
  7536  154A  009F               	movwf	31	;volatile
  7537                           
  7538                           ;ADC.c: 76:             break;
  7539  154B  2D8D               	goto	l201
  7540  154C                     l214:	
  7541                           ;ADC.c: 77:         case 13:
  7542                           
  7543                           
  7544                           ;ADC.c: 78:             TRISBbits.TRISB5=1;
  7545  154C  1686               	bsf	6,5	;volatile
  7546                           
  7547                           ;ADC.c: 79:             ANSELHbits.ANS13=1;
  7548  154D  1683               	bsf	3,5	;RP0=1, select bank3
  7549  154E  1703               	bsf	3,6	;RP1=1, select bank3
  7550  154F  1689               	bsf	9,5	;volatile
  7551  1550                     l2977:
  7552                           
  7553                           ;ADC.c: 80:             ADCON0bits.CHS=13;
  7554  1550  1283               	bcf	3,5	;RP0=0, select bank0
  7555  1551  1303               	bcf	3,6	;RP1=0, select bank0
  7556  1552  081F               	movf	31,w	;volatile
  7557  1553  39C3               	andlw	-61
  7558  1554  3834               	iorlw	52
  7559  1555  009F               	movwf	31	;volatile
  7560                           
  7561                           ;ADC.c: 81:             break;
  7562  1556  2D8D               	goto	l201
  7563  1557                     l2979:
  7564                           
  7565                           ;ADC.c: 83:             return 0;
  7566  1557  3000               	movlw	0
  7567  1558  2D9C               	goto	l216
  7568  1559                     l2985:
  7569  1559  0875               	movf	configADC@ch,w
  7570  155A  00F3               	movwf	??_configADC
  7571  155B  01F4               	clrf	??_configADC+1
  7572                           
  7573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7574                           ; Switch size 1, requested type "simple"
  7575                           ; Number of cases is 1, Range of values is 0 to 0
  7576                           ; switch strategies available:
  7577                           ; Name         Instructions Cycles
  7578                           ; simple_byte            4     3 (average)
  7579                           ; direct_byte           11     8 (fixed)
  7580                           ; jumptable            260     6 (fixed)
  7581                           ;	Chosen strategy is simple_byte
  7582  155C  0874               	movf	??_configADC+1,w
  7583  155D  3A00               	xorlw	0	; case 0
  7584  155E  1903               	skipnz
  7585  155F  2D61               	goto	l4497
  7586  1560  2D57               	goto	l2979
  7587  1561                     l4497:
  7588                           
  7589                           ; Switch size 1, requested type "simple"
  7590                           ; Number of cases is 14, Range of values is 0 to 13
  7591                           ; switch strategies available:
  7592                           ; Name         Instructions Cycles
  7593                           ; simple_byte           43    22 (average)
  7594                           ; direct_byte           50     8 (fixed)
  7595                           ; jumptable            260     6 (fixed)
  7596                           ;	Chosen strategy is simple_byte
  7597  1561  0873               	movf	??_configADC,w
  7598  1562  3A00               	xorlw	0	; case 0
  7599  1563  1903               	skipnz
  7600  1564  2CBF               	goto	l200
  7601  1565  3A01               	xorlw	1	; case 1
  7602  1566  1903               	skipnz
  7603  1567  2CC8               	goto	l202
  7604  1568  3A03               	xorlw	3	; case 2
  7605  1569  1903               	skipnz
  7606  156A  2CD3               	goto	l203
  7607  156B  3A01               	xorlw	1	; case 3
  7608  156C  1903               	skipnz
  7609  156D  2CDE               	goto	l204
  7610  156E  3A07               	xorlw	7	; case 4
  7611  156F  1903               	skipnz
  7612  1570  2CE9               	goto	l205
  7613  1571  3A01               	xorlw	1	; case 5
  7614  1572  1903               	skipnz
  7615  1573  2CF4               	goto	l206
  7616  1574  3A03               	xorlw	3	; case 6
  7617  1575  1903               	skipnz
  7618  1576  2CFF               	goto	l207
  7619  1577  3A01               	xorlw	1	; case 7
  7620  1578  1903               	skipnz
  7621  1579  2D0A               	goto	l208
  7622  157A  3A0F               	xorlw	15	; case 8
  7623  157B  1903               	skipnz
  7624  157C  2D15               	goto	l209
  7625  157D  3A01               	xorlw	1	; case 9
  7626  157E  1903               	skipnz
  7627  157F  2D20               	goto	l210
  7628  1580  3A03               	xorlw	3	; case 10
  7629  1581  1903               	skipnz
  7630  1582  2D2B               	goto	l211
  7631  1583  3A01               	xorlw	1	; case 11
  7632  1584  1903               	skipnz
  7633  1585  2D36               	goto	l212
  7634  1586  3A07               	xorlw	7	; case 12
  7635  1587  1903               	skipnz
  7636  1588  2D41               	goto	l213
  7637  1589  3A01               	xorlw	1	; case 13
  7638  158A  1903               	skipnz
  7639  158B  2D4C               	goto	l214
  7640  158C  2D57               	goto	l2979
  7641  158D                     l201:
  7642                           
  7643                           ;ADC.c: 86:     ADCON0bits.ADON = 1;
  7644  158D  141F               	bsf	31,0	;volatile
  7645  158E                     l2987:
  7646                           
  7647                           ;ADC.c: 87:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  7648  158E  3053               	movlw	83
  7649  158F  00F3               	movwf	??_configADC
  7650  1590                     u6767:
  7651  1590  0BF3               	decfsz	??_configADC,f
  7652  1591  2D90               	goto	u6767
  7653  1592                     l2989:
  7654                           
  7655                           ;ADC.c: 88:     ADCON0bits.GO = 1;
  7656  1592  1283               	bcf	3,5	;RP0=0, select bank0
  7657  1593  1303               	bcf	3,6	;RP1=0, select bank0
  7658  1594  149F               	bsf	31,1	;volatile
  7659  1595                     l2991:
  7660                           
  7661                           ;ADC.c: 91:     if (ADCON0bits.GO_DONE == 1){
  7662  1595  1C9F               	btfss	31,1	;volatile
  7663  1596  2D98               	goto	u3971
  7664  1597  2D99               	goto	u3970
  7665  1598                     u3971:
  7666  1598  2D9A               	goto	l218
  7667  1599                     u3970:
  7668  1599  2D95               	goto	l2991
  7669  159A                     l218:	
  7670                           ;ADC.c: 94:     else{
  7671                           
  7672                           
  7673                           ;ADC.c: 95:         ADCON0bits.ADON = 0;
  7674  159A  101F               	bcf	31,0	;volatile
  7675  159B                     l2997:
  7676                           
  7677                           ;ADC.c: 96:         return ADRESH;
  7678  159B  081E               	movf	30,w	;volatile
  7679  159C                     l216:
  7680  159C  0008               	return
  7681  159D                     __end_of_configADC:
  7682                           
  7683                           	psect	text29
  7684  07F2                     __ptext29:	
  7685 ;; *************** function _clear_LCD *****************
  7686 ;; Defined at:
  7687 ;;		line 52 in file "LCD.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, pclath, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7701 ;;      Params:         0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    4
  7708 ;; This function calls:
  7709 ;;		_CMDs
  7710 ;; This function is called by:
  7711 ;;		_main
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function _clear_LCD
  7717  07F2                     _clear_LCD:
  7718  07F2                     l4055:	
  7719                           ;incstack = 0
  7720                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  7721                           
  7722                           
  7723                           ;LCD.c: 53:     CMDs(0);
  7724  07F2  3000               	movlw	0
  7725  07F3  160A  118A  20A7  120A  118A  	fcall	_CMDs
  7726                           
  7727                           ;LCD.c: 54:     CMDs(1);
  7728  07F8  3001               	movlw	1
  7729  07F9  160A  118A  20A7  120A  118A  	fcall	_CMDs
  7730  07FE                     l160:
  7731  07FE  0008               	return
  7732  07FF                     __end_of_clear_LCD:
  7733                           
  7734                           	psect	text30
  7735  10A7                     __ptext30:	
  7736 ;; *************** function _CMDs *****************
  7737 ;; Defined at:
  7738 ;;		line 42 in file "LCD.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  a               1    wreg     unsigned char 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  a               1    6[COMMON] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, pclath, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7752 ;;      Params:         0       0       0       0       0
  7753 ;;      Locals:         1       0       0       0       0
  7754 ;;      Temps:          2       0       0       0       0
  7755 ;;      Totals:         3       0       0       0       0
  7756 ;;Total ram usage:        3 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    3
  7759 ;; This function calls:
  7760 ;;		_pin
  7761 ;; This function is called by:
  7762 ;;		_clear_LCD
  7763 ;;		_cursor
  7764 ;;		_configLCD
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           
  7769                           ;psect for function _CMDs
  7770  10A7                     _CMDs:
  7771                           
  7772                           ;incstack = 0
  7773                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  7774                           ;CMDs@a stored from wreg
  7775  10A7  00F6               	movwf	CMDs@a
  7776  10A8                     l3741:
  7777                           
  7778                           ;LCD.c: 43:     RE0 = 0;
  7779  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  7780  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  7781  10AA  1009               	bcf	9,0	;volatile
  7782  10AB                     l3743:
  7783                           
  7784                           ;LCD.c: 44:     pin(a);
  7785  10AB  0876               	movf	CMDs@a,w
  7786  10AC  160A  158A  277C  160A  118A  	fcall	_pin
  7787  10B1                     l3745:
  7788                           
  7789                           ;LCD.c: 45:     RE1 = 1;
  7790  10B1  1283               	bcf	3,5	;RP0=0, select bank0
  7791  10B2  1303               	bcf	3,6	;RP1=0, select bank0
  7792  10B3  1489               	bsf	9,1	;volatile
  7793  10B4                     l3747:
  7794                           
  7795                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7796  10B4  28B5               	nop2	;2 cycle nop
  7797  10B5  28B6               	nop2	;2 cycle nop
  7798  10B6  0000               	nop
  7799  10B7                     l3749:
  7800                           
  7801                           ;LCD.c: 47:     RE1 = 0;
  7802  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  7803  10B8  1303               	bcf	3,6	;RP1=0, select bank0
  7804  10B9  1089               	bcf	9,1	;volatile
  7805  10BA                     l3751:
  7806                           
  7807                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7808  10BA  28BB               	nop2	;2 cycle nop
  7809  10BB  28BC               	nop2	;2 cycle nop
  7810  10BC  0000               	nop
  7811  10BD                     l3753:
  7812                           
  7813                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7814  10BD  3003               	movlw	3
  7815  10BE  00F5               	movwf	??_CMDs+1
  7816  10BF  3097               	movlw	151
  7817  10C0  00F4               	movwf	??_CMDs
  7818  10C1                     u6777:
  7819  10C1  0BF4               	decfsz	??_CMDs,f
  7820  10C2  28C1               	goto	u6777
  7821  10C3  0BF5               	decfsz	??_CMDs+1,f
  7822  10C4  28C1               	goto	u6777
  7823  10C5  28C6               	nop2
  7824  10C6                     l157:
  7825  10C6  0008               	return
  7826  10C7                     __end_of_CMDs:
  7827                           
  7828                           	psect	text31
  7829  1F7C                     __ptext31:	
  7830 ;; *************** function _pin *****************
  7831 ;; Defined at:
  7832 ;;		line 7 in file "LCD.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  a               1    wreg     unsigned char 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  a               1    3[COMMON] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7846 ;;      Params:         0       0       0       0       0
  7847 ;;      Locals:         1       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0
  7849 ;;      Totals:         1       0       0       0       0
  7850 ;;Total ram usage:        1 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    2
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_CMDs
  7857 ;;		_write_char
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _pin
  7863  1F7C                     _pin:
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in _pin: [wreg]
  7867                           ;pin@a stored from wreg
  7868  1F7C  00F3               	movwf	pin@a
  7869  1F7D                     l3473:
  7870                           
  7871                           ;LCD.c: 8:     if(a & 1){
  7872  1F7D  1C73               	btfss	pin@a,0
  7873  1F7E  2F80               	goto	u4691
  7874  1F7F  2F81               	goto	u4690
  7875  1F80                     u4691:
  7876  1F80  2F85               	goto	l138
  7877  1F81                     u4690:
  7878  1F81                     l3475:
  7879                           
  7880                           ;LCD.c: 9:         RD0=1;}
  7881  1F81  1283               	bcf	3,5	;RP0=0, select bank0
  7882  1F82  1303               	bcf	3,6	;RP1=0, select bank0
  7883  1F83  1408               	bsf	8,0	;volatile
  7884  1F84  2F88               	goto	l139
  7885  1F85                     l138:	
  7886                           ;LCD.c: 10:     else{
  7887                           
  7888                           
  7889                           ;LCD.c: 11:         RD0=0;}
  7890  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  7891  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  7892  1F87  1008               	bcf	8,0	;volatile
  7893  1F88                     l139:
  7894                           
  7895                           ;LCD.c: 12:     if(a & 2){
  7896  1F88  1CF3               	btfss	pin@a,1
  7897  1F89  2F8B               	goto	u4701
  7898  1F8A  2F8C               	goto	u4700
  7899  1F8B                     u4701:
  7900  1F8B  2F8E               	goto	l140
  7901  1F8C                     u4700:
  7902  1F8C                     l3477:
  7903                           
  7904                           ;LCD.c: 13:         RD1=1;}
  7905  1F8C  1488               	bsf	8,1	;volatile
  7906  1F8D  2F8F               	goto	l141
  7907  1F8E                     l140:	
  7908                           ;LCD.c: 14:     else{
  7909                           
  7910                           
  7911                           ;LCD.c: 15:         RD1=0;}
  7912  1F8E  1088               	bcf	8,1	;volatile
  7913  1F8F                     l141:
  7914                           
  7915                           ;LCD.c: 16:     if(a & 4){
  7916  1F8F  1D73               	btfss	pin@a,2
  7917  1F90  2F92               	goto	u4711
  7918  1F91  2F93               	goto	u4710
  7919  1F92                     u4711:
  7920  1F92  2F95               	goto	l142
  7921  1F93                     u4710:
  7922  1F93                     l3479:
  7923                           
  7924                           ;LCD.c: 17:         RD2=1;}
  7925  1F93  1508               	bsf	8,2	;volatile
  7926  1F94  2F96               	goto	l143
  7927  1F95                     l142:	
  7928                           ;LCD.c: 18:     else{
  7929                           
  7930                           
  7931                           ;LCD.c: 19:         RD2=0;}
  7932  1F95  1108               	bcf	8,2	;volatile
  7933  1F96                     l143:
  7934                           
  7935                           ;LCD.c: 20:     if(a & 8){
  7936  1F96  1DF3               	btfss	pin@a,3
  7937  1F97  2F99               	goto	u4721
  7938  1F98  2F9A               	goto	u4720
  7939  1F99                     u4721:
  7940  1F99  2F9C               	goto	l144
  7941  1F9A                     u4720:
  7942  1F9A                     l3481:
  7943                           
  7944                           ;LCD.c: 21:         RD3=1;}
  7945  1F9A  1588               	bsf	8,3	;volatile
  7946  1F9B  2F9D               	goto	l145
  7947  1F9C                     l144:	
  7948                           ;LCD.c: 22:     else{
  7949                           
  7950                           
  7951                           ;LCD.c: 23:         RD3=0;}
  7952  1F9C  1188               	bcf	8,3	;volatile
  7953  1F9D                     l145:
  7954                           
  7955                           ;LCD.c: 24:     if(a & 16){
  7956  1F9D  1E73               	btfss	pin@a,4
  7957  1F9E  2FA0               	goto	u4731
  7958  1F9F  2FA1               	goto	u4730
  7959  1FA0                     u4731:
  7960  1FA0  2FA3               	goto	l146
  7961  1FA1                     u4730:
  7962  1FA1                     l3483:
  7963                           
  7964                           ;LCD.c: 25:         RD4=1;}
  7965  1FA1  1608               	bsf	8,4	;volatile
  7966  1FA2  2FA4               	goto	l147
  7967  1FA3                     l146:	
  7968                           ;LCD.c: 26:     else{
  7969                           
  7970                           
  7971                           ;LCD.c: 27:         RD4=0;}
  7972  1FA3  1208               	bcf	8,4	;volatile
  7973  1FA4                     l147:
  7974                           
  7975                           ;LCD.c: 28:     if(a & 32){
  7976  1FA4  1EF3               	btfss	pin@a,5
  7977  1FA5  2FA7               	goto	u4741
  7978  1FA6  2FA8               	goto	u4740
  7979  1FA7                     u4741:
  7980  1FA7  2FAA               	goto	l148
  7981  1FA8                     u4740:
  7982  1FA8                     l3485:
  7983                           
  7984                           ;LCD.c: 29:         RD5=1;}
  7985  1FA8  1688               	bsf	8,5	;volatile
  7986  1FA9  2FAB               	goto	l149
  7987  1FAA                     l148:	
  7988                           ;LCD.c: 30:     else{
  7989                           
  7990                           
  7991                           ;LCD.c: 31:         RD5=0;}
  7992  1FAA  1288               	bcf	8,5	;volatile
  7993  1FAB                     l149:
  7994                           
  7995                           ;LCD.c: 32:     if(a & 64){
  7996  1FAB  1F73               	btfss	pin@a,6
  7997  1FAC  2FAE               	goto	u4751
  7998  1FAD  2FAF               	goto	u4750
  7999  1FAE                     u4751:
  8000  1FAE  2FB1               	goto	l150
  8001  1FAF                     u4750:
  8002  1FAF                     l3487:
  8003                           
  8004                           ;LCD.c: 33:         RD6=1;}
  8005  1FAF  1708               	bsf	8,6	;volatile
  8006  1FB0  2FB2               	goto	l151
  8007  1FB1                     l150:	
  8008                           ;LCD.c: 34:     else{
  8009                           
  8010                           
  8011                           ;LCD.c: 35:         RD6=0;}
  8012  1FB1  1308               	bcf	8,6	;volatile
  8013  1FB2                     l151:
  8014                           
  8015                           ;LCD.c: 36:     if(a & 128){
  8016  1FB2  1FF3               	btfss	pin@a,7
  8017  1FB3  2FB5               	goto	u4761
  8018  1FB4  2FB6               	goto	u4760
  8019  1FB5                     u4761:
  8020  1FB5  2FB8               	goto	l152
  8021  1FB6                     u4760:
  8022  1FB6                     l3489:
  8023                           
  8024                           ;LCD.c: 37:         RD7=1;}
  8025  1FB6  1788               	bsf	8,7	;volatile
  8026  1FB7  2FB9               	goto	l154
  8027  1FB8                     l152:	
  8028                           ;LCD.c: 38:     else{
  8029                           
  8030                           
  8031                           ;LCD.c: 39:         RD7=0;}
  8032  1FB8  1388               	bcf	8,7	;volatile
  8033  1FB9                     l154:
  8034  1FB9  0008               	return
  8035  1FBA                     __end_of_pin:
  8036                           
  8037                           	psect	text32
  8038  0802                     __ptext32:	
  8039 ;; *************** function __baudios *****************
  8040 ;; Defined at:
  8041 ;;		line 5 in file "USART.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8055 ;;      Params:         0       0       0       0       0
  8056 ;;      Locals:         0       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0
  8058 ;;      Totals:         0       0       0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    2
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function __baudios
  8071  0802                     __baudios:
  8072  0802                     l2893:	
  8073                           ;incstack = 0
  8074                           ; Regs used in __baudios: [wreg]
  8075                           
  8076                           
  8077                           ;USART.c: 6:     SPBRG = 12;
  8078  0802  300C               	movlw	12
  8079  0803  1683               	bsf	3,5	;RP0=1, select bank1
  8080  0804  1303               	bcf	3,6	;RP1=0, select bank1
  8081  0805  0099               	movwf	25	;volatile
  8082  0806                     l236:
  8083  0806  0008               	return
  8084  0807                     __end_of__baudios:
  8085                           
  8086                           	psect	text33
  8087  1E7F                     __ptext33:	
  8088 ;; *************** function ___awtoft *****************
  8089 ;; Defined at:
  8090 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  c               2    3[BANK0 ] int 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  sign            1    8[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  3    3[BANK0 ] float 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2, status,0, pclath, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8104 ;;      Params:         0       3       0       0       0
  8105 ;;      Locals:         0       1       0       0       0
  8106 ;;      Temps:          0       2       0       0       0
  8107 ;;      Totals:         0       6       0       0       0
  8108 ;;Total ram usage:        6 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    3
  8111 ;; This function calls:
  8112 ;;		___ftpack
  8113 ;; This function is called by:
  8114 ;;		_main
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function ___awtoft
  8120  1E7F                     ___awtoft:
  8121  1E7F                     l4369:	
  8122                           ;incstack = 0
  8123                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8124                           
  8125  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  8126  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  8127  1E81  01A8               	clrf	___awtoft@sign
  8128  1E82                     l4371:
  8129  1E82  1FA4               	btfss	___awtoft@c+1,7
  8130  1E83  2E85               	goto	u6611
  8131  1E84  2E86               	goto	u6610
  8132  1E85                     u6611:
  8133  1E85  2E8D               	goto	l4377
  8134  1E86                     u6610:
  8135  1E86                     l4373:
  8136  1E86  09A3               	comf	___awtoft@c,f
  8137  1E87  09A4               	comf	___awtoft@c+1,f
  8138  1E88  0AA3               	incf	___awtoft@c,f
  8139  1E89  1903               	skipnz
  8140  1E8A  0AA4               	incf	___awtoft@c+1,f
  8141  1E8B                     l4375:
  8142  1E8B  01A8               	clrf	___awtoft@sign
  8143  1E8C  0AA8               	incf	___awtoft@sign,f
  8144  1E8D                     l4377:
  8145  1E8D  0823               	movf	___awtoft@c,w
  8146  1E8E  00F3               	movwf	___ftpack@arg
  8147  1E8F  0824               	movf	___awtoft@c+1,w
  8148  1E90  00F4               	movwf	___ftpack@arg+1
  8149  1E91  01F5               	clrf	___ftpack@arg+2
  8150  1E92  308E               	movlw	142
  8151  1E93  00A6               	movwf	??___awtoft
  8152  1E94  0826               	movf	??___awtoft,w
  8153  1E95  00F6               	movwf	___ftpack@exp
  8154  1E96  0828               	movf	___awtoft@sign,w
  8155  1E97  00A7               	movwf	??___awtoft+1
  8156  1E98  0827               	movf	??___awtoft+1,w
  8157  1E99  00F7               	movwf	___ftpack@sign
  8158  1E9A  160A  118A  22C1  160A  158A  	fcall	___ftpack
  8159  1E9F  0873               	movf	?___ftpack,w
  8160  1EA0  1283               	bcf	3,5	;RP0=0, select bank0
  8161  1EA1  1303               	bcf	3,6	;RP1=0, select bank0
  8162  1EA2  00A3               	movwf	?___awtoft
  8163  1EA3  0874               	movf	?___ftpack+1,w
  8164  1EA4  00A4               	movwf	?___awtoft+1
  8165  1EA5  0875               	movf	?___ftpack+2,w
  8166  1EA6  00A5               	movwf	?___awtoft+2
  8167  1EA7                     l667:
  8168  1EA7  0008               	return
  8169  1EA8                     __end_of___awtoft:
  8170                           
  8171                           	psect	text34
  8172  12C1                     __ptext34:	
  8173 ;; *************** function ___ftpack *****************
  8174 ;; Defined at:
  8175 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  arg             3    3[COMMON] unsigned um
  8178 ;;  exp             1    6[COMMON] unsigned char 
  8179 ;;  sign            1    7[COMMON] unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  3    3[COMMON] float 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8191 ;;      Params:         5       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0
  8193 ;;      Temps:          0       3       0       0       0
  8194 ;;      Totals:         5       3       0       0       0
  8195 ;;Total ram usage:        8 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    2
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		___awtoft
  8202 ;;		___ftadd
  8203 ;;		___ftmul
  8204 ;;		___lltoft
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function ___ftpack
  8210  12C1                     ___ftpack:
  8211  12C1                     l3441:	
  8212                           ;incstack = 0
  8213                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8214                           
  8215  12C1  0876               	movf	___ftpack@exp,w
  8216  12C2  1903               	btfsc	3,2
  8217  12C3  2AC5               	goto	u4571
  8218  12C4  2AC6               	goto	u4570
  8219  12C5                     u4571:
  8220  12C5  2ACD               	goto	l3445
  8221  12C6                     u4570:
  8222  12C6                     l3443:
  8223  12C6  0875               	movf	___ftpack@arg+2,w
  8224  12C7  0474               	iorwf	___ftpack@arg+1,w
  8225  12C8  0473               	iorwf	___ftpack@arg,w
  8226  12C9  1D03               	skipz
  8227  12CA  2ACC               	goto	u4581
  8228  12CB  2ACD               	goto	u4580
  8229  12CC                     u4581:
  8230  12CC  2AE2               	goto	l3451
  8231  12CD                     u4580:
  8232  12CD                     l3445:
  8233  12CD  3000               	movlw	0
  8234  12CE  00F3               	movwf	?___ftpack
  8235  12CF  3000               	movlw	0
  8236  12D0  00F4               	movwf	?___ftpack+1
  8237  12D1  3000               	movlw	0
  8238  12D2  00F5               	movwf	?___ftpack+2
  8239  12D3  2B42               	goto	l690
  8240  12D4                     l3449:
  8241  12D4  3001               	movlw	1
  8242  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  8243  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  8244  12D7  00A0               	movwf	??___ftpack
  8245  12D8  0820               	movf	??___ftpack,w
  8246  12D9  07F6               	addwf	___ftpack@exp,f
  8247  12DA  3001               	movlw	1
  8248  12DB                     u4595:
  8249  12DB  1003               	clrc
  8250  12DC  0CF5               	rrf	___ftpack@arg+2,f
  8251  12DD  0CF4               	rrf	___ftpack@arg+1,f
  8252  12DE  0CF3               	rrf	___ftpack@arg,f
  8253  12DF  3EFF               	addlw	-1
  8254  12E0  1D03               	skipz
  8255  12E1  2ADB               	goto	u4595
  8256  12E2                     l3451:
  8257  12E2  30FE               	movlw	254
  8258  12E3  0575               	andwf	___ftpack@arg+2,w
  8259  12E4  1D03               	btfss	3,2
  8260  12E5  2AE7               	goto	u4601
  8261  12E6  2AE8               	goto	u4600
  8262  12E7                     u4601:
  8263  12E7  2AD4               	goto	l3449
  8264  12E8                     u4600:
  8265  12E8  2B01               	goto	l694
  8266  12E9                     l3453:
  8267  12E9  3001               	movlw	1
  8268  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  8269  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  8270  12EC  00A0               	movwf	??___ftpack
  8271  12ED  0820               	movf	??___ftpack,w
  8272  12EE  07F6               	addwf	___ftpack@exp,f
  8273  12EF                     l3455:
  8274  12EF  3001               	movlw	1
  8275  12F0  07F3               	addwf	___ftpack@arg,f
  8276  12F1  3000               	movlw	0
  8277  12F2  1803               	skipnc
  8278  12F3  3001               	movlw	1
  8279  12F4  07F4               	addwf	___ftpack@arg+1,f
  8280  12F5  3000               	movlw	0
  8281  12F6  1803               	skipnc
  8282  12F7  3001               	movlw	1
  8283  12F8  07F5               	addwf	___ftpack@arg+2,f
  8284  12F9                     l3457:
  8285  12F9  3001               	movlw	1
  8286  12FA                     u4615:
  8287  12FA  1003               	clrc
  8288  12FB  0CF5               	rrf	___ftpack@arg+2,f
  8289  12FC  0CF4               	rrf	___ftpack@arg+1,f
  8290  12FD  0CF3               	rrf	___ftpack@arg,f
  8291  12FE  3EFF               	addlw	-1
  8292  12FF  1D03               	skipz
  8293  1300  2AFA               	goto	u4615
  8294  1301                     l694:
  8295  1301  30FF               	movlw	255
  8296  1302  0575               	andwf	___ftpack@arg+2,w
  8297  1303  1D03               	btfss	3,2
  8298  1304  2B06               	goto	u4621
  8299  1305  2B07               	goto	u4620
  8300  1306                     u4621:
  8301  1306  2AE9               	goto	l3453
  8302  1307                     u4620:
  8303  1307  2B12               	goto	l3461
  8304  1308                     l3459:
  8305  1308  3001               	movlw	1
  8306  1309  02F6               	subwf	___ftpack@exp,f
  8307  130A  3001               	movlw	1
  8308  130B                     u4635:
  8309  130B  1003               	clrc
  8310  130C  0DF3               	rlf	___ftpack@arg,f
  8311  130D  0DF4               	rlf	___ftpack@arg+1,f
  8312  130E  0DF5               	rlf	___ftpack@arg+2,f
  8313  130F  3EFF               	addlw	-1
  8314  1310  1D03               	skipz
  8315  1311  2B0B               	goto	u4635
  8316  1312                     l3461:
  8317  1312  1BF4               	btfsc	___ftpack@arg+1,7
  8318  1313  2B15               	goto	u4641
  8319  1314  2B16               	goto	u4640
  8320  1315                     u4641:
  8321  1315  2B1C               	goto	l701
  8322  1316                     u4640:
  8323  1316                     l3463:
  8324  1316  3002               	movlw	2
  8325  1317  0276               	subwf	___ftpack@exp,w
  8326  1318  1803               	skipnc
  8327  1319  2B1B               	goto	u4651
  8328  131A  2B1C               	goto	u4650
  8329  131B                     u4651:
  8330  131B  2B08               	goto	l3459
  8331  131C                     u4650:
  8332  131C                     l701:
  8333  131C  1876               	btfsc	___ftpack@exp,0
  8334  131D  2B1F               	goto	u4661
  8335  131E  2B20               	goto	u4660
  8336  131F                     u4661:
  8337  131F  2B26               	goto	l702
  8338  1320                     u4660:
  8339  1320                     l3465:
  8340  1320  30FF               	movlw	255
  8341  1321  05F3               	andwf	___ftpack@arg,f
  8342  1322  307F               	movlw	127
  8343  1323  05F4               	andwf	___ftpack@arg+1,f
  8344  1324  30FF               	movlw	255
  8345  1325  05F5               	andwf	___ftpack@arg+2,f
  8346  1326                     l702:
  8347  1326  1003               	clrc
  8348  1327  0CF6               	rrf	___ftpack@exp,f
  8349  1328                     l3467:
  8350  1328  0876               	movf	___ftpack@exp,w
  8351  1329  1283               	bcf	3,5	;RP0=0, select bank0
  8352  132A  1303               	bcf	3,6	;RP1=0, select bank0
  8353  132B  00A0               	movwf	??___ftpack
  8354  132C  01A1               	clrf	??___ftpack+1
  8355  132D  01A2               	clrf	??___ftpack+2
  8356  132E  3010               	movlw	16
  8357  132F                     u4675:
  8358  132F  1003               	clrc
  8359  1330  0DA0               	rlf	??___ftpack,f
  8360  1331  0DA1               	rlf	??___ftpack+1,f
  8361  1332  0DA2               	rlf	??___ftpack+2,f
  8362  1333                     u4670:
  8363  1333  3EFF               	addlw	-1
  8364  1334  1D03               	skipz
  8365  1335  2B2F               	goto	u4675
  8366  1336  0820               	movf	??___ftpack,w
  8367  1337  04F3               	iorwf	___ftpack@arg,f
  8368  1338  0821               	movf	??___ftpack+1,w
  8369  1339  04F4               	iorwf	___ftpack@arg+1,f
  8370  133A  0822               	movf	??___ftpack+2,w
  8371  133B  04F5               	iorwf	___ftpack@arg+2,f
  8372  133C                     l3469:
  8373  133C  0877               	movf	___ftpack@sign,w
  8374  133D  1903               	btfsc	3,2
  8375  133E  2B40               	goto	u4681
  8376  133F  2B41               	goto	u4680
  8377  1340                     u4681:
  8378  1340  2B42               	goto	l703
  8379  1341                     u4680:
  8380  1341                     l3471:
  8381  1341  17F5               	bsf	___ftpack@arg+2,7
  8382  1342                     l703:
  8383  1342                     l690:
  8384  1342  0008               	return
  8385  1343                     __end_of___ftpack:
  8386                           
  8387                           	psect	text35
  8388  1DAF                     __ptext35:	
  8389 ;; *************** function _Write_USART_String *****************
  8390 ;; Defined at:
  8391 ;;		line 30 in file "USART.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  a               1    wreg     PTR unsigned char 
  8394 ;;		 -> BUFFER(20), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  a               1    5[COMMON] PTR unsigned char 
  8397 ;;		 -> BUFFER(20), 
  8398 ;;  i               1    6[COMMON] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8408 ;;      Params:         0       0       0       0       0
  8409 ;;      Locals:         2       0       0       0       0
  8410 ;;      Temps:          1       0       0       0       0
  8411 ;;      Totals:         3       0       0       0       0
  8412 ;;Total ram usage:        3 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    3
  8415 ;; This function calls:
  8416 ;;		_Write_USART
  8417 ;; This function is called by:
  8418 ;;		_main
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _Write_USART_String
  8424  1DAF                     _Write_USART_String:
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8428                           ;Write_USART_String@a stored from wreg
  8429  1DAF  00F5               	movwf	Write_USART_String@a
  8430  1DB0                     l3299:
  8431                           
  8432                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  8433  1DB0  01F6               	clrf	Write_USART_String@i
  8434  1DB1  2DC1               	goto	l3305
  8435  1DB2                     l3301:
  8436                           
  8437                           ;USART.c: 33:         Write_USART(a[i]);
  8438  1DB2  0876               	movf	Write_USART_String@i,w
  8439  1DB3  0775               	addwf	Write_USART_String@a,w
  8440  1DB4  00F4               	movwf	??_Write_USART_String
  8441  1DB5  0874               	movf	??_Write_USART_String,w
  8442  1DB6  0084               	movwf	4
  8443  1DB7  0800               	movf	0,w
  8444  1DB8  160A  158A  2549  160A  158A  	fcall	_Write_USART
  8445  1DBD                     l3303:
  8446                           
  8447                           ;USART.c: 34:     }
  8448  1DBD  3001               	movlw	1
  8449  1DBE  00F4               	movwf	??_Write_USART_String
  8450  1DBF  0874               	movf	??_Write_USART_String,w
  8451  1DC0  07F6               	addwf	Write_USART_String@i,f
  8452  1DC1                     l3305:
  8453  1DC1  0876               	movf	Write_USART_String@i,w
  8454  1DC2  0775               	addwf	Write_USART_String@a,w
  8455  1DC3  00F4               	movwf	??_Write_USART_String
  8456  1DC4  0874               	movf	??_Write_USART_String,w
  8457  1DC5  0084               	movwf	4
  8458  1DC6  1383               	bcf	3,7	;select IRP bank0
  8459  1DC7  0800               	movf	0,w
  8460  1DC8  1D03               	btfss	3,2
  8461  1DC9  2DCB               	goto	u4521
  8462  1DCA  2DCC               	goto	u4520
  8463  1DCB                     u4521:
  8464  1DCB  2DB2               	goto	l3301
  8465  1DCC                     u4520:
  8466  1DCC                     l254:
  8467  1DCC  0008               	return
  8468  1DCD                     __end_of_Write_USART_String:
  8469                           
  8470                           	psect	text36
  8471  1D49                     __ptext36:	
  8472 ;; *************** function _Write_USART *****************
  8473 ;; Defined at:
  8474 ;;		line 26 in file "USART.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  a               1    wreg     unsigned char 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;  a               1    3[COMMON] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         0       0       0       0       0
  8489 ;;      Locals:         1       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0
  8491 ;;      Totals:         1       0       0       0       0
  8492 ;;Total ram usage:        1 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    2
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_main
  8499 ;;		_Write_USART_String
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           
  8504                           ;psect for function _Write_USART
  8505  1D49                     _Write_USART:
  8506                           
  8507                           ;incstack = 0
  8508                           ; Regs used in _Write_USART: [wreg]
  8509                           ;Write_USART@a stored from wreg
  8510  1D49  00F3               	movwf	Write_USART@a
  8511  1D4A                     l2527:
  8512  1D4A                     l245:	
  8513                           ;USART.c: 27:     while(!TRMT);
  8514                           
  8515  1D4A  1683               	bsf	3,5	;RP0=1, select bank1
  8516  1D4B  1303               	bcf	3,6	;RP1=0, select bank1
  8517  1D4C  1C98               	btfss	24,1	;volatile
  8518  1D4D  2D4F               	goto	u3231
  8519  1D4E  2D50               	goto	u3230
  8520  1D4F                     u3231:
  8521  1D4F  2D4A               	goto	l245
  8522  1D50                     u3230:
  8523  1D50                     l2529:
  8524                           
  8525                           ;USART.c: 28:     TXREG=a;
  8526  1D50  0873               	movf	Write_USART@a,w
  8527  1D51  1283               	bcf	3,5	;RP0=0, select bank0
  8528  1D52  1303               	bcf	3,6	;RP1=0, select bank0
  8529  1D53  0099               	movwf	25	;volatile
  8530  1D54                     l248:
  8531  1D54  0008               	return
  8532  1D55                     __end_of_Write_USART:
  8533                           
  8534                           	psect	text37
  8535  1DEC                     __ptext37:	
  8536 ;; *************** function _Enviar_2 *****************
  8537 ;; Defined at:
  8538 ;;		line 142 in file "main.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0, pclath, cstack
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8552 ;;      Params:         0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0
  8554 ;;      Temps:          0       0       0       0       0
  8555 ;;      Totals:         0       0       0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    3
  8559 ;; This function calls:
  8560 ;;		___fttol
  8561 ;; This function is called by:
  8562 ;;		_main
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           
  8567                           ;psect for function _Enviar_2
  8568  1DEC                     _Enviar_2:
  8569  1DEC                     l3309:	
  8570                           ;incstack = 0
  8571                           ; Regs used in _Enviar_2: [wreg+status,2+status,0+pclath+cstack]
  8572                           
  8573                           
  8574                           ;main.c: 143:     TXREG = V2;
  8575  1DEC  1683               	bsf	3,5	;RP0=1, select bank1
  8576  1DED  1303               	bcf	3,6	;RP1=0, select bank1
  8577  1DEE  083F               	movf	_V2^(0+128),w
  8578  1DEF  1283               	bcf	3,5	;RP0=0, select bank0
  8579  1DF0  1303               	bcf	3,6	;RP1=0, select bank0
  8580  1DF1  00C8               	movwf	___fttol@f1
  8581  1DF2  1683               	bsf	3,5	;RP0=1, select bank1
  8582  1DF3  1303               	bcf	3,6	;RP1=0, select bank1
  8583  1DF4  0840               	movf	(_V2+1)^(0+128),w
  8584  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  8585  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  8586  1DF7  00C9               	movwf	___fttol@f1+1
  8587  1DF8  1683               	bsf	3,5	;RP0=1, select bank1
  8588  1DF9  1303               	bcf	3,6	;RP1=0, select bank1
  8589  1DFA  0841               	movf	(_V2+2)^(0+128),w
  8590  1DFB  1283               	bcf	3,5	;RP0=0, select bank0
  8591  1DFC  1303               	bcf	3,6	;RP1=0, select bank0
  8592  1DFD  00CA               	movwf	___fttol@f1+2
  8593  1DFE  160A  118A  2343  160A  158A  	fcall	___fttol
  8594  1E03  1283               	bcf	3,5	;RP0=0, select bank0
  8595  1E04  1303               	bcf	3,6	;RP1=0, select bank0
  8596  1E05  0848               	movf	?___fttol,w
  8597  1E06  0099               	movwf	25	;volatile
  8598  1E07                     l110:	
  8599                           ;main.c: 146:     }
  8600                           
  8601                           
  8602                           ;main.c: 144:     while (TXSTAbits.TRMT == 1){
  8603  1E07  1683               	bsf	3,5	;RP0=1, select bank1
  8604  1E08  1303               	bcf	3,6	;RP1=0, select bank1
  8605  1E09  0818               	movf	24,w	;volatile
  8606  1E0A                     l112:
  8607  1E0A  0008               	return
  8608  1E0B                     __end_of_Enviar_2:
  8609                           
  8610                           	psect	text38
  8611  1DCD                     __ptext38:	
  8612 ;; *************** function _Enviar_1 *****************
  8613 ;; Defined at:
  8614 ;;		line 136 in file "main.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0, pclath, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8628 ;;      Params:         0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    3
  8635 ;; This function calls:
  8636 ;;		___fttol
  8637 ;; This function is called by:
  8638 ;;		_main
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           
  8643                           ;psect for function _Enviar_1
  8644  1DCD                     _Enviar_1:
  8645  1DCD                     l3307:	
  8646                           ;incstack = 0
  8647                           ; Regs used in _Enviar_1: [wreg+status,2+status,0+pclath+cstack]
  8648                           
  8649                           
  8650                           ;main.c: 137:     TXREG = V1;
  8651  1DCD  1683               	bsf	3,5	;RP0=1, select bank1
  8652  1DCE  1303               	bcf	3,6	;RP1=0, select bank1
  8653  1DCF  0842               	movf	_V1^(0+128),w
  8654  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
  8655  1DD1  1303               	bcf	3,6	;RP1=0, select bank0
  8656  1DD2  00C8               	movwf	___fttol@f1
  8657  1DD3  1683               	bsf	3,5	;RP0=1, select bank1
  8658  1DD4  1303               	bcf	3,6	;RP1=0, select bank1
  8659  1DD5  0843               	movf	(_V1+1)^(0+128),w
  8660  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  8661  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  8662  1DD8  00C9               	movwf	___fttol@f1+1
  8663  1DD9  1683               	bsf	3,5	;RP0=1, select bank1
  8664  1DDA  1303               	bcf	3,6	;RP1=0, select bank1
  8665  1DDB  0844               	movf	(_V1+2)^(0+128),w
  8666  1DDC  1283               	bcf	3,5	;RP0=0, select bank0
  8667  1DDD  1303               	bcf	3,6	;RP1=0, select bank0
  8668  1DDE  00CA               	movwf	___fttol@f1+2
  8669  1DDF  160A  118A  2343  160A  158A  	fcall	___fttol
  8670  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  8671  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  8672  1DE6  0848               	movf	?___fttol,w
  8673  1DE7  0099               	movwf	25	;volatile
  8674  1DE8                     l104:	
  8675                           ;main.c: 140:     }
  8676                           
  8677                           
  8678                           ;main.c: 138:     while (TXSTAbits.TRMT == 1){
  8679  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
  8680  1DE9  1303               	bcf	3,6	;RP1=0, select bank1
  8681  1DEA  0818               	movf	24,w	;volatile
  8682  1DEB                     l106:
  8683  1DEB  0008               	return
  8684  1DEC                     __end_of_Enviar_1:
  8685                           
  8686                           	psect	text39
  8687  1343                     __ptext39:	
  8688 ;; *************** function ___fttol *****************
  8689 ;; Defined at:
  8690 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  f1              3   40[BANK0 ] float 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;  lval            4   49[BANK0 ] unsigned long 
  8695 ;;  exp1            1   53[BANK0 ] unsigned char 
  8696 ;;  sign1           1   48[BANK0 ] unsigned char 
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  4   40[BANK0 ] long 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8706 ;;      Params:         0       4       0       0       0
  8707 ;;      Locals:         0       6       0       0       0
  8708 ;;      Temps:          0       4       0       0       0
  8709 ;;      Totals:         0      14       0       0       0
  8710 ;;Total ram usage:       14 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:    2
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_Enviar_1
  8717 ;;		_Enviar_2
  8718 ;;		_sprintf
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           
  8723                           ;psect for function ___fttol
  8724  1343                     ___fttol:
  8725  1343                     l2811:	
  8726                           ;incstack = 0
  8727                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8728                           
  8729  1343  1283               	bcf	3,5	;RP0=0, select bank0
  8730  1344  1303               	bcf	3,6	;RP1=0, select bank0
  8731  1345  0848               	movf	___fttol@f1,w
  8732  1346  00CC               	movwf	??___fttol
  8733  1347  0849               	movf	___fttol@f1+1,w
  8734  1348  00CD               	movwf	??___fttol+1
  8735  1349  084A               	movf	___fttol@f1+2,w
  8736  134A  00CE               	movwf	??___fttol+2
  8737  134B  1003               	clrc
  8738  134C  0D4D               	rlf	??___fttol+1,w
  8739  134D  0D4E               	rlf	??___fttol+2,w
  8740  134E  00CF               	movwf	??___fttol+3
  8741  134F  084F               	movf	??___fttol+3,w
  8742  1350  00D5               	movwf	___fttol@exp1
  8743  1351  0855               	movf	___fttol@exp1,w
  8744  1352  1D03               	btfss	3,2
  8745  1353  2B55               	goto	u3741
  8746  1354  2B56               	goto	u3740
  8747  1355                     u3741:
  8748  1355  2B5F               	goto	l2817
  8749  1356                     u3740:
  8750  1356                     l2813:
  8751  1356  3000               	movlw	0
  8752  1357  00CB               	movwf	?___fttol+3
  8753  1358  3000               	movlw	0
  8754  1359  00CA               	movwf	?___fttol+2
  8755  135A  3000               	movlw	0
  8756  135B  00C9               	movwf	?___fttol+1
  8757  135C  3000               	movlw	0
  8758  135D  00C8               	movwf	?___fttol
  8759  135E  2BCE               	goto	l795
  8760  135F                     l2817:
  8761  135F  0848               	movf	___fttol@f1,w
  8762  1360  00CC               	movwf	??___fttol
  8763  1361  0849               	movf	___fttol@f1+1,w
  8764  1362  00CD               	movwf	??___fttol+1
  8765  1363  084A               	movf	___fttol@f1+2,w
  8766  1364  00CE               	movwf	??___fttol+2
  8767  1365  3017               	movlw	23
  8768  1366                     u3755:
  8769  1366  1003               	clrc
  8770  1367  0CCE               	rrf	??___fttol+2,f
  8771  1368  0CCD               	rrf	??___fttol+1,f
  8772  1369  0CCC               	rrf	??___fttol,f
  8773  136A                     u3750:
  8774  136A  3EFF               	addlw	-1
  8775  136B  1D03               	skipz
  8776  136C  2B66               	goto	u3755
  8777  136D  084C               	movf	??___fttol,w
  8778  136E  00CF               	movwf	??___fttol+3
  8779  136F  084F               	movf	??___fttol+3,w
  8780  1370  00D0               	movwf	___fttol@sign1
  8781  1371                     l2819:
  8782  1371  17C9               	bsf	___fttol@f1+1,7
  8783  1372                     l2821:
  8784  1372  30FF               	movlw	255
  8785  1373  05C8               	andwf	___fttol@f1,f
  8786  1374  30FF               	movlw	255
  8787  1375  05C9               	andwf	___fttol@f1+1,f
  8788  1376  3000               	movlw	0
  8789  1377  05CA               	andwf	___fttol@f1+2,f
  8790  1378                     l2823:
  8791  1378  0848               	movf	___fttol@f1,w
  8792  1379  00D1               	movwf	___fttol@lval
  8793  137A  0849               	movf	___fttol@f1+1,w
  8794  137B  00D2               	movwf	___fttol@lval+1
  8795  137C  084A               	movf	___fttol@f1+2,w
  8796  137D  00D3               	movwf	___fttol@lval+2
  8797  137E  01D4               	clrf	___fttol@lval+3
  8798  137F                     l2825:
  8799  137F  308E               	movlw	142
  8800  1380  02D5               	subwf	___fttol@exp1,f
  8801  1381                     l2827:
  8802  1381  1FD5               	btfss	___fttol@exp1,7
  8803  1382  2B84               	goto	u3761
  8804  1383  2B85               	goto	u3760
  8805  1384                     u3761:
  8806  1384  2B9F               	goto	l2837
  8807  1385                     u3760:
  8808  1385                     l2829:
  8809  1385  0855               	movf	___fttol@exp1,w
  8810  1386  3A80               	xorlw	128
  8811  1387  3E8F               	addlw	143
  8812  1388  1803               	skipnc
  8813  1389  2B8B               	goto	u3771
  8814  138A  2B8C               	goto	u3770
  8815  138B                     u3771:
  8816  138B  2B8D               	goto	l2835
  8817  138C                     u3770:
  8818  138C  2B56               	goto	l2813
  8819  138D                     l2835:
  8820  138D  3001               	movlw	1
  8821  138E                     u3785:
  8822  138E  1003               	clrc
  8823  138F  0CD4               	rrf	___fttol@lval+3,f
  8824  1390  0CD3               	rrf	___fttol@lval+2,f
  8825  1391  0CD2               	rrf	___fttol@lval+1,f
  8826  1392  0CD1               	rrf	___fttol@lval,f
  8827  1393  3EFF               	addlw	-1
  8828  1394  1D03               	skipz
  8829  1395  2B8E               	goto	u3785
  8830  1396  3001               	movlw	1
  8831  1397  00CC               	movwf	??___fttol
  8832  1398  084C               	movf	??___fttol,w
  8833  1399  07D5               	addwf	___fttol@exp1,f
  8834  139A  1D03               	btfss	3,2
  8835  139B  2B9D               	goto	u3791
  8836  139C  2B9E               	goto	u3790
  8837  139D                     u3791:
  8838  139D  2B8D               	goto	l2835
  8839  139E                     u3790:
  8840  139E  2BB6               	goto	l2845
  8841  139F                     l2837:
  8842  139F  3018               	movlw	24
  8843  13A0  0255               	subwf	___fttol@exp1,w
  8844  13A1  1C03               	skipc
  8845  13A2  2BA4               	goto	u3801
  8846  13A3  2BA5               	goto	u3800
  8847  13A4                     u3801:
  8848  13A4  2BB1               	goto	l802
  8849  13A5                     u3800:
  8850  13A5  2B56               	goto	l2813
  8851  13A6                     l2843:
  8852  13A6  3001               	movlw	1
  8853  13A7  00CC               	movwf	??___fttol
  8854  13A8                     u3815:
  8855  13A8  1003               	clrc
  8856  13A9  0DD1               	rlf	___fttol@lval,f
  8857  13AA  0DD2               	rlf	___fttol@lval+1,f
  8858  13AB  0DD3               	rlf	___fttol@lval+2,f
  8859  13AC  0DD4               	rlf	___fttol@lval+3,f
  8860  13AD  0BCC               	decfsz	??___fttol,f
  8861  13AE  2BA8               	goto	u3815
  8862  13AF  3001               	movlw	1
  8863  13B0  02D5               	subwf	___fttol@exp1,f
  8864  13B1                     l802:
  8865  13B1  0855               	movf	___fttol@exp1,w
  8866  13B2  1D03               	btfss	3,2
  8867  13B3  2BB5               	goto	u3821
  8868  13B4  2BB6               	goto	u3820
  8869  13B5                     u3821:
  8870  13B5  2BA6               	goto	l2843
  8871  13B6                     u3820:
  8872  13B6                     l2845:
  8873  13B6  0850               	movf	___fttol@sign1,w
  8874  13B7  1903               	btfsc	3,2
  8875  13B8  2BBA               	goto	u3831
  8876  13B9  2BBB               	goto	u3830
  8877  13BA                     u3831:
  8878  13BA  2BC6               	goto	l2849
  8879  13BB                     u3830:
  8880  13BB                     l2847:
  8881  13BB  09D1               	comf	___fttol@lval,f
  8882  13BC  09D2               	comf	___fttol@lval+1,f
  8883  13BD  09D3               	comf	___fttol@lval+2,f
  8884  13BE  09D4               	comf	___fttol@lval+3,f
  8885  13BF  0AD1               	incf	___fttol@lval,f
  8886  13C0  1903               	skipnz
  8887  13C1  0AD2               	incf	___fttol@lval+1,f
  8888  13C2  1903               	skipnz
  8889  13C3  0AD3               	incf	___fttol@lval+2,f
  8890  13C4  1903               	skipnz
  8891  13C5  0AD4               	incf	___fttol@lval+3,f
  8892  13C6                     l2849:
  8893  13C6  0854               	movf	___fttol@lval+3,w
  8894  13C7  00CB               	movwf	?___fttol+3
  8895  13C8  0853               	movf	___fttol@lval+2,w
  8896  13C9  00CA               	movwf	?___fttol+2
  8897  13CA  0852               	movf	___fttol@lval+1,w
  8898  13CB  00C9               	movwf	?___fttol+1
  8899  13CC  0851               	movf	___fttol@lval,w
  8900  13CD  00C8               	movwf	?___fttol
  8901  13CE                     l795:
  8902  13CE  0008               	return
  8903  13CF                     __end_of___fttol:
  8904                           
  8905                           	psect	text40
  8906  1E56                     __ptext40:	
  8907 ;; *************** function _ISR *****************
  8908 ;; Defined at:
  8909 ;;		line 61 in file "main.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;		None
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;		None
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  1    wreg      void 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0, pclath, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8923 ;;      Params:         0       0       0       0       0
  8924 ;;      Locals:         0       0       0       0       0
  8925 ;;      Temps:          3       0       0       0       0
  8926 ;;      Totals:         3       0       0       0       0
  8927 ;;Total ram usage:        3 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:    1
  8930 ;; This function calls:
  8931 ;;		_Read_USART
  8932 ;; This function is called by:
  8933 ;;		Interrupt level 1
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           
  8938                           ;psect for function _ISR
  8939  1E56                     _ISR:
  8940  1E56                     i1l2081:
  8941                           
  8942                           ;main.c: 62:     if (RCIF == 1){
  8943  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  8944  1E57  1303               	bcf	3,6	;RP1=0, select bank0
  8945  1E58  1E8C               	btfss	12,5	;volatile
  8946  1E59  2E5B               	goto	u225_21
  8947  1E5A  2E5C               	goto	u225_20
  8948  1E5B                     u225_21:
  8949  1E5B  2E78               	goto	i1l87
  8950  1E5C                     u225_20:
  8951  1E5C                     i1l2083:
  8952                           
  8953                           ;main.c: 63:         RCIF = 0;
  8954  1E5C  128C               	bcf	12,5	;volatile
  8955  1E5D                     i1l2085:
  8956                           
  8957                           ;main.c: 64:         readUSART = Read_USART();
  8958  1E5D  160A  158A  251D  160A  158A  	fcall	_Read_USART
  8959  1E62  00F0               	movwf	??_ISR
  8960  1E63  0870               	movf	??_ISR,w
  8961  1E64  00F9               	movwf	_readUSART
  8962  1E65                     i1l2087:
  8963                           
  8964                           ;main.c: 65:     if (readUSART == '+'){
  8965  1E65  302B               	movlw	43
  8966  1E66  0679               	xorwf	_readUSART,w
  8967  1E67  1D03               	btfss	3,2
  8968  1E68  2E6A               	goto	u226_21
  8969  1E69  2E6B               	goto	u226_20
  8970  1E6A                     u226_21:
  8971  1E6A  2E70               	goto	i1l2091
  8972  1E6B                     u226_20:
  8973  1E6B                     i1l2089:
  8974                           
  8975                           ;main.c: 66:         contador++;
  8976  1E6B  3001               	movlw	1
  8977  1E6C  00F0               	movwf	??_ISR
  8978  1E6D  0870               	movf	??_ISR,w
  8979  1E6E  07FA               	addwf	_contador,f
  8980                           
  8981                           ;main.c: 67:     }
  8982  1E6F  2E78               	goto	i1l87
  8983  1E70                     i1l2091:
  8984  1E70  302D               	movlw	45
  8985  1E71  0679               	xorwf	_readUSART,w
  8986  1E72  1D03               	btfss	3,2
  8987  1E73  2E75               	goto	u227_21
  8988  1E74  2E76               	goto	u227_20
  8989  1E75                     u227_21:
  8990  1E75  2E78               	goto	i1l87
  8991  1E76                     u227_20:
  8992  1E76                     i1l2093:
  8993                           
  8994                           ;main.c: 69:         contador--;
  8995  1E76  3001               	movlw	1
  8996  1E77  02FA               	subwf	_contador,f
  8997  1E78                     i1l87:
  8998  1E78  0872               	movf	??_ISR+2,w
  8999  1E79  008A               	movwf	10
  9000  1E7A  0E71               	swapf	??_ISR+1,w
  9001  1E7B  0083               	movwf	3
  9002  1E7C  0EFE               	swapf	btemp,f
  9003  1E7D  0E7E               	swapf	btemp,w
  9004  1E7E  0009               	retfie
  9005  1E7F                     __end_of_ISR:
  9006                           
  9007                           	psect	intentry
  9008  0004                     __pintentry:	
  9009                           ;incstack = 0
  9010                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9011                           
  9012  0004                     interrupt_function:
  9013  007E                     saved_w	set	btemp
  9014  0004  00FE               	movwf	btemp
  9015  0005  0E03               	swapf	3,w
  9016  0006  00F1               	movwf	??_ISR+1
  9017  0007  080A               	movf	10,w
  9018  0008  00F2               	movwf	??_ISR+2
  9019  0009  160A  158A  2E56   	ljmp	_ISR
  9020                           
  9021                           	psect	text41
  9022  1D1D                     __ptext41:	
  9023 ;; *************** function _Read_USART *****************
  9024 ;; Defined at:
  9025 ;;		line 36 in file "USART.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      unsigned char 
  9032 ;; Registers used:
  9033 ;;		wreg
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_ISR
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _Read_USART
  9054  1D1D                     _Read_USART:
  9055  1D1D                     i1l1635:	
  9056                           ;incstack = 0
  9057                           ; Regs used in _Read_USART: [wreg]
  9058                           
  9059  1D1D                     i1l257:	
  9060                           ;USART.c: 37:   while(!RCIF);
  9061                           
  9062  1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  9063  1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  9064  1D1F  1E8C               	btfss	12,5	;volatile
  9065  1D20  2D22               	goto	u162_21
  9066  1D21  2D23               	goto	u162_20
  9067  1D22                     u162_21:
  9068  1D22  2D1D               	goto	i1l257
  9069  1D23                     u162_20:
  9070  1D23                     i1l1637:
  9071                           
  9072                           ;USART.c: 38:   return RCREG;
  9073  1D23  081A               	movf	26,w	;volatile
  9074  1D24                     i1l260:
  9075  1D24  0008               	return
  9076  1D25                     __end_of_Read_USART:
  9077  007E                     btemp	set	126	;btemp
  9078  007E                     wtemp0	set	126
  9079                           
  9080                           	psect	config
  9081                           
  9082                           ;Config register CONFIG1 @ 0x2007
  9083                           ;	Oscillator Selection bits
  9084                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9085                           ;	Watchdog Timer Enable bit
  9086                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9087                           ;	Power-up Timer Enable bit
  9088                           ;	PWRTE = OFF, PWRT disabled
  9089                           ;	RE3/MCLR pin function select bit
  9090                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9091                           ;	Code Protection bit
  9092                           ;	CP = OFF, Program memory code protection is disabled
  9093                           ;	Data Code Protection bit
  9094                           ;	CPD = OFF, Data memory code protection is disabled
  9095                           ;	Brown Out Reset Selection bits
  9096                           ;	BOREN = OFF, BOR disabled
  9097                           ;	Internal External Switchover bit
  9098                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9099                           ;	Fail-Safe Clock Monitor Enabled bit
  9100                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9101                           ;	Low Voltage Programming Enable bit
  9102                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9103                           ;	In-Circuit Debugger Mode bit
  9104                           ;	DEBUG = 0x1, unprogrammed default
  9105  2007                     	org	8199
  9106  2007  20D4               	dw	8404
  9107                           
  9108                           ;Config register CONFIG2 @ 0x2008
  9109                           ;	Brown-out Reset Selection bit
  9110                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9111                           ;	Flash Program Memory Self Write Enable bits
  9112                           ;	WRT = OFF, Write protection off
  9113  2008                     	org	8200
  9114  2008  3FFF               	dw	16383
  9115                           
  9116                           	psect	text3_split_1
  9117  0023                     u6210:
  9118  0023                     l4173:
  9119  0023  1683               	bsf	3,5	;RP0=1, select bank1
  9120  0024  1303               	bcf	3,6	;RP1=0, select bank1
  9121  0025  083A               	movf	(sprintf@fval+2)^(0+128),w
  9122  0026  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  9123  0027  0438               	iorwf	sprintf@fval^(0+128),w
  9124  0028  1903               	skipnz
  9125  0029  282B               	goto	u6221
  9126  002A  282C               	goto	u6220
  9127  002B                     u6221:
  9128  002B  28EA               	goto	l4193
  9129  002C                     u6220:
  9130  002C                     l4175:
  9131  002C  0838               	movf	sprintf@fval^(0+128),w
  9132  002D  1283               	bcf	3,5	;RP0=0, select bank0
  9133  002E  1303               	bcf	3,6	;RP1=0, select bank0
  9134  002F  00C8               	movwf	___fttol@f1
  9135  0030  1683               	bsf	3,5	;RP0=1, select bank1
  9136  0031  1303               	bcf	3,6	;RP1=0, select bank1
  9137  0032  0839               	movf	(sprintf@fval+1)^(0+128),w
  9138  0033  1283               	bcf	3,5	;RP0=0, select bank0
  9139  0034  1303               	bcf	3,6	;RP1=0, select bank0
  9140  0035  00C9               	movwf	___fttol@f1+1
  9141  0036  1683               	bsf	3,5	;RP0=1, select bank1
  9142  0037  1303               	bcf	3,6	;RP1=0, select bank1
  9143  0038  083A               	movf	(sprintf@fval+2)^(0+128),w
  9144  0039  1283               	bcf	3,5	;RP0=0, select bank0
  9145  003A  1303               	bcf	3,6	;RP1=0, select bank0
  9146  003B  00CA               	movwf	___fttol@f1+2
  9147  003C  160A  118A  2343  120A  118A  	fcall	___fttol
  9148  0041  1283               	bcf	3,5	;RP0=0, select bank0
  9149  0042  1303               	bcf	3,6	;RP1=0, select bank0
  9150  0043  084B               	movf	?___fttol+3,w
  9151  0044  044A               	iorwf	?___fttol+2,w
  9152  0045  0449               	iorwf	?___fttol+1,w
  9153  0046  0448               	iorwf	?___fttol,w
  9154  0047  1D03               	skipz
  9155  0048  284A               	goto	u6231
  9156  0049  284B               	goto	u6230
  9157  004A                     u6231:
  9158  004A  28EA               	goto	l4193
  9159  004B                     u6230:
  9160  004B                     l4177:
  9161  004B  1683               	bsf	3,5	;RP0=1, select bank1
  9162  004C  1303               	bcf	3,6	;RP1=0, select bank1
  9163  004D  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9164  004E  3A80               	xorlw	128
  9165  004F  00FF               	movwf	btemp+1
  9166  0050  3080               	movlw	128
  9167  0051  027F               	subwf	btemp+1,w
  9168  0052  1D03               	skipz
  9169  0053  2856               	goto	u6245
  9170  0054  3002               	movlw	2
  9171  0055  0236               	subwf	sprintf@eexp^(0+128),w
  9172  0056                     u6245:
  9173  0056  1C03               	skipc
  9174  0057  2859               	goto	u6241
  9175  0058  285A               	goto	u6240
  9176  0059                     u6241:
  9177  0059  28EA               	goto	l4193
  9178  005A                     u6240:
  9179  005A                     l4179:
  9180                           
  9181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9182  005A  1683               	bsf	3,5	;RP0=1, select bank1
  9183  005B  1303               	bcf	3,6	;RP1=0, select bank1
  9184  005C  082E               	movf	sprintf@tmpval^(0+128),w
  9185  005D  1283               	bcf	3,5	;RP0=0, select bank0
  9186  005E  1303               	bcf	3,6	;RP1=0, select bank0
  9187  005F  00A0               	movwf	___ftge@ff1
  9188  0060  1683               	bsf	3,5	;RP0=1, select bank1
  9189  0061  1303               	bcf	3,6	;RP1=0, select bank1
  9190  0062  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9191  0063  1283               	bcf	3,5	;RP0=0, select bank0
  9192  0064  1303               	bcf	3,6	;RP1=0, select bank0
  9193  0065  00A1               	movwf	___ftge@ff1+1
  9194  0066  1683               	bsf	3,5	;RP0=1, select bank1
  9195  0067  1303               	bcf	3,6	;RP1=0, select bank1
  9196  0068  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9197  0069  1283               	bcf	3,5	;RP0=0, select bank0
  9198  006A  1303               	bcf	3,6	;RP1=0, select bank0
  9199  006B  00A2               	movwf	___ftge@ff1+2
  9200  006C  3070               	movlw	112
  9201  006D  00A3               	movwf	___ftge@ff2
  9202  006E  3089               	movlw	137
  9203  006F  00A4               	movwf	___ftge@ff2+1
  9204  0070  3040               	movlw	64
  9205  0071  00A5               	movwf	___ftge@ff2+2
  9206  0072  160A  158A  2706  120A  118A  	fcall	___ftge
  9207  0077  1803               	btfsc	3,0
  9208  0078  287A               	goto	u6251
  9209  0079  287B               	goto	u6250
  9210  007A                     u6251:
  9211  007A  2884               	goto	l4183
  9212  007B                     u6250:
  9213  007B                     l4181:
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9216  007B  30F7               	movlw	247
  9217  007C  1683               	bsf	3,5	;RP0=1, select bank1
  9218  007D  1303               	bcf	3,6	;RP1=0, select bank1
  9219  007E  07B6               	addwf	sprintf@eexp^(0+128),f
  9220  007F  1803               	skipnc
  9221  0080  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9222  0081  30FF               	movlw	255
  9223  0082  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9224                           
  9225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9226  0083  288C               	goto	l4185
  9227  0084                     l4183:
  9228                           
  9229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9230  0084  30F8               	movlw	248
  9231  0085  1683               	bsf	3,5	;RP0=1, select bank1
  9232  0086  1303               	bcf	3,6	;RP1=0, select bank1
  9233  0087  07B6               	addwf	sprintf@eexp^(0+128),f
  9234  0088  1803               	skipnc
  9235  0089  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9236  008A  30FF               	movlw	255
  9237  008B  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9238  008C                     l4185:
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  9241  008C  0836               	movf	sprintf@eexp^(0+128),w
  9242  008D  120A  158A  226D  120A  118A  	fcall	_scale
  9243  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9244  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9245  0094  083F               	movf	?_scale,w
  9246  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9247  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9248  0097  00AE               	movwf	sprintf@tmpval^(0+128)
  9249  0098  1283               	bcf	3,5	;RP0=0, select bank0
  9250  0099  1303               	bcf	3,6	;RP1=0, select bank0
  9251  009A  0840               	movf	?_scale+1,w
  9252  009B  1683               	bsf	3,5	;RP0=1, select bank1
  9253  009C  1303               	bcf	3,6	;RP1=0, select bank1
  9254  009D  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9255  009E  1283               	bcf	3,5	;RP0=0, select bank0
  9256  009F  1303               	bcf	3,6	;RP1=0, select bank0
  9257  00A0  0841               	movf	?_scale+2,w
  9258  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  9259  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  9260  00A3  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9261  00A4                     l4189:	
  9262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9263                           
  9264  00A4  0838               	movf	sprintf@fval^(0+128),w
  9265  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  9266  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  9267  00A7  00A0               	movwf	__tdiv_to_l_@f1
  9268  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  9269  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  9270  00AA  0839               	movf	(sprintf@fval+1)^(0+128),w
  9271  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  9272  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  9273  00AD  00A1               	movwf	__tdiv_to_l_@f1+1
  9274  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  9275  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  9276  00B0  083A               	movf	(sprintf@fval+2)^(0+128),w
  9277  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9278  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9279  00B3  00A2               	movwf	__tdiv_to_l_@f1+2
  9280  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9281  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9282  00B6  082E               	movf	sprintf@tmpval^(0+128),w
  9283  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  9284  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  9285  00B9  00A3               	movwf	__tdiv_to_l_@f2
  9286  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9287  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9288  00BC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9289  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9290  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9291  00BF  00A4               	movwf	__tdiv_to_l_@f2+1
  9292  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9293  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9294  00C2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9295  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9296  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9297  00C5  00A5               	movwf	__tdiv_to_l_@f2+2
  9298  00C6  120A  158A  2007  120A  118A  	fcall	__tdiv_to_l_
  9299  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  9300  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  9301  00CD  0823               	movf	?__tdiv_to_l_+3,w
  9302  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9303  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9304  00D0  00B5               	movwf	(sprintf@val+3)^(0+128)
  9305  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9306  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9307  00D3  0822               	movf	?__tdiv_to_l_+2,w
  9308  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  9309  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  9310  00D6  00B4               	movwf	(sprintf@val+2)^(0+128)
  9311  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9312  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9313  00D9  0821               	movf	?__tdiv_to_l_+1,w
  9314  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9315  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9316  00DC  00B3               	movwf	(sprintf@val+1)^(0+128)
  9317  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9318  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9319  00DF  0820               	movf	?__tdiv_to_l_,w
  9320  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9321  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9322  00E2  00B2               	movwf	sprintf@val^(0+128)
  9323  00E3                     l4191:
  9324                           
  9325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9326  00E3  3000               	movlw	0
  9327  00E4  00B8               	movwf	sprintf@fval^(0+128)
  9328  00E5  3000               	movlw	0
  9329  00E6  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9330  00E7  3000               	movlw	0
  9331  00E8  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9332                           
  9333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9334  00E9  2967               	goto	l4197
  9335  00EA                     l4193:
  9336                           
  9337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9338  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  9339  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  9340  00EC  0838               	movf	sprintf@fval^(0+128),w
  9341  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9342  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9343  00EF  00C8               	movwf	___fttol@f1
  9344  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  9345  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  9346  00F2  0839               	movf	(sprintf@fval+1)^(0+128),w
  9347  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  9348  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  9349  00F5  00C9               	movwf	___fttol@f1+1
  9350  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  9351  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  9352  00F8  083A               	movf	(sprintf@fval+2)^(0+128),w
  9353  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  9354  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  9355  00FB  00CA               	movwf	___fttol@f1+2
  9356  00FC  160A  118A  2343  120A  118A  	fcall	___fttol
  9357  0101  1283               	bcf	3,5	;RP0=0, select bank0
  9358  0102  1303               	bcf	3,6	;RP1=0, select bank0
  9359  0103  084B               	movf	?___fttol+3,w
  9360  0104  1683               	bsf	3,5	;RP0=1, select bank1
  9361  0105  1303               	bcf	3,6	;RP1=0, select bank1
  9362  0106  00B5               	movwf	(sprintf@val+3)^(0+128)
  9363  0107  1283               	bcf	3,5	;RP0=0, select bank0
  9364  0108  1303               	bcf	3,6	;RP1=0, select bank0
  9365  0109  084A               	movf	?___fttol+2,w
  9366  010A  1683               	bsf	3,5	;RP0=1, select bank1
  9367  010B  1303               	bcf	3,6	;RP1=0, select bank1
  9368  010C  00B4               	movwf	(sprintf@val+2)^(0+128)
  9369  010D  1283               	bcf	3,5	;RP0=0, select bank0
  9370  010E  1303               	bcf	3,6	;RP1=0, select bank0
  9371  010F  0849               	movf	?___fttol+1,w
  9372  0110  1683               	bsf	3,5	;RP0=1, select bank1
  9373  0111  1303               	bcf	3,6	;RP1=0, select bank1
  9374  0112  00B3               	movwf	(sprintf@val+1)^(0+128)
  9375  0113  1283               	bcf	3,5	;RP0=0, select bank0
  9376  0114  1303               	bcf	3,6	;RP1=0, select bank0
  9377  0115  0848               	movf	?___fttol,w
  9378  0116  1683               	bsf	3,5	;RP0=1, select bank1
  9379  0117  1303               	bcf	3,6	;RP1=0, select bank1
  9380  0118  00B2               	movwf	sprintf@val^(0+128)
  9381                           
  9382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9383  0119  0835               	movf	(sprintf@val+3)^(0+128),w
  9384  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9385  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9386  011C  00A6               	movwf	___lltoft@c+3
  9387  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9388  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9389  011F  0834               	movf	(sprintf@val+2)^(0+128),w
  9390  0120  1283               	bcf	3,5	;RP0=0, select bank0
  9391  0121  1303               	bcf	3,6	;RP1=0, select bank0
  9392  0122  00A5               	movwf	___lltoft@c+2
  9393  0123  1683               	bsf	3,5	;RP0=1, select bank1
  9394  0124  1303               	bcf	3,6	;RP1=0, select bank1
  9395  0125  0833               	movf	(sprintf@val+1)^(0+128),w
  9396  0126  1283               	bcf	3,5	;RP0=0, select bank0
  9397  0127  1303               	bcf	3,6	;RP1=0, select bank0
  9398  0128  00A4               	movwf	___lltoft@c+1
  9399  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9400  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9401  012B  0832               	movf	sprintf@val^(0+128),w
  9402  012C  1283               	bcf	3,5	;RP0=0, select bank0
  9403  012D  1303               	bcf	3,6	;RP1=0, select bank0
  9404  012E  00A3               	movwf	___lltoft@c
  9405  012F  160A  158A  26D3  120A  118A  	fcall	___lltoft
  9406  0134  1283               	bcf	3,5	;RP0=0, select bank0
  9407  0135  1303               	bcf	3,6	;RP1=0, select bank0
  9408  0136  0823               	movf	?___lltoft,w
  9409  0137  00DC               	movwf	___ftsub@f2
  9410  0138  0824               	movf	?___lltoft+1,w
  9411  0139  00DD               	movwf	___ftsub@f2+1
  9412  013A  0825               	movf	?___lltoft+2,w
  9413  013B  00DE               	movwf	___ftsub@f2+2
  9414  013C  1683               	bsf	3,5	;RP0=1, select bank1
  9415  013D  1303               	bcf	3,6	;RP1=0, select bank1
  9416  013E  0838               	movf	sprintf@fval^(0+128),w
  9417  013F  1283               	bcf	3,5	;RP0=0, select bank0
  9418  0140  1303               	bcf	3,6	;RP1=0, select bank0
  9419  0141  00DF               	movwf	___ftsub@f1
  9420  0142  1683               	bsf	3,5	;RP0=1, select bank1
  9421  0143  1303               	bcf	3,6	;RP1=0, select bank1
  9422  0144  0839               	movf	(sprintf@fval+1)^(0+128),w
  9423  0145  1283               	bcf	3,5	;RP0=0, select bank0
  9424  0146  1303               	bcf	3,6	;RP1=0, select bank0
  9425  0147  00E0               	movwf	___ftsub@f1+1
  9426  0148  1683               	bsf	3,5	;RP0=1, select bank1
  9427  0149  1303               	bcf	3,6	;RP1=0, select bank1
  9428  014A  083A               	movf	(sprintf@fval+2)^(0+128),w
  9429  014B  1283               	bcf	3,5	;RP0=0, select bank0
  9430  014C  1303               	bcf	3,6	;RP1=0, select bank0
  9431  014D  00E1               	movwf	___ftsub@f1+2
  9432  014E  160A  158A  260B  120A  118A  	fcall	___ftsub
  9433  0153  1283               	bcf	3,5	;RP0=0, select bank0
  9434  0154  1303               	bcf	3,6	;RP1=0, select bank0
  9435  0155  085C               	movf	?___ftsub,w
  9436  0156  1683               	bsf	3,5	;RP0=1, select bank1
  9437  0157  1303               	bcf	3,6	;RP1=0, select bank1
  9438  0158  00B8               	movwf	sprintf@fval^(0+128)
  9439  0159  1283               	bcf	3,5	;RP0=0, select bank0
  9440  015A  1303               	bcf	3,6	;RP1=0, select bank0
  9441  015B  085D               	movf	?___ftsub+1,w
  9442  015C  1683               	bsf	3,5	;RP0=1, select bank1
  9443  015D  1303               	bcf	3,6	;RP1=0, select bank1
  9444  015E  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9445  015F  1283               	bcf	3,5	;RP0=0, select bank0
  9446  0160  1303               	bcf	3,6	;RP1=0, select bank0
  9447  0161  085E               	movf	?___ftsub+2,w
  9448  0162  1683               	bsf	3,5	;RP0=1, select bank1
  9449  0163  1303               	bcf	3,6	;RP1=0, select bank1
  9450  0164  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9451  0165                     l4195:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9454  0165  01B6               	clrf	sprintf@eexp^(0+128)
  9455  0166  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9456  0167                     l4197:
  9457                           
  9458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9459  0167  01BE               	clrf	sprintf@c^(0+128)
  9460  0168  0ABE               	incf	sprintf@c^(0+128),f
  9461  0169                     l4203:
  9462                           
  9463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9464  0169  083E               	movf	sprintf@c^(0+128),w
  9465  016A  00A0               	movwf	??_sprintf^(0+128)
  9466  016B  3001               	movlw	1
  9467  016C                     u6265:
  9468  016C  1003               	clrc
  9469  016D  0DA0               	rlf	??_sprintf^(0+128),f
  9470  016E  3EFF               	addlw	-1
  9471  016F  1D03               	skipz
  9472  0170  296C               	goto	u6265
  9473  0171  1003               	clrc
  9474  0172  0D20               	rlf	??_sprintf^(0+128),w
  9475  0173  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9476  0174  0084               	movwf	4
  9477  0175  160A  118A  200A  120A  118A  	fcall	stringdir
  9478  017A  00A1               	movwf	(??_sprintf+1)^(0+128)
  9479  017B  160A  118A  200A  120A  118A  	fcall	stringdir
  9480  0180  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9481  0181  160A  118A  200A  120A  118A  	fcall	stringdir
  9482  0186  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9483  0187  160A  118A  200A  120A  118A  	fcall	stringdir
  9484  018C  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9485  018D  0824               	movf	(??_sprintf+4)^(0+128),w
  9486  018E  0235               	subwf	(sprintf@val+3)^(0+128),w
  9487  018F  1D03               	skipz
  9488  0190  299B               	goto	u6275
  9489  0191  0823               	movf	(??_sprintf+3)^(0+128),w
  9490  0192  0234               	subwf	(sprintf@val+2)^(0+128),w
  9491  0193  1D03               	skipz
  9492  0194  299B               	goto	u6275
  9493  0195  0822               	movf	(??_sprintf+2)^(0+128),w
  9494  0196  0233               	subwf	(sprintf@val+1)^(0+128),w
  9495  0197  1D03               	skipz
  9496  0198  299B               	goto	u6275
  9497  0199  0821               	movf	(??_sprintf+1)^(0+128),w
  9498  019A  0232               	subwf	sprintf@val^(0+128),w
  9499  019B                     u6275:
  9500  019B  1803               	skipnc
  9501  019C  299E               	goto	u6271
  9502  019D  299F               	goto	u6270
  9503  019E                     u6271:
  9504  019E  29A0               	goto	l4207
  9505  019F                     u6270:
  9506  019F  29AA               	goto	l4209
  9507  01A0                     l4207:
  9508  01A0  3001               	movlw	1
  9509  01A1  00A0               	movwf	??_sprintf^(0+128)
  9510  01A2  0820               	movf	??_sprintf^(0+128),w
  9511  01A3  07BE               	addwf	sprintf@c^(0+128),f
  9512  01A4  300A               	movlw	10
  9513  01A5  063E               	xorwf	sprintf@c^(0+128),w
  9514  01A6  1D03               	btfss	3,2
  9515  01A7  29A9               	goto	u6281
  9516  01A8  29AA               	goto	u6280
  9517  01A9                     u6281:
  9518  01A9  2969               	goto	l4203
  9519  01AA                     u6280:
  9520  01AA                     l4209:
  9521                           
  9522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9523  01AA  083E               	movf	sprintf@c^(0+128),w
  9524  01AB  073C               	addwf	sprintf@prec^(0+128),w
  9525  01AC  00A0               	movwf	??_sprintf^(0+128)
  9526  01AD  083D               	movf	(sprintf@prec+1)^(0+128),w
  9527  01AE  1803               	skipnc
  9528  01AF  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9529  01B0  00A1               	movwf	(??_sprintf^(0+128)+1)
  9530  01B1  0836               	movf	sprintf@eexp^(0+128),w
  9531  01B2  0720               	addwf	??_sprintf^(0+128),w
  9532  01B3  00A2               	movwf	(??_sprintf+2)^(0+128)
  9533  01B4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9534  01B5  1803               	skipnc
  9535  01B6  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9536  01B7  0721               	addwf	(??_sprintf+1)^(0+128),w
  9537  01B8  00A3               	movwf	(??_sprintf+3)^(0+128)
  9538  01B9  0822               	movf	(??_sprintf+2)^(0+128),w
  9539  01BA  02AC               	subwf	sprintf@width^(0+128),f
  9540  01BB  0823               	movf	(??_sprintf+3)^(0+128),w
  9541  01BC  1C03               	skipc
  9542  01BD  03AD               	decf	(sprintf@width+1)^(0+128),f
  9543  01BE  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9544                           
  9545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9546  01BF  083C               	movf	sprintf@prec^(0+128),w
  9547  01C0  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9548  01C1  1903               	btfsc	3,2
  9549  01C2  29C4               	goto	u6291
  9550  01C3  29C5               	goto	u6290
  9551  01C4                     u6291:
  9552  01C4  29CB               	goto	l4213
  9553  01C5                     u6290:
  9554  01C5                     l4211:
  9555                           
  9556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9557  01C5  30FF               	movlw	255
  9558  01C6  07AC               	addwf	sprintf@width^(0+128),f
  9559  01C7  1803               	skipnc
  9560  01C8  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9561  01C9  30FF               	movlw	255
  9562  01CA  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9563  01CB                     l4213:
  9564                           
  9565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9566  01CB  3003               	movlw	3
  9567  01CC  052A               	andwf	sprintf@flag^(0+128),w
  9568  01CD  00A0               	movwf	??_sprintf^(0+128)
  9569  01CE  3000               	movlw	0
  9570  01CF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9571  01D0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9572  01D1  0820               	movf	??_sprintf^(0+128),w
  9573  01D2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9574  01D3  1903               	btfsc	3,2
  9575  01D4  29D6               	goto	u6301
  9576  01D5  29D7               	goto	u6300
  9577  01D6                     u6301:
  9578  01D6  29EC               	goto	l4223
  9579  01D7                     u6300:
  9580  01D7                     l4215:
  9581                           
  9582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9583  01D7  30FF               	movlw	255
  9584  01D8  07AC               	addwf	sprintf@width^(0+128),f
  9585  01D9  1803               	skipnc
  9586  01DA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9587  01DB  30FF               	movlw	255
  9588  01DC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9589  01DD  29EC               	goto	l4223
  9590  01DE                     l4217:
  9591                           
  9592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9593  01DE  3020               	movlw	32
  9594  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  9595  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  9596  01E1  00A0               	movwf	??_sprintf^(0+128)
  9597  01E2  083B               	movf	sprintf@sp^(0+128),w
  9598  01E3  0084               	movwf	4
  9599  01E4  0820               	movf	??_sprintf^(0+128),w
  9600  01E5  1383               	bcf	3,7	;select IRP bank0
  9601  01E6  0080               	movwf	0
  9602  01E7                     l4219:
  9603  01E7  3001               	movlw	1
  9604  01E8  00A0               	movwf	??_sprintf^(0+128)
  9605  01E9  0820               	movf	??_sprintf^(0+128),w
  9606  01EA  07BB               	addwf	sprintf@sp^(0+128),f
  9607  01EB  29D7               	goto	l4215
  9608  01EC                     l4223:
  9609                           
  9610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9611  01EC  082D               	movf	(sprintf@width+1)^(0+128),w
  9612  01ED  3A80               	xorlw	128
  9613  01EE  00FF               	movwf	btemp+1
  9614  01EF  3080               	movlw	128
  9615  01F0  027F               	subwf	btemp+1,w
  9616  01F1  1D03               	skipz
  9617  01F2  29F5               	goto	u6315
  9618  01F3  3001               	movlw	1
  9619  01F4  022C               	subwf	sprintf@width^(0+128),w
  9620  01F5                     u6315:
  9621  01F5  1803               	skipnc
  9622  01F6  29F8               	goto	u6311
  9623  01F7  29F9               	goto	u6310
  9624  01F8                     u6311:
  9625  01F8  29DE               	goto	l4217
  9626  01F9                     u6310:
  9627  01F9                     l4225:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9630  01F9  3003               	movlw	3
  9631  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  9632  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  9633  01FC  052A               	andwf	sprintf@flag^(0+128),w
  9634  01FD  00A0               	movwf	??_sprintf^(0+128)
  9635  01FE  3000               	movlw	0
  9636  01FF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9637  0200  00A1               	movwf	(??_sprintf+1)^(0+128)
  9638  0201  0820               	movf	??_sprintf^(0+128),w
  9639  0202  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9640  0203  1903               	btfsc	3,2
  9641  0204  2A06               	goto	u6321
  9642  0205  2A07               	goto	u6320
  9643  0206                     u6321:
  9644  0206  2AB9               	goto	l424
  9645  0207                     u6320:
  9646  0207                     l4227:
  9647                           
  9648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9649  0207  302D               	movlw	45
  9650  0208  00A0               	movwf	??_sprintf^(0+128)
  9651  0209  083B               	movf	sprintf@sp^(0+128),w
  9652  020A  0084               	movwf	4
  9653  020B  0820               	movf	??_sprintf^(0+128),w
  9654  020C  1383               	bcf	3,7	;select IRP bank0
  9655  020D  0080               	movwf	0
  9656  020E                     l4229:
  9657  020E  3001               	movlw	1
  9658  020F  00A0               	movwf	??_sprintf^(0+128)
  9659  0210  0820               	movf	??_sprintf^(0+128),w
  9660  0211  07BB               	addwf	sprintf@sp^(0+128),f
  9661  0212  2AB9               	goto	l424
  9662  0213                     l4231:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9665  0213  083E               	movf	sprintf@c^(0+128),w
  9666  0214  00A0               	movwf	??_sprintf^(0+128)
  9667  0215  3001               	movlw	1
  9668  0216                     u6335:
  9669  0216  1003               	clrc
  9670  0217  0DA0               	rlf	??_sprintf^(0+128),f
  9671  0218  3EFF               	addlw	-1
  9672  0219  1D03               	skipz
  9673  021A  2A16               	goto	u6335
  9674  021B  1003               	clrc
  9675  021C  0D20               	rlf	??_sprintf^(0+128),w
  9676  021D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9677  021E  0084               	movwf	4
  9678  021F  160A  118A  200A  120A  118A  	fcall	stringdir
  9679  0224  1283               	bcf	3,5	;RP0=0, select bank0
  9680  0225  1303               	bcf	3,6	;RP1=0, select bank0
  9681  0226  00A0               	movwf	___lldiv@divisor
  9682  0227  160A  118A  200A  120A  118A  	fcall	stringdir
  9683  022C  00A1               	movwf	___lldiv@divisor+1
  9684  022D  160A  118A  200A  120A  118A  	fcall	stringdir
  9685  0232  00A2               	movwf	___lldiv@divisor+2
  9686  0233  160A  118A  200A  120A  118A  	fcall	stringdir
  9687  0238  00A3               	movwf	___lldiv@divisor+3
  9688  0239  1683               	bsf	3,5	;RP0=1, select bank1
  9689  023A  1303               	bcf	3,6	;RP1=0, select bank1
  9690  023B  0835               	movf	(sprintf@val+3)^(0+128),w
  9691  023C  1283               	bcf	3,5	;RP0=0, select bank0
  9692  023D  1303               	bcf	3,6	;RP1=0, select bank0
  9693  023E  00A7               	movwf	___lldiv@dividend+3
  9694  023F  1683               	bsf	3,5	;RP0=1, select bank1
  9695  0240  1303               	bcf	3,6	;RP1=0, select bank1
  9696  0241  0834               	movf	(sprintf@val+2)^(0+128),w
  9697  0242  1283               	bcf	3,5	;RP0=0, select bank0
  9698  0243  1303               	bcf	3,6	;RP1=0, select bank0
  9699  0244  00A6               	movwf	___lldiv@dividend+2
  9700  0245  1683               	bsf	3,5	;RP0=1, select bank1
  9701  0246  1303               	bcf	3,6	;RP1=0, select bank1
  9702  0247  0833               	movf	(sprintf@val+1)^(0+128),w
  9703  0248  1283               	bcf	3,5	;RP0=0, select bank0
  9704  0249  1303               	bcf	3,6	;RP1=0, select bank0
  9705  024A  00A5               	movwf	___lldiv@dividend+1
  9706  024B  1683               	bsf	3,5	;RP0=1, select bank1
  9707  024C  1303               	bcf	3,6	;RP1=0, select bank1
  9708  024D  0832               	movf	sprintf@val^(0+128),w
  9709  024E  1283               	bcf	3,5	;RP0=0, select bank0
  9710  024F  1303               	bcf	3,6	;RP1=0, select bank0
  9711  0250  00A4               	movwf	___lldiv@dividend
  9712  0251  160A  118A  2178  120A  118A  	fcall	___lldiv
  9713  0256  1283               	bcf	3,5	;RP0=0, select bank0
  9714  0257  1303               	bcf	3,6	;RP1=0, select bank0
  9715  0258  0823               	movf	?___lldiv+3,w
  9716  0259  1683               	bsf	3,5	;RP0=1, select bank1
  9717  025A  1303               	bcf	3,6	;RP1=0, select bank1
  9718  025B  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9719  025C  1283               	bcf	3,5	;RP0=0, select bank0
  9720  025D  1303               	bcf	3,6	;RP1=0, select bank0
  9721  025E  0822               	movf	?___lldiv+2,w
  9722  025F  1683               	bsf	3,5	;RP0=1, select bank1
  9723  0260  1303               	bcf	3,6	;RP1=0, select bank1
  9724  0261  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9725  0262  1283               	bcf	3,5	;RP0=0, select bank0
  9726  0263  1303               	bcf	3,6	;RP1=0, select bank0
  9727  0264  0821               	movf	?___lldiv+1,w
  9728  0265  1683               	bsf	3,5	;RP0=1, select bank1
  9729  0266  1303               	bcf	3,6	;RP1=0, select bank1
  9730  0267  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9731  0268  1283               	bcf	3,5	;RP0=0, select bank0
  9732  0269  1303               	bcf	3,6	;RP1=0, select bank0
  9733  026A  0820               	movf	?___lldiv,w
  9734  026B  1683               	bsf	3,5	;RP0=1, select bank1
  9735  026C  1303               	bcf	3,6	;RP1=0, select bank1
  9736  026D  00AE               	movwf	sprintf@tmpval^(0+128)
  9737  026E                     l4233:
  9738                           
  9739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9740  026E  3000               	movlw	0
  9741  026F  1283               	bcf	3,5	;RP0=0, select bank0
  9742  0270  1303               	bcf	3,6	;RP1=0, select bank0
  9743  0271  00B0               	movwf	___llmod@divisor+3
  9744  0272  3000               	movlw	0
  9745  0273  00AF               	movwf	___llmod@divisor+2
  9746  0274  3000               	movlw	0
  9747  0275  00AE               	movwf	___llmod@divisor+1
  9748  0276  300A               	movlw	10
  9749  0277  00AD               	movwf	___llmod@divisor
  9750  0278  1683               	bsf	3,5	;RP0=1, select bank1
  9751  0279  1303               	bcf	3,6	;RP1=0, select bank1
  9752  027A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9753  027B  1283               	bcf	3,5	;RP0=0, select bank0
  9754  027C  1303               	bcf	3,6	;RP1=0, select bank0
  9755  027D  00B4               	movwf	___llmod@dividend+3
  9756  027E  1683               	bsf	3,5	;RP0=1, select bank1
  9757  027F  1303               	bcf	3,6	;RP1=0, select bank1
  9758  0280  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9759  0281  1283               	bcf	3,5	;RP0=0, select bank0
  9760  0282  1303               	bcf	3,6	;RP1=0, select bank0
  9761  0283  00B3               	movwf	___llmod@dividend+2
  9762  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9763  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9764  0286  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9765  0287  1283               	bcf	3,5	;RP0=0, select bank0
  9766  0288  1303               	bcf	3,6	;RP1=0, select bank0
  9767  0289  00B2               	movwf	___llmod@dividend+1
  9768  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9769  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9770  028C  082E               	movf	sprintf@tmpval^(0+128),w
  9771  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9772  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9773  028F  00B1               	movwf	___llmod@dividend
  9774  0290  160A  118A  20C7  120A  118A  	fcall	___llmod
  9775  0295  1283               	bcf	3,5	;RP0=0, select bank0
  9776  0296  1303               	bcf	3,6	;RP1=0, select bank0
  9777  0297  0830               	movf	?___llmod+3,w
  9778  0298  1683               	bsf	3,5	;RP0=1, select bank1
  9779  0299  1303               	bcf	3,6	;RP1=0, select bank1
  9780  029A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9781  029B  1283               	bcf	3,5	;RP0=0, select bank0
  9782  029C  1303               	bcf	3,6	;RP1=0, select bank0
  9783  029D  082F               	movf	?___llmod+2,w
  9784  029E  1683               	bsf	3,5	;RP0=1, select bank1
  9785  029F  1303               	bcf	3,6	;RP1=0, select bank1
  9786  02A0  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9787  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  9788  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  9789  02A3  082E               	movf	?___llmod+1,w
  9790  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9791  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9792  02A6  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9793  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9794  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9795  02A9  082D               	movf	?___llmod,w
  9796  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  9797  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  9798  02AC  00AE               	movwf	sprintf@tmpval^(0+128)
  9799  02AD                     l4235:
  9800                           
  9801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9802  02AD  082E               	movf	sprintf@tmpval^(0+128),w
  9803  02AE  3E30               	addlw	48
  9804  02AF  00A0               	movwf	??_sprintf^(0+128)
  9805  02B0  083B               	movf	sprintf@sp^(0+128),w
  9806  02B1  0084               	movwf	4
  9807  02B2  0820               	movf	??_sprintf^(0+128),w
  9808  02B3  1383               	bcf	3,7	;select IRP bank0
  9809  02B4  0080               	movwf	0
  9810  02B5  3001               	movlw	1
  9811  02B6  00A0               	movwf	??_sprintf^(0+128)
  9812  02B7  0820               	movf	??_sprintf^(0+128),w
  9813  02B8  07BB               	addwf	sprintf@sp^(0+128),f
  9814  02B9                     l424:	
  9815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9816                           
  9817                           
  9818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9819  02B9  3001               	movlw	1
  9820  02BA  02BE               	subwf	sprintf@c^(0+128),f
  9821  02BB  0A3E               	incf	sprintf@c^(0+128),w
  9822  02BC  1D03               	btfss	3,2
  9823  02BD  2ABF               	goto	u6341
  9824  02BE  2AC0               	goto	u6340
  9825  02BF                     u6341:
  9826  02BF  2A13               	goto	l4231
  9827  02C0                     u6340:
  9828  02C0  2AD4               	goto	l4243
  9829  02C1                     l4237:
  9830                           
  9831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9832  02C1  3030               	movlw	48
  9833  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  9834  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  9835  02C4  00A0               	movwf	??_sprintf^(0+128)
  9836  02C5  083B               	movf	sprintf@sp^(0+128),w
  9837  02C6  0084               	movwf	4
  9838  02C7  0820               	movf	??_sprintf^(0+128),w
  9839  02C8  1383               	bcf	3,7	;select IRP bank0
  9840  02C9  0080               	movwf	0
  9841  02CA                     l4239:
  9842  02CA  3001               	movlw	1
  9843  02CB  00A0               	movwf	??_sprintf^(0+128)
  9844  02CC  0820               	movf	??_sprintf^(0+128),w
  9845  02CD  07BB               	addwf	sprintf@sp^(0+128),f
  9846  02CE                     l4241:
  9847                           
  9848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9849  02CE  30FF               	movlw	255
  9850  02CF  07B6               	addwf	sprintf@eexp^(0+128),f
  9851  02D0  1803               	skipnc
  9852  02D1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9853  02D2  30FF               	movlw	255
  9854  02D3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9855  02D4                     l4243:
  9856                           
  9857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9858  02D4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9859  02D5  3A80               	xorlw	128
  9860  02D6  00FF               	movwf	btemp+1
  9861  02D7  3080               	movlw	128
  9862  02D8  027F               	subwf	btemp+1,w
  9863  02D9  1D03               	skipz
  9864  02DA  2ADD               	goto	u6355
  9865  02DB  3001               	movlw	1
  9866  02DC  0236               	subwf	sprintf@eexp^(0+128),w
  9867  02DD                     u6355:
  9868  02DD  1803               	skipnc
  9869  02DE  2AE0               	goto	u6351
  9870  02DF  2AE1               	goto	u6350
  9871  02E0                     u6351:
  9872  02E0  2AC1               	goto	l4237
  9873  02E1                     u6350:
  9874  02E1                     l4245:
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9877  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  9878  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  9879  02E3  083D               	movf	(sprintf@prec+1)^(0+128),w
  9880  02E4  3A80               	xorlw	128
  9881  02E5  00FF               	movwf	btemp+1
  9882  02E6  3080               	movlw	128
  9883  02E7  027F               	subwf	btemp+1,w
  9884  02E8  1D03               	skipz
  9885  02E9  2AEC               	goto	u6365
  9886  02EA  3009               	movlw	9
  9887  02EB  023C               	subwf	sprintf@prec^(0+128),w
  9888  02EC                     u6365:
  9889  02EC  1C03               	skipc
  9890  02ED  2AEF               	goto	u6361
  9891  02EE  2AF0               	goto	u6360
  9892  02EF                     u6361:
  9893  02EF  2AF7               	goto	l4249
  9894  02F0                     u6360:
  9895  02F0                     l4247:
  9896                           
  9897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9898  02F0  3008               	movlw	8
  9899  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  9900  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  9901  02F3  00A0               	movwf	??_sprintf^(0+128)
  9902  02F4  0820               	movf	??_sprintf^(0+128),w
  9903  02F5  00BE               	movwf	sprintf@c^(0+128)
  9904  02F6  2AFD               	goto	l431
  9905  02F7                     l4249:
  9906                           
  9907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9908  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  9909  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  9910  02F9  083C               	movf	sprintf@prec^(0+128),w
  9911  02FA  00A0               	movwf	??_sprintf^(0+128)
  9912  02FB  0820               	movf	??_sprintf^(0+128),w
  9913  02FC  00BE               	movwf	sprintf@c^(0+128)
  9914  02FD                     l431:
  9915                           
  9916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9917  02FD  083E               	movf	sprintf@c^(0+128),w
  9918  02FE  00A0               	movwf	??_sprintf^(0+128)
  9919  02FF  01A1               	clrf	(??_sprintf^(0+128)+1)
  9920  0300  0820               	movf	??_sprintf^(0+128),w
  9921  0301  02BC               	subwf	sprintf@prec^(0+128),f
  9922  0302  0821               	movf	(??_sprintf+1)^(0+128),w
  9923  0303  1C03               	skipc
  9924  0304  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9925  0305  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9926  0306                     l4251:
  9927                           
  9928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9929  0306  083E               	movf	sprintf@c^(0+128),w
  9930  0307  1903               	btfsc	3,2
  9931  0308  2B0A               	goto	u6371
  9932  0309  2B0B               	goto	u6370
  9933  030A                     u6371:
  9934  030A  2B16               	goto	l4257
  9935  030B                     u6370:
  9936  030B                     l4253:
  9937                           
  9938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9939  030B  302E               	movlw	46
  9940  030C  00A0               	movwf	??_sprintf^(0+128)
  9941  030D  083B               	movf	sprintf@sp^(0+128),w
  9942  030E  0084               	movwf	4
  9943  030F  0820               	movf	??_sprintf^(0+128),w
  9944  0310  1383               	bcf	3,7	;select IRP bank0
  9945  0311  0080               	movwf	0
  9946  0312                     l4255:
  9947  0312  3001               	movlw	1
  9948  0313  00A0               	movwf	??_sprintf^(0+128)
  9949  0314  0820               	movf	??_sprintf^(0+128),w
  9950  0315  07BB               	addwf	sprintf@sp^(0+128),f
  9951  0316                     l4257:
  9952                           
  9953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9954  0316  083E               	movf	sprintf@c^(0+128),w
  9955  0317  120A  158A  226D  120A  118A  	fcall	_scale
  9956  031C  1283               	bcf	3,5	;RP0=0, select bank0
  9957  031D  1303               	bcf	3,6	;RP1=0, select bank0
  9958  031E  083F               	movf	?_scale,w
  9959  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9960  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9961  0321  00A6               	movwf	_sprintf$1187^(0+128)
  9962  0322  1283               	bcf	3,5	;RP0=0, select bank0
  9963  0323  1303               	bcf	3,6	;RP1=0, select bank0
  9964  0324  0840               	movf	?_scale+1,w
  9965  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9966  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9967  0327  00A7               	movwf	(_sprintf$1187+1)^(0+128)
  9968  0328  1283               	bcf	3,5	;RP0=0, select bank0
  9969  0329  1303               	bcf	3,6	;RP1=0, select bank0
  9970  032A  0841               	movf	?_scale+2,w
  9971  032B  1683               	bsf	3,5	;RP0=1, select bank1
  9972  032C  1303               	bcf	3,6	;RP1=0, select bank1
  9973  032D  00A8               	movwf	(_sprintf$1187+2)^(0+128)
  9974  032E                     l4259:
  9975                           
  9976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9977  032E  0826               	movf	_sprintf$1187^(0+128),w
  9978  032F  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0330  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0331  00B2               	movwf	___ftmul@f2
  9981  0332  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0333  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0334  0827               	movf	(_sprintf$1187+1)^(0+128),w
  9984  0335  1283               	bcf	3,5	;RP0=0, select bank0
  9985  0336  1303               	bcf	3,6	;RP1=0, select bank0
  9986  0337  00B3               	movwf	___ftmul@f2+1
  9987  0338  1683               	bsf	3,5	;RP0=1, select bank1
  9988  0339  1303               	bcf	3,6	;RP1=0, select bank1
  9989  033A  0828               	movf	(_sprintf$1187+2)^(0+128),w
  9990  033B  1283               	bcf	3,5	;RP0=0, select bank0
  9991  033C  1303               	bcf	3,6	;RP1=0, select bank0
  9992  033D  00B4               	movwf	___ftmul@f2+2
  9993  033E  1683               	bsf	3,5	;RP0=1, select bank1
  9994  033F  1303               	bcf	3,6	;RP1=0, select bank1
  9995  0340  0838               	movf	sprintf@fval^(0+128),w
  9996  0341  1283               	bcf	3,5	;RP0=0, select bank0
  9997  0342  1303               	bcf	3,6	;RP1=0, select bank0
  9998  0343  00AF               	movwf	___ftmul@f1
  9999  0344  1683               	bsf	3,5	;RP0=1, select bank1
 10000  0345  1303               	bcf	3,6	;RP1=0, select bank1
 10001  0346  0839               	movf	(sprintf@fval+1)^(0+128),w
 10002  0347  1283               	bcf	3,5	;RP0=0, select bank0
 10003  0348  1303               	bcf	3,6	;RP1=0, select bank0
 10004  0349  00B0               	movwf	___ftmul@f1+1
 10005  034A  1683               	bsf	3,5	;RP0=1, select bank1
 10006  034B  1303               	bcf	3,6	;RP1=0, select bank1
 10007  034C  083A               	movf	(sprintf@fval+2)^(0+128),w
 10008  034D  1283               	bcf	3,5	;RP0=0, select bank0
 10009  034E  1303               	bcf	3,6	;RP1=0, select bank0
 10010  034F  00B1               	movwf	___ftmul@f1+2
 10011  0350  160A  118A  23CF  120A  118A  	fcall	___ftmul
 10012  0355  1283               	bcf	3,5	;RP0=0, select bank0
 10013  0356  1303               	bcf	3,6	;RP1=0, select bank0
 10014  0357  082F               	movf	?___ftmul,w
 10015  0358  00C8               	movwf	___fttol@f1
 10016  0359  0830               	movf	?___ftmul+1,w
 10017  035A  00C9               	movwf	___fttol@f1+1
 10018  035B  0831               	movf	?___ftmul+2,w
 10019  035C  00CA               	movwf	___fttol@f1+2
 10020  035D  160A  118A  2343  120A  118A  	fcall	___fttol
 10021  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10022  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10023  0364  084B               	movf	?___fttol+3,w
 10024  0365  1683               	bsf	3,5	;RP0=1, select bank1
 10025  0366  1303               	bcf	3,6	;RP1=0, select bank1
 10026  0367  00B5               	movwf	(sprintf@val+3)^(0+128)
 10027  0368  1283               	bcf	3,5	;RP0=0, select bank0
 10028  0369  1303               	bcf	3,6	;RP1=0, select bank0
 10029  036A  084A               	movf	?___fttol+2,w
 10030  036B  1683               	bsf	3,5	;RP0=1, select bank1
 10031  036C  1303               	bcf	3,6	;RP1=0, select bank1
 10032  036D  00B4               	movwf	(sprintf@val+2)^(0+128)
 10033  036E  1283               	bcf	3,5	;RP0=0, select bank0
 10034  036F  1303               	bcf	3,6	;RP1=0, select bank0
 10035  0370  0849               	movf	?___fttol+1,w
 10036  0371  1683               	bsf	3,5	;RP0=1, select bank1
 10037  0372  1303               	bcf	3,6	;RP1=0, select bank1
 10038  0373  00B3               	movwf	(sprintf@val+1)^(0+128)
 10039  0374  1283               	bcf	3,5	;RP0=0, select bank0
 10040  0375  1303               	bcf	3,6	;RP1=0, select bank0
 10041  0376  0848               	movf	?___fttol,w
 10042  0377  1683               	bsf	3,5	;RP0=1, select bank1
 10043  0378  1303               	bcf	3,6	;RP1=0, select bank1
 10044  0379  00B2               	movwf	sprintf@val^(0+128)
 10045                           
 10046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10047  037A  2C7C               	goto	l4269
 10048  037B                     l4261:
 10049                           
 10050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10051  037B  083E               	movf	sprintf@c^(0+128),w
 10052  037C  00A0               	movwf	??_sprintf^(0+128)
 10053  037D  3001               	movlw	1
 10054  037E                     u6385:
 10055  037E  1003               	clrc
 10056  037F  0DA0               	rlf	??_sprintf^(0+128),f
 10057  0380  3EFF               	addlw	-1
 10058  0381  1D03               	skipz
 10059  0382  2B7E               	goto	u6385
 10060  0383  1003               	clrc
 10061  0384  0D20               	rlf	??_sprintf^(0+128),w
 10062  0385  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10063  0386  0084               	movwf	4
 10064  0387  160A  118A  200A  120A  118A  	fcall	stringdir
 10065  038C  1283               	bcf	3,5	;RP0=0, select bank0
 10066  038D  1303               	bcf	3,6	;RP1=0, select bank0
 10067  038E  00A0               	movwf	___lldiv@divisor
 10068  038F  160A  118A  200A  120A  118A  	fcall	stringdir
 10069  0394  00A1               	movwf	___lldiv@divisor+1
 10070  0395  160A  118A  200A  120A  118A  	fcall	stringdir
 10071  039A  00A2               	movwf	___lldiv@divisor+2
 10072  039B  160A  118A  200A  120A  118A  	fcall	stringdir
 10073  03A0  00A3               	movwf	___lldiv@divisor+3
 10074  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 10075  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 10076  03A3  0835               	movf	(sprintf@val+3)^(0+128),w
 10077  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 10078  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 10079  03A6  00A7               	movwf	___lldiv@dividend+3
 10080  03A7  1683               	bsf	3,5	;RP0=1, select bank1
 10081  03A8  1303               	bcf	3,6	;RP1=0, select bank1
 10082  03A9  0834               	movf	(sprintf@val+2)^(0+128),w
 10083  03AA  1283               	bcf	3,5	;RP0=0, select bank0
 10084  03AB  1303               	bcf	3,6	;RP1=0, select bank0
 10085  03AC  00A6               	movwf	___lldiv@dividend+2
 10086  03AD  1683               	bsf	3,5	;RP0=1, select bank1
 10087  03AE  1303               	bcf	3,6	;RP1=0, select bank1
 10088  03AF  0833               	movf	(sprintf@val+1)^(0+128),w
 10089  03B0  1283               	bcf	3,5	;RP0=0, select bank0
 10090  03B1  1303               	bcf	3,6	;RP1=0, select bank0
 10091  03B2  00A5               	movwf	___lldiv@dividend+1
 10092  03B3  1683               	bsf	3,5	;RP0=1, select bank1
 10093  03B4  1303               	bcf	3,6	;RP1=0, select bank1
 10094  03B5  0832               	movf	sprintf@val^(0+128),w
 10095  03B6  1283               	bcf	3,5	;RP0=0, select bank0
 10096  03B7  1303               	bcf	3,6	;RP1=0, select bank0
 10097  03B8  00A4               	movwf	___lldiv@dividend
 10098  03B9  160A  118A  2178  120A  118A  	fcall	___lldiv
 10099  03BE  1283               	bcf	3,5	;RP0=0, select bank0
 10100  03BF  1303               	bcf	3,6	;RP1=0, select bank0
 10101  03C0  0823               	movf	?___lldiv+3,w
 10102  03C1  1683               	bsf	3,5	;RP0=1, select bank1
 10103  03C2  1303               	bcf	3,6	;RP1=0, select bank1
 10104  03C3  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10105  03C4  1283               	bcf	3,5	;RP0=0, select bank0
 10106  03C5  1303               	bcf	3,6	;RP1=0, select bank0
 10107  03C6  0822               	movf	?___lldiv+2,w
 10108  03C7  1683               	bsf	3,5	;RP0=1, select bank1
 10109  03C8  1303               	bcf	3,6	;RP1=0, select bank1
 10110  03C9  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10111  03CA  1283               	bcf	3,5	;RP0=0, select bank0
 10112  03CB  1303               	bcf	3,6	;RP1=0, select bank0
 10113  03CC  0821               	movf	?___lldiv+1,w
 10114  03CD  1683               	bsf	3,5	;RP0=1, select bank1
 10115  03CE  1303               	bcf	3,6	;RP1=0, select bank1
 10116  03CF  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10117  03D0  1283               	bcf	3,5	;RP0=0, select bank0
 10118  03D1  1303               	bcf	3,6	;RP1=0, select bank0
 10119  03D2  0820               	movf	?___lldiv,w
 10120  03D3  1683               	bsf	3,5	;RP0=1, select bank1
 10121  03D4  1303               	bcf	3,6	;RP1=0, select bank1
 10122  03D5  00AE               	movwf	sprintf@tmpval^(0+128)
 10123  03D6                     l4263:
 10124                           
 10125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10126  03D6  3000               	movlw	0
 10127  03D7  1283               	bcf	3,5	;RP0=0, select bank0
 10128  03D8  1303               	bcf	3,6	;RP1=0, select bank0
 10129  03D9  00B0               	movwf	___llmod@divisor+3
 10130  03DA  3000               	movlw	0
 10131  03DB  00AF               	movwf	___llmod@divisor+2
 10132  03DC  3000               	movlw	0
 10133  03DD  00AE               	movwf	___llmod@divisor+1
 10134  03DE  300A               	movlw	10
 10135  03DF  00AD               	movwf	___llmod@divisor
 10136  03E0  1683               	bsf	3,5	;RP0=1, select bank1
 10137  03E1  1303               	bcf	3,6	;RP1=0, select bank1
 10138  03E2  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10139  03E3  1283               	bcf	3,5	;RP0=0, select bank0
 10140  03E4  1303               	bcf	3,6	;RP1=0, select bank0
 10141  03E5  00B4               	movwf	___llmod@dividend+3
 10142  03E6  1683               	bsf	3,5	;RP0=1, select bank1
 10143  03E7  1303               	bcf	3,6	;RP1=0, select bank1
 10144  03E8  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10145  03E9  1283               	bcf	3,5	;RP0=0, select bank0
 10146  03EA  1303               	bcf	3,6	;RP1=0, select bank0
 10147  03EB  00B3               	movwf	___llmod@dividend+2
 10148  03EC  1683               	bsf	3,5	;RP0=1, select bank1
 10149  03ED  1303               	bcf	3,6	;RP1=0, select bank1
 10150  03EE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10151  03EF  1283               	bcf	3,5	;RP0=0, select bank0
 10152  03F0  1303               	bcf	3,6	;RP1=0, select bank0
 10153  03F1  00B2               	movwf	___llmod@dividend+1
 10154  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 10155  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 10156  03F4  082E               	movf	sprintf@tmpval^(0+128),w
 10157  03F5  1283               	bcf	3,5	;RP0=0, select bank0
 10158  03F6  1303               	bcf	3,6	;RP1=0, select bank0
 10159  03F7  00B1               	movwf	___llmod@dividend
 10160  03F8  160A  118A  20C7  120A  118A  	fcall	___llmod
 10161  03FD  1283               	bcf	3,5	;RP0=0, select bank0
 10162  03FE  1303               	bcf	3,6	;RP1=0, select bank0
 10163  03FF  0830               	movf	?___llmod+3,w
 10164  0400  1683               	bsf	3,5	;RP0=1, select bank1
 10165  0401  1303               	bcf	3,6	;RP1=0, select bank1
 10166  0402  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10167  0403  1283               	bcf	3,5	;RP0=0, select bank0
 10168  0404  1303               	bcf	3,6	;RP1=0, select bank0
 10169  0405  082F               	movf	?___llmod+2,w
 10170  0406  1683               	bsf	3,5	;RP0=1, select bank1
 10171  0407  1303               	bcf	3,6	;RP1=0, select bank1
 10172  0408  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10173  0409  1283               	bcf	3,5	;RP0=0, select bank0
 10174  040A  1303               	bcf	3,6	;RP1=0, select bank0
 10175  040B  082E               	movf	?___llmod+1,w
 10176  040C  1683               	bsf	3,5	;RP0=1, select bank1
 10177  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10178  040E  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10179  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10180  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10181  0411  082D               	movf	?___llmod,w
 10182  0412  1683               	bsf	3,5	;RP0=1, select bank1
 10183  0413  1303               	bcf	3,6	;RP1=0, select bank1
 10184  0414  00AE               	movwf	sprintf@tmpval^(0+128)
 10185  0415                     l4265:
 10186                           
 10187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10188  0415  082E               	movf	sprintf@tmpval^(0+128),w
 10189  0416  3E30               	addlw	48
 10190  0417  00A0               	movwf	??_sprintf^(0+128)
 10191  0418  083B               	movf	sprintf@sp^(0+128),w
 10192  0419  0084               	movwf	4
 10193  041A  0820               	movf	??_sprintf^(0+128),w
 10194  041B  1383               	bcf	3,7	;select IRP bank0
 10195  041C  0080               	movwf	0
 10196  041D  3001               	movlw	1
 10197  041E  00A0               	movwf	??_sprintf^(0+128)
 10198  041F  0820               	movf	??_sprintf^(0+128),w
 10199  0420  07BB               	addwf	sprintf@sp^(0+128),f
 10200  0421                     l4267:
 10201                           
 10202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10203  0421  083E               	movf	sprintf@c^(0+128),w
 10204  0422  00A0               	movwf	??_sprintf^(0+128)
 10205  0423  3001               	movlw	1
 10206  0424                     u6395:
 10207  0424  1003               	clrc
 10208  0425  0DA0               	rlf	??_sprintf^(0+128),f
 10209  0426  3EFF               	addlw	-1
 10210  0427  1D03               	skipz
 10211  0428  2C24               	goto	u6395
 10212  0429  1003               	clrc
 10213  042A  0D20               	rlf	??_sprintf^(0+128),w
 10214  042B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10215  042C  0084               	movwf	4
 10216  042D  160A  118A  200A  120A  118A  	fcall	stringdir
 10217  0432  1283               	bcf	3,5	;RP0=0, select bank0
 10218  0433  1303               	bcf	3,6	;RP1=0, select bank0
 10219  0434  00AD               	movwf	___llmod@divisor
 10220  0435  160A  118A  200A  120A  118A  	fcall	stringdir
 10221  043A  00AE               	movwf	___llmod@divisor+1
 10222  043B  160A  118A  200A  120A  118A  	fcall	stringdir
 10223  0440  00AF               	movwf	___llmod@divisor+2
 10224  0441  160A  118A  200A  120A  118A  	fcall	stringdir
 10225  0446  00B0               	movwf	___llmod@divisor+3
 10226  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10227  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10228  0449  0835               	movf	(sprintf@val+3)^(0+128),w
 10229  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10230  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10231  044C  00B4               	movwf	___llmod@dividend+3
 10232  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10233  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10234  044F  0834               	movf	(sprintf@val+2)^(0+128),w
 10235  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10236  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10237  0452  00B3               	movwf	___llmod@dividend+2
 10238  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10239  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10240  0455  0833               	movf	(sprintf@val+1)^(0+128),w
 10241  0456  1283               	bcf	3,5	;RP0=0, select bank0
 10242  0457  1303               	bcf	3,6	;RP1=0, select bank0
 10243  0458  00B2               	movwf	___llmod@dividend+1
 10244  0459  1683               	bsf	3,5	;RP0=1, select bank1
 10245  045A  1303               	bcf	3,6	;RP1=0, select bank1
 10246  045B  0832               	movf	sprintf@val^(0+128),w
 10247  045C  1283               	bcf	3,5	;RP0=0, select bank0
 10248  045D  1303               	bcf	3,6	;RP1=0, select bank0
 10249  045E  00B1               	movwf	___llmod@dividend
 10250  045F  160A  118A  20C7  120A  118A  	fcall	___llmod
 10251  0464  1283               	bcf	3,5	;RP0=0, select bank0
 10252  0465  1303               	bcf	3,6	;RP1=0, select bank0
 10253  0466  0830               	movf	?___llmod+3,w
 10254  0467  1683               	bsf	3,5	;RP0=1, select bank1
 10255  0468  1303               	bcf	3,6	;RP1=0, select bank1
 10256  0469  00B5               	movwf	(sprintf@val+3)^(0+128)
 10257  046A  1283               	bcf	3,5	;RP0=0, select bank0
 10258  046B  1303               	bcf	3,6	;RP1=0, select bank0
 10259  046C  082F               	movf	?___llmod+2,w
 10260  046D  1683               	bsf	3,5	;RP0=1, select bank1
 10261  046E  1303               	bcf	3,6	;RP1=0, select bank1
 10262  046F  00B4               	movwf	(sprintf@val+2)^(0+128)
 10263  0470  1283               	bcf	3,5	;RP0=0, select bank0
 10264  0471  1303               	bcf	3,6	;RP1=0, select bank0
 10265  0472  082E               	movf	?___llmod+1,w
 10266  0473  1683               	bsf	3,5	;RP0=1, select bank1
 10267  0474  1303               	bcf	3,6	;RP1=0, select bank1
 10268  0475  00B3               	movwf	(sprintf@val+1)^(0+128)
 10269  0476  1283               	bcf	3,5	;RP0=0, select bank0
 10270  0477  1303               	bcf	3,6	;RP1=0, select bank0
 10271  0478  082D               	movf	?___llmod,w
 10272  0479  1683               	bsf	3,5	;RP0=1, select bank1
 10273  047A  1303               	bcf	3,6	;RP1=0, select bank1
 10274  047B  00B2               	movwf	sprintf@val^(0+128)
 10275  047C                     l4269:
 10276                           
 10277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10278  047C  3001               	movlw	1
 10279  047D  02BE               	subwf	sprintf@c^(0+128),f
 10280  047E  0A3E               	incf	sprintf@c^(0+128),w
 10281  047F  1D03               	btfss	3,2
 10282  0480  2C82               	goto	u6401
 10283  0481  2C83               	goto	u6400
 10284  0482                     u6401:
 10285  0482  2B7B               	goto	l4261
 10286  0483                     u6400:
 10287  0483  2C95               	goto	l4277
 10288  0484                     l4271:
 10289                           
 10290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10291  0484  3030               	movlw	48
 10292  0485  00A0               	movwf	??_sprintf^(0+128)
 10293  0486  083B               	movf	sprintf@sp^(0+128),w
 10294  0487  0084               	movwf	4
 10295  0488  0820               	movf	??_sprintf^(0+128),w
 10296  0489  1383               	bcf	3,7	;select IRP bank0
 10297  048A  0080               	movwf	0
 10298  048B                     l4273:
 10299  048B  3001               	movlw	1
 10300  048C  00A0               	movwf	??_sprintf^(0+128)
 10301  048D  0820               	movf	??_sprintf^(0+128),w
 10302  048E  07BB               	addwf	sprintf@sp^(0+128),f
 10303  048F                     l4275:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10306  048F  30FF               	movlw	255
 10307  0490  07BC               	addwf	sprintf@prec^(0+128),f
 10308  0491  1803               	skipnc
 10309  0492  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10310  0493  30FF               	movlw	255
 10311  0494  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10312  0495                     l4277:
 10313                           
 10314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10315  0495  083C               	movf	sprintf@prec^(0+128),w
 10316  0496  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10317  0497  1D03               	btfss	3,2
 10318  0498  2C9A               	goto	u6411
 10319  0499  2C9B               	goto	u6410
 10320  049A                     u6411:
 10321  049A  2C84               	goto	l4271
 10322  049B                     u6410:
 10323  049B  2E4B               	goto	l4357
 10324  049C                     l4279:
 10325                           
 10326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10327  049C  0829               	movf	sprintf@ap^(0+128),w
 10328  049D  0084               	movwf	4
 10329  049E  1383               	bcf	3,7	;select IRP bank0
 10330  049F  0800               	movf	0,w
 10331  04A0  00A0               	movwf	??_sprintf^(0+128)
 10332  04A1  0A84               	incf	4,f
 10333  04A2  0800               	movf	0,w
 10334  04A3  00A1               	movwf	(??_sprintf^(0+128)+1)
 10335  04A4  0820               	movf	??_sprintf^(0+128),w
 10336  04A5  00B2               	movwf	sprintf@val^(0+128)
 10337  04A6  0821               	movf	(??_sprintf+1)^(0+128),w
 10338  04A7  00B3               	movwf	(sprintf@val+1)^(0+128)
 10339  04A8  3000               	movlw	0
 10340  04A9  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10341  04AA  30FF               	movlw	255
 10342  04AB  00B4               	movwf	(sprintf@val+2)^(0+128)
 10343  04AC  00B5               	movwf	(sprintf@val+3)^(0+128)
 10344  04AD                     l4281:
 10345  04AD  3002               	movlw	2
 10346  04AE  00A0               	movwf	??_sprintf^(0+128)
 10347  04AF  0820               	movf	??_sprintf^(0+128),w
 10348  04B0  07A9               	addwf	sprintf@ap^(0+128),f
 10349  04B1                     l4283:
 10350                           
 10351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10352  04B1  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10353  04B2  2CB4               	goto	u6421
 10354  04B3  2CB5               	goto	u6420
 10355  04B4                     u6421:
 10356  04B4  2CC4               	goto	l4289
 10357  04B5                     u6420:
 10358  04B5                     l4285:
 10359                           
 10360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10361  04B5  3003               	movlw	3
 10362  04B6  04AA               	iorwf	sprintf@flag^(0+128),f
 10363  04B7  3000               	movlw	0
 10364  04B8  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10365  04B9                     l4287:
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10368  04B9  09B2               	comf	sprintf@val^(0+128),f
 10369  04BA  09B3               	comf	(sprintf@val+1)^(0+128),f
 10370  04BB  09B4               	comf	(sprintf@val+2)^(0+128),f
 10371  04BC  09B5               	comf	(sprintf@val+3)^(0+128),f
 10372  04BD  0AB2               	incf	sprintf@val^(0+128),f
 10373  04BE  1903               	skipnz
 10374  04BF  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10375  04C0  1903               	skipnz
 10376  04C1  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10377  04C2  1903               	skipnz
 10378  04C3  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10379  04C4                     l4289:
 10380                           
 10381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10382  04C4  083C               	movf	sprintf@prec^(0+128),w
 10383  04C5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10384  04C6  1D03               	btfss	3,2
 10385  04C7  2CC9               	goto	u6431
 10386  04C8  2CCA               	goto	u6430
 10387  04C9                     u6431:
 10388  04C9  2CD8               	goto	l4295
 10389  04CA                     u6430:
 10390  04CA                     l4291:
 10391  04CA  0835               	movf	(sprintf@val+3)^(0+128),w
 10392  04CB  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10393  04CC  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10394  04CD  0432               	iorwf	sprintf@val^(0+128),w
 10395  04CE  1D03               	skipz
 10396  04CF  2CD1               	goto	u6441
 10397  04D0  2CD2               	goto	u6440
 10398  04D1                     u6441:
 10399  04D1  2CD8               	goto	l4295
 10400  04D2                     u6440:
 10401  04D2                     l4293:
 10402                           
 10403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10404  04D2  3001               	movlw	1
 10405  04D3  07BC               	addwf	sprintf@prec^(0+128),f
 10406  04D4  1803               	skipnc
 10407  04D5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10408  04D6  3000               	movlw	0
 10409  04D7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10410  04D8                     l4295:
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10413  04D8  01BE               	clrf	sprintf@c^(0+128)
 10414  04D9  0ABE               	incf	sprintf@c^(0+128),f
 10415  04DA                     l4301:
 10416                           
 10417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10418  04DA  083E               	movf	sprintf@c^(0+128),w
 10419  04DB  00A0               	movwf	??_sprintf^(0+128)
 10420  04DC  3001               	movlw	1
 10421  04DD                     u6455:
 10422  04DD  1003               	clrc
 10423  04DE  0DA0               	rlf	??_sprintf^(0+128),f
 10424  04DF  3EFF               	addlw	-1
 10425  04E0  1D03               	skipz
 10426  04E1  2CDD               	goto	u6455
 10427  04E2  1003               	clrc
 10428  04E3  0D20               	rlf	??_sprintf^(0+128),w
 10429  04E4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10430  04E5  0084               	movwf	4
 10431  04E6  160A  118A  200A  120A  118A  	fcall	stringdir
 10432  04EB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10433  04EC  160A  118A  200A  120A  118A  	fcall	stringdir
 10434  04F1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10435  04F2  160A  118A  200A  120A  118A  	fcall	stringdir
 10436  04F7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10437  04F8  160A  118A  200A  120A  118A  	fcall	stringdir
 10438  04FD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10439  04FE  0824               	movf	(??_sprintf+4)^(0+128),w
 10440  04FF  0235               	subwf	(sprintf@val+3)^(0+128),w
 10441  0500  1D03               	skipz
 10442  0501  2D0C               	goto	u6465
 10443  0502  0823               	movf	(??_sprintf+3)^(0+128),w
 10444  0503  0234               	subwf	(sprintf@val+2)^(0+128),w
 10445  0504  1D03               	skipz
 10446  0505  2D0C               	goto	u6465
 10447  0506  0822               	movf	(??_sprintf+2)^(0+128),w
 10448  0507  0233               	subwf	(sprintf@val+1)^(0+128),w
 10449  0508  1D03               	skipz
 10450  0509  2D0C               	goto	u6465
 10451  050A  0821               	movf	(??_sprintf+1)^(0+128),w
 10452  050B  0232               	subwf	sprintf@val^(0+128),w
 10453  050C                     u6465:
 10454  050C  1803               	skipnc
 10455  050D  2D0F               	goto	u6461
 10456  050E  2D10               	goto	u6460
 10457  050F                     u6461:
 10458  050F  2D11               	goto	l4305
 10459  0510                     u6460:
 10460  0510  2D1B               	goto	l4307
 10461  0511                     l4305:
 10462  0511  3001               	movlw	1
 10463  0512  00A0               	movwf	??_sprintf^(0+128)
 10464  0513  0820               	movf	??_sprintf^(0+128),w
 10465  0514  07BE               	addwf	sprintf@c^(0+128),f
 10466  0515  300A               	movlw	10
 10467  0516  063E               	xorwf	sprintf@c^(0+128),w
 10468  0517  1D03               	btfss	3,2
 10469  0518  2D1A               	goto	u6471
 10470  0519  2D1B               	goto	u6470
 10471  051A                     u6471:
 10472  051A  2CDA               	goto	l4301
 10473  051B                     u6470:
 10474  051B                     l4307:
 10475                           
 10476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10477  051B  083D               	movf	(sprintf@prec+1)^(0+128),w
 10478  051C  3A80               	xorlw	128
 10479  051D  3C80               	sublw	128
 10480  051E  1D03               	skipz
 10481  051F  2D22               	goto	u6485
 10482  0520  083C               	movf	sprintf@prec^(0+128),w
 10483  0521  023E               	subwf	sprintf@c^(0+128),w
 10484  0522                     u6485:
 10485  0522  1803               	skipnc
 10486  0523  2D25               	goto	u6481
 10487  0524  2D26               	goto	u6480
 10488  0525                     u6481:
 10489  0525  2D2D               	goto	l4311
 10490  0526                     u6480:
 10491  0526                     l4309:
 10492                           
 10493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10494  0526  1683               	bsf	3,5	;RP0=1, select bank1
 10495  0527  1303               	bcf	3,6	;RP1=0, select bank1
 10496  0528  083C               	movf	sprintf@prec^(0+128),w
 10497  0529  00A0               	movwf	??_sprintf^(0+128)
 10498  052A  0820               	movf	??_sprintf^(0+128),w
 10499  052B  00BE               	movwf	sprintf@c^(0+128)
 10500  052C  2D45               	goto	l4315
 10501  052D                     l4311:
 10502  052D  1683               	bsf	3,5	;RP0=1, select bank1
 10503  052E  1303               	bcf	3,6	;RP1=0, select bank1
 10504  052F  083D               	movf	(sprintf@prec+1)^(0+128),w
 10505  0530  3A80               	xorlw	128
 10506  0531  00A0               	movwf	??_sprintf^(0+128)
 10507  0532  3080               	movlw	128
 10508  0533  0220               	subwf	??_sprintf^(0+128),w
 10509  0534  1D03               	skipz
 10510  0535  2D38               	goto	u6495
 10511  0536  083E               	movf	sprintf@c^(0+128),w
 10512  0537  023C               	subwf	sprintf@prec^(0+128),w
 10513  0538                     u6495:
 10514  0538  1803               	skipnc
 10515  0539  2D3B               	goto	u6491
 10516  053A  2D3C               	goto	u6490
 10517  053B                     u6491:
 10518  053B  2D45               	goto	l4315
 10519  053C                     u6490:
 10520  053C                     l4313:
 10521                           
 10522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10523  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10524  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10525  053E  083E               	movf	sprintf@c^(0+128),w
 10526  053F  00A0               	movwf	??_sprintf^(0+128)
 10527  0540  01A1               	clrf	(??_sprintf^(0+128)+1)
 10528  0541  0820               	movf	??_sprintf^(0+128),w
 10529  0542  00BC               	movwf	sprintf@prec^(0+128)
 10530  0543  0821               	movf	(??_sprintf+1)^(0+128),w
 10531  0544  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10532  0545                     l4315:
 10533                           
 10534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10535  0545  1683               	bsf	3,5	;RP0=1, select bank1
 10536  0546  1303               	bcf	3,6	;RP1=0, select bank1
 10537  0547  082C               	movf	sprintf@width^(0+128),w
 10538  0548  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10539  0549  1903               	btfsc	3,2
 10540  054A  2D4C               	goto	u6501
 10541  054B  2D4D               	goto	u6500
 10542  054C                     u6501:
 10543  054C  2D5F               	goto	l4321
 10544  054D                     u6500:
 10545  054D                     l4317:
 10546  054D  3003               	movlw	3
 10547  054E  052A               	andwf	sprintf@flag^(0+128),w
 10548  054F  00A0               	movwf	??_sprintf^(0+128)
 10549  0550  3000               	movlw	0
 10550  0551  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10551  0552  00A1               	movwf	(??_sprintf+1)^(0+128)
 10552  0553  0820               	movf	??_sprintf^(0+128),w
 10553  0554  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10554  0555  1903               	btfsc	3,2
 10555  0556  2D58               	goto	u6511
 10556  0557  2D59               	goto	u6510
 10557  0558                     u6511:
 10558  0558  2D5F               	goto	l4321
 10559  0559                     u6510:
 10560  0559                     l4319:
 10561                           
 10562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10563  0559  30FF               	movlw	255
 10564  055A  07AC               	addwf	sprintf@width^(0+128),f
 10565  055B  1803               	skipnc
 10566  055C  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10567  055D  30FF               	movlw	255
 10568  055E  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10569  055F                     l4321:
 10570                           
 10571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10572  055F  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10573  0560  2D62               	goto	u6521
 10574  0561  2D63               	goto	u6520
 10575  0562                     u6521:
 10576  0562  2D7E               	goto	l4329
 10577  0563                     u6520:
 10578  0563                     l4323:
 10579                           
 10580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10581  0563  083D               	movf	(sprintf@prec+1)^(0+128),w
 10582  0564  3A80               	xorlw	128
 10583  0565  00A0               	movwf	??_sprintf^(0+128)
 10584  0566  082D               	movf	(sprintf@width+1)^(0+128),w
 10585  0567  3A80               	xorlw	128
 10586  0568  0220               	subwf	??_sprintf^(0+128),w
 10587  0569  1D03               	skipz
 10588  056A  2D6D               	goto	u6535
 10589  056B  082C               	movf	sprintf@width^(0+128),w
 10590  056C  023C               	subwf	sprintf@prec^(0+128),w
 10591  056D                     u6535:
 10592  056D  1803               	skipnc
 10593  056E  2D70               	goto	u6531
 10594  056F  2D71               	goto	u6530
 10595  0570                     u6531:
 10596  0570  2D7A               	goto	l4327
 10597  0571                     u6530:
 10598  0571                     l4325:
 10599                           
 10600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10601  0571  1683               	bsf	3,5	;RP0=1, select bank1
 10602  0572  1303               	bcf	3,6	;RP1=0, select bank1
 10603  0573  083C               	movf	sprintf@prec^(0+128),w
 10604  0574  02AC               	subwf	sprintf@width^(0+128),f
 10605  0575  083D               	movf	(sprintf@prec+1)^(0+128),w
 10606  0576  1C03               	skipc
 10607  0577  03AD               	decf	(sprintf@width+1)^(0+128),f
 10608  0578  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10609  0579  2D7E               	goto	l4329
 10610  057A                     l4327:
 10611                           
 10612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10613  057A  1683               	bsf	3,5	;RP0=1, select bank1
 10614  057B  1303               	bcf	3,6	;RP1=0, select bank1
 10615  057C  01AC               	clrf	sprintf@width^(0+128)
 10616  057D  01AD               	clrf	(sprintf@width+1)^(0+128)
 10617  057E                     l4329:
 10618                           
 10619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10620  057E  082D               	movf	(sprintf@width+1)^(0+128),w
 10621  057F  3A80               	xorlw	128
 10622  0580  3C80               	sublw	128
 10623  0581  1D03               	skipz
 10624  0582  2D85               	goto	u6545
 10625  0583  082C               	movf	sprintf@width^(0+128),w
 10626  0584  023E               	subwf	sprintf@c^(0+128),w
 10627  0585                     u6545:
 10628  0585  1803               	skipnc
 10629  0586  2D88               	goto	u6541
 10630  0587  2D89               	goto	u6540
 10631  0588                     u6541:
 10632  0588  2D95               	goto	l4333
 10633  0589                     u6540:
 10634  0589                     l4331:
 10635                           
 10636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10637  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10638  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10639  058B  083E               	movf	sprintf@c^(0+128),w
 10640  058C  00A0               	movwf	??_sprintf^(0+128)
 10641  058D  01A1               	clrf	(??_sprintf^(0+128)+1)
 10642  058E  0820               	movf	??_sprintf^(0+128),w
 10643  058F  02AC               	subwf	sprintf@width^(0+128),f
 10644  0590  0821               	movf	(??_sprintf+1)^(0+128),w
 10645  0591  1C03               	skipc
 10646  0592  03AD               	decf	(sprintf@width+1)^(0+128),f
 10647  0593  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10648  0594  2D99               	goto	l4335
 10649  0595                     l4333:
 10650                           
 10651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10652  0595  1683               	bsf	3,5	;RP0=1, select bank1
 10653  0596  1303               	bcf	3,6	;RP1=0, select bank1
 10654  0597  01AC               	clrf	sprintf@width^(0+128)
 10655  0598  01AD               	clrf	(sprintf@width+1)^(0+128)
 10656  0599                     l4335:
 10657                           
 10658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10659  0599  082C               	movf	sprintf@width^(0+128),w
 10660  059A  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10661  059B  1903               	btfsc	3,2
 10662  059C  2D9E               	goto	u6551
 10663  059D  2D9F               	goto	u6550
 10664  059E                     u6551:
 10665  059E  2DB6               	goto	l4343
 10666  059F                     u6550:
 10667  059F                     l4337:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10670  059F  3020               	movlw	32
 10671  05A0  00A0               	movwf	??_sprintf^(0+128)
 10672  05A1  083B               	movf	sprintf@sp^(0+128),w
 10673  05A2  0084               	movwf	4
 10674  05A3  0820               	movf	??_sprintf^(0+128),w
 10675  05A4  1383               	bcf	3,7	;select IRP bank0
 10676  05A5  0080               	movwf	0
 10677  05A6                     l4339:
 10678  05A6  3001               	movlw	1
 10679  05A7  00A0               	movwf	??_sprintf^(0+128)
 10680  05A8  0820               	movf	??_sprintf^(0+128),w
 10681  05A9  07BB               	addwf	sprintf@sp^(0+128),f
 10682  05AA                     l4341:
 10683  05AA  30FF               	movlw	255
 10684  05AB  07AC               	addwf	sprintf@width^(0+128),f
 10685  05AC  1803               	skipnc
 10686  05AD  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10687  05AE  30FF               	movlw	255
 10688  05AF  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10689  05B0  082C               	movf	sprintf@width^(0+128),w
 10690  05B1  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10691  05B2  1D03               	btfss	3,2
 10692  05B3  2DB5               	goto	u6561
 10693  05B4  2DB6               	goto	u6560
 10694  05B5                     u6561:
 10695  05B5  2D9F               	goto	l4337
 10696  05B6                     u6560:
 10697  05B6                     l4343:
 10698                           
 10699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10700  05B6  3003               	movlw	3
 10701  05B7  052A               	andwf	sprintf@flag^(0+128),w
 10702  05B8  00A0               	movwf	??_sprintf^(0+128)
 10703  05B9  3000               	movlw	0
 10704  05BA  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10705  05BB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10706  05BC  0820               	movf	??_sprintf^(0+128),w
 10707  05BD  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10708  05BE  1903               	btfsc	3,2
 10709  05BF  2DC1               	goto	u6571
 10710  05C0  2DC2               	goto	u6570
 10711  05C1                     u6571:
 10712  05C1  2E3D               	goto	l4355
 10713  05C2                     u6570:
 10714  05C2                     l4345:
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10717  05C2  302D               	movlw	45
 10718  05C3  00A0               	movwf	??_sprintf^(0+128)
 10719  05C4  083B               	movf	sprintf@sp^(0+128),w
 10720  05C5  0084               	movwf	4
 10721  05C6  0820               	movf	??_sprintf^(0+128),w
 10722  05C7  1383               	bcf	3,7	;select IRP bank0
 10723  05C8  0080               	movwf	0
 10724  05C9                     l4347:
 10725  05C9  3001               	movlw	1
 10726  05CA  00A0               	movwf	??_sprintf^(0+128)
 10727  05CB  0820               	movf	??_sprintf^(0+128),w
 10728  05CC  07BB               	addwf	sprintf@sp^(0+128),f
 10729  05CD  2E3D               	goto	l4355
 10730  05CE                     l4349:
 10731                           
 10732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10733  05CE  3000               	movlw	0
 10734  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 10735  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 10736  05D1  00B0               	movwf	___llmod@divisor+3
 10737  05D2  3000               	movlw	0
 10738  05D3  00AF               	movwf	___llmod@divisor+2
 10739  05D4  3000               	movlw	0
 10740  05D5  00AE               	movwf	___llmod@divisor+1
 10741  05D6  300A               	movlw	10
 10742  05D7  00AD               	movwf	___llmod@divisor
 10743  05D8  1683               	bsf	3,5	;RP0=1, select bank1
 10744  05D9  1303               	bcf	3,6	;RP1=0, select bank1
 10745  05DA  083C               	movf	sprintf@prec^(0+128),w
 10746  05DB  00A0               	movwf	??_sprintf^(0+128)
 10747  05DC  3001               	movlw	1
 10748  05DD                     u6585:
 10749  05DD  1003               	clrc
 10750  05DE  0DA0               	rlf	??_sprintf^(0+128),f
 10751  05DF  3EFF               	addlw	-1
 10752  05E0  1D03               	skipz
 10753  05E1  2DDD               	goto	u6585
 10754  05E2  1003               	clrc
 10755  05E3  0D20               	rlf	??_sprintf^(0+128),w
 10756  05E4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10757  05E5  0084               	movwf	4
 10758  05E6  160A  118A  200A  120A  118A  	fcall	stringdir
 10759  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 10760  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 10761  05ED  00A0               	movwf	___lldiv@divisor
 10762  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
 10763  05F3  00A1               	movwf	___lldiv@divisor+1
 10764  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
 10765  05F9  00A2               	movwf	___lldiv@divisor+2
 10766  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
 10767  05FF  00A3               	movwf	___lldiv@divisor+3
 10768  0600  1683               	bsf	3,5	;RP0=1, select bank1
 10769  0601  1303               	bcf	3,6	;RP1=0, select bank1
 10770  0602  0835               	movf	(sprintf@val+3)^(0+128),w
 10771  0603  1283               	bcf	3,5	;RP0=0, select bank0
 10772  0604  1303               	bcf	3,6	;RP1=0, select bank0
 10773  0605  00A7               	movwf	___lldiv@dividend+3
 10774  0606  1683               	bsf	3,5	;RP0=1, select bank1
 10775  0607  1303               	bcf	3,6	;RP1=0, select bank1
 10776  0608  0834               	movf	(sprintf@val+2)^(0+128),w
 10777  0609  1283               	bcf	3,5	;RP0=0, select bank0
 10778  060A  1303               	bcf	3,6	;RP1=0, select bank0
 10779  060B  00A6               	movwf	___lldiv@dividend+2
 10780  060C  1683               	bsf	3,5	;RP0=1, select bank1
 10781  060D  1303               	bcf	3,6	;RP1=0, select bank1
 10782  060E  0833               	movf	(sprintf@val+1)^(0+128),w
 10783  060F  1283               	bcf	3,5	;RP0=0, select bank0
 10784  0610  1303               	bcf	3,6	;RP1=0, select bank0
 10785  0611  00A5               	movwf	___lldiv@dividend+1
 10786  0612  1683               	bsf	3,5	;RP0=1, select bank1
 10787  0613  1303               	bcf	3,6	;RP1=0, select bank1
 10788  0614  0832               	movf	sprintf@val^(0+128),w
 10789  0615  1283               	bcf	3,5	;RP0=0, select bank0
 10790  0616  1303               	bcf	3,6	;RP1=0, select bank0
 10791  0617  00A4               	movwf	___lldiv@dividend
 10792  0618  160A  118A  2178  120A  118A  	fcall	___lldiv
 10793  061D  1283               	bcf	3,5	;RP0=0, select bank0
 10794  061E  1303               	bcf	3,6	;RP1=0, select bank0
 10795  061F  0823               	movf	?___lldiv+3,w
 10796  0620  00B4               	movwf	___llmod@dividend+3
 10797  0621  0822               	movf	?___lldiv+2,w
 10798  0622  00B3               	movwf	___llmod@dividend+2
 10799  0623  0821               	movf	?___lldiv+1,w
 10800  0624  00B2               	movwf	___llmod@dividend+1
 10801  0625  0820               	movf	?___lldiv,w
 10802  0626  00B1               	movwf	___llmod@dividend
 10803  0627  160A  118A  20C7  120A  118A  	fcall	___llmod
 10804  062C  1283               	bcf	3,5	;RP0=0, select bank0
 10805  062D  1303               	bcf	3,6	;RP1=0, select bank0
 10806  062E  082D               	movf	?___llmod,w
 10807  062F  3E30               	addlw	48
 10808  0630  1683               	bsf	3,5	;RP0=1, select bank1
 10809  0631  1303               	bcf	3,6	;RP1=0, select bank1
 10810  0632  00A1               	movwf	(??_sprintf+1)^(0+128)
 10811  0633  0821               	movf	(??_sprintf+1)^(0+128),w
 10812  0634  00BE               	movwf	sprintf@c^(0+128)
 10813  0635                     l4351:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10816  0635  083E               	movf	sprintf@c^(0+128),w
 10817  0636  00A0               	movwf	??_sprintf^(0+128)
 10818  0637  083B               	movf	sprintf@sp^(0+128),w
 10819  0638  0084               	movwf	4
 10820  0639  0820               	movf	??_sprintf^(0+128),w
 10821  063A  1383               	bcf	3,7	;select IRP bank0
 10822  063B  0080               	movwf	0
 10823  063C  2DC9               	goto	l4347
 10824  063D                     l4355:
 10825                           
 10826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10827  063D  30FF               	movlw	255
 10828  063E  07BC               	addwf	sprintf@prec^(0+128),f
 10829  063F  1803               	skipnc
 10830  0640  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10831  0641  30FF               	movlw	255
 10832  0642  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10833  0643  0A3C               	incf	sprintf@prec^(0+128),w
 10834  0644  1D03               	skipz
 10835  0645  2E4A               	goto	u6591
 10836  0646  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 10837  0647  1D03               	btfss	3,2
 10838  0648  2E4A               	goto	u6591
 10839  0649  2E4B               	goto	u6590
 10840  064A                     u6591:
 10841  064A  2DCE               	goto	l4349
 10842  064B                     u6590:
 10843  064B                     l4357:
 10844                           
 10845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10846  064B  3001               	movlw	1
 10847  064C  1283               	bcf	3,5	;RP0=0, select bank0
 10848  064D  1303               	bcf	3,6	;RP1=0, select bank0
 10849  064E  07E2               	addwf	sprintf@f,f
 10850  064F  30FF               	movlw	-1
 10851  0650  0762               	addwf	sprintf@f,w
 10852  0651  0084               	movwf	4
 10853  0652  160A  118A  200A  120A  118A  	fcall	stringdir
 10854  0657  1683               	bsf	3,5	;RP0=1, select bank1
 10855  0658  1303               	bcf	3,6	;RP1=0, select bank1
 10856  0659  00A0               	movwf	??_sprintf^(0+128)
 10857  065A  0820               	movf	??_sprintf^(0+128),w
 10858  065B  00BE               	movwf	sprintf@c^(0+128)
 10859  065C  083E               	movf	sprintf@c^(0+128),w
 10860  065D  1D03               	btfss	3,2
 10861  065E  2E60               	goto	u6601
 10862  065F  2E63               	goto	u6600
 10863  0660                     u6601:
 10864  0660  120A  158A  2D32   	goto	l4079
 10865  0663                     u6600:
 10866  0663                     l4359:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10869  0663  083B               	movf	sprintf@sp^(0+128),w
 10870  0664  0084               	movwf	4
 10871  0665  1383               	bcf	3,7	;select IRP bank0
 10872  0666  0180               	clrf	0
 10873  0667                     l461:
 10874  0667  0008               	return
 10875  0668                     __end_of_sprintf:

Data Sizes:
    Strings     32
    Constant    118
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     78      80
    BANK1            80     31      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_cursor
    _main->_write_string
    _write_string->_write_char
    _write_char->_pin
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    _cursor->_CMDs
    _configLCD->_CMDs
    _clear_LCD->_CMDs
    _CMDs->_pin
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___awtoft->___ftpack
    _Enviar_2->___fttol
    _Enviar_1->___fttol
    ___fttol->_scale

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   52586
                                             75 BANK0      3     3      0
                           _Enviar_1
                           _Enviar_2
                        _Write_USART
                 _Write_USART_String
                           ___awtoft
                            ___ftmul
                           __baudios
                          _clear_LCD
                          _configADC
                          _configLCD
                          _config_rc
                          _config_tx
                             _cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     539
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     279
                                              4 COMMON     2     2      0
                                _pin
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   42164
                                             66 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8663
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7069
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4906
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cursor                                               4     3      1     601
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _config_tx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configLCD                                            2     2      0     279
                                              0 BANK0      2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     279
                                              4 COMMON     3     3      0
                                _pin
 ---------------------------------------------------------------------------------
 (3) _pin                                                  1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2601
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Enviar_2                                             0     0      0     517
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _Enviar_1                                             0     0      0     517
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Enviar_1
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _Enviar_2
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _Write_USART
   _Write_USART_String
     _Write_USART
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   __baudios
   _clear_LCD
     _CMDs
       _pin
   _configADC
   _configLCD
     _CMDs
       _pin
   _config_rc
   _config_tx
   _cursor
     _CMDs
       _pin
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _write_string
     _write_char
       _pin

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 12:02:20 2021

                          pc 0002               ___bmul@product 002D                           l94 078F  
                         _V1 00C2                           _V2 00BF                 ___awdiv@sign 0028  
                         fsr 0004          ___wmul@multiplicand 0075                 ___ftadd@exp1 005B  
               ___ftadd@exp2 005A         __size_of_Write_USART 000C                 ___ftadd@sign 0059  
                        l101 1D7B                          l110 1E07                          l104 1DE8  
                        l112 1E0A                          l200 14BF                          l201 158D  
                        l106 1DEB                          l210 1520                          l202 14C8  
                        l211 152B                          l203 14D3                          l140 1F8E  
                        l212 1536                          l204 14DE                          l141 1F8F  
                        l213 1541                          l205 14E9                          l150 1FB1  
                        l142 1F95                          l214 154C                          l206 14F4  
                        l151 1FB2                          l143 1F96                          l207 14FF  
                        l152 1FB8                          l144 1F9C                          l160 07FE  
                        l216 159C                          l208 150A                          l145 1F9D  
                        l209 1515                          l154 1FB9                          l146 1FA3  
                        l138 1F85                          l218 159A                          l242 1D2C  
                        l147 1FA4                          l139 1F88                          l236 0806  
                        l148 1FAA                          l172 1DAE                          l245 1D4A  
                        l149 1FAB                          l157 10C6                          l501 11DF  
                        l254 1DCC                          l166 1E55                          l239 1D3E  
                        l431 02FD                          l248 1D54                          l424 02B9  
                        l169 12C0                          l362 0A6C                          l178 07F1  
                        l701 131C                          l461 0667                          l702 1326  
                        l703 1342                          l711 17FF                          l391 0E06  
                        l465 1EB8                          l369 0D27                          l802 13B1  
                        l714 1715                          l715 171F                          l467 1ED2  
                        l491 1D92                          l716 1724                          l725 1795  
                        l661 1177                          l750 08C3                          l671 16C9  
                        l751 0835                          l648 1248                          l761 08B6  
                        l690 1342                          l682 16BC                          l674 1679  
                        l754 0886                          l667 1EA7                          l675 168C  
                        l907 1FFF                          l836 111C                          l844 1F05  
                        l917 1F7B                          l694 1301                          l774 14B3  
                        l791 1E2F                          l927 1D66                          l768 1F3F  
                        l785 1D48                          l795 13CE                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RE0 0048  
                        _RD3 0043                          _RE1 0049                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        _ISR 1E56                          _pin 1F7C                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0021  __size_of_Write_USART_String 001E  
                       ?_ISR 0070                         l4001 10C7                         l4011 10F7  
                       l4003 10D1                         l3301 1DB2                         l4013 1105  
                       l4005 10D4                         l4021 1ED3                         l4101 0DAE  
                       l3303 1DBD                         l4031 1249                         l4015 110E  
                       l4007 10E1                         l4023 1EDA                         l2271 1D8A  
                       l2263 1D7F                         l4111 0DE8                         l4103 0DB1  
                       l3305 1DC1                         l4041 127F                         l4033 1254  
                       l4009 10E5                         l4017 1114                         l4025 1EE7  
                       l2273 1D91                         l2265 1D80                         l4121 0E08  
                       l4113 0DEE                         l4105 0DB7                         l3307 1DCD  
                       l4051 12AE                         l4043 1285                         l4035 125A  
                       l4027 1EED                         l2267 1D84                         l4211 01C5  
                       l4203 0169                         l4131 0E4D                         l4123 0E2C  
                       l4107 0DBC                         l4115 0E00                         l3309 1DEC  
                       l4053 12BA                         l4045 1291                         l4037 126B  
                       l4061 1E3D                         l2269 1D88                         l2621 1D56  
                       l3501 11F2                         l4301 04DA                         l4213 01CB  
                       l4141 0E8D                         l4133 0E51                         l4125 0E3A  
                       l4117 0E04                         l4109 0DD1                         _ADC0 006F  
                       l2527 1D4A                         l4055 07F2                         l4047 1297  
                       l4039 1272                         l4063 1E44                         l2623 1D57  
                       l3511 1206                         l3503 11F7                         l4311 052D  
                       l4231 0213                         l4215 01D7                         l4223 01EC  
                       l4207 01A0                         l4151 0EF5                         l4143 0E94  
                       l4135 0E70                         l4127 0E3E                         l4071 07B1  
                       _ADC1 006E                         l2529 1D50                         l3441 12C1  
                       l4049 12A8                         l4065 1E4A                         l4057 1E33  
                       l3601 1738                         l2625 1D5D                         l3521 122C  
                       l3513 120D                         l3505 11FB                         l4321 055F  
                       l4313 053C                         l4305 0511                         l4241 02CE  
                       l4233 026E                         l4225 01F9                         l4217 01DE  
                       l4209 01AA                         l4161 0F70                         l4153 0EF9  
                       l4145 0EB9                         l4137 0E85                         l4129 0E42  
                       l4081 0D38                         l4073 07CD                         l4401 06A7  
                       l2811 1343                         l3451 12E2                         l3443 12C6  
                       l4067 1E4F                         l4059 1E38                         l3603 1742  
                       l3611 1764                         l2627 1D63                         l3531 1244  
                       l3523 122D                         l3515 1211                         l3507 11FD  
                       l4331 0589                         l4323 0563                         l4315 0545  
                       l4307 051B                         l4251 0306                         l4243 02D4  
                       l4235 02AD                         l4227 0207                         l4219 01E7  
                       l4171 0FEA                         l4163 0F79                         l4155 0EFF  
                       l4147 0EBF                         l4139 0E89                         l4091 0D5E  
                       l4083 0D3F                         l4075 07D5                         l4411 0755  
                       l4403 06B2                         l2821 1372                         l2813 1356  
                       l3461 1312                         l3453 12E9                         l3445 12CD  
                       l3621 178F                         l3613 176A                         l3605 1748  
                       l3701 1FCE                         l2629 1D65                         l3525 1234  
                       l3517 1215                         l3509 1203                         l3541 1129  
                       l4341 05AA                         l4333 0595                         l4325 0571  
                       l4317 054D                         l4309 0526                         l4261 037B  
                       l4253 030B                         l4245 02E1                         l4237 02C1  
                       l4229 020E                         l4181 007B                         l4173 0023  
                       l4165 0F9A                         l4157 0F18                         l4149 0ED2  
                       l4093 0D73                         l4085 0D44                         l4077 0D2B  
                       l4069 07AC                         l4421 0775                         l4413 075E  
                       l4405 06E3                         l2823 1378                         l3471 1341  
                       l3463 1316                         l3455 12EF                         l3631 17BE  
                       l3623 1799                         l3615 1774                         l3607 1751  
                       l3711 1FEE                         l3703 1FD2                         l3519 1226  
                       l3527 123A                         l3551 113D                         l3543 112B  
                       l3535 111D                         l4351 0635                         l4343 05B6  
                       l4335 0599                         l4327 057A                         l4319 0559  
                       l4271 0484                         l4263 03D6                         l4255 0312  
                       l4247 02F0                         l4239 02CA                         l4191 00E3  
                       l4183 0084                         l4175 002C                         l4159 0F51  
                       l4167 0FA2                         l4095 0D8A                         l4087 0D48  
                       l4079 0D32                         l4431 0795                         l4423 077A  
                       l4415 0764                         l4407 0716                         l2825 137F  
                       l2817 135F                         l3465 1320                         l3457 12F9  
                       l3449 12D4                         l3481 1F9A                         l3473 1F7D  
                       l3633 17CE                         l3625 17A9                         l3617 177A  
                       l3609 175D                         l3713 1FF5                         l3705 1FD6  
                       l3721 1F46                         l3529 123F                         l3561 115C  
                       l3553 1144                         l3545 112F                         l3537 1120  
                       l4345 05C2                         l4337 059F                         l4329 057E  
                       l4281 04AD                         l4273 048B                         l4265 0415  
                       l4257 0316                         l4249 02F7                         l4185 008C  
                       l4177 004B                         l4193 00EA                         l4169 0FB1  
                       l4097 0D90                         l4089 0D5A                         l4425 0780  
                       l4433 079A                         l4417 076A                         l4409 074D  
                       l2843 13A6                         l2835 138D                         l2827 1381  
                       l2819 1371                         l3299 1DB0                         l3467 1328  
                       l3459 1308                         l4371 1E82                         l3483 1FA1  
                       l3475 1F81                         l3635 17D2                         l3627 17AD  
                       l3619 1783                         l3651 13FA                         l3643 13CF  
                       l3707 1FE7                         l3715 1FFB                         l3731 1F64  
                       l3723 1F4B                         l3491 11E0                         l3563 1163  
                       l3555 1148                         l3547 1134                         l3539 1124  
                       l3803 0B3B                         l4347 05C9                         l4355 063D  
                       l4339 05A6                         l4291 04CA                         l4283 04B1  
                       l4275 048F                         l4267 0421                         l4259 032E  
                       l4195 0165                         l4179 005A                         l4099 0DA0  
                       l4427 0784                         l4419 0770                         l2845 13B6  
                       l2829 1385                         l2837 139F                         l3469 133C  
                       l4373 1E86                         l3485 1FA8                         l3477 1F8C  
                       l3741 10A8                         l3637 17E2                         l3629 17BD  
                       l3573 16CA                         l3901 1618                         l3661 1430  
                       l3645 13E2                         l3709 1FED                         l3733 1F6A  
                       l3725 1F52                         l3493 11E3                         l3557 114C  
                       l3549 113A                         l3565 1169                         l3821 0C94  
                       l3805 0B42                         l3813 0BCF                         l4349 05CE  
                       l4293 04D2                         l4285 04B5                         l4277 0495  
                       l4269 047C                         l4197 0167                         l4189 00A4  
                       l4357 064B                         l4429 078A                         l4381 0668  
                       l2847 13BB                         l4375 1E8B                         l3487 1FAF  
                       l3479 1F93                         l3751 10BA                         l3743 10AB  
                       l2951 14C3                         l3639 17E4                         l3591 171A  
                       l3583 1700                         l3575 16E9                         l3911 1678  
                       l3903 161D                         l3831 0807                         l3671 1454  
                       l3663 1436                         l3655 1401                         l3735 1F71  
                       l3727 1F56                         l3719 1F40                         l3495 11E7  
                       l3567 116E                         l3559 1156                         l3823 0C9B  
                       l3815 0BD6                         l4295 04D8                         l4287 04B9  
                       l4279 049C                         l4359 0663                         l4391 0681  
                       l4383 066D                         l2849 13C6                         l4377 1E8D  
                       l4369 1E7F                         l3489 1FB6                         l3753 10BD  
                       l3745 10B1                         l2961 14F8                         l2953 14CC  
                       l3593 171E                         l3585 1705                         l3577 16EF  
                       l3921 1698                         l3913 1686                         l3905 1621  
                       l3833 081A                         l3681 1472                         l3673 145C  
                       l3665 143C                         l3657 142E                         l3649 13E9  
                       l3729 1F5A                         l3737 1F77                         l3497 11EC  
                       l3569 1173                         l3809 0BAE                         l4289 04C4  
                       l3761 1DA0                         l4393 0686                         l4385 0672  
                       l3747 10B4                         l2971 152F                         l2963 1503  
                       l2955 14D7                         l2947 14B5                         l2891 1D7A  
                       l2883 1D67                         l2795 1D3F                         l3595 1723  
                       l3587 170B                         l3579 16F9                         l3931 16C1  
                       l3915 1690                         l3923 16AA                         l3907 162A  
                       l3851 0856                         l3843 0836                         l3683 1482  
                       l3675 1464                         l3667 1440                         l3659 142F  
                       l3771 08CD                         l3499 11EE                         l3827 0D07  
                       l3763 1DA3                         l3755 1D94                         l4395 068B  
                       l4387 0677                         l2893 0802                         l3749 10B7  
                       l2973 153A                         l2965 150E                         l2957 14E2  
                       l2949 14BB                         l2885 1D75                         l2797 1D46  
                       l3597 1725                         l3589 1716                         l3941 1EBF  
                       l3909 1656                         l3861 0880                         l3853 085F  
                       l3845 083C                         l3837 0823                         l3685 148A  
                       l3677 146A                         l3669 1444                         l3693 1FBA  
                       l3781 09B0                         l3773 0990                         l3765 1DA6  
                       l3757 1D97                         l4397 0693                         l4389 067C  
                       l2991 1595                         l2975 1545                         l2967 1519  
                       l2959 14ED                         l2895 1D35                         l2887 1D76  
                       l2799 1D48                         l3599 172B                         l3951 118A  
                       l3943 1EC6                         l3935 1EA8                         l3863 088A  
                       l3871 08A4                         l3855 086D                         l3847 084B  
                       l3687 1492                         l3679 146E                         l3695 1FBE  
                       l3783 0A1F                         l3791 0A70                         l4495 0E1E  
                       l3767 1DA9                         l3759 1D9D                         l4399 069C  
                       l4497 1561                         l2977 1550                         l2969 1524  
                       l2985 1559                         l2897 1D25                         l2889 1D77  
                       l3961 11B9                         l3953 118D                         l3945 1ECC  
                       l3937 1EAC                         l3929 16B1                         l3857 0877  
                       l3849 084D                         l3689 1498                         l3697 1FC4  
                       l3769 08C7                         l3793 0A74                         l2987 158E  
                       l2979 1557                         l2899 1D2B                         l3963 11C7  
                       l3955 119A                         l3939 1EB0                         l3883 159D  
                       l3859 0878                         l3699 1FC7                         l3787 0A39  
                       l3779 09AA                         l3795 0A76                         l2997 159B  
                       l2989 1592                         l3981 1F2A                         l3973 1F06  
                       l3965 11C8                         l3957 119E                         l3949 1178  
                       l3885 15B8                         l3877 08AB                         l3869 0892  
                       l3797 0A7D                         l3983 1F2C                         l3975 1F0C  
                       l3967 11D1                         l3959 11A7                         l3895 15DA  
                       l3879 08BB                         l3985 1F2E                         l3977 1F19  
                       l3993 1E0B                         l3969 11D7                         l3897 160E  
                       l3889 15C1                         l3987 1F3C                         l3979 1F1D  
                       l3995 1E14                         l3899 1616                         l3989 1F3E  
                       l3997 1E16                         ?_pin 0070                         STR_1 1097  
                       STR_2 1086                         _CMDs 10A7                         u3230 1D50  
                       u2510 1D84                         u3310 1D5D                         u3231 1D4F  
                       u2511 1D83                         u3311 1D5C                         u5000 170B  
                       u2520 1D91                         u3320 1D63                         u5001 170A  
                       u2521 1D90                         u3321 1D62                         u5010 1715  
                       u5011 1714                         u5100 176A                         u5020 171E  
                       u5101 1769                         u5021 171D                         u5030 1723  
                       u5031 1722                         u5120 177A                         u5040 1738  
                       u5200 13E2                         u5121 1779                         u5041 1737  
                       u5201 13E1                         u5130 1782                         u6010 1EED  
                       u5210 13FA                         u5131 1781                         u5115 176B  
                       u6011 1EEC                         u5211 13F9                         u6020 1E38  
                       u5060 1748                         u5220 1411                         u6100 0DAE  
                       u6021 1E37                         u5061 1747                         u6005 1EDB  
                       u5301 147B                         u6101 0DAD                         u6030 1E4A  
                       u5150 1795                         u5070 1750                         u5302 1482  
                       u5230 1423                         u6110 0DFF                         u6031 1E49  
                       u5151 1794                         u5071 174F                         u5055 1739  
                       u6111 0DFE                         u3800 13A5                         u4520 1DCC  
                       u4600 12E8                         u3720 1D46                         u5160 1799  
                       u5240 1444                         u5400 1FFB                         u6200 0FB1  
                       u6120 0E3A                         u6040 07BB                         u3801 13A4  
                       u4521 1DCB                         u4601 12E7                         u3721 1D45  
                       u5161 1798                         u5145 1784                         u5241 1443  
                       u5225 140D                         u5401 1FFA                         u6201 0FB0  
                       u6121 0E37                         u5170 17AD                         u5090 1763  
                       u5330 1498                         u5410 1F46                         u6210 0023  
                       u6130 0E3E                         u6050 07DF                         u5171 17AC  
                       u5091 1762                         u5331 1497                         u5315 1483  
                       u5251 144D                         u5235 141F                         u5411 1F45  
                       u6211 0FFA                         u6131 0E3D                         u3820 13B6  
                       u3740 1356                         u4620 1307                         u4700 1F8C  
                       u5252 1454                         u5340 1FC4                         u5500 0A7D  
                       u6300 01D7                         u6220 002C                         u6140 0E70  
                       u6060 07F1                         u3821 13B5                         u3741 1355  
                       u4621 1306                         u4701 1F8B                         u5181 17C7  
                       u5085 1752                         u5325 148B                         u5341 1FC3  
                       u5501 0A7C                         u6301 01D6                         u6221 002B  
                       u6205 0FAD                         u6141 0E6F                         u6061 07F0  
                       u3830 13BB                         u3750 136A                         u4710 1F93  
                       u5190 17D2                         u5182 17CE                         u5430 1F5A  
                       u5510 0B42                         u6310 01F9                         u6230 004B  
                       u6150 0E94                         u6070 0D38                         u3831 13BA  
                       u3815 13A8                         u4615 12FA                         u4711 1F92  
                       u5191 17D1                         u5431 1F59                         u5511 0B41  
                       u6311 01F8                         u6231 004A                         u6215 0FF5  
                       u6151 0E93                         u6071 0D37                         u3760 1385  
                       u4640 1316                         u4720 1F9A                         u5600 088A  
                       u5280 146A                         u5360 1FD6                         u5440 1F64  
                       u5520 0BD6                         u6400 0483                         u6320 0207  
                       u6240 005A                         u6160 0EA8                         u6080 0D5A  
                       u3761 1384                         u4641 1315                         u4721 1F99  
                       u5601 0889                         u5281 1469                         u5265 1455  
                       u5361 1FD5                         u5441 1F63                         u5425 1F4C  
                       u5521 0BD5                         u6401 0482                         u6321 0206  
                       u6241 0059                         u6081 0D59                         u3770 138C  
                       u4650 131C                         u4570 12C6                         u4730 1FA1  
                       u5610 0891                         u5290 1472                         u4810 1215  
                       u5530 0C9B                         u6410 049B                         u6250 007B  
                       u6170 0EF9                         u6090 0DA0                         u3771 138B  
                       u3755 1366                         u4651 131B                         u4635 130B  
                       u4571 12C5                         u4731 1FA0                         u5611 0890  
                       u5291 1471                         u5275 145D                         u5355 1FC8  
                       u4811 1214                         u5531 0C9A                         u6411 049A  
                       u6315 01F5                         u6251 007A                         u6171 0EF8  
                       u6091 0D9F                         u4660 1320                         u4580 12CD  
                       u4740 1FA8                         u5700 1656                         u5540 081A  
                       u5380 1FE7                         u5460 1F77                         u6500 054D  
                       u6420 04B5                         u6340 02C0                         u6180 0F70  
                       _RCIF 0065                         u4661 131F                         u4581 12CC  
                       u4741 1FA7                         u5701 1655                         u5541 0819  
                       u5381 1FE6                         u5461 1F76                         u5445 1F60  
                       u4805 1207                         u6501 054C                         u6421 04B4  
                       u6341 02BF                         u6245 0056                         u6181 0F6F  
                       u6165 0EA3                         u3790 139E                         u4670 1333  
                       u4750 1FAF                         u5710 168C                         u5630 08A3  
                       u5550 0834                         u5470 08CD                         u4830 1226  
                       u4910 114C                         u6510 0559                         u6430 04CA  
                       u6350 02E1                         u6270 019F                         u6190 0F9A  
                       u3791 139D                         u4751 1FAE                         u5711 168B  
                       u5631 08A2                         u5551 0833                         u5375 1FD7  
                       u5455 1F6B                         u5471 08CC                         u4831 1225  
                       u4911 114B                         u6511 0558                         u6431 04C9  
                       u6351 02E0                         u6335 0216                         u6271 019E  
                       u6191 0F99                         u4680 1341                         u4760 1FB6  
                       u5720 1690                         u5640 08AA                         u5480 09B0  
                       u4920 1156                         u6600 0663                         u6520 0563  
                       u6440 04D2                         u6360 02F0                         u6280 01AA  
                       u3785 138E                         u4681 1340                         u4761 1FB5  
                       u5721 168F                         u5705 1652                         u5641 08A9  
                       u5625 0893                         u5385 1FE3                         u5481 09AF  
                       u4825 1216                         u4921 1155                         u4905 113E  
                       u6601 0660                         u6521 0562                         u6441 04D1  
                       u6361 02EF                         u6281 01A9                         u6265 016C  
                       u6610 1E86                         u4690 1F81                         u3970 1599  
                       u5730 1697                         u5570 086D                         u4850 123A  
                       u4770 11E7                         u5490 0A74                         u6530 0571  
                       u6370 030B                         u6290 01C5                         u4675 132F  
                       u4595 12DB                         u6611 1E85                         u4691 1F80  
                       u3971 1598                         u5731 1696                         u5571 086C  
                       u5395 1FEF                         u4851 1239                         u4835 1222  
                       u4771 11E6                         u5491 0A73                         u6531 0570  
                       u6371 030A                         u6355 02DD                         u6291 01C4  
                       u6275 019B                         u5900 1F0C                         u5820 1ECC  
                       u5660 08BB                         u4860 123F                         u4780 11F2  
                       u4940 1169                         u6540 0589                         u6460 0510  
                       u6620 0780                         u5901 1F0B                         u5821 1ECB  
                       u5805 1EB9                         u5661 08BA                         u5565 0858  
                       u4861 123E                         u4845 122E                         u4781 11F1  
                       u4941 1168                         u4925 1152                         u6541 0588  
                       u6461 050F                         u6365 02EC                         u6621 077F  
                       u5910 1F1D                         u5830 118A                         u5750 16A9  
                       u5670 15B8                         u5590 0886                         u4790 1203  
                       u4950 116E                         u4870 1124                         u6550 059F  
                       u6470 051B                         u6630 078A                         i1l87 1E78  
                       u5911 1F1C                         u5831 1189                         u5815 1EC0  
                       u5751 16A8                         u5671 15B7                         u5655 08AD  
                       u5591 0885                         u5575 0869                         u4791 1202  
                       u4951 116D                         u4935 115D                         u4871 1123  
                       u6551 059E                         u6535 056D                         u6471 051A  
                       u6455 04DD                         u6631 0789                         u5920 1F3C  
                       u4960 16E9                         u5760 16B0                         u5680 15D9  
                       u4880 112F                         u6560 05B6                         u6480 0526  
                       u6640 0795                         u5921 1F3B                         u4961 16E8  
                       u5761 16AF                         u5745 1699                         u5681 15D8  
                       u5585 0879                         u4881 112E                         u6561 05B5  
                       u6545 0585                         u6481 0525                         u6465 050C  
                       u6385 037E                         u6641 0794                         u4970 16EF  
                       u5930 1E14                         u5850 119E                         u4890 113A  
                       u6570 05C2                         u6490 053C                         u6707 127C  
                       u4971 16EE                         u5931 1E13                         u5851 119D  
                       u4891 1139                         u6571 05C1                         u6491 053B  
                       u6395 0424                         u4980 16F9                         u5940 10D1  
                       u5780 16C1                         u6717 1289                         u5925 1F38  
                       u4981 16F8                         u5845 118F                         u5941 10D0  
                       u5781 16C0                         u6485 0522                         u4990 1705  
                       u5870 11B9                         u5790 1EB0                         u6590 064B  
                       u6727 1295                         u4991 1704                         u5871 11B8  
                       u5791 1EAF                         u5775 16B3                         u5695 1623  
                       u6591 064A                         u6495 0538                         u5960 10E5  
                       u6737 12A3                         u5865 11A0                         u5961 10E4  
                       u6585 05DD                         u6657 07A2                         u5890 11D7  
                       u5970 10F7                         u6747 12B2                         u5891 11D6  
                       u5875 11B5                         u5971 10F6                         u5955 10D6  
                       u6667 1DAB                         u6757 12BE                         u6677 124F  
                       u5885 11C9                         u5990 1114                         u6767 1590  
                       u6687 1260                         u5991 1113                         u5975 10F3  
                       u6777 10C1                         u6697 126F                         u5985 1106  
                       _TRMT 04C1                         _main 0668                 ___ftpack@arg 0073  
               ___ftpack@exp 0076                         btemp 007E                         pin@a 0073  
                       start 000C                 _sprintf$1187 00A6            ___bmul@multiplier 002E  
               ___ftmul@cntr 003D                 ___ftmul@sign 003E                        ??_ISR 0070  
               ___fttol@exp1 0055                 ___fttol@lval 0051                        ??_pin 0073  
                      CMDs@a 0076                        ?_CMDs 0070                        ?_main 0070  
            __end_of___awdiv 1249              __end_of___ftadd 1800              __end_of___awmod 1178  
            __end_of___ftneg 1D49                        _ANSEL 0188              __end_of___lldiv 11E0  
            __end_of___ftmul 14B4              ___awdiv@divisor 0022              __end_of___llmod 111D  
            __end_of___ftsub 1E30              __end_of___fttol 13CF              __end_of___lwdiv 2000  
              write_string@a 0076                write_string@i 0023                        i1l260 1D24  
                      i1l257 1D1D              __end_of___lwmod 1F7C              ___awdiv@counter 0027  
                      _RCREG 001A                        _SPBRG 0099                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009                        _TRISA 0085  
                      _TRISD 0088                        _TRISE 0089                        _TXREG 0019  
               ___lltoft@exp 0028                ___awtoft@sign 0028              __end_of_dpowers 1086  
                      _scale 0A6D              __end_of_isdigit 1D67                ___ftpack@sign 0077  
                      _setup 1D67                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0668                 __end_of_CMDs 10C7  
            __initialization 000F                   _Read_USART 1D1D                 __end_of_main 07AC  
           __end_of_Enviar_1 1DEC             __end_of_Enviar_2 1E0B                       ??_CMDs 0074  
                     ??_main 006B                ___fttol@sign1 0050        __size_of_write_string 0046  
       __size_of__tdiv_to_l_ 00BD                       _ADCON1 009F             ___llmod@dividend 0031  
                     ?_scale 003F                       _ADRESH 001E             ___awdiv@dividend 0024  
                     ?_setup 0070             __end_of___awtoft 1EA8             __end_of___ftpack 1343  
                     _ANSELH 0189             __end_of__baudios 0807                       _BUFFER 00C5  
           __end_of___lltoft 1F06                       i1l2081 1E56                       i1l2091 1E70  
                     i1l2083 1E5C                       i1l2093 1E76                       i1l2085 1E5D  
                     i1l2087 1E65                       i1l2089 1E6B                       i1l1635 1D1D  
                     i1l1637 1D23                       u225_20 1E5C                       u225_21 1E5B  
                     u162_20 1D23                       u226_20 1E6B                       u162_21 1D22  
                     u226_21 1E6A                       u227_20 1E76                       u227_21 1E75  
           __end_of__powers_ 1037                       ___bmul 1D7C                       ___ftge 1F06  
               _write_string 07AC                       ___wmul 1EA8                    ??___awdiv 0026  
                  ??___ftadd 0055                    ??___awmod 0077                    ??___ftneg 0076  
                  ??___lldiv 0073                    ??___ftmul 0035                    ??___llmod 0074  
                  ??___ftsub 0078                    ??___fttol 004C                    ??___lwdiv 0025  
                  ??___lwmod 0077                       _cursor 1E30                       _fround 08C4  
           ___awdiv@quotient 0029              ___awmod@divisor 0073              ___awmod@counter 0020  
      ___ftmul@f3_as_product 003A                    ??_isdigit 0073                       saved_w 007E  
                  ??_sprintf 00A0      __end_of__initialization 001F                   ___ftadd@f1 004F  
                 ___ftadd@f2 0052                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftneg@f1 0073                   ___awtoft@c 0023          ___bmul@multiplicand 002B  
                 ___ftmul@f1 002F                   ___ftmul@f2 0032                  ?_Read_USART 0070  
                 ___ftsub@f1 005F                   ___ftsub@f2 005C                   ___fttol@f1 0048  
             __pcstackCOMMON 0070                   ___lltoft@c 0023                __end_of_scale 0D28  
              __end_of_setup 1D7C           __size_of_clear_LCD 000D                   __div_to_l_ 159D  
         __size_of_configADC 00E9           __size_of_configLCD 0078           __size_of_config_rc 0008  
         __size_of_config_tx 000A              __div_to_l_@exp1 0033              __div_to_l_@cntr 0032  
                    ??_scale 0042              __div_to_l_@quot 002E                 sprintf@width 00AC  
                    ??_setup 0073                 Write_USART@a 0073                   __pbssBANK0 006E  
                 __pbssBANK1 00BF                    ?_Enviar_1 0070                    ?_Enviar_2 0070  
              __div_to_l_@f1 0020                __div_to_l_@f2 0023                   __pmaintext 0668  
                    ?___bmul 002B                      ?___ftge 0020                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_cursor 0077  
                    ?_fround 003F                    ?___awtoft 0023                    ?___ftpack 0073  
                  ?__baudios 0070                    ?___lltoft 0023   __end_of_Write_USART_String 1DCD  
        __size_of_Read_USART 0008                   __stringtab 1000                   ??_Enviar_1 0078  
                 ??_Enviar_2 0078            __end_of_clear_LCD 07FF            __end_of__npowers_ 105E  
                 _scale$1186 0044            __end_of_configADC 159D            __end_of_configLCD 12C1  
          __end_of_config_rc 1D2D            __end_of_config_tx 1D3F              __size_of___bmul 0017  
            __size_of___ftge 003A                      ___awdiv 11E0                      ___ftadd 16CA  
                    ___awmod 111D                      ___ftneg 1D3F                      ___lldiv 1178  
            __size_of___wmul 002B                      ___ftmul 13CF                      ___llmod 10C7  
                    ___ftsub 1E0B                      ___fttol 1343                      ___lwdiv 1FBA  
                    ___lwmod 1F40                   ??___awtoft 0026                   ??___ftpack 0020  
                  _ANSELbits 0188                   ??__baudios 0073              __size_of_cursor 0026  
            __size_of_fround 01A9                   ??___lltoft 0027                      __ptext1 07AC  
                    __ptext2 1D93                      __ptext3 0D28                      __ptext4 0A6D  
                    __ptext5 111D                      __ptext6 11E0                      __ptext7 1D55  
                    __ptext8 08C4                      __ptext9 1F40                 __size_of_ISR 0029  
                ?__div_to_l_ 0020                      _dpowers 105E          __end_of_Write_USART 1D55  
                    _isdigit 1D55                 __size_of_pin 003E             ___awmod@dividend 0075  
                    _sprintf 0D28                      clrloop0 1D2E         end_of_initialization 001F  
                    cursor@a 0021                      cursor@b 0077                      cursor@x 0022  
            ___lldiv@divisor 0020              ___lldiv@counter 002C                    _RCSTAbits 0018  
                    psplit$0 E0037               __tdiv_to_l_@f1 0020               __tdiv_to_l_@f2 0023  
              ??__tdiv_to_l_ 0073                    _TRISAbits 0085                    _TRISBbits 0086  
                  _TRISEbits 0089                    _TXSTAbits 0098          __size_of__div_to_l_ 012D  
               ??_Read_USART 0070                  ___ftmul@exp 0039               __end_of___bmul 1D93  
             __end_of___ftge 1F40                  _Write_USART 1D49               __end_of___wmul 1ED3  
                 _write_char 1D93               __end_of_cursor 1E56               __end_of_fround 0A6D  
          pnum$text3_split_1 0037          start_initialization 000F                  __end_of_ISR 1E7F  
        __end_of__tdiv_to_l_ 08C4                  __end_of_pin 1FBA           __end_of_Read_USART 1D25  
            ___llmod@divisor 002D            __size_of_Enviar_1 001F            __size_of_Enviar_2 001F  
            ___llmod@counter 0075                     ??___bmul 002C                     ??___ftge 0073  
                   ??___wmul 0077                     ??_cursor 0020                     ??_fround 0042  
              sprintf@tmpval 00AE                   fround@prec 004E            __size_of___awtoft 0029  
          __size_of___ftpack 0082            __size_of__baudios 0005            __size_of___lltoft 0033  
                __pbssCOMMON 0078                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                  sprintf@flag 00AA                  sprintf@eexp 00B6  
                sprintf@fval 00B8           _Write_USART_String 1DAF                  sprintf@prec 00BC  
                  _clear_LCD 07F2             ___lwdiv@dividend 0023          ?_Write_USART_String 0070  
                   ?___awdiv 0022                     ?___ftadd 004F                     ?___awmod 0073  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002F  
                   ?___llmod 002D                     ?___ftsub 005C                    __npowers_ 1037  
                   ?___fttol 0048                     ?___lwdiv 0021                     ?___lwmod 0073  
                  _configADC 14B4                    _configLCD 1249                  ?_write_char 0070  
                  _config_rc 1D25                    _config_tx 1D35                    __pstrings 1000  
                __tdiv_to_l_ 0807                 ??__div_to_l_ 0026                     ?_isdigit 0070  
                  _readUSART 0079                    _entregado 0078         ??_Write_USART_String 0074  
           ___lwdiv@quotient 0027                     ?_sprintf 0062               __size_of_scale 02BB  
             __size_of_setup 0015            interrupt_function 0004               ___wmul@product 0020  
                  clear_ram0 1D2D                     _PIE1bits 008C                   ?_clear_LCD 0070  
                   _PIR1bits 000C           __end_of__div_to_l_ 16CA                ?_write_string 0076  
                 ?_configADC 0070                   ?_configLCD 0070                   ?_config_rc 0070  
                 ?_config_tx 0070                   _ADCON0bits 001F                  __stringbase 100F  
          ___wmul@multiplier 0073                  write_char@a 0075                     _Enviar_1 1DCD  
                   _Enviar_2 1DEC          __size_of_write_char 001C               ??_write_string 0020  
               ?_Write_USART 0070             __size_of___awdiv 0069             __size_of___ftadd 0136  
           __size_of___awmod 005B             __size_of___ftneg 000A             __size_of___lldiv 0068  
           __size_of___ftmul 00E5             __size_of___llmod 0056             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0046             __size_of___lwmod 003C  
                   ___awtoft 1E7F                     ___ftpack 12C1                     __baudios 0802  
                _fround$1184 004B                  _fround$1185 0048           __end_of__stringtab 1010  
                   ___lltoft 1ED3                  _isdigit$994 0073                   _ANSELHbits 0189  
                 sprintf@val 00B2             __size_of_isdigit 0012              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0026                     __ptext10 1FBA                     __ptext11 13CF  
                   __ptext20 16CA                     __ptext12 1D7C                     __ptext21 1D3F  
                   __ptext13 0807                     __ptext30 10A7                     __ptext22 1F06  
                   __ptext14 159D                     __ptext31 1F7C                     __ptext23 1D67  
                   __ptext15 1EA8                     __ptext40 1E56                     __ptext32 0802  
                   __ptext24 1E30                     __ptext16 1ED3                     __ptext41 1D1D  
                   __ptext33 1E7F                     __ptext25 1D35                     __ptext17 10C7  
                   __ptext34 12C1                     __ptext26 1D25                     __ptext18 1178  
                   __ptext35 1DAF                     __ptext27 1249                     __ptext19 1E0B  
                   __ptext36 1D49                     __ptext28 14B4                     __ptext37 1DEC  
                   __ptext29 07F2                     __ptext38 1DCD                     __ptext39 1343  
                   __powers_ 1010                     _contador 007A             __size_of_sprintf F940  
              __size_of_CMDs 0020                __size_of_main 0144                    pnum$text3 000E  
                ??_clear_LCD 0077                  ??_configADC 0073                  ??_configLCD 0020  
                ??_config_rc 0073                  ??_config_tx 0073                   _INTCONbits 000B  
        Write_USART_String@a 0075          Write_USART_String@i 0076                     isdigit@c 0074  
                   scale@scl 0047                     intlevel1 0000                    sprintf@ap 00A9  
           __tdiv_to_l_@exp1 002B             __tdiv_to_l_@cntr 002A                    sprintf@sp 00BB  
           __tdiv_to_l_@quot 0026             ___lwmod@dividend 0075             ___lldiv@dividend 0024  
                  stringcode 100A                 ??_write_char 0074                 ?__tdiv_to_l_ 0020  
                   sprintf@c 00BE                     sprintf@f 0062             ___lldiv@quotient 0028  
            ___lwmod@divisor 0073              ___lwmod@counter 0020                     stringdir 100A  
                   stringtab 1000         __end_of_write_string 07F2           __end_of_write_char 1DAF  
                configADC@ch 0075  
